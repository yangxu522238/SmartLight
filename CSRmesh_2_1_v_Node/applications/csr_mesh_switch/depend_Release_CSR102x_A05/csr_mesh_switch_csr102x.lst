
depend_Release_CSR102x_A05/csr_mesh_switch_csr102x.elf:     file format elf32-xap2

Disassembly of section .appheader:

0x00050000 <PROG_APPCRT_START>:
	...

0x00050005 <_app_store_header_fw_init>:
   50005:	0100      	**prefx    0x1
   50006:	9C00      	**prefx    0x9C
   50007:	33E0      	bra        +0x9C33 <___libgatt_lib_db_2093:0x59C3A[p]>

0x00050008 <L0>:
	...
Disassembly of section .patchtext:

0x000504FB <patch_sysop_sleep_restore>:
   504FB:	0114      	ld         al, #+0x1
   504FC:	F900      	**prefx    0xF9
   504FD:	2725      	st         al, @0xF927 <___libgatt_lib_db_4114>
   504FE:	E100      	**prefx    0xE1
   504FF:	571C      	ld         y, #-0x1EA9
   50500:	0007      	ld         uy, @(0x0, y)
   50501:	0106      	ld         ux, @(+0x1, y)
   50502:	031B      	ld         x, @(+0x3, y)
   50503:	040E      	ld         xh, @(+0x4, y)
   50504:	021F      	ld         y, @(+0x2, y)
   50505:	1014      	ld         al, #+0x10
   50506:	FF27      	st         al, @(-0x1, y)
   50507:	FF05      	ld         flags, @(-0x1, y)
   50508:	FE0B      	enter      #-0x2
   50509:	0018      	ld         x, #+0x0
   5050A:	FF2B      	st         x, @(-0x1, y)
   5050B:	FF0E      	ld         xh, @(-0x1, y)
   5050C:	0300      	**prefx    0x3
   5050D:	9AE2      	bra        +0x29A, x
   5050E:	00E2      	bra        0x0, x

0x0005050F <patch_sysop_sleep_enter>:
   5050F:	F60B      	enter      #-0xA
   50510:	6A00      	**prefx    0x6A
   50511:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   50512:	0727      	st         al, @(+0x7, y)
   50513:	FB00      	**prefx    0xFB
   50514:	CA15      	ld         al, @0xFACA <___libgatt_lib_db_2568>
   50515:	F0C4      	and        al, #0xFFF0
   50516:	06B4      	or         al, #+0x6
   50517:	FB00      	**prefx    0xFB
   50518:	CA25      	st         al, @0xFACA <___libgatt_lib_db_2568>
   50519:	FB00      	**prefx    0xFB
   5051A:	D315      	ld         al, @0xFAD3 <___libgatt_lib_db_2579>
   5051B:	FF00      	**prefx    0xFF
   5051C:	00C4      	and        al, #0xFF00
   5051D:	66B4      	or         al, #+0x66
   5051E:	FB00      	**prefx    0xFB
   5051F:	D325      	st         al, @0xFAD3 <___libgatt_lib_db_2579>
   50520:	5000      	**prefx    0x50
   50521:	C318      	ld         x, #+0x4FC3
   50522:	D600      	**prefx    0xD6
   50523:	5129      	st         x, @0xD651 <main_app_process_system_event_ptr+0x2>
   50524:	6A00      	**prefx    0x6A
   50525:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   50526:	0010      	ld         ah, #+0x0
   50527:	BB00      	**prefx    0xBB
   50528:	6434      	add        al, #-0x449C
   50529:	0040      	addc       ah, #+0x0
   5052A:	FE27      	st         al, @(-0x2, y)
   5052B:	FF23      	st         ah, @(-0x1, y)
   5052C:	FF0E      	ld         xh, @(-0x1, y)
   5052D:	FE9F      	bsr        @(-0x2, y)
   5052E:	F300      	**prefx    0xF3
   5052F:	1115      	ld         al, @0xF311 <___libgatt_lib_db_2903>
   50530:	0427      	st         al, @(+0x4, y)
   50531:	11B4      	or         al, #+0x11
   50532:	F300      	**prefx    0xF3
   50533:	1125      	st         al, @0xF311 <___libgatt_lib_db_2903>
   50534:	D800      	**prefx    0xD8
   50535:	3015      	ld         al, @0xD830 <xtal_wake_configured+0x5>
   50536:	D800      	**prefx    0xD8
   50537:	2F19      	ld         x, @0xD82F <xtal_wake_configured+0x4>
   50538:	5F25      	st         al, @0x5F <___libgatt_lib_db_2127>
   50539:	5E29      	st         x, @0x5E <___libcsrmesh_392>
   5053A:	D800      	**prefx    0xD8
   5053B:	3015      	ld         al, @0xD830 <xtal_wake_configured+0x5>
   5053C:	D800      	**prefx    0xD8
   5053D:	2F19      	ld         x, @0xD82F <xtal_wake_configured+0x4>
   5053E:	5D25      	st         al, @0x5D <___libgatt_lib_db_1556>
   5053F:	5C29      	st         x, @0x5C <___libgatt_lib_db_1225>
   50540:	FA00      	**prefx    0xFA
   50541:	0715      	ld         al, @0xFA07 <___libgatt_lib_db_3357>
   50542:	40C4      	and        al, #0x40
   50543:	0CF0      	bne        +0xC <patch_sysop_sleep_enter+0x40:0x5054F[p]>
   50544:	FB00      	**prefx    0xFB
   50545:	C315      	ld         al, @0xFAC3 <___libgatt_lib_db_2545>
   50546:	1000      	**prefx    0x10
   50547:	00C4      	and        al, #0x1000
   50548:	07F4      	beq        +0x7 <patch_sysop_sleep_enter+0x40:0x5054F[p]>
   50549:	FB00      	**prefx    0xFB
   5054A:	D015      	ld         al, @0xFAD0 <___libgatt_lib_db_2566>
   5054B:	E0C4      	and        al, #0xFFE0
   5054C:	03B4      	or         al, #+0x3
   5054D:	FB00      	**prefx    0xFB
   5054E:	D025      	st         al, @0xFAD0 <___libgatt_lib_db_2566>
   5054F:	1100      	**prefx    0x11
   50550:	6B14      	ld         al, #+0x116B
   50551:	0327      	st         al, @(+0x3, y)
   50552:	0118      	ld         x, #+0x1
   50553:	022B      	st         x, @(+0x2, y)
   50554:	F300      	**prefx    0xF3
   50555:	4915      	ld         al, @0xF349 <___libgatt_lib_db_4248>
   50556:	30F4      	beq        +0x30 <patch_sysop_sleep_enter+0x77:0x50586[p]>
   50557:	4915      	ld         al, @0x49 <___libaction_server_472>
   50558:	02C4      	and        al, #0x2
   50559:	2DF4      	beq        +0x2D <patch_sysop_sleep_enter+0x77:0x50586[p]>
   5055A:	F800      	**prefx    0xF8
   5055B:	0A15      	ld         al, @0xF80A <___libgatt_lib_db_3349>
   5055C:	2AF4      	beq        +0x2A <patch_sysop_sleep_enter+0x77:0x50586[p]>
   5055D:	FA00      	**prefx    0xFA
   5055E:	0E11      	ld         ah, @0xFA0E <___libgatt_lib_db_3352>
   5055F:	0009      	**unsigned
   50560:	04A4      	lsr        #0x4
   50561:	0FC0      	and        ah, #0xF
   50562:	0A80      	cmp        ah, #+0xA
   50563:	23F4      	beq        +0x23 <patch_sysop_sleep_enter+0x77:0x50586[p]>
   50564:	FA00      	**prefx    0xFA
   50565:	0E15      	ld         al, @0xFA0E <___libgatt_lib_db_3352>
   50566:	FF00      	**prefx    0xFF
   50567:	F0C4      	and        al, #0xFEF0
   50568:	0100      	**prefx    0x1
   50569:	09B4      	or         al, #+0x109
   5056A:	FA00      	**prefx    0xFA
   5056B:	0E25      	st         al, @0xFA0E <___libgatt_lib_db_3352>
   5056C:	FB00      	**prefx    0xFB
   5056D:	C111      	ld         ah, @0xFAC1 <___libgatt_lib_db_2553>
   5056E:	0714      	ld         al, #+0x7
   5056F:	FB00      	**prefx    0xFB
   50570:	C125      	st         al, @0xFAC1 <___libgatt_lib_db_2553>
   50571:	FB00      	**prefx    0xFB
   50572:	C215      	ld         al, @0xFAC2 <___libgatt_lib_db_2554>
   50573:	FEEC      	bmi        -0x2 <patch_sysop_sleep_enter+0x62:0x50571[p]>
   50574:	FB00      	**prefx    0xFB
   50575:	C121      	st         ah, @0xFAC1 <___libgatt_lib_db_2553>
   50576:	FA00      	**prefx    0xFA
   50577:	0411      	ld         ah, @0xFA04 <___libgatt_lib_db_3373>
   50578:	01C0      	and        ah, #0x1
   50579:	FA00      	**prefx    0xFA
   5057A:	0415      	ld         al, @0xFA04 <___libgatt_lib_db_3373>
   5057B:	01C4      	and        al, #0x1
   5057C:	E181      	cmp        ah, @0xFFE1 <register al>
   5057D:	FCF4      	beq        -0x4 <patch_sysop_sleep_enter+0x6A:0x50579[p]>
   5057E:	FA00      	**prefx    0xFA
   5057F:	0411      	ld         ah, @0xFA04 <___libgatt_lib_db_3373>
   50580:	01C0      	and        ah, #0x1
   50581:	FA00      	**prefx    0xFA
   50582:	0415      	ld         al, @0xFA04 <___libgatt_lib_db_3373>
   50583:	01C4      	and        al, #0x1
   50584:	E181      	cmp        ah, @0xFFE1 <register al>
   50585:	FCF4      	beq        -0x4 <patch_sysop_sleep_enter+0x72:0x50581[p]>
   50586:	0010      	ld         ah, #+0x0
   50587:	0717      	ld         al, @(+0x7, y)
   50588:	0300      	**prefx    0x3
   50589:	D634      	add        al, #+0x2D6
   5058A:	0040      	addc       ah, #+0x0
   5058B:	FE27      	st         al, @(-0x2, y)
   5058C:	FF23      	st         ah, @(-0x1, y)
   5058D:	FF0E      	ld         xh, @(-0x1, y)
   5058E:	FE9F      	bsr        @(-0x2, y)
   5058F:	FA00      	**prefx    0xFA
   50590:	0E15      	ld         al, @0xFA0E <___libgatt_lib_db_3352>
   50591:	FF00      	**prefx    0xFF
   50592:	F0C4      	and        al, #0xFEF0
   50593:	0AB4      	or         al, #+0xA
   50594:	FA00      	**prefx    0xFA
   50595:	0E25      	st         al, @0xFA0E <___libgatt_lib_db_3352>
   50596:	4915      	ld         al, @0x49 <___libaction_server_472>
   50597:	FDC4      	and        al, #0xFFFD
   50598:	4925      	st         al, @0x49 <___libaction_server_472>
   50599:	0118      	ld         x, #+0x1
   5059A:	5229      	st         x, @0x52 <___libcsrmesh_285>
   5059B:	0317      	ld         al, @(+0x3, y)
   5059C:	0627      	st         al, @(+0x6, y)
   5059D:	0217      	ld         al, @(+0x2, y)
   5059E:	0527      	st         al, @(+0x5, y)
   5059F:	0018      	ld         x, #+0x0
   505A0:	002B      	st         x, @(0x0, y)
   505A1:	012B      	st         x, @(+0x1, y)
   505A2:	0014      	ld         al, #+0x0
   505A3:	0110      	ld         ah, #+0x1
   505A4:	050E      	ld         xh, @(+0x5, y)
   505A5:	069F      	bsr        @(+0x6, y)
   505A6:	FB00      	**prefx    0xFB
   505A7:	D315      	ld         al, @0xFAD3 <___libgatt_lib_db_2579>
   505A8:	FF00      	**prefx    0xFF
   505A9:	00C4      	and        al, #0xFF00
   505AA:	55B4      	or         al, #+0x55
   505AB:	FB00      	**prefx    0xFB
   505AC:	D325      	st         al, @0xFAD3 <___libgatt_lib_db_2579>
   505AD:	D800      	**prefx    0xD8
   505AE:	3F15      	ld         al, @0xD83F <xtal_wake_configured+0x14>
   505AF:	5D25      	st         al, @0x5D <___libgatt_lib_db_1556>
   505B0:	D800      	**prefx    0xD8
   505B1:	3E19      	ld         x, @0xD83E <xtal_wake_configured+0x13>
   505B2:	5C29      	st         x, @0x5C <___libgatt_lib_db_1225>
   505B3:	D800      	**prefx    0xD8
   505B4:	3D15      	ld         al, @0xD83D <xtal_wake_configured+0x12>
   505B5:	5F25      	st         al, @0x5F <___libgatt_lib_db_2127>
   505B6:	D800      	**prefx    0xD8
   505B7:	3C19      	ld         x, @0xD83C <xtal_wake_configured+0x11>
   505B8:	5E29      	st         x, @0x5E <___libcsrmesh_392>
   505B9:	0417      	ld         al, @(+0x4, y)
   505BA:	F300      	**prefx    0xF3
   505BB:	1125      	st         al, @0xF311 <___libgatt_lib_db_2903>
   505BC:	F60F      	leave      #-0xA
Disassembly of section .apptext:

0x000505BD <___libgatt_lib_db_832>:
   505BD:	FC0B      	enter      #-0x4
   505BE:	0014      	ld         al, #+0x0
   505BF:	F925      	st         al, @0xFFF9 <(scratchpad)>
   505C0:	0514      	ld         al, #+0x5
   505C1:	0600      	**prefx    0x6
   505C2:	EC10      	ld         ah, #+0x5EC
   505C3:	E0B5      	or         al, @0xFFE0 <register ah>
   505C4:	03F4      	beq        +0x3 <PROG_DS_PATCH_END+0xA:0x505C7[p]>
   505C5:	0114      	ld         al, #+0x1
   505C6:	F925      	st         al, @0xFFF9 <(scratchpad)>
   505C7:	0014      	ld         al, #+0x0
   505C8:	F825      	st         al, @0xFFF8 <(scratchpad)>
   505C9:	0514      	ld         al, #+0x5
   505CA:	0600      	**prefx    0x6
   505CB:	F610      	ld         ah, #+0x5F6
   505CC:	E0B5      	or         al, @0xFFE0 <register ah>
   505CD:	03F4      	beq        +0x3 <PROG_DS_PATCH_END+0x13:0x505D0[p]>
   505CE:	0114      	ld         al, #+0x1
   505CF:	F825      	st         al, @0xFFF8 <(scratchpad)>
   505D0:	0018      	ld         x, #+0x0
   505D1:	0514      	ld         al, #+0x5
   505D2:	0600      	**prefx    0x6
   505D3:	F910      	ld         ah, #+0x5F9
   505D4:	E0B5      	or         al, @0xFFE0 <register ah>
   505D5:	02F4      	beq        +0x2 <PROG_DS_PATCH_END+0x1A:0x505D7[p]>
   505D6:	0118      	ld         x, #+0x1
   505D7:	002B      	st         x, @(0x0, y)
   505D8:	0018      	ld         x, #+0x0
   505D9:	0514      	ld         al, #+0x5
   505DA:	0600      	**prefx    0x6
   505DB:	0310      	ld         ah, #+0x603
   505DC:	E0B5      	or         al, @0xFFE0 <register ah>
   505DD:	02F4      	beq        +0x2 <PROG_DS_PATCH_END+0x22:0x505DF[p]>
   505DE:	0118      	ld         x, #+0x1
   505DF:	012B      	st         x, @(+0x1, y)
   505E0:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   505E1:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   505E2:	FB00      	**prefx    0xFB
   505E3:	1300      	**prefx    0x13
   505E4:	699C      	bsr        -0x4EC97 <___libgatt_lib_db_824:0x194D[p]>
   505E5:	FC0F      	leave      #-0x4

0x000505E6 <SMInit>:
   505E6:	FE0B      	enter      #-0x2

0x000505E7 <.LCFI1>:
   505E7:	FB00      	**prefx    0xFB
   505E8:	1400      	**prefx    0x14
   505E9:	839C      	bsr        -0x4EC7D <___libgatt_lib_db_823:0x196C[p]>

0x000505EA <.LVL1>:
   505EA:	D39C      	bsr        -0x2D <PROG_DS_PATCH_END:0x505BD[p]>
   505EB:	FE0F      	leave      #-0x2

0x000505EC <SMKeyRequestRsp>:
   505EC:	FC0B      	enter      #-0x4
   505ED:	0027      	st         al, @(0x0, y)
   505EE:	0123      	st         ah, @(+0x1, y)
   505EF:	309C      	bsr        +0x30 <___libgatt_lib_db_5469:0x5061F[p]>

0x000505F0 <.LVL1>:
   505F0:	0017      	ld         al, @(0x0, y)
   505F1:	0113      	ld         ah, @(+0x1, y)
   505F2:	FB00      	**prefx    0xFB
   505F3:	1300      	**prefx    0x13
   505F4:	059C      	bsr        -0x4ECFB <___libgatt_lib_db_784:0x18F9[p]>
   505F5:	FC0F      	leave      #-0x4

0x000505F6 <SMDivApprovalRsp>:
   505F6:	FB00      	**prefx    0xFB
   505F7:	1300      	**prefx    0x13
   505F8:	88E0      	bra        -0x4ED78 <___libgatt_lib_db_777:0x1880[p]>

0x000505F9 <SMPairingAuthRsp>:
   505F9:	FC0B      	enter      #-0x4
   505FA:	0027      	st         al, @(0x0, y)
   505FB:	0123      	st         ah, @(+0x1, y)
   505FC:	239C      	bsr        +0x23 <___libgatt_lib_db_5469:0x5061F[p]>

0x000505FD <.LVL1>:
   505FD:	0017      	ld         al, @(0x0, y)
   505FE:	0113      	ld         ah, @(+0x1, y)
   505FF:	FB00      	**prefx    0xFB
   50600:	1300      	**prefx    0x13
   50601:	009C      	bsr        -0x4ED00 <___libgatt_lib_db_780:0x1901[p]>
   50602:	FC0F      	leave      #-0x4

0x00050603 <SMLongTermKeyRsp>:
   50603:	FE0B      	enter      #-0x2
   50604:	001B      	ld         x, @(0x0, y)
   50605:	023C      	add        y, #+0x2
   50606:	FB00      	**prefx    0xFB
   50607:	1300      	**prefx    0x13
   50608:	92E0      	bra        -0x4ED6E <___libgatt_lib_db_783:0x189A[p]>

0x00050609 <___libgatt_lib_db_5470>:
   50609:	FE0B      	enter      #-0x2
   5060A:	0917      	ld         al, @(+0x9, y)
   5060B:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5060C:	1017      	ld         al, @(+0x10, y)
   5060D:	0F1B      	ld         x, @(+0xF, y)
   5060E:	0010      	ld         ah, #+0x0
   5060F:	10A0      	asl        #0x10
   50610:	E3B5      	or         al, @0xFFE3 <register uxl>
   50611:	E099      	tst        @0xFFE0 <register ah>
   50612:	0CF0      	bne        +0xC <___libgatt_lib_db_5470+0x15:0x5061E[p]>
   50613:	2700      	**prefx    0x27
   50614:	6E84      	cmp        al, #+0x276E
   50615:	09F0      	bne        +0x9 <___libgatt_lib_db_5470+0x15:0x5061E[p]>
   50616:	D000      	**prefx    0xD0
   50617:	0615      	ld         al, @0xD006 <DATA_RAM_START+0x6>
   50618:	0284      	cmp        al, #+0x2
   50619:	05F0      	bne        +0x5 <___libgatt_lib_db_5470+0x15:0x5061E[p]>
   5061A:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5061B:	0116      	ld         al, @(+0x1, x)
   5061C:	01B4      	or         al, #+0x1
   5061D:	0126      	st         al, @(+0x1, x)
   5061E:	FE0F      	leave      #-0x2

0x0005061F <___libgatt_lib_db_5469>:
   5061F:	6100      	**prefx    0x61
   50620:	FB15      	ld         al, @0x60FB <DATA_TIMER_END>
   50621:	06F4      	beq        +0x6 <___libgatt_lib_db_5469+0x8:0x50627[p]>
   50622:	DC00      	**prefx    0xDC
   50623:	7E25      	st         al, @0xDC7E <sm_security_procedure_instance+0x2>
   50624:	0014      	ld         al, #+0x0
   50625:	6100      	**prefx    0x61
   50626:	FB25      	st         al, @0x60FB <DATA_TIMER_END>
   50627:	00E2      	bra        0x0, x

0x00050628 <___libgatt_lib_db_5471>:
   50628:	F20B      	enter      #-0xE

0x00050629 <.LCFI1>:
   50629:	1117      	ld         al, @(+0x11, y)

0x0005062A <.LVL4>:
   5062A:	121B      	ld         x, @(+0x12, y)
   5062B:	0B2B      	st         x, @(+0xB, y)
   5062C:	0684      	cmp        al, #+0x6
   5062D:	06F8      	bcc        +0x6 <.LVL4+0x9:0x50633[p]>
   5062E:	0484      	cmp        al, #+0x4
   5062F:	07F8      	bcc        +0x7 <.LVL4+0xC:0x50636[p]>
   50630:	0384      	cmp        al, #+0x3
   50631:	43F0      	bne        +0x43 <.LBE9:0x50674[p]>
   50632:	06E0      	bra        +0x6 <.LVL6:0x50638[p]>
   50633:	0684      	cmp        al, #+0x6
   50634:	40F0      	bne        +0x40 <.LBE9:0x50674[p]>
   50635:	03E0      	bra        +0x3 <.LVL6:0x50638[p]>
   50636:	E99C      	bsr        -0x17 <___libgatt_lib_db_5469:0x5061F[p]>

0x00050637 <.LVL5>:
   50637:	3DE0      	bra        +0x3D <.LBE9:0x50674[p]>

0x00050638 <.LVL6>:
   50638:	E79C      	bsr        -0x19 <___libgatt_lib_db_5469:0x5061F[p]>

0x00050639 <.LVL7>:
   50639:	DC00      	**prefx    0xDC
   5063A:	7E15      	ld         al, @0xDC7E <sm_security_procedure_instance+0x2>
   5063B:	0B1B      	ld         x, @(+0xB, y)
   5063C:	0086      	cmp        al, @(0x0, x)
   5063D:	37F0      	bne        +0x37 <.LBE9:0x50674[p]>
   5063E:	DC00      	**prefx    0xDC
   5063F:	7C18      	ld         x, #-0x2384
   50640:	0014      	ld         al, #+0x0
   50641:	0226      	st         al, @(+0x2, x)
   50642:	0927      	st         al, @(+0x9, y)

0x00050643 <.LBB6>:
   50643:	0917      	ld         al, @(+0x9, y)
   50644:	03A0      	asl        #0x3
   50645:	E119      	ld         x, @0xFFE1 <register al>

0x00050646 <.LVL9>:
   50646:	DC00      	**prefx    0xDC
   50647:	221A      	ld         x, @(-0x23DE, x)

0x00050648 <.LVL10>:
   50648:	0188      	cmp        x, #+0x1
   50649:	03F4      	beq        +0x3 <.LVL10+0x4:0x5064C[p]>
   5064A:	0B88      	cmp        x, #+0xB
   5064B:	24F0      	bne        +0x24 <.LBE8:0x5066F[p]>
   5064C:	1300      	**prefx    0x13
   5064D:	151A      	ld         x, @(+0x1315, x)

0x0005064E <.LVL11>:
   5064E:	0A2B      	st         x, @(+0xA, y)
   5064F:	0917      	ld         al, @(+0x9, y)
   50650:	03A0      	asl        #0x3
   50651:	0827      	st         al, @(+0x8, y)
   50652:	E111      	ld         ah, @0xFFE1 <register al>
   50653:	DC00      	**prefx    0xDC
   50654:	2230      	add        ah, #-0x23DE
   50655:	002B      	st         x, @(0x0, y)
   50656:	E415      	ld         al, @0xFFE4 <register uy>
   50657:	0134      	add        al, #+0x1
   50658:	FB00      	**prefx    0xFB
   50659:	2500      	**prefx    0x25
   5065A:	EE9C      	bsr        -0x4DB12 <MemCopy:0x2B48[p]>
   5065B:	0817      	ld         al, @(+0x8, y)
   5065C:	DC00      	**prefx    0xDC
   5065D:	2334      	add        al, #-0x23DD
   5065E:	0A1B      	ld         x, @(+0xA, y)
   5065F:	002B      	st         x, @(0x0, y)
   50660:	E411      	ld         ah, @0xFFE4 <register uy>
   50661:	0130      	add        ah, #+0x1
   50662:	FB00      	**prefx    0xFB
   50663:	2500      	**prefx    0x25
   50664:	E49C      	bsr        -0x4DB1C <MemCopy:0x2B48[p]>

0x00050665 <.LBE6>:
   50665:	0917      	ld         al, @(+0x9, y)
   50666:	0610      	ld         ah, #+0x6
   50667:	FB00      	**prefx    0xFB
   50668:	3700      	**prefx    0x37
   50669:	6A9C      	bsr        -0x4C896 <___libgatt_lib_db_299:0x3DD3[p]>

0x0005066A <.LBB8>:
   5066A:	6100      	**prefx    0x61
   5066B:	FB25      	st         al, @0x60FB <DATA_TIMER_END>
   5066C:	081B      	ld         x, @(+0x8, y)
   5066D:	DC00      	**prefx    0xDC
   5066E:	2226      	st         al, @(-0x23DE, x)

0x0005066F <.LBE8>:
   5066F:	0917      	ld         al, @(+0x9, y)
   50670:	0134      	add        al, #+0x1
   50671:	0927      	st         al, @(+0x9, y)
   50672:	0484      	cmp        al, #+0x4
   50673:	D0F0      	bne        -0x30 <.LBB6:0x50643[p]>

0x00050674 <.LBE9>:
   50674:	F20F      	leave      #-0xE

0x00050675 <___libgatt_lib_db_5477>:
   50675:	AAE0      	bra        -0x56 <___libgatt_lib_db_5469:0x5061F[p]>

0x00050676 <GattGetDatabase>:
    /* 0024: . */
    0xc401, 0x0000,
};

uint16 *GattGetDatabase(uint16 *len)
{
   50676:	FE0B      	enter      #-0x2
   50677:	E119      	ld         x, @0xFFE1 <register al>
    *len = sizeof(gattDatabase);
   50678:	0100      	**prefx    0x1
   50679:	B814      	ld         al, #+0xB8
   5067A:	0026      	st         al, @(0x0, x)
    return gattDatabase;
}
   5067B:	6000      	**prefx    0x60
   5067C:	0014      	ld         al, #+0x6000
   5067D:	FE0F      	leave      #-0x2

0x0005067E <GetUpdatedConnParams>:
 *  RETURNS
 *      TRUE if the parameter got updated, FALSE otherwise
 *
 *---------------------------------------------------------------------------*/
extern bool GetUpdatedConnParams(CONN_PARAMS_T *conn_params)
{
   5067E:	FE0B      	enter      #-0x2
   5067F:	E111      	ld         ah, @0xFFE1 <register al>
    bool result = FALSE;

    if(local_data.conn_params.conn_interval > 0)
   50680:	6100      	**prefx    0x61
   50681:	0699      	tst        @0x6106 <local_data+0xA>
   50682:	03F0      	bne        +0x3 <GetUpdatedConnParams+0x7:0x50685[p]>
   50683:	0014      	ld         al, #+0x0
   50684:	06E0      	bra        +0x6 <GetUpdatedConnParams+0xC:0x5068A[p]>
    {
        *conn_params = local_data.conn_params;
   50685:	0314      	ld         al, #+0x3
   50686:	6100      	**prefx    0x61
   50687:	0618      	ld         x, #+0x6106
   50688:	FD09      	bc2        
   50689:	0114      	ld         al, #+0x1
        result = TRUE;
    }

    return result;
}
   5068A:	FE0F      	leave      #-0x2

0x0005068B <ConnectionParamUpdateSetCallback>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void ConnectionParamUpdateSetCallback(conn_param_update_complete function)
{
    local_data.update_complete_callback = function;
   5068B:	6100      	**prefx    0x61
   5068C:	0F25      	st         al, @0x610F <local_data+0x13>
   5068D:	6100      	**prefx    0x61
   5068E:	0E21      	st         ah, @0x610E <local_data+0x12>
}
   5068F:	00E2      	bra        0x0, x

0x00050690 <handleGapCppTimerExpiry>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
static void handleGapCppTimerExpiry(timer_id tid)
{
   50690:	FB0B      	enter      #-0x5
    local_data.tid = TimerCreate(TGAP_CPC_PERIOD, TRUE,
   50691:	0114      	ld         al, #+0x1
   50692:	0027      	st         al, @(0x0, y)
   50693:	0700      	**prefx    0x7
   50694:	A414      	ld         al, #+0x6A4
   50695:	0227      	st         al, @(+0x2, y)
   50696:	0514      	ld         al, #+0x5
   50697:	0127      	st         al, @(+0x1, y)
   50698:	0F10      	ld         ah, #+0xF
   50699:	4200      	**prefx    0x42
   5069A:	4014      	ld         al, #+0x4240
   5069B:	FC00      	**prefx    0xFC
   5069C:	E600      	**prefx    0xE6
   5069D:	919C      	bsr        -0x41A6F <TimerCreate:0xEC2E[p]>
   5069E:	6100      	**prefx    0x61
   5069F:	FC18      	ld         x, #+0x60FC
   506A0:	0026      	st         al, @(0x0, x)
                                   requestConnParamUpdate);
    local_data.cpc_timer_active = TRUE;
   506A1:	0114      	ld         al, #+0x1
   506A2:	0D26      	st         al, @(+0xD, x)
}
   506A3:	FB0F      	leave      #-0x5

0x000506A4 <requestConnParamUpdate>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void requestConnParamUpdate(timer_id tid)
{
   506A4:	FB0B      	enter      #-0x5
    local_data.tid = TIMER_INVALID;
   506A5:	0014      	ld         al, #+0x0
   506A6:	6100      	**prefx    0x61
   506A7:	FC25      	st         al, @0x60FC <local_data>
    local_data.cpc_timer_active = FALSE;
   506A8:	6100      	**prefx    0x61
   506A9:	0925      	st         al, @0x6109 <local_data+0xD>
    cm_status_code status;

    if(local_data.cur_set == 1)
   506AA:	6100      	**prefx    0x61
   506AB:	0C15      	ld         al, @0x610C <local_data+0x10>
   506AC:	0184      	cmp        al, #+0x1
   506AD:	06F0      	bne        +0x6 <requestConnParamUpdate+0xF:0x506B3[p]>
    {
        status = CMConnParamUpdateReq(local_data.device_id,
   506AE:	6100      	**prefx    0x61
   506AF:	FD15      	ld         al, @0x60FD <local_data+0x1>
   506B0:	6100      	**prefx    0x61
   506B1:	FE10      	ld         ah, #+0x60FE
   506B2:	05E0      	bra        +0x5 <requestConnParamUpdate+0x13:0x506B7[p]>
                             &local_data.new_params_1);
    }
    else
    {
        status = CMConnParamUpdateReq(local_data.device_id,
   506B3:	6100      	**prefx    0x61
   506B4:	FD15      	ld         al, @0x60FD <local_data+0x1>
   506B5:	6100      	**prefx    0x61
   506B6:	0210      	ld         ah, #+0x6102
   506B7:	0300      	**prefx    0x3
   506B8:	2E9C      	bsr        +0x32E <CMConnParamUpdateReq:0x509E6[p]>
    }

    /*
    ** check the return code and reschedule if it was busy, or quit if it's a failure
    */
    if ( status == cm_status_busy )
   506B9:	0284      	cmp        al, #+0x2
   506BA:	12F0      	bne        +0x12 <requestConnParamUpdate+0x28:0x506CC[p]>
    {
        local_data.tid = TimerCreate(GAP_CONN_PARAM_TIMEOUT, TRUE, requestConnParamUpdate);
   506BB:	0118      	ld         x, #+0x1
   506BC:	002B      	st         x, @(0x0, y)
   506BD:	0700      	**prefx    0x7
   506BE:	A414      	ld         al, #+0x6A4
   506BF:	0227      	st         al, @(+0x2, y)
   506C0:	0518      	ld         x, #+0x5
   506C1:	012B      	st         x, @(+0x1, y)
   506C2:	0200      	**prefx    0x2
   506C3:	C910      	ld         ah, #+0x1C9
   506C4:	C400      	**prefx    0xC4
   506C5:	8014      	ld         al, #-0x3C80
   506C6:	FC00      	**prefx    0xFC
   506C7:	E500      	**prefx    0xE5
   506C8:	669C      	bsr        -0x41A9A <TimerCreate:0xEC2E[p]>
   506C9:	6100      	**prefx    0x61
   506CA:	FC25      	st         al, @0x60FC <local_data>
   506CB:	13E0      	bra        +0x13 <requestConnParamUpdate+0x3A:0x506DE[p]>
    }
    else if ( status == cm_status_failed )
   506CC:	0184      	cmp        al, #+0x1
   506CD:	11F0      	bne        +0x11 <requestConnParamUpdate+0x3A:0x506DE[p]>
    {
        /* call the callback with a failed message */
        if (local_data.update_complete_callback != NULL)
   506CE:	6100      	**prefx    0x61
   506CF:	0F15      	ld         al, @0x610F <local_data+0x13>
   506D0:	F925      	st         al, @0xFFF9 <(scratchpad)>
   506D1:	6100      	**prefx    0x61
   506D2:	0E19      	ld         x, @0x610E <local_data+0x12>
   506D3:	F829      	st         x, @0xFFF8 <(scratchpad)>
   506D4:	E315      	ld         al, @0xFFE3 <register uxl>
   506D5:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   506D6:	08F4      	beq        +0x8 <requestConnParamUpdate+0x3A:0x506DE[p]>
        {
            local_data.update_complete_callback(FALSE);
   506D7:	0014      	ld         al, #+0x0
   506D8:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   506D9:	FE2B      	st         x, @(-0x2, y)
   506DA:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   506DB:	FF2B      	st         x, @(-0x1, y)
   506DC:	FF0E      	ld         xh, @(-0x1, y)
   506DD:	FE9F      	bsr        @(-0x2, y)
        }
    }
    
    if(local_data.retries_left > 0)
   506DE:	6100      	**prefx    0x61
   506DF:	0A15      	ld         al, @0x610A <local_data+0xE>
   506E0:	04F4      	beq        +0x4 <requestConnParamUpdate+0x40:0x506E4[p]>
    {
        local_data.retries_left--;
   506E1:	FF34      	add        al, #-0x1
   506E2:	6100      	**prefx    0x61
   506E3:	0A25      	st         al, @0x610A <local_data+0xE>
    }
}
   506E4:	FB0F      	leave      #-0x5

0x000506E5 <ConnectionParamUpdateEvent>:
 *      Nothing
 *----------------------------------------------------------------------------*/

extern void ConnectionParamUpdateEvent(cm_event event_type,
                                       CM_EVENT_T *cm_event_data)
{
   506E5:	FA0B      	enter      #-0x6
   506E6:	E119      	ld         x, @0xFFE1 <register al>
   506E7:	0323      	st         ah, @(+0x3, y)
    switch(event_type)
   506E8:	E938      	add        x, #-0x17
   506E9:	0588      	cmp        x, #+0x5
   506EA:	0100      	**prefx    0x1
   506EB:	8DF8      	bcc        +0x8D <.JTBASE24+0x89:0x50778[p]>
   506EC:	A000      	**prefx    0xA0
   506ED:	121A      	ld         x, @(-0x5FEE, x)
   506EE:	FE09      	brxl       

0x000506EF <.JTBASE24>:
 *
 *---------------------------------------------------------------------------*/
static void handleConnUpdateSignallingInd(
                        CM_CONNECTION_UPDATE_SIGNALLING_IND_T *cm_event_data)
{
    CMConnectionUpdateSignalingRsp(cm_event_data->device_id,
   506EF:	031B      	ld         x, @(+0x3, y)
   506F0:	0112      	ld         ah, @(+0x1, x)
   506F1:	0114      	ld         al, #+0x1
   506F2:	0027      	st         al, @(0x0, y)
   506F3:	0016      	ld         al, @(0x0, x)
   506F4:	0300      	**prefx    0x3
   506F5:	EF9C      	bsr        +0x2EF <CMConnectionUpdateSignalingRsp:0x509E4[p]>
   506F6:	0100      	**prefx    0x1
   506F7:	81E0      	bra        +0x81 <.JTBASE24+0x89:0x50778[p]>
 *
 *---------------------------------------------------------------------------*/
static void handleConnParamUpdateCfm(
        CM_CONNECTION_PARAM_UPDATE_CFM_T *cm_event_data)
{
    if(cm_event_data->status != sys_status_success)
   506F8:	031B      	ld         x, @(+0x3, y)
   506F9:	019A      	tst        @(+0x1, x)
   506FA:	7EF4      	beq        +0x7E <.JTBASE24+0x89:0x50778[p]>
    {
        if(local_data.retries_left > 0)
   506FB:	6100      	**prefx    0x61
   506FC:	0A99      	tst        @0x610A <local_data+0xE>
   506FD:	0EF0      	bne        +0xE <.JTBASE24+0x1C:0x5070B[p]>
            /* Retry connection parameter update */
            local_data.tid =
                    TimerCreate(GAP_CONN_PARAM_TIMEOUT, TRUE,
                                handleGapCppTimerExpiry);
        }
        else if(local_data.two_sets)
   506FE:	6100      	**prefx    0x61
   506FF:	0B99      	tst        @0x610B <local_data+0xF>
   50700:	1CF4      	beq        +0x1C <.JTBASE24+0x2D:0x5071C[p]>
        {
            /* Reset the flag it is the last set */
            local_data.two_sets     = FALSE;
   50701:	0018      	ld         x, #+0x0
   50702:	6100      	**prefx    0x61
   50703:	0B29      	st         x, @0x610B <local_data+0xF>

            /* Initialise for the second set of parameters */
            local_data.cur_set      = 2;
   50704:	0214      	ld         al, #+0x2
   50705:	6100      	**prefx    0x61
   50706:	0C25      	st         al, @0x610C <local_data+0x10>
            local_data.retries_left = local_data.num_retries;
   50707:	6100      	**prefx    0x61
   50708:	0D19      	ld         x, @0x610D <local_data+0x11>
   50709:	6100      	**prefx    0x61
   5070A:	0A29      	st         x, @0x610A <local_data+0xE>

            /* Retry connection parameter update */
            local_data.tid =
   5070B:	0114      	ld         al, #+0x1
   5070C:	0027      	st         al, @(0x0, y)
   5070D:	0700      	**prefx    0x7
   5070E:	9018      	ld         x, #+0x690
   5070F:	022B      	st         x, @(+0x2, y)
   50710:	0514      	ld         al, #+0x5
   50711:	0127      	st         al, @(+0x1, y)
   50712:	0200      	**prefx    0x2
   50713:	C910      	ld         ah, #+0x1C9
   50714:	C400      	**prefx    0xC4
   50715:	8014      	ld         al, #-0x3C80
   50716:	FC00      	**prefx    0xFC
   50717:	E500      	**prefx    0xE5
   50718:	169C      	bsr        -0x41AEA <TimerCreate:0xEC2E[p]>
   50719:	6100      	**prefx    0x61
   5071A:	FC25      	st         al, @0x60FC <local_data>
   5071B:	5DE0      	bra        +0x5D <.JTBASE24+0x89:0x50778[p]>
                    TimerCreate(GAP_CONN_PARAM_TIMEOUT, TRUE,
                                handleGapCppTimerExpiry);
        }
        else
        {
            local_data.retries_left = MAX_RETRY;
   5071C:	0318      	ld         x, #+0x3
   5071D:	6100      	**prefx    0x61
   5071E:	0A29      	st         x, @0x610A <local_data+0xE>
            
            /* Callback application */
            if (local_data.update_complete_callback != NULL)
   5071F:	6100      	**prefx    0x61
   50720:	0F15      	ld         al, @0x610F <local_data+0x13>
   50721:	F925      	st         al, @0xFFF9 <(scratchpad)>
   50722:	6100      	**prefx    0x61
   50723:	0E19      	ld         x, @0x610E <local_data+0x12>
   50724:	F829      	st         x, @0xFFF8 <(scratchpad)>
   50725:	E315      	ld         al, @0xFFE3 <register uxl>
   50726:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   50727:	51F4      	beq        +0x51 <.JTBASE24+0x89:0x50778[p]>
            {
                local_data.update_complete_callback(FALSE);
   50728:	0014      	ld         al, #+0x0
   50729:	2DE0      	bra        +0x2D <.JTBASE24+0x67:0x50756[p]>
static void handleConnParamUpdateInd(
        CM_CONNECTION_PARAM_UPDATE_IND_T *cm_event_data)
{
    bool request_again = FALSE;

    if(CMGetPeerDeviceRole(cm_event_data->device_id) != con_role_central)
   5072A:	031B      	ld         x, @(+0x3, y)
   5072B:	0016      	ld         al, @(0x0, x)
   5072C:	0300      	**prefx    0x3
   5072D:	919C      	bsr        +0x291 <CMGetPeerDeviceRole:0x509BE[p]>
   5072E:	0184      	cmp        al, #+0x1
   5072F:	49F0      	bne        +0x49 <.JTBASE24+0x89:0x50778[p]>
        return;

    if(local_data.tid == TIMER_INVALID)
   50730:	6100      	**prefx    0x61
   50731:	FC99      	tst        @0x60FC <local_data>
   50732:	46F0      	bne        +0x46 <.JTBASE24+0x89:0x50778[p]>
   50733:	031B      	ld         x, @(+0x3, y)
   50734:	0712      	ld         ah, @(+0x7, x)
    {
        if(local_data.cur_set == 1)
   50735:	6100      	**prefx    0x61
   50736:	0C15      	ld         al, @0x610C <local_data+0x10>
   50737:	0184      	cmp        al, #+0x1
   50738:	05F0      	bne        +0x5 <.JTBASE24+0x4E:0x5073D[p]>
        {
            if(cm_event_data->conn_interval > local_data.
   50739:	6100      	**prefx    0x61
   5073A:	FF81      	cmp        ah, @0x60FF <local_data+0x3>
   5073B:	3D2C      	bcz        +0x3D <.JTBASE24+0x89:0x50778[p]>
   5073C:	36E0      	bra        +0x36 <.JTBASE24+0x83:0x50772[p]>
                request_again = TRUE;
            }
        }
        else
        {
            if(cm_event_data->conn_interval > local_data.
   5073D:	6100      	**prefx    0x61
   5073E:	0381      	cmp        ah, @0x6103 <local_data+0x7>
   5073F:	392C      	bcz        +0x39 <.JTBASE24+0x89:0x50778[p]>
   50740:	32E0      	bra        +0x32 <.JTBASE24+0x83:0x50772[p]>
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleCmConnectionUpdated(CM_CONNECTION_UPDATED_T* cm_event_data)
{
    if (cm_event_data->conn_interval > 0)
   50741:	031B      	ld         x, @(+0x3, y)
   50742:	0116      	ld         al, @(+0x1, x)
   50743:	35F4      	beq        +0x35 <.JTBASE24+0x89:0x50778[p]>
    {
        /* Store the new connection parameters. */
        local_data.conn_params.conn_interval = cm_event_data->conn_interval;
   50744:	6100      	**prefx    0x61
   50745:	0625      	st         al, @0x6106 <local_data+0xA>
        local_data.conn_params.conn_latency  = cm_event_data->conn_latency;
   50746:	0216      	ld         al, @(+0x2, x)
   50747:	6100      	**prefx    0x61
   50748:	0725      	st         al, @0x6107 <local_data+0xB>
        local_data.conn_params.conn_timeout  = cm_event_data->supervision_timeout;
   50749:	031A      	ld         x, @(+0x3, x)
   5074A:	6100      	**prefx    0x61
   5074B:	0829      	st         x, @0x6108 <local_data+0xC>
        
        /* Callback application */
        if (local_data.update_complete_callback != NULL)
   5074C:	6100      	**prefx    0x61
   5074D:	0F15      	ld         al, @0x610F <local_data+0x13>
   5074E:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5074F:	6100      	**prefx    0x61
   50750:	0E19      	ld         x, @0x610E <local_data+0x12>
   50751:	F829      	st         x, @0xFFF8 <(scratchpad)>
   50752:	E315      	ld         al, @0xFFE3 <register uxl>
   50753:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   50754:	24F4      	beq        +0x24 <.JTBASE24+0x89:0x50778[p]>
        {
            local_data.update_complete_callback(TRUE);
   50755:	0114      	ld         al, #+0x1
   50756:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   50757:	FE2B      	st         x, @(-0x2, y)
   50758:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50759:	FF2B      	st         x, @(-0x1, y)
   5075A:	FF0E      	ld         xh, @(-0x1, y)
   5075B:	FE9F      	bsr        @(-0x2, y)
   5075C:	1CE0      	bra        +0x1C <.JTBASE24+0x89:0x50778[p]>
{
    /* CM_SERVER_ACCESSED indicates that the central device is still disco-
     * -vering services. So, restart the connection parameter update
     * timer
     */
     if(local_data.cpc_timer_active == TRUE
   5075D:	6100      	**prefx    0x61
   5075E:	0915      	ld         al, @0x6109 <local_data+0xD>
   5075F:	0184      	cmp        al, #+0x1
   50760:	18F0      	bne        +0x18 <.JTBASE24+0x89:0x50778[p]>
   50761:	6100      	**prefx    0x61
   50762:	FC15      	ld         al, @0x60FC <local_data>
   50763:	15F4      	beq        +0x15 <.JTBASE24+0x89:0x50778[p]>
            && local_data.tid != TIMER_INVALID)
     {
        TimerDelete(local_data.tid);
   50764:	FC00      	**prefx    0xFC
   50765:	E500      	**prefx    0xE5
   50766:	BD9C      	bsr        -0x41B43 <TimerDelete:0xEC23[p]>
        local_data.tid = TimerCreate(TGAP_CPC_PERIOD,
   50767:	0114      	ld         al, #+0x1
   50768:	0027      	st         al, @(0x0, y)
   50769:	0700      	**prefx    0x7
   5076A:	A418      	ld         x, #+0x6A4
   5076B:	022B      	st         x, @(+0x2, y)
   5076C:	0514      	ld         al, #+0x5
   5076D:	0127      	st         al, @(+0x1, y)
   5076E:	0F10      	ld         ah, #+0xF
   5076F:	4200      	**prefx    0x42
   50770:	4014      	ld         al, #+0x4240
   50771:	A5E0      	bra        -0x5B <.JTBASE24+0x27:0x50716[p]>
            }
        }

        if(request_again)
        {
            requestConnParamUpdate(TIMER_INVALID);
   50772:	0014      	ld         al, #+0x0
        break;

        default:
        break;
    }
}
   50773:	041B      	ld         x, @(+0x4, y)
   50774:	050E      	ld         xh, @(+0x5, y)
   50775:	063C      	add        y, #+0x6
            }
        }

        if(request_again)
        {
            requestConnParamUpdate(TIMER_INVALID);
   50776:	FF00      	**prefx    0xFF
   50777:	2DE0      	bra        -0xD3 <requestConnParamUpdate:0x506A4[p]>
        break;

        default:
        break;
    }
}
   50778:	FA0F      	leave      #-0x6

0x00050779 <StopConnParamsUpdate>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void StopConnParamsUpdate(void)
{
   50779:	FE0B      	enter      #-0x2
    /* Kill the button press timer id. */
    TimerDelete(local_data.tid);
   5077A:	6100      	**prefx    0x61
   5077B:	FC18      	ld         x, #+0x60FC
   5077C:	0016      	ld         al, @(0x0, x)
   5077D:	FC00      	**prefx    0xFC
   5077E:	E500      	**prefx    0xE5
   5077F:	A49C      	bsr        -0x41B5C <TimerDelete:0xEC23[p]>
    local_data.tid  = TIMER_INVALID;
   50780:	0014      	ld         al, #+0x0
   50781:	6100      	**prefx    0x61
   50782:	FC18      	ld         x, #+0x60FC
   50783:	0026      	st         al, @(0x0, x)
    local_data.device_id        = CM_INVALID_DEVICE_ID;
   50784:	FF18      	ld         x, #-0x1
   50785:	6100      	**prefx    0x61
   50786:	FD29      	st         x, @0x60FD <local_data+0x1>
}
   50787:	FE0F      	leave      #-0x2

0x00050788 <processNewParams>:
 *
 *---------------------------------------------------------------------------*/
static bool processNewParams(device_handle_id device_id,
                             ble_con_params *new_params_1,
                             ble_con_params *new_params_2)
{
   50788:	FE0B      	enter      #-0x2
   50789:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   5078A:	0213      	ld         ah, @(+0x2, y)
   5078B:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    if(new_params_1 == NULL && new_params_2 == NULL)
   5078C:	FA99      	tst        @0xFFFA <(scratchpad)>
   5078D:	05F0      	bne        +0x5 <processNewParams+0xA:0x50792[p]>
   5078E:	E099      	tst        @0xFFE0 <register ah>
   5078F:	03F0      	bne        +0x3 <processNewParams+0xA:0x50792[p]>
   50790:	0014      	ld         al, #+0x0
   50791:	3FE0      	bra        +0x3F <processNewParams+0x48:0x507D0[p]>
        return FALSE;

    local_data.device_id        = device_id;
   50792:	6100      	**prefx    0x61
   50793:	FD25      	st         al, @0x60FD <local_data+0x1>
    if(new_params_1 != NULL)
   50794:	FA99      	tst        @0xFFFA <(scratchpad)>
   50795:	14F4      	beq        +0x14 <processNewParams+0x21:0x507A9[p]>
    {
        local_data.new_params_1     = *new_params_1;
   50796:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   50797:	001A      	ld         x, @(0x0, x)
   50798:	F929      	st         x, @0xFFF9 <(scratchpad)>
   50799:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5079A:	0112      	ld         ah, @(+0x1, x)
   5079B:	0216      	ld         al, @(+0x2, x)
   5079C:	031A      	ld         x, @(+0x3, x)
   5079D:	6100      	**prefx    0x61
   5079E:	0129      	st         x, @0x6101 <local_data+0x5>
   5079F:	6100      	**prefx    0x61
   507A0:	0025      	st         al, @0x6100 <local_data+0x4>
   507A1:	6100      	**prefx    0x61
   507A2:	FF21      	st         ah, @0x60FF <local_data+0x3>
   507A3:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   507A4:	6100      	**prefx    0x61
   507A5:	FE21      	st         ah, @0x60FE <local_data+0x2>
        local_data.cur_set      = 1;
   507A6:	0114      	ld         al, #+0x1
   507A7:	6100      	**prefx    0x61
   507A8:	0C25      	st         al, @0x610C <local_data+0x10>
    }
    local_data.two_sets         = FALSE;
   507A9:	0018      	ld         x, #+0x0
   507AA:	6100      	**prefx    0x61
   507AB:	0B29      	st         x, @0x610B <local_data+0xF>
    if(new_params_2 != NULL)
   507AC:	F899      	tst        @0xFFF8 <(scratchpad)>
   507AD:	1AF4      	beq        +0x1A <processNewParams+0x3F:0x507C7[p]>
    {
        local_data.new_params_2 = *new_params_2;
   507AE:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   507AF:	001A      	ld         x, @(0x0, x)
   507B0:	F929      	st         x, @0xFFF9 <(scratchpad)>
   507B1:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   507B2:	0112      	ld         ah, @(+0x1, x)
   507B3:	0216      	ld         al, @(+0x2, x)
   507B4:	031A      	ld         x, @(+0x3, x)
   507B5:	6100      	**prefx    0x61
   507B6:	0529      	st         x, @0x6105 <local_data+0x9>
   507B7:	6100      	**prefx    0x61
   507B8:	0425      	st         al, @0x6104 <local_data+0x8>
   507B9:	6100      	**prefx    0x61
   507BA:	0321      	st         ah, @0x6103 <local_data+0x7>
   507BB:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   507BC:	6100      	**prefx    0x61
   507BD:	0221      	st         ah, @0x6102 <local_data+0x6>
        if(new_params_1 != NULL)
   507BE:	FA99      	tst        @0xFFFA <(scratchpad)>
   507BF:	05F4      	beq        +0x5 <processNewParams+0x3C:0x507C4[p]>
        {
            local_data.two_sets     = TRUE;
   507C0:	0114      	ld         al, #+0x1
   507C1:	6100      	**prefx    0x61
   507C2:	0B25      	st         al, @0x610B <local_data+0xF>
   507C3:	04E0      	bra        +0x4 <processNewParams+0x3F:0x507C7[p]>
        }
        else
        {
            local_data.cur_set      = 2;
   507C4:	0218      	ld         x, #+0x2
   507C5:	6100      	**prefx    0x61
   507C6:	0C29      	st         x, @0x610C <local_data+0x10>
        }
    }

    MemSet(&local_data.conn_params, 0, sizeof(local_data.conn_params));
   507C7:	6100      	**prefx    0x61
   507C8:	0614      	ld         al, #+0x6106
   507C9:	0010      	ld         ah, #+0x0
   507CA:	6100      	**prefx    0x61
   507CB:	0621      	st         ah, @0x6106 <local_data+0xA>
   507CC:	E119      	ld         x, @0xFFE1 <register al>
   507CD:	0122      	st         ah, @(+0x1, x)
   507CE:	0222      	st         ah, @(+0x2, x)
   507CF:	0114      	ld         al, #+0x1

    return TRUE;
}
   507D0:	FE0F      	leave      #-0x2

0x000507D1 <RequestConnParamsUpdateOnce>:
 *
 *---------------------------------------------------------------------------*/
extern void RequestConnParamsUpdateOnce(device_handle_id device_id,
                                        ble_con_params *new_params_1,
                                        ble_con_params *new_params_2)
{
   507D1:	F90B      	enter      #-0x7
   507D2:	0327      	st         al, @(+0x3, y)
   507D3:	0423      	st         ah, @(+0x4, y)
    if (local_data.tid != TIMER_INVALID)
   507D4:	6100      	**prefx    0x61
   507D5:	FC15      	ld         al, @0x60FC <local_data>
   507D6:	04F4      	beq        +0x4 <RequestConnParamsUpdateOnce+0x9:0x507DA[p]>
    {
        TimerDelete(local_data.tid);
   507D7:	FC00      	**prefx    0xFC
   507D8:	E400      	**prefx    0xE4
   507D9:	4A9C      	bsr        -0x41BB6 <TimerDelete:0xEC23[p]>
    }
    
    if(!processNewParams(device_id, new_params_1, new_params_2))
   507DA:	0717      	ld         al, @(+0x7, y)
   507DB:	0027      	st         al, @(0x0, y)
   507DC:	0317      	ld         al, @(+0x3, y)
   507DD:	0413      	ld         ah, @(+0x4, y)
   507DE:	AA9C      	bsr        -0x56 <processNewParams:0x50788[p]>
   507DF:	E199      	tst        @0xFFE1 <register al>
   507E0:	17F4      	beq        +0x17 <RequestConnParamsUpdateOnce+0x26:0x507F7[p]>
    {
        return;
    }

    local_data.num_retries      = 2;
   507E1:	0214      	ld         al, #+0x2
   507E2:	6100      	**prefx    0x61
   507E3:	0D25      	st         al, @0x610D <local_data+0x11>
    local_data.retries_left     = local_data.num_retries;
   507E4:	6100      	**prefx    0x61
   507E5:	0A25      	st         al, @0x610A <local_data+0xE>
    local_data.cpc_timer_active = TRUE;
   507E6:	0114      	ld         al, #+0x1
   507E7:	6100      	**prefx    0x61
   507E8:	0925      	st         al, @0x6109 <local_data+0xD>
     * Please note that this procedure requires all the
     * reads/writes to be made IRQ. If application wants
     * firmware to reply for some of the request, it shall
     * reply with "gatt_status_irq_proceed.
     */
    local_data.tid = TimerCreate(TGAP_CPC_PERIOD, TRUE, requestConnParamUpdate);
   507E9:	0027      	st         al, @(0x0, y)
   507EA:	0700      	**prefx    0x7
   507EB:	A414      	ld         al, #+0x6A4
   507EC:	0227      	st         al, @(+0x2, y)
   507ED:	0514      	ld         al, #+0x5
   507EE:	0127      	st         al, @(+0x1, y)
   507EF:	0F10      	ld         ah, #+0xF
   507F0:	4200      	**prefx    0x42
   507F1:	4014      	ld         al, #+0x4240
   507F2:	FC00      	**prefx    0xFC
   507F3:	E400      	**prefx    0xE4
   507F4:	3A9C      	bsr        -0x41BC6 <TimerCreate:0xEC2E[p]>
   507F5:	6100      	**prefx    0x61
   507F6:	FC25      	st         al, @0x60FC <local_data>
}
   507F7:	F90F      	leave      #-0x7

0x000507F8 <RequestConnParamsUpdate>:
 *
 *---------------------------------------------------------------------------*/
extern void RequestConnParamsUpdate(device_handle_id device_id,
                                    ble_con_params *new_params_1,
                                    ble_con_params *new_params_2)
{
   507F8:	F90B      	enter      #-0x7
   507F9:	0327      	st         al, @(+0x3, y)
   507FA:	0423      	st         ah, @(+0x4, y)
    
    if (local_data.tid != TIMER_INVALID)
   507FB:	6100      	**prefx    0x61
   507FC:	FC15      	ld         al, @0x60FC <local_data>
   507FD:	04F4      	beq        +0x4 <RequestConnParamsUpdate+0x9:0x50801[p]>
    {
        TimerDelete(local_data.tid);
   507FE:	FC00      	**prefx    0xFC
   507FF:	E400      	**prefx    0xE4
   50800:	239C      	bsr        -0x41BDD <TimerDelete:0xEC23[p]>
    }
    
    if(!processNewParams(device_id, new_params_1, new_params_2))
   50801:	0717      	ld         al, @(+0x7, y)
   50802:	0027      	st         al, @(0x0, y)
   50803:	0317      	ld         al, @(+0x3, y)
   50804:	0413      	ld         ah, @(+0x4, y)
   50805:	839C      	bsr        -0x7D <processNewParams:0x50788[p]>
   50806:	E199      	tst        @0xFFE1 <register al>
   50807:	18F4      	beq        +0x18 <RequestConnParamsUpdate+0x27:0x5081F[p]>
    {
        return;
    }

    local_data.num_retries      = MAX_RETRY;
   50808:	0314      	ld         al, #+0x3
   50809:	6100      	**prefx    0x61
   5080A:	0D25      	st         al, @0x610D <local_data+0x11>
    local_data.retries_left     = local_data.num_retries;
   5080B:	6100      	**prefx    0x61
   5080C:	0A25      	st         al, @0x610A <local_data+0xE>
    local_data.cpc_timer_active = FALSE;
   5080D:	0014      	ld         al, #+0x0
   5080E:	6100      	**prefx    0x61
   5080F:	0925      	st         al, @0x6109 <local_data+0xD>
     * Please note that this procedure requires all the
     * reads/writes to be made IRQ. If application wants
     * firmware to reply for some of the request, it shall
     * reply with "gatt_status_irq_proceed.
     */
    local_data.tid = TimerCreate(TGAP_CPP_PERIOD, TRUE,
   50810:	0114      	ld         al, #+0x1
   50811:	0027      	st         al, @(0x0, y)
   50812:	0700      	**prefx    0x7
   50813:	9014      	ld         al, #+0x690
   50814:	0227      	st         al, @(+0x2, y)
   50815:	0514      	ld         al, #+0x5
   50816:	0127      	st         al, @(+0x1, y)
   50817:	4C10      	ld         ah, #+0x4C
   50818:	4B00      	**prefx    0x4B
   50819:	4014      	ld         al, #+0x4B40
   5081A:	FC00      	**prefx    0xFC
   5081B:	E400      	**prefx    0xE4
   5081C:	129C      	bsr        -0x41BEE <TimerCreate:0xEC2E[p]>
   5081D:	6100      	**prefx    0x61
   5081E:	FC25      	st         al, @0x60FC <local_data>
                                             handleGapCppTimerExpiry);
}
   5081F:	F90F      	leave      #-0x7

0x00050820 <Nvm_Read_Secure_Key>:
 *
 *---------------------------------------------------------------------------*/

extern uint16* Nvm_Read_Secure_Key(void)
{
    if(secureKeyInfo.state == secureKey_key_available)
   50820:	6A00      	**prefx    0x6A
   50821:	3D15      	ld         al, @0x6A3D <secureKeyInfo+0xA>
   50822:	0584      	cmp        al, #+0x5
   50823:	03F4      	beq        +0x3 <Nvm_Read_Secure_Key+0x6:0x50826[p]>
   50824:	0014      	ld         al, #+0x0
   50825:	00E2      	bra        0x0, x
   50826:	6A00      	**prefx    0x6A
   50827:	3514      	ld         al, #+0x6A35
        return secureKeyInfo.secure_key;
    else
        return NULL;
}
   50828:	00E2      	bra        0x0, x

0x00050829 <Nvm_Init>:
 *  RETURNS/MODIFIES
 *      bool: TRUE if NVM is fresh, FALSE otherwise
 *
 *---------------------------------------------------------------------------*/
extern void Nvm_Init(store_id_t id, uint16 nvm_sanity, uint16 *nvm_offset)
{
   50829:	FE0B      	enter      #-0x2
   5082A:	021B      	ld         x, @(+0x2, y)
    g_nvm_sanity = nvm_sanity;
   5082B:	6100      	**prefx    0x61
   5082C:	1221      	st         ah, @0x6112 <g_nvm_sanity>
    g_nvm_offset = *nvm_offset;
   5082D:	001A      	ld         x, @(0x0, x)
   5082E:	6100      	**prefx    0x61
   5082F:	1329      	st         x, @0x6113 <g_nvm_offset>
	g_nvm_state = NVM_STATE_OPENING;
   50830:	0110      	ld         ah, #+0x1
   50831:	6100      	**prefx    0x61
   50832:	1021      	st         ah, @0x6110 <g_nvm_state>
	g_store_id = id;
   50833:	6100      	**prefx    0x61
   50834:	1425      	st         al, @0x6114 <g_store_id>
    secureKeyInfo.state = secureKey_init;
   50835:	0018      	ld         x, #+0x0
   50836:	6A00      	**prefx    0x6A
   50837:	3D29      	st         x, @0x6A3D <secureKeyInfo+0xA>
    secureKeyInfo.sanity_word = CSR_MESH_SEC_SANITY_MAGIC;
   50838:	6A00      	**prefx    0x6A
   50839:	3318      	ld         x, #+0x6A33
   5083A:	0010      	ld         ah, #+0x0
   5083B:	0022      	st         ah, @(0x0, x)
   5083C:	6010      	ld         ah, #+0x60
   5083D:	0122      	st         ah, @(+0x1, x)
#ifdef SECURE_STORE_ENABLE    
    Userstore_Open(NVM_MESH_SECURE_ID);
#else
    Userstore_Open(g_store_id);
#endif
}
   5083E:	001B      	ld         x, @(0x0, y)
   5083F:	023C      	add        y, #+0x2
    secureKeyInfo.state = secureKey_init;
    secureKeyInfo.sanity_word = CSR_MESH_SEC_SANITY_MAGIC;
#ifdef SECURE_STORE_ENABLE    
    Userstore_Open(NVM_MESH_SECURE_ID);
#else
    Userstore_Open(g_store_id);
   50840:	7900      	**prefx    0x79
   50841:	A4E0      	bra        +0x78A4 <Userstore_Open:0x580E5[p]>

0x00050842 <reportPanic>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void reportPanic(uint16 code)
{
    Panic(code);
   50842:	FC00      	**prefx    0xFC
   50843:	B400      	**prefx    0xB4
   50844:	18E0      	bra        -0x44BE8 <Panic:0xBC5C[p]>

0x00050845 <Nvm_Write>:
 *      Status of operation.
 *
 *----------------------------------------------------------------------------*/

extern void Nvm_Write(uint16* buffer, uint16 length, uint16 offset)
{
   50845:	FB0B      	enter      #-0x5
   50846:	0127      	st         al, @(+0x1, y)
   50847:	0223      	st         ah, @(+0x2, y)
    sys_status result;
    
    /* Disable radio event before doing NVM Write to avoid memory pools issue */
#if defined(CSR102x)
        CSRSchedDisableRadioEvent();
   50848:	5500      	**prefx    0x55
   50849:	299C      	bsr        +0x5529 <CSRSchedDisableRadioEvent:0x55D72[p]>
#endif

    /* NvmWrite automatically enables the NVM before writing */
    result = NvmWrite(buffer, length, offset);
   5084A:	0517      	ld         al, @(+0x5, y)
   5084B:	0027      	st         al, @(0x0, y)
   5084C:	0117      	ld         al, @(+0x1, y)
   5084D:	0213      	ld         ah, @(+0x2, y)
   5084E:	FC00      	**prefx    0xFC
   5084F:	B600      	**prefx    0xB6
   50850:	AC9C      	bsr        -0x44A54 <NvmWrite:0xBDFC[p]>

    /* Disable NVM after reading/writing */
    nvmDisable();

    /* If NvmWrite fails, report panic */
    if(sys_status_success != result)
   50851:	E199      	tst        @0xFFE1 <register al>
   50852:	03F4      	beq        +0x3 <Nvm_Write+0x10:0x50855[p]>
    {
        reportPanic(panic_nvm_write);
   50853:	6814      	ld         al, #+0x68
   50854:	EE9C      	bsr        -0x12 <reportPanic:0x50842[p]>
    }

    /* Enable radio event after NVM Write is done */
#if defined(CSR102x)
#if defined(GAIA_OTAU_SUPPORT) || defined(GAIA_OTAU_RELAY_SUPPORT)            
    if(!IsGaiaOtauInProgress())
   50855:	1600      	**prefx    0x16
   50856:	D19C      	bsr        +0x15D1 <IsGaiaOtauInProgress:0x51E27[p]>
   50857:	E199      	tst        @0xFFE1 <register al>
   50858:	03F0      	bne        +0x3 <Nvm_Write+0x16:0x5085B[p]>
#endif
    {
        CSRSchedEnableRadioEvent();
   50859:	5500      	**prefx    0x55
   5085A:	069C      	bsr        +0x5506 <CSRSchedEnableRadioEvent:0x55D60[p]>
    }
#endif
}
   5085B:	FB0F      	leave      #-0x5

0x0005085C <Nvm_Read>:
 *  Status of operation.
 *
 *---------------------------------------------------------------------------*/

extern void Nvm_Read(uint16* buffer, uint16 length, uint16 offset)
{
   5085C:	FD0B      	enter      #-0x3
    sys_status result;

    /* NvmRead automatically enables the NVM before reading */
    result = NvmRead(buffer, length, offset);
   5085D:	031B      	ld         x, @(+0x3, y)
   5085E:	002B      	st         x, @(0x0, y)
   5085F:	FC00      	**prefx    0xFC
   50860:	B500      	**prefx    0xB5
   50861:	669C      	bsr        -0x44A9A <NvmRead:0xBDC7[p]>

    /* Disable NVM after reading/writing */
    nvmDisable();

    /* If NvmRead fails, report panic */
    if(sys_status_success != result)
   50862:	E199      	tst        @0xFFE1 <register al>
   50863:	03F4      	beq        +0x3 <Nvm_Read+0xA:0x50866[p]>
    {
        reportPanic(panic_nvm_read);
   50864:	6714      	ld         al, #+0x67
   50865:	DD9C      	bsr        -0x23 <reportPanic:0x50842[p]>
    }
}
   50866:	FD0F      	leave      #-0x3

0x00050867 <NvmProcessEvent>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/

extern void NvmProcessEvent(msg_t *msg)
{
   50867:	F80B      	enter      #-0x8
   50868:	E119      	ld         x, @0xFFE1 <register al>
    userstore_msg_t *us_msg = (userstore_msg_t*)msg;
    switch(msg->header.id)
   50869:	0316      	ld         al, @(+0x3, x)
   5086A:	0D00      	**prefx    0xD
   5086B:	0584      	cmp        al, #+0xD05
   5086C:	0100      	**prefx    0x1
   5086D:	CBF4      	beq        +0xCB <NvmProcessEvent+0xD1:0x50938[p]>
   5086E:	0D00      	**prefx    0xD
   5086F:	0684      	cmp        al, #+0xD06
   50870:	07F8      	bcc        +0x7 <NvmProcessEvent+0x10:0x50877[p]>
   50871:	0D00      	**prefx    0xD
   50872:	0384      	cmp        al, #+0xD03
   50873:	0100      	**prefx    0x1
   50874:	F2F0      	bne        +0xF2 <NvmProcessEvent+0xFF:0x50966[p]>
   50875:	0100      	**prefx    0x1
   50876:	92E0      	bra        +0x92 <NvmProcessEvent+0xA1:0x50908[p]>
   50877:	0D00      	**prefx    0xD
   50878:	0784      	cmp        al, #+0xD07
   50879:	76F4      	beq        +0x76 <NvmProcessEvent+0x88:0x508EF[p]>
   5087A:	0D00      	**prefx    0xD
   5087B:	0B84      	cmp        al, #+0xD0B
   5087C:	0100      	**prefx    0x1
   5087D:	E9F0      	bne        +0xE9 <NvmProcessEvent+0xFF:0x50966[p]>
        case USER_STORE_OPEN_CFM:
        {
            userstore_open_cfm_t *open_cfm = (userstore_open_cfm_t*)&
                                             us_msg->body;

            if(g_nvm_state == NVM_STATE_OPENING && open_cfm->id == g_store_id)
   5087E:	6100      	**prefx    0x61
   5087F:	1015      	ld         al, @0x6110 <g_nvm_state>
   50880:	0184      	cmp        al, #+0x1
   50881:	4DF0      	bne        +0x4D <NvmProcessEvent+0x67:0x508CE[p]>
   50882:	0512      	ld         ah, @(+0x5, x)
   50883:	6100      	**prefx    0x61
   50884:	1481      	cmp        ah, @0x6114 <g_store_id>
   50885:	49F0      	bne        +0x49 <NvmProcessEvent+0x67:0x508CE[p]>
            {
                if(open_cfm->status == STATUS_SUCCESS)
   50886:	0416      	ld         al, @(+0x4, x)
   50887:	2AF0      	bne        +0x2A <NvmProcessEvent+0x4A:0x508B1[p]>
                {
                    /* Read the nvm sanity word */
                    g_nvm_state = NVM_STATE_INITIALISED;
   50888:	0314      	ld         al, #+0x3
   50889:	6100      	**prefx    0x61
   5088A:	1025      	st         al, @0x6110 <g_nvm_state>
                    nvmReadSanity(g_nvm_sanity, &g_nvm_offset);
   5088B:	6100      	**prefx    0x61
   5088C:	1219      	ld         x, @0x6112 <g_nvm_sanity>
   5088D:	052B      	st         x, @(+0x5, y)
 *
 *----------------------------------------------------------------------------*/
static void nvmReadSanity(uint16 nvm_sanity, uint16 *nvm_offset)
{
    /* Initialise the nvm sanity */
    uint16 sanity_word = 0xffff;
   5088E:	FF14      	ld         al, #-0x1
   5088F:	0327      	st         al, @(+0x3, y)

    /* Read NVM Sanity word */
    Nvm_Read(&sanity_word,
   50890:	6100      	**prefx    0x61
   50891:	1319      	ld         x, @0x6113 <g_nvm_offset>
   50892:	002B      	st         x, @(0x0, y)
   50893:	E415      	ld         al, @0xFFE4 <register uy>
   50894:	0334      	add        al, #+0x3
   50895:	0110      	ld         ah, #+0x1
   50896:	C69C      	bsr        -0x3A <Nvm_Read:0x5085C[p]>
             sizeof(sanity_word),
             NVM_OFFSET_SANITY_WORD + (*nvm_offset));

    /* If a valid NVM sanity word is found */
    if(sanity_word != nvm_sanity)
   50897:	0317      	ld         al, @(+0x3, y)
   50898:	0587      	cmp        al, @(+0x5, y)
   50899:	0DF4      	beq        +0xD <NvmProcessEvent+0x3F:0x508A6[p]>
    {
        sanity_word = nvm_sanity;
   5089A:	0517      	ld         al, @(+0x5, y)
   5089B:	0327      	st         al, @(+0x3, y)

        /* Write NVM Sanity word to the NVM */
        Nvm_Write(&sanity_word,
   5089C:	6100      	**prefx    0x61
   5089D:	1319      	ld         x, @0x6113 <g_nvm_offset>
   5089E:	002B      	st         x, @(0x0, y)
   5089F:	E415      	ld         al, @0xFFE4 <register uy>
   508A0:	0334      	add        al, #+0x3
   508A1:	0110      	ld         ah, #+0x1
   508A2:	A39C      	bsr        -0x5D <Nvm_Write:0x50845[p]>
                  sizeof(sanity_word),
                  NVM_OFFSET_SANITY_WORD + (*nvm_offset));

        /* NVM is fresh */
        g_nvm_fresh = TRUE;
   508A3:	0114      	ld         al, #+0x1
   508A4:	6100      	**prefx    0x61
   508A5:	1125      	st         al, @0x6111 <g_nvm_fresh>
    }

    /* increment the nvm offset */
    *nvm_offset += NVM_MAX_MEMORY_WORDS;
   508A6:	6100      	**prefx    0x61
   508A7:	1311      	ld         ah, @0x6113 <g_nvm_offset>
   508A8:	0130      	add        ah, #+0x1
   508A9:	6100      	**prefx    0x61
   508AA:	1321      	st         ah, @0x6113 <g_nvm_offset>

    /* Invoke the application callback */
    AppNvmReady(g_nvm_fresh, *nvm_offset);
   508AB:	6100      	**prefx    0x61
   508AC:	1115      	ld         al, @0x6111 <g_nvm_fresh>
   508AD:	3200      	**prefx    0x32
   508AE:	C99C      	bsr        +0x31C9 <AppNvmReady:0x53A77[p]>
   508AF:	0100      	**prefx    0x1
   508B0:	B6E0      	bra        +0xB6 <NvmProcessEvent+0xFF:0x50966[p]>
                {
                    /* Read the nvm sanity word */
                    g_nvm_state = NVM_STATE_INITIALISED;
                    nvmReadSanity(g_nvm_sanity, &g_nvm_offset);
                }
                else if(open_cfm->status == sys_status_no_store)
   508B1:	0C00      	**prefx    0xC
   508B2:	1384      	cmp        al, #+0xC13
   508B3:	3AF0      	bne        +0x3A <NvmProcessEvent+0x86:0x508ED[p]>
                {
                    g_nvm_state = NVM_STATE_CREATING;
   508B4:	0218      	ld         x, #+0x2
   508B5:	6100      	**prefx    0x61
   508B6:	1029      	st         x, @0x6110 <g_nvm_state>
                    if (g_nvm_type == MEM_DEVICE_SMEM)
   508B7:	6100      	**prefx    0x61
   508B8:	B815      	ld         al, @0x60B8 <g_nvm_type>
   508B9:	0284      	cmp        al, #+0x2
   508BA:	09F0      	bne        +0x9 <NvmProcessEvent+0x5C:0x508C3[p]>
                    {
                       Userstore_Create(g_store_id, USER_STORE_NVM_SIZE, 8192, MEM_DEVICE_SMEM);
   508BB:	2000      	**prefx    0x20
   508BC:	0014      	ld         al, #+0x2000
   508BD:	0027      	st         al, @(0x0, y)
   508BE:	012B      	st         x, @(+0x1, y)
   508BF:	E015      	ld         al, @0xFFE0 <register ah>
   508C0:	0400      	**prefx    0x4
   508C1:	0010      	ld         ah, #+0x400
   508C2:	08E0      	bra        +0x8 <NvmProcessEvent+0x63:0x508CA[p]>
                    }
					else
					{
					    Userstore_Create(g_store_id, 128, 128, MEM_DEVICE_MTP);
   508C3:	0100      	**prefx    0x1
   508C4:	8018      	ld         x, #+0x80
   508C5:	002B      	st         x, @(0x0, y)
   508C6:	0414      	ld         al, #+0x4
   508C7:	0127      	st         al, @(+0x1, y)
   508C8:	E015      	ld         al, @0xFFE0 <register ah>
   508C9:	E311      	ld         ah, @0xFFE3 <register uxl>
   508CA:	7800      	**prefx    0x78
   508CB:	019C      	bsr        +0x7801 <Userstore_Create:0x580CC[p]>
   508CC:	0100      	**prefx    0x1
   508CD:	99E0      	bra        +0x99 <NvmProcessEvent+0xFF:0x50966[p]>
                {
                    /* User store open failed */
                    reportPanic(panic_nvm_open);
                }
            }
            else if(open_cfm->id == NVM_MESH_SECURE_ID && 
   508CE:	0516      	ld         al, @(+0x5, x)
   508CF:	0484      	cmp        al, #+0x4
   508D0:	0100      	**prefx    0x1
   508D1:	95F0      	bne        +0x95 <NvmProcessEvent+0xFF:0x50966[p]>
   508D2:	6A00      	**prefx    0x6A
   508D3:	3D99      	tst        @0x6A3D <secureKeyInfo+0xA>
   508D4:	0100      	**prefx    0x1
   508D5:	91F0      	bne        +0x91 <NvmProcessEvent+0xFF:0x50966[p]>
                (secureKeyInfo.state == secureKey_init))
            {                
                if(open_cfm->status == STATUS_SUCCESS)
   508D6:	0416      	ld         al, @(+0x4, x)
   508D7:	0CF0      	bne        +0xC <NvmProcessEvent+0x7C:0x508E3[p]>
                {
                    /* Read the nvm sanity word */
                    secureKeyInfo.state = secureKey_sanity_read;
   508D8:	0118      	ld         x, #+0x1
   508D9:	6A00      	**prefx    0x6A
   508DA:	3D29      	st         x, @0x6A3D <secureKeyInfo+0xA>

                    Userstore_Read(	NVM_MESH_SECURE_ID,
   508DB:	0214      	ld         al, #+0x2
   508DC:	0127      	st         al, @(+0x1, y)
   508DD:	6A00      	**prefx    0x6A
   508DE:	3318      	ld         x, #+0x6A33
   508DF:	022B      	st         x, @(+0x2, y)
   508E0:	0014      	ld         al, #+0x0
   508E1:	0027      	st         al, @(0x0, y)
   508E2:	4DE0      	bra        +0x4D <NvmProcessEvent+0xC8:0x5092F[p]>
                                    0x0000,
                                    2,
                                    (uint16 *)&secureKeyInfo.sanity_word);
                }
                else if(open_cfm->status == sys_status_no_store)
   508E3:	0C00      	**prefx    0xC
   508E4:	1384      	cmp        al, #+0xC13
   508E5:	08F0      	bne        +0x8 <NvmProcessEvent+0x86:0x508ED[p]>
                {
                    /* 4words has to be reserved for header */
                    Userstore_Create(NVM_MESH_SECURE_ID, 18, 18, MEM_DEVICE_OTP); 
   508E6:	1218      	ld         x, #+0x12
   508E7:	002B      	st         x, @(0x0, y)
   508E8:	0114      	ld         al, #+0x1
   508E9:	0127      	st         al, @(+0x1, y)
   508EA:	0414      	ld         al, #+0x4
   508EB:	1210      	ld         ah, #+0x12
   508EC:	DEE0      	bra        -0x22 <NvmProcessEvent+0x63:0x508CA[p]>
                    /* Userstore_Create(NVM_MESH_SECURE_ID, 512, 4096, MEM_DEVICE_SMEM); */
                }
                else
                {
                    /* User store open failed */
                    reportPanic(panic_nvm_open);
   508ED:	6514      	ld         al, #+0x65
   508EE:	17E0      	bra        +0x17 <NvmProcessEvent+0x9E:0x50905[p]>

        case USER_STORE_CREATE_CFM:
        {
            userstore_create_cfm_t *create_cfm = 
                    (userstore_create_cfm_t*)&us_msg->body;
            if(g_nvm_state == NVM_STATE_CREATING && create_cfm->id == g_store_id)
   508EF:	6100      	**prefx    0x61
   508F0:	1015      	ld         al, @0x6110 <g_nvm_state>
   508F1:	0284      	cmp        al, #+0x2
   508F2:	0DF0      	bne        +0xD <NvmProcessEvent+0x98:0x508FF[p]>
   508F3:	0616      	ld         al, @(+0x6, x)
   508F4:	6100      	**prefx    0x61
   508F5:	1485      	cmp        al, @0x6114 <g_store_id>
   508F6:	09F0      	bne        +0x9 <NvmProcessEvent+0x98:0x508FF[p]>
            {
                if(create_cfm->status == STATUS_SUCCESS)
   508F7:	049A      	tst        @(+0x4, x)
   508F8:	0CF0      	bne        +0xC <NvmProcessEvent+0x9D:0x50904[p]>
                {
                    g_nvm_fresh = TRUE;
   508F9:	0118      	ld         x, #+0x1
   508FA:	6100      	**prefx    0x61
   508FB:	1129      	st         x, @0x6111 <g_nvm_fresh>
                    g_nvm_state = NVM_STATE_OPENING;
   508FC:	6100      	**prefx    0x61
   508FD:	1029      	st         x, @0x6110 <g_nvm_state>
   508FE:	66E0      	bra        +0x66 <NvmProcessEvent+0xFD:0x50964[p]>
                else
                {
                    reportPanic(panic_nvm_create);
                }
            }
            else if(create_cfm->id == NVM_MESH_SECURE_ID)
   508FF:	0616      	ld         al, @(+0x6, x)
   50900:	0484      	cmp        al, #+0x4
   50901:	65F0      	bne        +0x65 <NvmProcessEvent+0xFF:0x50966[p]>
            {            
                if(create_cfm->status == STATUS_SUCCESS)
   50902:	049A      	tst        @(+0x4, x)
   50903:	61F4      	beq        +0x61 <NvmProcessEvent+0xFD:0x50964[p]>
                {
                    Userstore_Open(NVM_MESH_SECURE_ID);
                }
                else
                {
                    reportPanic(panic_nvm_create);
   50904:	6614      	ld         al, #+0x66
   50905:	FF00      	**prefx    0xFF
   50906:	3C9C      	bsr        -0xC4 <reportPanic:0x50842[p]>
   50907:	5FE0      	bra        +0x5F <NvmProcessEvent+0xFF:0x50966[p]>
        case USER_STORE_READ_CFM:
        {
            userstore_read_cfm_t *read_cfm = 
                    (userstore_read_cfm_t*)&us_msg->body;

            if(read_cfm->status == STATUS_SUCCESS)
   50908:	049A      	tst        @(+0x4, x)
   50909:	2DF0      	bne        +0x2D <NvmProcessEvent+0xCF:0x50936[p]>
            {
                switch(secureKeyInfo.state)
   5090A:	6A00      	**prefx    0x6A
   5090B:	3D15      	ld         al, @0x6A3D <secureKeyInfo+0xA>
   5090C:	0184      	cmp        al, #+0x1
   5090D:	04F4      	beq        +0x4 <NvmProcessEvent+0xAA:0x50911[p]>
   5090E:	0384      	cmp        al, #+0x3
   5090F:	57F0      	bne        +0x57 <NvmProcessEvent+0xFF:0x50966[p]>
   50910:	24E0      	bra        +0x24 <NvmProcessEvent+0xCD:0x50934[p]>
                {
                    case secureKey_sanity_read:
                    {
                        if(*((read_cfm->data) + 1) != CSR_MESH_SEC_SANITY_MAGIC)
   50911:	061A      	ld         x, @(+0x6, x)
   50912:	0116      	ld         al, @(+0x1, x)
   50913:	6084      	cmp        al, #+0x60
   50914:	11F4      	beq        +0x11 <NvmProcessEvent+0xBE:0x50925[p]>
                        {                            
                            secureKeyInfo.state = secureKey_sanity_write;
   50915:	0214      	ld         al, #+0x2
   50916:	6A00      	**prefx    0x6A
   50917:	3D25      	st         al, @0x6A3D <secureKeyInfo+0xA>
                            secureKeyInfo.sanity_word = CSR_MESH_SEC_SANITY_MAGIC;
   50918:	6A00      	**prefx    0x6A
   50919:	3318      	ld         x, #+0x6A33
   5091A:	0014      	ld         al, #+0x0
   5091B:	6A00      	**prefx    0x6A
   5091C:	3325      	st         al, @0x6A33 <secureKeyInfo>
   5091D:	6014      	ld         al, #+0x60
   5091E:	0126      	st         al, @(+0x1, x)
                            
                            Userstore_Write(NVM_MESH_SECURE_ID, 0x0000, 2, (uint16 *)&secureKeyInfo.sanity_word);
   5091F:	0214      	ld         al, #+0x2
   50920:	0127      	st         al, @(+0x1, y)
   50921:	022B      	st         x, @(+0x2, y)
   50922:	0018      	ld         x, #+0x0
   50923:	002B      	st         x, @(0x0, y)
   50924:	30E0      	bra        +0x30 <NvmProcessEvent+0xED:0x50954[p]>
                        } 
                        else
                        {
                            secureKeyInfo.state = secureKey_key_read;
   50925:	0314      	ld         al, #+0x3
   50926:	6A00      	**prefx    0x6A
   50927:	3D25      	st         al, @0x6A3D <secureKeyInfo+0xA>

                            Userstore_Read(	NVM_MESH_SECURE_ID,
   50928:	0818      	ld         x, #+0x8
   50929:	012B      	st         x, @(+0x1, y)
   5092A:	6A00      	**prefx    0x6A
   5092B:	3514      	ld         al, #+0x6A35
   5092C:	0227      	st         al, @(+0x2, y)
   5092D:	0218      	ld         x, #+0x2
   5092E:	002B      	st         x, @(0x0, y)
   5092F:	0010      	ld         ah, #+0x0
   50930:	0414      	ld         al, #+0x4
   50931:	7700      	**prefx    0x77
   50932:	799C      	bsr        +0x7779 <Userstore_Read:0x580AB[p]>
   50933:	33E0      	bra        +0x33 <NvmProcessEvent+0xFF:0x50966[p]>
                    }
                    break;

                    case secureKey_key_read:
                    {
                        secureKeyInfo.state = secureKey_key_available;
   50934:	0514      	ld         al, #+0x5
   50935:	2BE0      	bra        +0x2B <NvmProcessEvent+0xF9:0x50960[p]>
                    break;
                }
            }
            else
            {
                secureKeyInfo.state = secureKey_key_unavailable;
   50936:	0618      	ld         x, #+0x6
   50937:	25E0      	bra        +0x25 <NvmProcessEvent+0xF5:0x5095C[p]>
        case USER_STORE_WRITE_CFM:
        {
            userstore_write_cfm_t *write_cfm = 
                    (userstore_write_cfm_t*)&us_msg->body;

            if(write_cfm->status == STATUS_SUCCESS)
   50938:	049A      	tst        @(+0x4, x)
   50939:	26F0      	bne        +0x26 <NvmProcessEvent+0xF8:0x5095F[p]>
            {
                if(secureKeyInfo.state == secureKey_sanity_write)
   5093A:	6A00      	**prefx    0x6A
   5093B:	3D15      	ld         al, @0x6A3D <secureKeyInfo+0xA>
   5093C:	0284      	cmp        al, #+0x2
   5093D:	1CF0      	bne        +0x1C <NvmProcessEvent+0xF2:0x50959[p]>
                {                
                    secureKeyInfo.state = secureKey_key_write;
   5093E:	0414      	ld         al, #+0x4
   5093F:	6A00      	**prefx    0x6A
   50940:	3D25      	st         al, @0x6A3D <secureKeyInfo+0xA>
   50941:	0018      	ld         x, #+0x0
   50942:	042B      	st         x, @(+0x4, y)
                    
                    uint16 i;

                    for(i=0; i<8; i++)
                    {
                        secureKeyInfo.secure_key[i] = Random16();
   50943:	FB00      	**prefx    0xFB
   50944:	7A00      	**prefx    0x7A
   50945:	259C      	bsr        -0x485DB <Random16:0x836A[p]>
   50946:	041B      	ld         x, @(+0x4, y)
   50947:	6A00      	**prefx    0x6A
   50948:	3526      	st         al, @(+0x6A35, x)
                {                
                    secureKeyInfo.state = secureKey_key_write;
                    
                    uint16 i;

                    for(i=0; i<8; i++)
   50949:	0138      	add        x, #+0x1
   5094A:	042B      	st         x, @(+0x4, y)
   5094B:	0888      	cmp        x, #+0x8
   5094C:	F7F0      	bne        -0x9 <NvmProcessEvent+0xDC:0x50943[p]>
                    {
                        secureKeyInfo.secure_key[i] = Random16();
                    }

                    Userstore_Write(NVM_MESH_SECURE_ID, 0x0002, 8, secureKeyInfo.secure_key);
   5094D:	0814      	ld         al, #+0x8
   5094E:	0127      	st         al, @(+0x1, y)
   5094F:	6A00      	**prefx    0x6A
   50950:	3518      	ld         x, #+0x6A35
   50951:	022B      	st         x, @(+0x2, y)
   50952:	0214      	ld         al, #+0x2
   50953:	0027      	st         al, @(0x0, y)
   50954:	0010      	ld         ah, #+0x0
   50955:	0414      	ld         al, #+0x4
   50956:	7700      	**prefx    0x77
   50957:	339C      	bsr        +0x7733 <Userstore_Write:0x5808A[p]>
   50958:	0EE0      	bra        +0xE <NvmProcessEvent+0xFF:0x50966[p]>
                }
                else if(secureKeyInfo.state == secureKey_key_write)
   50959:	0484      	cmp        al, #+0x4
   5095A:	0CF0      	bne        +0xC <NvmProcessEvent+0xFF:0x50966[p]>
                {
                    secureKeyInfo.state = secureKey_key_available;
   5095B:	0518      	ld         x, #+0x5
   5095C:	6A00      	**prefx    0x6A
   5095D:	3D29      	st         x, @0x6A3D <secureKeyInfo+0xA>
   5095E:	04E0      	bra        +0x4 <NvmProcessEvent+0xFB:0x50962[p]>
                    Userstore_Open(g_store_id);
                }
            }
            else
            {
                secureKeyInfo.state = secureKey_key_unavailable;
   5095F:	0614      	ld         al, #+0x6
   50960:	6A00      	**prefx    0x6A
   50961:	3D25      	st         al, @0x6A3D <secureKeyInfo+0xA>

                /* Abort the secure key update procedure, 
                   and proceed with nvm initialize procedure */
                Userstore_Open(g_store_id);
   50962:	6100      	**prefx    0x61
   50963:	1415      	ld         al, @0x6114 <g_store_id>
   50964:	7800      	**prefx    0x78
   50965:	809C      	bsr        +0x7780 <Userstore_Open:0x580E5[p]>
        break;

        default:
        break;
    }
}
   50966:	F80F      	leave      #-0x8

0x00050967 <CMIsAddressResolvableRandom>:
 *      bool - TRUE if the Bluetooth address is resolvable random
 *
 *----------------------------------------------------------------------------*/

extern bool CMIsAddressResolvableRandom(TYPED_BD_ADDR_T *bd_addr)
{
   50967:	FE0B      	enter      #-0x2
   50968:	E119      	ld         x, @0xFFE1 <register al>
    if (bd_addr->type != L2CA_RANDOM_ADDR_TYPE ||
   50969:	0016      	ld         al, @(0x0, x)
   5096A:	0184      	cmp        al, #+0x1
   5096B:	03F4      	beq        +0x3 <CMIsAddressResolvableRandom+0x7:0x5096E[p]>
   5096C:	0010      	ld         ah, #+0x0
   5096D:	09E0      	bra        +0x9 <CMIsAddressResolvableRandom+0xF:0x50976[p]>
   5096E:	0010      	ld         ah, #+0x0
   5096F:	0416      	ld         al, @(+0x4, x)
   50970:	C000      	**prefx    0xC0
   50971:	00C4      	and        al, #0xC000
   50972:	4000      	**prefx    0x40
   50973:	0084      	cmp        al, #+0x4000
   50974:	02F0      	bne        +0x2 <CMIsAddressResolvableRandom+0xF:0x50976[p]>
   50975:	0110      	ld         ah, #+0x1
    {
        /* This isn't a resolvable private address... */
        return FALSE;
    }
    return TRUE;
}
   50976:	E015      	ld         al, @0xFFE0 <register ah>
   50977:	FE0F      	leave      #-0x2

0x00050978 <CMSignalNumberOfCompletedPackets>:
 *  RETURNS/MODIFIES
 *      none
 *
 *----------------------------------------------------------------------------*/
extern void CMSignalNumberOfCompletedPackets(void)
{
   50978:	FE0B      	enter      #-0x2
    CM_MAIN_DATA_T* cm_main_data = CMGetMainData();
   50979:	0300      	**prefx    0x3
   5097A:	2D9C      	bsr        +0x32D <CMGetMainData:0x50CA7[p]>
   5097B:	E119      	ld         x, @0xFFE1 <register al>
    cm_main_data->num_completed_packets_enabled = TRUE;
   5097C:	0114      	ld         al, #+0x1
   5097D:	0326      	st         al, @(+0x3, x)
}
   5097E:	FE0F      	leave      #-0x2

0x0005097F <CMGetDeviceBondState>:
 *  RETURNS
 *      cm_dev_bond_state: cm_dev_bonded if the device is bonded
 *
 *---------------------------------------------------------------------------*/
extern cm_dev_bond_state CMGetDeviceBondState(device_handle_id device_id)
{
   5097F:	FD0B      	enter      #-0x3
   50980:	0027      	st         al, @(0x0, y)
    CM_MAIN_DATA_T* cm_main_data = CMGetMainData();
   50981:	0300      	**prefx    0x3
   50982:	259C      	bsr        +0x325 <CMGetMainData:0x50CA7[p]>
   50983:	E119      	ld         x, @0xFFE1 <register al>
   50984:	0017      	ld         al, @(0x0, y)
   50985:	0E90      	smult      #+0xE
   50986:	0136      	add        al, @(+0x1, x)
   50987:	E119      	ld         x, @0xFFE1 <register al>
   50988:	0D16      	ld         al, @(+0xD, x)

    return cm_main_data->cm_conn_info[device_id].bond_state;
}
   50989:	FD0F      	leave      #-0x3

0x0005098A <CMEnableEarlyWakeup>:
 *      ls_err error code
 *
 *----------------------------------------------------------------------------*/

extern ls_err CMEnableEarlyWakeup(device_handle_id device_id, uint16 interval)
{
   5098A:	FD0B      	enter      #-0x3
   5098B:	0023      	st         ah, @(0x0, y)
    return LsEnableEarlyWakeup(CMGetConnId(device_id), interval);
   5098C:	0300      	**prefx    0x3
   5098D:	7E9C      	bsr        +0x37E <CMGetConnId:0x50D0B[p]>
   5098E:	0013      	ld         ah, @(0x0, y)
   5098F:	FB00      	**prefx    0xFB
   50990:	3100      	**prefx    0x31
   50991:	029C      	bsr        -0x4CEFE <LsEnableEarlyWakeup:0x3A93[p]>
}
   50992:	FD0F      	leave      #-0x3

0x00050993 <CMReadRssi>:
 *  RETURNS/MODIFIES
 *      ls_err error code
 *
 *----------------------------------------------------------------------------*/
extern ls_err CMReadRssi(device_handle_id device_id,int8* rssi)
{
   50993:	FD0B      	enter      #-0x3
   50994:	0023      	st         ah, @(0x0, y)
    ls_err result;
    uint16 cid = CMGetConnId(device_id);
   50995:	0300      	**prefx    0x3
   50996:	759C      	bsr        +0x375 <CMGetConnId:0x50D0B[p]>
    result = LsReadRssi(cid,rssi);
   50997:	0013      	ld         ah, @(0x0, y)
   50998:	7100      	**prefx    0x71
   50999:	DE9C      	bsr        +0x70DE <LsReadRssi:0x57A77[p]>
    return result;
}
   5099A:	FD0F      	leave      #-0x3

0x0005099B <CMConfigureRadioEvent>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void CMConfigureRadioEvent(CM_REQ_RADIO_EVENT_T* cm_radio_event)
{
   5099B:	FD0B      	enter      #-0x3
   5099C:	0027      	st         al, @(0x0, y)
    uint16 cid = CMGetConnId(cm_radio_event->device_id);
   5099D:	E119      	ld         x, @0xFFE1 <register al>
   5099E:	0016      	ld         al, @(0x0, x)
   5099F:	0300      	**prefx    0x3
   509A0:	6B9C      	bsr        +0x36B <CMGetConnId:0x50D0B[p]>

    /* Enable or Disable Radio Tx events. */
    LsRadioEventNotification(cid,cm_radio_event->event_type);
   509A1:	001B      	ld         x, @(0x0, y)
   509A2:	0112      	ld         ah, @(+0x1, x)
   509A3:	FB00      	**prefx    0xFB
   509A4:	3100      	**prefx    0x31
   509A5:	F09C      	bsr        -0x4CF10 <LsRadioEventNotification:0x3A95[p]>
}
   509A6:	FD0F      	leave      #-0x3

0x000509A7 <CMGetDevConnParam>:
 *      bool: if the request is successful
 *
 *---------------------------------------------------------------------------*/
extern bool CMGetDevConnParam(device_handle_id device_id,
                              CM_DEV_CONN_PARAM_T *conn_params)
{
   509A7:	FB0B      	enter      #-0x5
   509A8:	0127      	st         al, @(+0x1, y)
   509A9:	0223      	st         ah, @(+0x2, y)
    CM_MAIN_DATA_T* cm_main_data = CMGetMainData();
   509AA:	0300      	**prefx    0x3
   509AB:	FC9C      	bsr        +0x2FC <CMGetMainData:0x50CA7[p]>
   509AC:	0027      	st         al, @(0x0, y)

    if(!CMIsDeviceIdValid(device_id))
   509AD:	0117      	ld         al, @(+0x1, y)
   509AE:	0300      	**prefx    0x3
   509AF:	389C      	bsr        +0x338 <CMIsDeviceIdValid:0x50CE7[p]>
   509B0:	E199      	tst        @0xFFE1 <register al>
   509B1:	0CF4      	beq        +0xC <CMGetDevConnParam+0x16:0x509BD[p]>
    {
        return FALSE;
    }

    *conn_params = cm_main_data->cm_conn_info[device_id].conn_param;
   509B2:	0117      	ld         al, @(+0x1, y)
   509B3:	0E90      	smult      #+0xE
   509B4:	001B      	ld         x, @(0x0, y)
   509B5:	0136      	add        al, @(+0x1, x)
   509B6:	F825      	st         al, @0xFFF8 <(scratchpad)>
   509B7:	0314      	ld         al, #+0x3
   509B8:	0213      	ld         ah, @(+0x2, y)
   509B9:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   509BA:	0138      	add        x, #+0x1
   509BB:	FD09      	bc2        
   509BC:	0114      	ld         al, #+0x1

    return TRUE;
}
   509BD:	FB0F      	leave      #-0x5

0x000509BE <CMGetPeerDeviceRole>:
 *  RETURNS
 *      peer_con_role: Role of the peer device
 *
 *---------------------------------------------------------------------------*/
extern cm_peer_con_role CMGetPeerDeviceRole(device_handle_id device_id)
{
   509BE:	FC0B      	enter      #-0x4
   509BF:	0127      	st         al, @(+0x1, y)
    CM_MAIN_DATA_T* cm_main_data = CMGetMainData();
   509C0:	0300      	**prefx    0x3
   509C1:	E69C      	bsr        +0x2E6 <CMGetMainData:0x50CA7[p]>
   509C2:	0027      	st         al, @(0x0, y)

    if(!CMIsDeviceIdValid(device_id))
   509C3:	0117      	ld         al, @(+0x1, y)
   509C4:	0300      	**prefx    0x3
   509C5:	229C      	bsr        +0x322 <CMIsDeviceIdValid:0x50CE7[p]>
   509C6:	E199      	tst        @0xFFE1 <register al>
   509C7:	03F0      	bne        +0x3 <CMGetPeerDeviceRole+0xC:0x509CA[p]>
   509C8:	0414      	ld         al, #+0x4
   509C9:	07E0      	bra        +0x7 <CMGetPeerDeviceRole+0x12:0x509D0[p]>
    {
        return dev_state_unknown;
    }

    return cm_main_data->cm_conn_info[device_id].peer_con_role;
   509CA:	0117      	ld         al, @(+0x1, y)
   509CB:	0E90      	smult      #+0xE
   509CC:	001B      	ld         x, @(0x0, y)
   509CD:	0136      	add        al, @(+0x1, x)
   509CE:	E119      	ld         x, @0xFFE1 <register al>
   509CF:	0C16      	ld         al, @(+0xC, x)
}
   509D0:	FC0F      	leave      #-0x4

0x000509D1 <CMGetDevState>:
 *  RETURNS
 *      cm_dev_state: dev_state_connected if the device is connected
 *
 *---------------------------------------------------------------------------*/
extern cm_dev_state CMGetDevState(device_handle_id device_id)
{
   509D1:	FC0B      	enter      #-0x4
   509D2:	0127      	st         al, @(+0x1, y)
    CM_MAIN_DATA_T* cm_main_data = CMGetMainData();
   509D3:	0300      	**prefx    0x3
   509D4:	D39C      	bsr        +0x2D3 <CMGetMainData:0x50CA7[p]>
   509D5:	0027      	st         al, @(0x0, y)

    if(!CMIsDeviceIdValid(device_id))
   509D6:	0117      	ld         al, @(+0x1, y)
   509D7:	0300      	**prefx    0x3
   509D8:	0F9C      	bsr        +0x30F <CMIsDeviceIdValid:0x50CE7[p]>
   509D9:	E199      	tst        @0xFFE1 <register al>
   509DA:	03F0      	bne        +0x3 <CMGetDevState+0xC:0x509DD[p]>
   509DB:	0414      	ld         al, #+0x4
   509DC:	07E0      	bra        +0x7 <CMGetDevState+0x12:0x509E3[p]>
    {
        return dev_state_unknown;
    }

    return cm_main_data->cm_conn_info[device_id].device_state;
   509DD:	0117      	ld         al, @(+0x1, y)
   509DE:	0E90      	smult      #+0xE
   509DF:	001B      	ld         x, @(0x0, y)
   509E0:	0136      	add        al, @(+0x1, x)
   509E1:	E119      	ld         x, @0xFFE1 <register al>
   509E2:	0B16      	ld         al, @(+0xB, x)
}
   509E3:	FC0F      	leave      #-0x4

0x000509E4 <CMConnectionUpdateSignalingRsp>:
 *---------------------------------------------------------------------------*/
extern void CMConnectionUpdateSignalingRsp(device_handle_id device_id,
                                            uint16  sig_identifier,
                                            bool    accepted)
{
    HALConnectionUpdateSignallingRsp(device_id, sig_identifier, accepted);
   509E4:	0200      	**prefx    0x2
   509E5:	8AE0      	bra        +0x18A <HALConnectionUpdateSignallingRsp:0x50B6F[p]>

0x000509E6 <CMConnParamUpdateReq>:
 *
 *---------------------------------------------------------------------------*/
extern cm_status_code CMConnParamUpdateReq(device_handle_id device_id,
                              ble_con_params *new_params)
{
    return HALConnectionParamUpdateReq(device_id, new_params);
   509E6:	0200      	**prefx    0x2
   509E7:	92E0      	bra        +0x192 <HALConnectionParamUpdateReq:0x50B79[p]>

0x000509E8 <CMGetBdAdressFromDeviceId>:
 *      bool: TRUE if the request is processed
 *
 *---------------------------------------------------------------------------*/
extern bool CMGetBdAdressFromDeviceId(device_handle_id device_id,
                                             TYPED_BD_ADDR_T *bd_addr)
{
   509E8:	FB0B      	enter      #-0x5
   509E9:	0127      	st         al, @(+0x1, y)
   509EA:	0223      	st         ah, @(+0x2, y)
    CM_MAIN_DATA_T* cm_main_data = CMGetMainData();
   509EB:	0300      	**prefx    0x3
   509EC:	BB9C      	bsr        +0x2BB <CMGetMainData:0x50CA7[p]>
   509ED:	0027      	st         al, @(0x0, y)

    if(!CMIsDeviceIdValid(device_id))
   509EE:	0117      	ld         al, @(+0x1, y)
   509EF:	0300      	**prefx    0x3
   509F0:	F79C      	bsr        +0x2F7 <CMIsDeviceIdValid:0x50CE7[p]>
   509F1:	E199      	tst        @0xFFE1 <register al>
   509F2:	0CF4      	beq        +0xC <CMGetBdAdressFromDeviceId+0x16:0x509FE[p]>
    {
        return FALSE;
    }

    MemCopy(bd_addr, &cm_main_data->cm_conn_info[device_id].remote_bd_addr,
   509F3:	0117      	ld         al, @(+0x1, y)
   509F4:	0E90      	smult      #+0xE
   509F5:	001B      	ld         x, @(0x0, y)
   509F6:	0136      	add        al, @(+0x1, x)
   509F7:	0634      	add        al, #+0x6
   509F8:	F825      	st         al, @0xFFF8 <(scratchpad)>
   509F9:	0514      	ld         al, #+0x5
   509FA:	0213      	ld         ah, @(+0x2, y)
   509FB:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   509FC:	FD09      	bc2        
   509FD:	0114      	ld         al, #+0x1
            sizeof(TYPED_BD_ADDR_T));

    return TRUE;
}
   509FE:	FB0F      	leave      #-0x5

0x000509FF <CMGetBondIdFromDeviceId>:
 *      bond_handle_id: Index in the bonded device list
 *
 *---------------------------------------------------------------------------*/

extern bond_handle_id CMGetBondIdFromDeviceId(device_handle_id device_id)
{
   509FF:	FD0B      	enter      #-0x3
   50A00:	0027      	st         al, @(0x0, y)
    CM_MAIN_DATA_T* cm_main_data;
    cm_main_data = CMGetMainData();
   50A01:	0300      	**prefx    0x3
   50A02:	A59C      	bsr        +0x2A5 <CMGetMainData:0x50CA7[p]>
   50A03:	E119      	ld         x, @0xFFE1 <register al>

    if(cm_main_data->cm_conn_info[device_id].bond_state == cm_dev_bonded)
   50A04:	0017      	ld         al, @(0x0, y)
   50A05:	0E90      	smult      #+0xE
   50A06:	0136      	add        al, @(+0x1, x)
   50A07:	F825      	st         al, @0xFFF8 <(scratchpad)>
   50A08:	E119      	ld         x, @0xFFE1 <register al>
   50A09:	0D16      	ld         al, @(+0xD, x)
   50A0A:	0284      	cmp        al, #+0x2
   50A0B:	03F4      	beq        +0x3 <CMGetBondIdFromDeviceId+0xF:0x50A0E[p]>
   50A0C:	FF14      	ld         al, #-0x1
   50A0D:	05E0      	bra        +0x5 <CMGetBondIdFromDeviceId+0x13:0x50A12[p]>
    {
        return CMGetBondId(
   50A0E:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   50A0F:	0634      	add        al, #+0x6
   50A10:	0600      	**prefx    0x6
   50A11:	6A9C      	bsr        +0x66A <CMGetBondId:0x5107B[p]>
                &cm_main_data->cm_conn_info[device_id].remote_bd_addr);
    }

    return CM_INVALID_BOND_ID;
}
   50A12:	FD0F      	leave      #-0x3

0x00050A13 <CMDisconnect>:
 *  RETURNS/MODIFIES
 *      cm_status_code: cm_status_success if the request is processed
 *
 *----------------------------------------------------------------------------*/
extern cm_status_code CMDisconnect(device_handle_id device_id)
{
   50A13:	FD0B      	enter      #-0x3
   50A14:	0027      	st         al, @(0x0, y)
    if(CMIsDeviceIdValid(device_id))
   50A15:	0300      	**prefx    0x3
   50A16:	D19C      	bsr        +0x2D1 <CMIsDeviceIdValid:0x50CE7[p]>
   50A17:	E199      	tst        @0xFFE1 <register al>
   50A18:	03F0      	bne        +0x3 <CMDisconnect+0x8:0x50A1B[p]>
   50A19:	0114      	ld         al, #+0x1
   50A1A:	06E0      	bra        +0x6 <CMDisconnect+0xD:0x50A20[p]>
    {
        CMSetDevState(device_id, dev_state_disconnecting);
   50A1B:	0017      	ld         al, @(0x0, y)
   50A1C:	0210      	ld         ah, #+0x2
   50A1D:	0300      	**prefx    0x3
   50A1E:	0E9C      	bsr        +0x30E <CMSetDevState:0x50D2C[p]>
   50A1F:	0014      	ld         al, #+0x0

        return cm_status_success;
    }

    return cm_status_failed;
}
   50A20:	FD0F      	leave      #-0x3

0x00050A21 <CMInit>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void CMInit(CM_INIT_PARAMS_T *cm_init_params)
{
   50A21:	FA0B      	enter      #-0x6
   50A22:	0327      	st         al, @(+0x3, y)
    bool db_reg_wait = FALSE;

    /* Initialise GATT entity.*/
    GattInit();
   50A23:	FB00      	**prefx    0xFB
   50A24:	5F00      	**prefx    0x5F
   50A25:	769C      	bsr        -0x4A08A <GattInit:0x699B[p]>

    /* Initialise CM Security */
    CMSecurityInit(cm_init_params);
   50A26:	0317      	ld         al, @(+0x3, y)
   50A27:	0800      	**prefx    0x8
   50A28:	BC9C      	bsr        +0x7BC <CMSecurityInit:0x511E4[p]>

    /* Initialise the CM Private */
    CMPrivateInit(cm_init_params);
   50A29:	0317      	ld         al, @(+0x3, y)
   50A2A:	0300      	**prefx    0x3
   50A2B:	929C      	bsr        +0x292 <CMPrivateInit:0x50CBD[p]>
    
#if defined (OBSERVER)
    CMObserverInit();
   50A2C:	0900      	**prefx    0x9
   50A2D:	599C      	bsr        +0x959 <CMObserverInit:0x51386[p]>
#if defined (CENTRAL)
    CMCentralInit();
#endif /* CENTRAL */

#if defined (PERIPHERAL)
    CMPeripheralInit();
   50A2E:	0900      	**prefx    0x9
   50A2F:	7D9C      	bsr        +0x97D <CMPeripheralInit:0x513AC[p]>
    CMClientInit(cm_init_params);
#endif /* CLIENT */

#if defined (SERVER)
    /* Initialise CM Server */
    db_reg_wait = CMServerInit(cm_init_params);
   50A30:	0317      	ld         al, @(+0x3, y)
   50A31:	0900      	**prefx    0x9
   50A32:	399C      	bsr        +0x939 <CMServerInit:0x5136B[p]>
#endif /* SERVER */

    /* Check if the gatt database being registered */
    if(!db_reg_wait)
   50A33:	E199      	tst        @0xFFE1 <register al>
   50A34:	0DF0      	bne        +0xD <CMInit+0x20:0x50A41[p]>
    {
        /* Start async api timer  */
        TimerCreate(0, TRUE, asyncApiTimeout);
   50A35:	0114      	ld         al, #+0x1
   50A36:	0027      	st         al, @(0x0, y)
   50A37:	0A00      	**prefx    0xA
   50A38:	4214      	ld         al, #+0xA42
   50A39:	0227      	st         al, @(+0x2, y)
   50A3A:	0514      	ld         al, #+0x5
   50A3B:	0127      	st         al, @(+0x1, y)
   50A3C:	0010      	ld         ah, #+0x0
   50A3D:	0014      	ld         al, #+0x0
   50A3E:	FC00      	**prefx    0xFC
   50A3F:	E200      	**prefx    0xE2
   50A40:	EE9C      	bsr        -0x41E12 <TimerCreate:0xEC2E[p]>
    }
}
   50A41:	FA0F      	leave      #-0x6

0x00050A42 <asyncApiTimeout>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void asyncApiTimeout(timer_id tid)
{
   50A42:	FD0B      	enter      #-0x3
    CM_INIT_CFM_T cm_init_cfm;

    cm_init_cfm.status = sys_status_success;
   50A43:	0014      	ld         al, #+0x0
   50A44:	0027      	st         al, @(0x0, y)

    /* Send CM init confirmation event to the application */
    CMNotifyEventToApplication(CM_INIT_CFM,
   50A45:	E411      	ld         ah, @0xFFE4 <register uy>
   50A46:	0200      	**prefx    0x2
   50A47:	639C      	bsr        +0x263 <CMNotifyEventToApplication:0x50CAA[p]>
                               (CM_EVENT_T *)&cm_init_cfm);
}
   50A48:	FD0F      	leave      #-0x3

0x00050A49 <getDeviceIdFromCid>:
 *
 *---------------------------------------------------------------------------*/

static device_handle_id getDeviceIdFromCid(uint16 cid,
                                           CM_MAIN_DATA_T *p_main_data)
{
   50A49:	FE0B      	enter      #-0x2
   50A4A:	F925      	st         al, @0xFFF9 <(scratchpad)>
   50A4B:	E019      	ld         x, @0xFFE0 <register ah>
    device_handle_id index;
    CM_CONN_INFO_T* p_conn_info = &(p_main_data->cm_conn_info[0]);

    /* Parse through the Db to find the device*/
    for(index = 0; index < p_main_data->max_connections; index++)
   50A4C:	0216      	ld         al, @(+0x2, x)
   50A4D:	F825      	st         al, @0xFFF8 <(scratchpad)>
   50A4E:	011A      	ld         x, @(+0x1, x)
   50A4F:	0010      	ld         ah, #+0x0
   50A50:	06E0      	bra        +0x6 <getDeviceIdFromCid+0xD:0x50A56[p]>
    {
        if(p_conn_info[index].cid == cid)
   50A51:	0516      	ld         al, @(+0x5, x)
   50A52:	0E38      	add        x, #+0xE
   50A53:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   50A54:	05F4      	beq        +0x5 <getDeviceIdFromCid+0x10:0x50A59[p]>
{
    device_handle_id index;
    CM_CONN_INFO_T* p_conn_info = &(p_main_data->cm_conn_info[0]);

    /* Parse through the Db to find the device*/
    for(index = 0; index < p_main_data->max_connections; index++)
   50A55:	0130      	add        ah, #+0x1
   50A56:	F881      	cmp        ah, @0xFFF8 <(scratchpad)>
   50A57:	FAFC      	bcs        -0x6 <getDeviceIdFromCid+0x8:0x50A51[p]>
   50A58:	FF10      	ld         ah, #-0x1
        {
            return index;
        }
    }
    return CM_INVALID_DEVICE_ID;
}
   50A59:	E015      	ld         al, @0xFFE0 <register ah>
   50A5A:	FE0F      	leave      #-0x2

0x00050A5B <HALGetMsgId>:
 *      uint16: Message ID
 *
 *---------------------------------------------------------------------------*/

extern uint16 HALGetMsgId(h_msg_t *msg)
{
   50A5B:	FE0B      	enter      #-0x2
   50A5C:	E119      	ld         x, @0xFFE1 <register al>
   50A5D:	001A      	ld         x, @(0x0, x)
   50A5E:	0316      	ld         al, @(+0x3, x)
#ifndef CSR101x_A05
    return msg->msg->header.id;
#else
    return msg->msg->id;
#endif /* !CSR101x_A05 */
}
   50A5F:	FE0F      	leave      #-0x2

0x00050A60 <HALGetMsg>:
 *  RETURNS
 *      void *: Message pointer
 *---------------------------------------------------------------------------*/

extern void *HALGetMsg(h_msg_t *msg)
{
   50A60:	FE0B      	enter      #-0x2
   50A61:	E119      	ld         x, @0xFFE1 <register al>
   50A62:	0016      	ld         al, @(0x0, x)
   50A63:	0434      	add        al, #+0x4
#ifndef CSR101x_A05
    return (void*)&msg->msg->body;
#else
    return (void*)msg->msg->body;
#endif /* !CSR101x_A05 */
}
   50A64:	FE0F      	leave      #-0x2

0x00050A65 <HALAddNewDevice>:
 *      Nothing
 *---------------------------------------------------------------------------*/

extern void HALAddNewDevice(CM_CONN_INFO_T *p_conn_info,
                            h_ls_connection_complete_ind_t *p_event_data)
{
   50A65:	FE0B      	enter      #-0x2
   50A66:	F925      	st         al, @0xFFF9 <(scratchpad)>
   50A67:	FA21      	st         ah, @0xFFFA <(scratchpad)>
    /* Map the device address into storable form */
    p_conn_info->remote_bd_addr.type = p_event_data->peer_address_type;
   50A68:	E019      	ld         x, @0xFFE0 <register ah>
   50A69:	0216      	ld         al, @(+0x2, x)
   50A6A:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   50A6B:	0626      	st         al, @(+0x6, x)
    p_conn_info->remote_bd_addr.addr = p_event_data->peer_address;
   50A6C:	E019      	ld         x, @0xFFE0 <register ah>
   50A6D:	051A      	ld         x, @(+0x5, x)
   50A6E:	FB29      	st         x, @0xFFFB <(scratchpad)>
   50A6F:	E019      	ld         x, @0xFFE0 <register ah>
   50A70:	0412      	ld         ah, @(+0x4, x)
   50A71:	0316      	ld         al, @(+0x3, x)
   50A72:	F825      	st         al, @0xFFF8 <(scratchpad)>
   50A73:	0616      	ld         al, @(+0x6, x)
   50A74:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   50A75:	0A26      	st         al, @(+0xA, x)
   50A76:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   50A77:	0926      	st         al, @(+0x9, x)
   50A78:	0822      	st         ah, @(+0x8, x)
   50A79:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   50A7A:	0726      	st         al, @(+0x7, x)
    p_conn_info->peer_con_role = con_role_peripheral;
   50A7B:	0014      	ld         al, #+0x0
   50A7C:	0C26      	st         al, @(+0xC, x)
    if(p_event_data->role == 1)
   50A7D:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   50A7E:	0116      	ld         al, @(+0x1, x)
   50A7F:	0184      	cmp        al, #+0x1
   50A80:	03F0      	bne        +0x3 <HALAddNewDevice+0x1E:0x50A83[p]>
    {
        p_conn_info->peer_con_role = con_role_central;
   50A81:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   50A82:	0C26      	st         al, @(+0xC, x)
    }

#if defined (CSR101x_A05)
    p_conn_info->hci_conn_handle = p_event_data->connection_handle;
#endif
}
   50A83:	FE0F      	leave      #-0x2

0x00050A84 <HALGetDeviceId>:
 *      device_handle_id: Device index
 *---------------------------------------------------------------------------*/

extern device_handle_id HALGetDeviceId(uint16 event_id, void *event,
                             CM_MAIN_DATA_T *p_main_data)
{
   50A84:	FE0B      	enter      #-0x2
   50A85:	E019      	ld         x, @0xFFE0 <register ah>
   50A86:	0213      	ld         ah, @(+0x2, y)
    switch(event_id)
   50A87:	1900      	**prefx    0x19
   50A88:	3784      	cmp        al, #+0x1937
   50A89:	54F4      	beq        +0x54 <HALGetDeviceId+0x59:0x50ADD[p]>
   50A8A:	1900      	**prefx    0x19
   50A8B:	3884      	cmp        al, #+0x1938
   50A8C:	26F8      	bcc        +0x26 <HALGetDeviceId+0x2E:0x50AB2[p]>
   50A8D:	1800      	**prefx    0x18
   50A8E:	1784      	cmp        al, #+0x1817
   50A8F:	4EF4      	beq        +0x4E <HALGetDeviceId+0x59:0x50ADD[p]>
   50A90:	1800      	**prefx    0x18
   50A91:	1884      	cmp        al, #+0x1818
   50A92:	12F8      	bcc        +0x12 <HALGetDeviceId+0x20:0x50AA4[p]>
   50A93:	1800      	**prefx    0x18
   50A94:	0E84      	cmp        al, #+0x180E
   50A95:	48F4      	beq        +0x48 <HALGetDeviceId+0x59:0x50ADD[p]>
   50A96:	1800      	**prefx    0x18
   50A97:	0F84      	cmp        al, #+0x180F
   50A98:	05F8      	bcc        +0x5 <HALGetDeviceId+0x19:0x50A9D[p]>
   50A99:	1800      	**prefx    0x18
   50A9A:	0C84      	cmp        al, #+0x180C
   50A9B:	3EF0      	bne        +0x3E <HALGetDeviceId+0x55:0x50AD9[p]>
   50A9C:	41E0      	bra        +0x41 <HALGetDeviceId+0x59:0x50ADD[p]>
   50A9D:	1800      	**prefx    0x18
   50A9E:	1084      	cmp        al, #+0x1810
   50A9F:	3EF4      	beq        +0x3E <HALGetDeviceId+0x59:0x50ADD[p]>
   50AA0:	1800      	**prefx    0x18
   50AA1:	1584      	cmp        al, #+0x1815
   50AA2:	37F0      	bne        +0x37 <HALGetDeviceId+0x55:0x50AD9[p]>
   50AA3:	3AE0      	bra        +0x3A <HALGetDeviceId+0x59:0x50ADD[p]>
   50AA4:	1800      	**prefx    0x18
   50AA5:	1B84      	cmp        al, #+0x181B
   50AA6:	37F4      	beq        +0x37 <HALGetDeviceId+0x59:0x50ADD[p]>
   50AA7:	1800      	**prefx    0x18
   50AA8:	1C84      	cmp        al, #+0x181C
   50AA9:	05F8      	bcc        +0x5 <HALGetDeviceId+0x2A:0x50AAE[p]>
   50AAA:	1800      	**prefx    0x18
   50AAB:	1A84      	cmp        al, #+0x181A
   50AAC:	2DF0      	bne        +0x2D <HALGetDeviceId+0x55:0x50AD9[p]>
   50AAD:	30E0      	bra        +0x30 <HALGetDeviceId+0x59:0x50ADD[p]>
   50AAE:	1900      	**prefx    0x19
   50AAF:	3584      	cmp        al, #+0x1935
   50AB0:	29FC      	bcs        +0x29 <HALGetDeviceId+0x55:0x50AD9[p]>
   50AB1:	2EE0      	bra        +0x2E <HALGetDeviceId+0x5B:0x50ADF[p]>
   50AB2:	1900      	**prefx    0x19
   50AB3:	5784      	cmp        al, #+0x1957
   50AB4:	2DF4      	beq        +0x2D <HALGetDeviceId+0x5D:0x50AE1[p]>
   50AB5:	1900      	**prefx    0x19
   50AB6:	5884      	cmp        al, #+0x1958
   50AB7:	12F8      	bcc        +0x12 <HALGetDeviceId+0x45:0x50AC9[p]>
   50AB8:	1900      	**prefx    0x19
   50AB9:	4C84      	cmp        al, #+0x194C
   50ABA:	23F4      	beq        +0x23 <HALGetDeviceId+0x59:0x50ADD[p]>
   50ABB:	1900      	**prefx    0x19
   50ABC:	4D84      	cmp        al, #+0x194D
   50ABD:	05F8      	bcc        +0x5 <HALGetDeviceId+0x3E:0x50AC2[p]>
   50ABE:	1900      	**prefx    0x19
   50ABF:	4784      	cmp        al, #+0x1947
   50AC0:	19F0      	bne        +0x19 <HALGetDeviceId+0x55:0x50AD9[p]>
   50AC1:	1CE0      	bra        +0x1C <HALGetDeviceId+0x59:0x50ADD[p]>
   50AC2:	1900      	**prefx    0x19
   50AC3:	5184      	cmp        al, #+0x1951
   50AC4:	1DF4      	beq        +0x1D <HALGetDeviceId+0x5D:0x50AE1[p]>
   50AC5:	1900      	**prefx    0x19
   50AC6:	5284      	cmp        al, #+0x1952
   50AC7:	12F0      	bne        +0x12 <HALGetDeviceId+0x55:0x50AD9[p]>
   50AC8:	19E0      	bra        +0x19 <HALGetDeviceId+0x5D:0x50AE1[p]>
   50AC9:	1A00      	**prefx    0x1A
   50ACA:	0484      	cmp        al, #+0x1A04
   50ACB:	10F4      	beq        +0x10 <HALGetDeviceId+0x57:0x50ADB[p]>
   50ACC:	1A00      	**prefx    0x1A
   50ACD:	0584      	cmp        al, #+0x1A05
   50ACE:	05F8      	bcc        +0x5 <HALGetDeviceId+0x4F:0x50AD3[p]>
   50ACF:	1900      	**prefx    0x19
   50AD0:	5F84      	cmp        al, #+0x195F
   50AD1:	08F0      	bne        +0x8 <HALGetDeviceId+0x55:0x50AD9[p]>
   50AD2:	0BE0      	bra        +0xB <HALGetDeviceId+0x59:0x50ADD[p]>
   50AD3:	1A00      	**prefx    0x1A
   50AD4:	1384      	cmp        al, #+0x1A13
   50AD5:	08F4      	beq        +0x8 <HALGetDeviceId+0x59:0x50ADD[p]>
   50AD6:	1A00      	**prefx    0x1A
   50AD7:	1684      	cmp        al, #+0x1A16
   50AD8:	05F4      	beq        +0x5 <HALGetDeviceId+0x59:0x50ADD[p]>
   50AD9:	FF14      	ld         al, #-0x1
   50ADA:	0AE0      	bra        +0xA <HALGetDeviceId+0x60:0x50AE4[p]>
    {
        case HAL_GATT_CONNECT_CFM:
        {
            h_gatt_connect_cfm_t *msg = (h_gatt_connect_cfm_t*)event;
            return getDeviceIdFromCid(msg->cid, p_main_data);
   50ADB:	0516      	ld         al, @(+0x5, x)
   50ADC:	06E0      	bra        +0x6 <HALGetDeviceId+0x5E:0x50AE2[p]>
        {
            h_ls_connection_update_signalling_ind_t *msg  =
                    (h_ls_connection_update_signalling_ind_t *)event;

#ifndef CSR101x_A05
            return getDeviceIdFromCid(msg->cid, p_main_data);
   50ADD:	0016      	ld         al, @(0x0, x)
   50ADE:	04E0      	bra        +0x4 <HALGetDeviceId+0x5E:0x50AE2[p]>
        {
            h_ls_connection_param_update_cfm_t *msg  =
                    (h_ls_connection_param_update_cfm_t *)event;

#ifndef CSR101x_A05
            return getDeviceIdFromCid(msg->cid, p_main_data);
   50ADF:	0616      	ld         al, @(+0x6, x)
   50AE0:	02E0      	bra        +0x2 <HALGetDeviceId+0x5E:0x50AE2[p]>
        {
            h_ls_connection_update_ind_t *msg  =
                    (h_ls_connection_update_ind_t *)event;

#ifndef CSR101x_A05
            return getDeviceIdFromCid(msg->cid, p_main_data);
   50AE1:	0116      	ld         al, @(+0x1, x)
   50AE2:	FF00      	**prefx    0xFF
   50AE3:	669C      	bsr        -0x9A <getDeviceIdFromCid:0x50A49[p]>

        default:
            return CM_INVALID_DEVICE_ID;
            break;
    }
}
   50AE4:	FE0F      	leave      #-0x2

0x00050AE5 <HALParseConnCompleteInd>:
 *---------------------------------------------------------------------------*/

extern void HALParseConnCompleteInd(
                            h_ls_connection_complete_ind_t *conn_complete_ind,
                            h_msg_t *msg)
{
   50AE5:	FD0B      	enter      #-0x3
   50AE6:	0027      	st         al, @(0x0, y)
   50AE7:	E015      	ld         al, @0xFFE0 <register ah>
#ifndef CSR101x_A05
    *conn_complete_ind = *(h_ls_connection_complete_ind_t *)HALGetMsg(msg);
   50AE8:	FF00      	**prefx    0xFF
   50AE9:	779C      	bsr        -0x89 <HALGetMsg:0x50A60[p]>
   50AEA:	E119      	ld         x, @0xFFE1 <register al>
   50AEB:	0B14      	ld         al, #+0xB
   50AEC:	0013      	ld         ah, @(0x0, y)
   50AED:	FD09      	bc2        
    conn_complete_ind->conn_latency = conn_complete->data.conn_latency;
    conn_complete_ind->supervision_timeout =
            conn_complete->data.supervision_timeout;
    conn_complete_ind->clock_accuracy = conn_complete->data.clock_accuracy;
#endif /* !CSR101x_A05 */
}
   50AEE:	FD0F      	leave      #-0x3

0x00050AEF <HALParseEncChangeInd>:
 *---------------------------------------------------------------------------*/

extern void HALParseEncChangeInd(
                            h_ls_encryption_change_ind_t *enc_change_ind,
                            h_msg_t *msg)
{
   50AEF:	FD0B      	enter      #-0x3
   50AF0:	0027      	st         al, @(0x0, y)
   50AF1:	E015      	ld         al, @0xFFE0 <register ah>
#ifndef CSR101x_A05
    *enc_change_ind = *(h_ls_encryption_change_ind_t *)HALGetMsg(msg);
   50AF2:	FF00      	**prefx    0xFF
   50AF3:	6D9C      	bsr        -0x93 <HALGetMsg:0x50A60[p]>
   50AF4:	E119      	ld         x, @0xFFE1 <register al>
   50AF5:	0314      	ld         al, #+0x3
   50AF6:	0013      	ld         ah, @(0x0, y)
   50AF7:	FD09      	bc2        

    enc_change_ind->status = encryption_change->data.status;
    enc_change_ind->handle = encryption_change->data.handle;
    enc_change_ind->enc_enable = encryption_change->data.enc_enable;
#endif /* !CSR101x_A05 */
}
   50AF8:	FD0F      	leave      #-0x3

0x00050AF9 <HALParseRadioEventInd>:
 *
 *----------------------------------------------------------------------------*/

extern void HALParseRadioEventInd(CM_RADIO_EVENT_IND_T *radio_event_ind,
                                  h_ls_radio_event_ind_t *p_event_data)
{
   50AF9:	FE0B      	enter      #-0x2
   50AFA:	F821      	st         ah, @0xFFF8 <(scratchpad)>
#ifndef CSR101x_A05
    radio_event_ind->delta_ls    = p_event_data->delta_ls;
   50AFB:	E019      	ld         x, @0xFFE0 <register ah>
   50AFC:	0212      	ld         ah, @(+0x2, x)
   50AFD:	E119      	ld         x, @0xFFE1 <register al>
   50AFE:	0222      	st         ah, @(+0x2, x)
    radio_event_ind->delta_ms    = p_event_data->delta_ms;
   50AFF:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50B00:	0312      	ld         ah, @(+0x3, x)
   50B01:	E119      	ld         x, @0xFFE1 <register al>
   50B02:	0322      	st         ah, @(+0x3, x)
#endif /* !CSR101x_A05 */

}
   50B03:	FE0F      	leave      #-0x2

0x00050B04 <HALIsAdvertisingReport>:
 *  RETURNS
 *      TRUE/FALSE
 *
 *---------------------------------------------------------------------------*/
extern bool HALIsAdvertisingReport(h_ls_advertising_report_ind_t *adv_ind)
{
   50B04:	ED0B      	enter      #-0x13
   50B05:	E119      	ld         x, @0xFFE1 <register al>
#ifndef CSR101x_A05
    hci_advertising_report_t report = (hci_advertising_report_t)adv_ind->report;
   50B06:	0914      	ld         al, #+0x9
   50B07:	E411      	ld         ah, @0xFFE4 <register uy>
   50B08:	0830      	add        ah, #+0x8
   50B09:	FD09      	bc2        
    HCI_EV_DATA_ULP_ADVERTISING_REPORT_T report_data =
            (HCI_EV_DATA_ULP_ADVERTISING_REPORT_T)report.hdr;
   50B0A:	0814      	ld         al, #+0x8
   50B0B:	E411      	ld         ah, @0xFFE4 <register uy>
   50B0C:	E419      	ld         x, @0xFFE4 <register uy>
   50B0D:	0838      	add        x, #+0x8
   50B0E:	FD09      	bc2        
   50B0F:	0010      	ld         ah, #+0x0
   50B10:	0117      	ld         al, @(+0x1, y)
   50B11:	0284      	cmp        al, #+0x2
   50B12:	02F8      	bcc        +0x2 <HALIsAdvertisingReport+0x10:0x50B14[p]>
   50B13:	0110      	ld         ah, #+0x1
    return ((report_data.event_type == 0) || (report_data.event_type == 1));
#else
    return (adv_ind->data.event_type == 0);
#endif /* !CSR101x_A05  */

}
   50B14:	E015      	ld         al, @0xFFE0 <register ah>
   50B15:	ED0F      	leave      #-0x13

0x00050B16 <HALParseAccessWriteInd>:
 *  RETURNS
 *      Nothing
 *---------------------------------------------------------------------------*/
extern void HALParseAccessWriteInd(CM_WRITE_ACCESS_T *cm_write,
        h_gatt_access_ind_t *p_event_data)
{
   50B16:	FE0B      	enter      #-0x2
   50B17:	F821      	st         ah, @0xFFF8 <(scratchpad)>
#ifndef CSR101x_A05
     cm_write->data = p_event_data->payload.value;
   50B18:	E019      	ld         x, @0xFFE0 <register ah>
   50B19:	0512      	ld         ah, @(+0x5, x)
   50B1A:	E119      	ld         x, @0xFFE1 <register al>
   50B1B:	0222      	st         ah, @(+0x2, x)
     cm_write->length = p_event_data->payload.size_value;
   50B1C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50B1D:	0412      	ld         ah, @(+0x4, x)
   50B1E:	E119      	ld         x, @0xFFE1 <register al>
   50B1F:	0322      	st         ah, @(+0x3, x)
#else
     cm_write->data = p_event_data->value;
     cm_write->length = p_event_data->size_value;
#endif /* !CSR101x_A05  */
}
   50B20:	FE0F      	leave      #-0x2

0x00050B21 <HALParseAccessReadInd>:
 *  RETURNS
 *      Nothing
 *---------------------------------------------------------------------------*/
extern void HALParseAccessReadInd(CM_READ_ACCESS_T *cm_read,
        h_gatt_access_ind_t *p_event_data)
{
   50B21:	FE0B      	enter      #-0x2
   50B22:	F821      	st         ah, @0xFFF8 <(scratchpad)>
#ifndef CSR101x_A05
    cm_read->data = p_event_data->payload.value;
   50B23:	E019      	ld         x, @0xFFE0 <register ah>
   50B24:	0512      	ld         ah, @(+0x5, x)
   50B25:	E119      	ld         x, @0xFFE1 <register al>
   50B26:	0222      	st         ah, @(+0x2, x)
    cm_read->length = p_event_data->payload.size_value;
   50B27:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50B28:	0412      	ld         ah, @(+0x4, x)
   50B29:	E119      	ld         x, @0xFFE1 <register al>
   50B2A:	0322      	st         ah, @(+0x3, x)
#else
    cm_read->data = p_event_data->value;
    cm_read->length = p_event_data->size_value;
#endif /* !CSR101x_A05  */
}
   50B2B:	FE0F      	leave      #-0x2

0x00050B2C <HALParseSmPairingAuthInd>:
                                     h_sm_pairing_auth_ind_t *p_event_data)
{
#if defined (CSR101x_A05)
    bonding_auth_ind->data = p_event_data->data;
#endif /* CSR101x_A05 */
}
   50B2C:	00E2      	bra        0x0, x

0x00050B2D <HALParseConnectionUpdateInd>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void HALParseConnectionUpdateInd(h_ls_connection_update_ind_t *p_event_data,
                                        CM_DEV_CONN_PARAM_T *connection_param)
{
   50B2D:	FE0B      	enter      #-0x2
   50B2E:	F825      	st         al, @0xFFF8 <(scratchpad)>
#ifndef CSR101x_A05
            connection_param->conn_interval = p_event_data->conn_interval;
   50B2F:	E119      	ld         x, @0xFFE1 <register al>
   50B30:	0216      	ld         al, @(+0x2, x)
   50B31:	E019      	ld         x, @0xFFE0 <register ah>
   50B32:	0026      	st         al, @(0x0, x)
            connection_param->conn_latency = p_event_data->conn_latency;
   50B33:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50B34:	0316      	ld         al, @(+0x3, x)
   50B35:	E019      	ld         x, @0xFFE0 <register ah>
   50B36:	0126      	st         al, @(+0x1, x)
            connection_param->supervision_timeout = p_event_data->supervision_timeout;
   50B37:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50B38:	0416      	ld         al, @(+0x4, x)
   50B39:	E019      	ld         x, @0xFFE0 <register ah>
   50B3A:	0226      	st         al, @(+0x2, x)

            connection_param->conn_interval = data.conn_interval;
            connection_param->conn_latency = data.conn_latency;
            connection_param->supervision_timeout = data.supervision_timeout;
#endif /* !CSR101x_A05 */
}
   50B3B:	FE0F      	leave      #-0x2

0x00050B3C <CMProcessMsg>:
 *
 *----------------------------------------------------------------------------*/

#ifndef CSR101x_A05
void CMProcessMsg(msg_t *msg)
{
   50B3C:	FD0B      	enter      #-0x3
    h_msg_t h_msg;
    h_msg.msg = msg;
   50B3D:	0027      	st         al, @(0x0, y)

    /* Invoke the CM Handler */
    CMProcessEvent(&h_msg);
   50B3E:	E415      	ld         al, @0xFFE4 <register uy>
   50B3F:	0300      	**prefx    0x3
   50B40:	E09C      	bsr        +0x2E0 <CMProcessEvent:0x50E20[p]>
}
   50B41:	FD0F      	leave      #-0x3

0x00050B42 <HALMatchBluetoothAddress>:
 *
 *----------------------------------------------------------------------------*/
extern bool HALMatchBluetoothAddress(TYPED_BD_ADDR_T *bdaddr1,
                                     TYPED_BD_ADDR_T *bdaddr2,
                                     uint16 *irk)
{
   50B42:	F80B      	enter      #-0x8
   50B43:	0427      	st         al, @(+0x4, y)
   50B44:	0523      	st         ah, @(+0x5, y)
#ifndef CSR101x_A05
    uint16 index;
#endif /* !CSR101x_A05 */

    if (!CMIsAddressResolvableRandom(bdaddr1) &&
   50B45:	FE00      	**prefx    0xFE
   50B46:	219C      	bsr        -0x1DF <CMIsAddressResolvableRandom:0x50967[p]>
   50B47:	E199      	tst        @0xFFE1 <register al>
   50B48:	0EF0      	bne        +0xE <HALMatchBluetoothAddress+0x14:0x50B56[p]>
   50B49:	0417      	ld         al, @(+0x4, y)
   50B4A:	0134      	add        al, #+0x1
   50B4B:	051B      	ld         x, @(+0x5, y)
   50B4C:	0138      	add        x, #+0x1
   50B4D:	052B      	st         x, @(+0x5, y)
   50B4E:	0418      	ld         x, #+0x4
   50B4F:	002B      	st         x, @(0x0, y)
   50B50:	0513      	ld         ah, @(+0x5, y)
   50B51:	FC00      	**prefx    0xFC
   50B52:	5400      	**prefx    0x54
   50B53:	DE9C      	bsr        -0x3AC22 <MemCmp:0x15F31[p]>
   50B54:	E199      	tst        @0xFFE1 <register al>
   50B55:	17F4      	beq        +0x17 <HALMatchBluetoothAddress+0x2A:0x50B6C[p]>
                sizeof(BD_ADDR_T)))
    {
        return TRUE;
    }
#ifndef CSR101x_A05
    else if(CMIsAddressResolvableRandom(bdaddr1) &&
   50B56:	0417      	ld         al, @(+0x4, y)
   50B57:	FE00      	**prefx    0xFE
   50B58:	0F9C      	bsr        -0x1F1 <CMIsAddressResolvableRandom:0x50967[p]>
   50B59:	E199      	tst        @0xFFE1 <register al>
   50B5A:	03F0      	bne        +0x3 <HALMatchBluetoothAddress+0x1B:0x50B5D[p]>
   50B5B:	0010      	ld         ah, #+0x0
   50B5C:	11E0      	bra        +0x11 <HALMatchBluetoothAddress+0x2B:0x50B6D[p]>
   50B5D:	0114      	ld         al, #+0x1
   50B5E:	0027      	st         al, @(0x0, y)
   50B5F:	0818      	ld         x, #+0x8
   50B60:	012B      	st         x, @(+0x1, y)
   50B61:	E415      	ld         al, @0xFFE4 <register uy>
   50B62:	0334      	add        al, #+0x3
   50B63:	0227      	st         al, @(+0x2, y)
   50B64:	0417      	ld         al, @(+0x4, y)
   50B65:	0813      	ld         ah, @(+0x8, y)
   50B66:	FB00      	**prefx    0xFB
   50B67:	1100      	**prefx    0x11
   50B68:	819C      	bsr        -0x4EF7F <SMPrivacyMatchAddress:0x1BE9[p]>
   50B69:	0010      	ld         ah, #+0x0
   50B6A:	E199      	tst        @0xFFE1 <register al>
   50B6B:	02F0      	bne        +0x2 <HALMatchBluetoothAddress+0x2B:0x50B6D[p]>
   50B6C:	0110      	ld         ah, #+0x1
    {
        return TRUE;
    }

    return FALSE;
}
   50B6D:	E015      	ld         al, @0xFFE0 <register ah>
   50B6E:	F80F      	leave      #-0x8

0x00050B6F <HALConnectionUpdateSignallingRsp>:
 *
 *---------------------------------------------------------------------------*/
extern void HALConnectionUpdateSignallingRsp(device_handle_id device_id,
                                            uint16  sig_identifier,
                                            bool    accepted)
{
   50B6F:	FC0B      	enter      #-0x4
   50B70:	0123      	st         ah, @(+0x1, y)
#ifndef CSR101x_A05
    uint16 cid = CMGetConnId(device_id);
   50B71:	0200      	**prefx    0x2
   50B72:	999C      	bsr        +0x199 <CMGetConnId:0x50D0B[p]>
    LsConnectionUpdateSignallingRsp(cid, sig_identifier, accepted);
   50B73:	041B      	ld         x, @(+0x4, y)
   50B74:	002B      	st         x, @(0x0, y)
   50B75:	0113      	ld         ah, @(+0x1, y)
   50B76:	6F00      	**prefx    0x6F
   50B77:	BD9C      	bsr        +0x6EBD <LsConnectionUpdateSignallingRsp:0x57A34[p]>
#else
    uint16  con_handle = getHciHandleFromDeviceId(device_id);
    LsConnectionUpdateSignalingRsp(con_handle, sig_identifier, accepted);
#endif /* !CSR101x_A05 */
}
   50B78:	FC0F      	leave      #-0x4

0x00050B79 <HALConnectionParamUpdateReq>:
 *      cm_status_failed - request cannot be sent, possibly due to no connection
 *
 *----------------------------------------------------------------------------*/
extern cm_status_code HALConnectionParamUpdateReq(device_handle_id device_id,
                              ble_con_params *new_params)
{
   50B79:	FD0B      	enter      #-0x3
   50B7A:	0023      	st         ah, @(0x0, y)
    ls_err error_code;
#ifndef CSR101x_A05
    uint16 cid = CMGetConnId(device_id);
   50B7B:	0200      	**prefx    0x2
   50B7C:	8F9C      	bsr        +0x18F <CMGetConnId:0x50D0B[p]>
    
    error_code = LsConnectionParamUpdateCidReq(cid, new_params);
   50B7D:	0013      	ld         ah, @(0x0, y)
   50B7E:	FB00      	**prefx    0xFB
   50B7F:	2F00      	**prefx    0x2F
   50B80:	2D9C      	bsr        -0x4D0D3 <LsConnectionParamUpdateCidReq:0x3AAD[p]>
    TYPED_BD_ADDR_T  bd_addr;
    CMGetBdAdressFromDeviceId(device_id, &bd_addr);
    error_code = LsConnectionParamUpdateReq(&bd_addr, new_params);
#endif /* !CSR101x_A05 */
    
    if ( error_code == ls_err_none )
   50B81:	E199      	tst        @0xFFE1 <register al>
   50B82:	06F4      	beq        +0x6 <HALConnectionParamUpdateReq+0xF:0x50B88[p]>
    {
        return cm_status_success;
    }
    else if ( error_code == ls_err_con_param_rej_tgap_violation )
   50B83:	4584      	cmp        al, #+0x45
   50B84:	03F4      	beq        +0x3 <HALConnectionParamUpdateReq+0xE:0x50B87[p]>
   50B85:	0114      	ld         al, #+0x1
   50B86:	02E0      	bra        +0x2 <HALConnectionParamUpdateReq+0xF:0x50B88[p]>
   50B87:	0214      	ld         al, #+0x2
    }
    else
    {
        return cm_status_failed;
    }
}
   50B88:	FD0F      	leave      #-0x3

0x00050B89 <HALSMDivApprovalRsp>:
 *
 *----------------------------------------------------------------------------*/
extern void HALSMDivApprovalRsp(uint16 cid, sm_div_verdict approve_div)
{
#ifndef CSR101x_A05
    SMDivApprovalRsp(cid, approve_div);
   50B89:	FA00      	**prefx    0xFA
   50B8A:	6CE0      	bra        -0x594 <SMDivApprovalRsp:0x505F6[p]>

0x00050B8B <HALSMKeyRequestResponse>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void HALSMKeyRequestResponse(device_handle_id device_id,
                                    h_sm_keyset_t   *keys)
{
   50B8B:	FD0B      	enter      #-0x3
   50B8C:	0023      	st         ah, @(0x0, y)

#ifndef CSR101x_A05
    uint16 cid = CMGetConnId(device_id);
   50B8D:	0100      	**prefx    0x1
   50B8E:	7D9C      	bsr        +0x17D <CMGetConnId:0x50D0B[p]>
    SMKeyRequestRsp(cid, keys);
   50B8F:	0013      	ld         ah, @(0x0, y)
   50B90:	FA00      	**prefx    0xFA
   50B91:	5B9C      	bsr        -0x5A5 <SMKeyRequestRsp:0x505EC[p]>
#else
    TYPED_BD_ADDR_T bd_addr;
    CMGetBdAdressFromDeviceId(device_id, &bd_addr);
    SMKeyRequestResponse(&bd_addr, keys);
#endif /* !CSR101x_A05 */
}
   50B92:	FD0F      	leave      #-0x3

0x00050B93 <HALSendLongTermKeyAuthRsp>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/

extern void HALSendLongTermKeyAuthRsp(CM_LTK_RESP_T *ltk_rsp)
{
   50B93:	FC0B      	enter      #-0x4
   50B94:	E119      	ld         x, @0xFFE1 <register al>
#ifndef CSR101x_A05
    SMLongTermKeyRsp(ltk_rsp->cid,ltk_rsp->security_level,
   50B95:	0312      	ld         ah, @(+0x3, x)
   50B96:	0216      	ld         al, @(+0x2, x)
   50B97:	0027      	st         al, @(0x0, y)
   50B98:	0116      	ld         al, @(+0x1, x)
   50B99:	0127      	st         al, @(+0x1, y)
   50B9A:	0016      	ld         al, @(0x0, x)
   50B9B:	FA00      	**prefx    0xFA
   50B9C:	679C      	bsr        -0x599 <SMLongTermKeyRsp:0x50603[p]>
                     ltk_rsp->key_size,ltk_rsp->ltk);
#else
    SMLongTermKeyRsp(ltk_rsp->cid,ltk_rsp->ltk,TRUE,ltk_rsp->key_size);
#endif /* !CSR101x_A05 */
}
   50B9D:	FC0F      	leave      #-0x4

0x00050B9E <HALSendValueNotificationExt>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern sys_status HALSendValueNotificationExt(CM_VALUE_NOTIFICATION_T *cm_value_notify)
{
   50B9E:	FB0B      	enter      #-0x5
   50B9F:	0227      	st         al, @(+0x2, y)
      uint16 cid = CMGetConnId(cm_value_notify->device_id);
   50BA0:	E119      	ld         x, @0xFFE1 <register al>
   50BA1:	0016      	ld         al, @(0x0, x)
   50BA2:	0100      	**prefx    0x1
   50BA3:	689C      	bsr        +0x168 <CMGetConnId:0x50D0B[p]>
      /* Send Notification */
      return GattCharValueNotification(cid,
   50BA4:	021B      	ld         x, @(+0x2, y)
   50BA5:	0112      	ld         ah, @(+0x1, x)
   50BA6:	031A      	ld         x, @(+0x3, x)
   50BA7:	002B      	st         x, @(0x0, y)
   50BA8:	021B      	ld         x, @(+0x2, y)
   50BA9:	021A      	ld         x, @(+0x2, x)
   50BAA:	012B      	st         x, @(+0x1, y)
   50BAB:	FB00      	**prefx    0xFB
   50BAC:	5F00      	**prefx    0x5F
   50BAD:	CC9C      	bsr        -0x4A134 <GattCharValueNotification:0x6A79[p]>
                                       cm_value_notify->handle,
                                       cm_value_notify->size_value,
                                       cm_value_notify->value);
}
   50BAE:	FB0F      	leave      #-0x5

0x00050BAF <HALParseDisconnCompleteInd>:
 *---------------------------------------------------------------------------*/

extern void HALParseDisconnCompleteInd(
                            h_disconnect_complete_ind_t *disconn_complete_ind,
                            h_msg_t *msg)
{
   50BAF:	FD0B      	enter      #-0x3
   50BB0:	0027      	st         al, @(0x0, y)
   50BB1:	E015      	ld         al, @0xFFE0 <register ah>
#ifndef CSR101x_A05
    *disconn_complete_ind = *(h_disconnect_complete_ind_t *)HALGetMsg(msg);
   50BB2:	FF00      	**prefx    0xFF
   50BB3:	AD9C      	bsr        -0x153 <HALGetMsg:0x50A60[p]>
   50BB4:	E119      	ld         x, @0xFFE1 <register al>
   50BB5:	0314      	ld         al, #+0x3
   50BB6:	0013      	ld         ah, @(0x0, y)
   50BB7:	FD09      	bc2        
#if defined (SERVER)
    /* Delete the send notification confirm timer */
    TimerDelete(notif_cfm_tid);
   50BB8:	6100      	**prefx    0x61
   50BB9:	1815      	ld         al, @0x6118 <notif_cfm_tid>
   50BBA:	FC00      	**prefx    0xFC
   50BBB:	E000      	**prefx    0xE0
   50BBC:	679C      	bsr        -0x41F99 <TimerDelete:0xEC23[p]>
    notif_cfm_tid = TIMER_INVALID;
   50BBD:	0014      	ld         al, #+0x0
   50BBE:	6100      	**prefx    0x61
   50BBF:	1825      	st         al, @0x6118 <notif_cfm_tid>
    disconn_complete_ind->handle =
            disconn_complete->data.handle;
    disconn_complete_ind->reason = disconn_complete->data.reason;

#endif /* !CSR101x_A05 */
}
   50BC0:	FD0F      	leave      #-0x3

0x00050BC1 <HALSendValueNotification>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void HALSendValueNotification(CM_VALUE_NOTIFICATION_T *cm_value_notify)
{
   50BC1:	FA0B      	enter      #-0x6
   50BC2:	0327      	st         al, @(+0x3, y)
    uint16 cid = CMGetConnId(cm_value_notify->device_id);
   50BC3:	E119      	ld         x, @0xFFE1 <register al>
   50BC4:	0016      	ld         al, @(0x0, x)
   50BC5:	0100      	**prefx    0x1
   50BC6:	459C      	bsr        +0x145 <CMGetConnId:0x50D0B[p]>

#ifndef CSR101x_A05

    /* Send Notification */
    cm_notification_cfm.status = GattCharValueNotification(
   50BC7:	031B      	ld         x, @(+0x3, y)
   50BC8:	0112      	ld         ah, @(+0x1, x)
   50BC9:	031A      	ld         x, @(+0x3, x)
   50BCA:	002B      	st         x, @(0x0, y)
   50BCB:	031B      	ld         x, @(+0x3, y)
   50BCC:	021A      	ld         x, @(+0x2, x)
   50BCD:	012B      	st         x, @(+0x1, y)
   50BCE:	FB00      	**prefx    0xFB
   50BCF:	5F00      	**prefx    0x5F
   50BD0:	A99C      	bsr        -0x4A157 <GattCharValueNotification:0x6A79[p]>
   50BD1:	6100      	**prefx    0x61
   50BD2:	1725      	st         al, @0x6117 <cm_notification_cfm+0x2>
                                      cid,
                                      cm_value_notify->handle,
                                      cm_value_notify->size_value,
                                      cm_value_notify->value);

    cm_notification_cfm.device_id = cm_value_notify->device_id;
   50BD3:	6100      	**prefx    0x61
   50BD4:	1510      	ld         ah, #+0x6115
   50BD5:	031B      	ld         x, @(+0x3, y)
   50BD6:	0016      	ld         al, @(0x0, x)
   50BD7:	E019      	ld         x, @0xFFE0 <register ah>
   50BD8:	0026      	st         al, @(0x0, x)
    cm_notification_cfm.handle = cm_value_notify->handle;
   50BD9:	031B      	ld         x, @(+0x3, y)
   50BDA:	0116      	ld         al, @(+0x1, x)
   50BDB:	E019      	ld         x, @0xFFE0 <register ah>
   50BDC:	0126      	st         al, @(+0x1, x)

    /* Delete the timer */
    TimerDelete(notif_cfm_tid);
   50BDD:	6100      	**prefx    0x61
   50BDE:	1815      	ld         al, @0x6118 <notif_cfm_tid>
   50BDF:	FC00      	**prefx    0xFC
   50BE0:	E000      	**prefx    0xE0
   50BE1:	429C      	bsr        -0x41FBE <TimerDelete:0xEC23[p]>
    notif_cfm_tid = TIMER_INVALID;
   50BE2:	0018      	ld         x, #+0x0
   50BE3:	6100      	**prefx    0x61
   50BE4:	1829      	st         x, @0x6118 <notif_cfm_tid>
    
    /* Create a timer to send the notification confirm */
    notif_cfm_tid = TimerCreate(0,
   50BE5:	0114      	ld         al, #+0x1
   50BE6:	0027      	st         al, @(0x0, y)
   50BE7:	0C00      	**prefx    0xC
   50BE8:	F418      	ld         x, #+0xBF4
   50BE9:	022B      	st         x, @(+0x2, y)
   50BEA:	0514      	ld         al, #+0x5
   50BEB:	0127      	st         al, @(+0x1, y)
   50BEC:	0010      	ld         ah, #+0x0
   50BED:	0014      	ld         al, #+0x0
   50BEE:	FC00      	**prefx    0xFC
   50BEF:	E000      	**prefx    0xE0
   50BF0:	3E9C      	bsr        -0x41FC2 <TimerCreate:0xEC2E[p]>
   50BF1:	6100      	**prefx    0x61
   50BF2:	1825      	st         al, @0x6118 <notif_cfm_tid>
    GattCharValueNotification(cid,
                              cm_value_notify->handle,
                              cm_value_notify->size_value,
                              cm_value_notify->value);
#endif /* !CSR101x_A05 */
}
   50BF3:	FA0F      	leave      #-0x6

0x00050BF4 <sendNotificationCfmTimer>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void sendNotificationCfmTimer(timer_id tid)
{    
   50BF4:	FD0B      	enter      #-0x3
    if(tid == notif_cfm_tid)
   50BF5:	6100      	**prefx    0x61
   50BF6:	1885      	cmp        al, @0x6118 <notif_cfm_tid>
   50BF7:	0EF0      	bne        +0xE <sendNotificationCfmTimer+0x11:0x50C05[p]>
    {
        /* Reinitailise the timer */
        notif_cfm_tid = TIMER_INVALID;
   50BF8:	0014      	ld         al, #+0x0
   50BF9:	6100      	**prefx    0x61
   50BFA:	1825      	st         al, @0x6118 <notif_cfm_tid>
        
        /* Send notification confirmation to servers */
        CMServerNotifyGattEvent(CM_NOTIFICATION_CFM,
   50BFB:	6100      	**prefx    0x61
   50BFC:	1615      	ld         al, @0x6116 <cm_notification_cfm+0x1>
   50BFD:	0600      	**prefx    0x6
   50BFE:	329C      	bsr        +0x632 <CMServerGetHandler:0x51230[p]>
   50BFF:	0027      	st         al, @(0x0, y)
   50C00:	1314      	ld         al, #+0x13
   50C01:	6100      	**prefx    0x61
   50C02:	1510      	ld         ah, #+0x6115
   50C03:	0600      	**prefx    0x6
   50C04:	5D9C      	bsr        +0x65D <CMServerNotifyGattEvent:0x51261[p]>
                                (CM_EVENT_T *)&cm_notification_cfm,
                                CMServerGetHandler(cm_notification_cfm.handle));        
        
    }
    /* Else Ignore. This may be due to some race condition */
} 
   50C05:	FD0F      	leave      #-0x3

0x00050C06 <HALSMInit>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void HALSMInit(uint16 diversifier)
{
   50C06:	FE0B      	enter      #-0x2
    /* Tell Security Manager module about the value it needs to initialise it's
     * diversifier to.
     */
    SMInit(diversifier);
   50C07:	FA00      	**prefx    0xFA
   50C08:	DE9C      	bsr        -0x622 <SMInit:0x505E6[p]>

#ifndef CSR101x_A05
    SMSetKeyDistributionMask(SM_KEY_DISTRIBUTION_IRK,
   50C09:	0214      	ld         al, #+0x2
   50C0A:	0310      	ld         ah, #+0x3
   50C0B:	FB00      	**prefx    0xFB
   50C0C:	1000      	**prefx    0x10
   50C0D:	F69C      	bsr        -0x4F00A <SMSetKeyDistributionMask:0x1C03[p]>
                         (SM_KEY_DISTRIBUTION_LTK | SM_KEY_DISTRIBUTION_IRK));
#endif /* !CSR101x_A05 */
}
   50C0E:	FE0F      	leave      #-0x2

0x00050C0F <HALServerWriteInit>:
#if defined (CSR101x_A05)
    /* Install GATT Server support for Write procedures */
    GattInstallServerWrite();
#else
    /* Install the Server Exchange MTU */
    GattInstallServerExchangeMtu();
   50C0F:	FB00      	**prefx    0xFB
   50C10:	5A00      	**prefx    0x5A
   50C11:	0CE0      	bra        -0x4A5F4 <GattInstallServerExchangeMtu:0x661D[p]>

0x00050C12 <HALGapSetPeripheralMode>:
extern void HALGapSetPeripheralMode(gap_role role,
                                    gap_mode_bond bond_mode,
                                    gap_mode_security security_mode,
                                    gap_mode_discover discover,
                                    gap_mode_connect connect)
{
   50C12:	FE0B      	enter      #-0x2
   50C13:	E015      	ld         al, @0xFFE0 <register ah>
#ifndef CSR101x_A05
    /* Set default security mode */
    GapSetDefaultSecurity(bond_mode, security_mode);
   50C14:	0213      	ld         ah, @(+0x2, y)
   50C15:	FB00      	**prefx    0xFB
   50C16:	3000      	**prefx    0x30
   50C17:	CE9C      	bsr        -0x4D032 <GapSetDefaultSecurity:0x3BE5[p]>

    /* Set default discovery mode */
    GapSetAdvDiscoveryMode(discover);
   50C18:	0317      	ld         al, @(+0x3, y)
   50C19:	FB00      	**prefx    0xFB
   50C1A:	3000      	**prefx    0x30
   50C1B:	9A9C      	bsr        -0x4D066 <GapSetAdvDiscoveryMode:0x3BB5[p]>
#else
    /* Set the GAP mode */
    GapSetMode(role, discover,
               connect, bond_mode, security_mode);
#endif /* !CSR101x_A05 */
}
   50C1C:	FE0F      	leave      #-0x2

0x00050C1D <HALGapLsFindAdType>:
 *---------------------------------------------------------------------------*/
extern uint16 HALGapLsFindAdType(h_ls_advertising_report_ind_t *adv_ind,
                          uint16 adv_type,
                          uint16 *data,
                          uint16 size)
{
   50C1D:	FE0B      	enter      #-0x2
                               adv_type,
                               data,
                               size);
#endif /* !CSR101x_A05  */

}
   50C1E:	001B      	ld         x, @(0x0, y)
   50C1F:	023C      	add        y, #+0x2
                          uint16 adv_type,
                          uint16 *data,
                          uint16 size)
{
#ifndef CSR101x_A05
    return GapLsFindAdType(&adv_ind->report.hdr,
   50C20:	FB00      	**prefx    0xFB
   50C21:	2200      	**prefx    0x22
   50C22:	B3E0      	bra        -0x4DE4D <GapLsFindAdType:0x2DD5[p]>

0x00050C23 <parseName>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void parseName(CM_ADV_REPORT_IND_T *cm_adv_report_ind,
        h_ls_advertising_report_ind_t *adv_ind)
{
   50C23:	DA0B      	enter      #-0x26
   50C24:	2227      	st         al, @(+0x22, y)
   50C25:	2323      	st         ah, @(+0x23, y)
    uint16 size;
    uint16 src;
    uint16 dst;

    /* Initialise the name */
    MemSet(cm_adv_report_ind->name, 0, 21);
   50C26:	0634      	add        al, #+0x6
   50C27:	2127      	st         al, @(+0x21, y)
   50C28:	1514      	ld         al, #+0x15
   50C29:	0027      	st         al, @(0x0, y)
   50C2A:	2117      	ld         al, @(+0x21, y)
   50C2B:	0010      	ld         ah, #+0x0
   50C2C:	FB00      	**prefx    0xFB
   50C2D:	1F00      	**prefx    0x1F
   50C2E:	229C      	bsr        -0x4E0DE <MemSet:0x2B50[p]>

    /* Try to get the complete name */
    size = HALGapLsFindAdType(adv_ind,
   50C2F:	E419      	ld         x, @0xFFE4 <register uy>
   50C30:	0238      	add        x, #+0x2
   50C31:	002B      	st         x, @(0x0, y)
   50C32:	1F14      	ld         al, #+0x1F
   50C33:	0127      	st         al, @(+0x1, y)
   50C34:	2317      	ld         al, @(+0x23, y)
   50C35:	0910      	ld         ah, #+0x9
   50C36:	E79C      	bsr        -0x19 <HALGapLsFindAdType:0x50C1D[p]>
   50C37:	FB25      	st         al, @0xFFFB <(scratchpad)>
                           AD_TYPE_LOCAL_NAME_COMPLETE,
                           data,
                           ADVSCAN_MAX_PAYLOAD);

    if(size == 0)
   50C38:	0AF0      	bne        +0xA <parseName+0x1F:0x50C42[p]>
    {
        /* Try to get the short name */
        size = HALGapLsFindAdType(adv_ind,
   50C39:	E419      	ld         x, @0xFFE4 <register uy>
   50C3A:	0238      	add        x, #+0x2
   50C3B:	002B      	st         x, @(0x0, y)
   50C3C:	1F14      	ld         al, #+0x1F
   50C3D:	0127      	st         al, @(+0x1, y)
   50C3E:	2317      	ld         al, @(+0x23, y)
   50C3F:	0810      	ld         ah, #+0x8
   50C40:	DD9C      	bsr        -0x23 <HALGapLsFindAdType:0x50C1D[p]>
   50C41:	FB25      	st         al, @0xFFFB <(scratchpad)>
                               data,
                               ADVSCAN_MAX_PAYLOAD);
    }

    /* Limit the name to 20 characters */
    if(size > 20) size = 20;
   50C42:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   50C43:	1488      	cmp        x, #+0x14
   50C44:	042C      	bcz        +0x4 <parseName+0x25:0x50C48[p]>
   50C45:	1414      	ld         al, #+0x14
   50C46:	FB25      	st         al, @0xFFFB <(scratchpad)>
   50C47:	03E0      	bra        +0x3 <parseName+0x27:0x50C4A[p]>

    if(size > 0)
   50C48:	FB99      	tst        @0xFFFB <(scratchpad)>
   50C49:	31F4      	beq        +0x31 <parseName+0x57:0x50C7A[p]>
    {
        /* Parse the name */
        for(src = 0, dst = 0; src < (size/2); src++)
   50C4A:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   50C4B:	0009      	**unsigned
   50C4C:	01A4      	lsr        #0x1
   50C4D:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   50C4E:	E419      	ld         x, @0xFFE4 <register uy>
   50C4F:	0238      	add        x, #+0x2
   50C50:	F929      	st         x, @0xFFF9 <(scratchpad)>
   50C51:	2217      	ld         al, @(+0x22, y)
   50C52:	F825      	st         al, @0xFFF8 <(scratchpad)>
   50C53:	10E0      	bra        +0x10 <parseName+0x40:0x50C63[p]>
        {
            cm_adv_report_ind->name[dst++] = (char)(data[src] & 0x00ff);
   50C54:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   50C55:	0016      	ld         al, @(0x0, x)
   50C56:	0100      	**prefx    0x1
   50C57:	FFC4      	and        al, #0xFF
   50C58:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50C59:	0426      	st         al, @(+0x4, x)
            cm_adv_report_ind->name[dst++] = (char)((data[src] & 0xff00) >> 8);
   50C5A:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   50C5B:	0012      	ld         ah, @(0x0, x)
   50C5C:	0009      	**unsigned
   50C5D:	08A4      	lsr        #0x8
   50C5E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50C5F:	0522      	st         ah, @(+0x5, x)
   50C60:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   50C61:	0134      	add        al, #+0x1
   50C62:	F925      	st         al, @0xFFF9 <(scratchpad)>
   50C63:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50C64:	0238      	add        x, #+0x2
   50C65:	F829      	st         x, @0xFFF8 <(scratchpad)>
    if(size > 20) size = 20;

    if(size > 0)
    {
        /* Parse the name */
        for(src = 0, dst = 0; src < (size/2); src++)
   50C66:	E415      	ld         al, @0xFFE4 <register uy>
   50C67:	0234      	add        al, #+0x2
   50C68:	FA35      	add        al, @0xFFFA <(scratchpad)>
   50C69:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   50C6A:	E189      	cmp        x, @0xFFE1 <register al>
   50C6B:	E9F0      	bne        -0x17 <parseName+0x31:0x50C54[p]>
   50C6C:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   50C6D:	01A0      	asl        #0x1
        {
            cm_adv_report_ind->name[dst++] = (char)(data[src] & 0x00ff);
            cm_adv_report_ind->name[dst++] = (char)((data[src] & 0xff00) >> 8);
        }
        if(size % 2)
   50C6E:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   50C6F:	01C8      	and        x, #0x1
   50C70:	12F4      	beq        +0x12 <parseName+0x5F:0x50C82[p]>
            cm_adv_report_ind->name[dst++] = (char)(data[src] & 0x00ff);
   50C71:	2237      	add        al, @(+0x22, y)
   50C72:	2227      	st         al, @(+0x22, y)
   50C73:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   50C74:	0016      	ld         al, @(0x0, x)
   50C75:	0100      	**prefx    0x1
   50C76:	FFC4      	and        al, #0xFF
   50C77:	221B      	ld         x, @(+0x22, y)
   50C78:	0626      	st         al, @(+0x6, x)
   50C79:	09E0      	bra        +0x9 <parseName+0x5F:0x50C82[p]>

    }
    else
    {
       /* Assign the unknown name */
       StrNCopy(cm_adv_report_ind->name, "Unknown", 7);
   50C7A:	0718      	ld         x, #+0x7
   50C7B:	002B      	st         x, @(0x0, y)
   50C7C:	2117      	ld         al, @(+0x21, y)
   50C7D:	A000      	**prefx    0xA0
   50C7E:	1710      	ld         ah, #-0x5FE9
   50C7F:	FC00      	**prefx    0xFC
   50C80:	5300      	**prefx    0x53
   50C81:	F59C      	bsr        -0x3AD0B <StrNCopy:0x15F76[p]>
    }
}
   50C82:	DA0F      	leave      #-0x26

0x00050C83 <HALParseAdvertisingReportInd>:
 *      Nothing
 *---------------------------------------------------------------------------*/

extern void HALParseAdvertisingReportInd(CM_ADV_REPORT_IND_T *cm_adv_report_ind,
        h_ls_advertising_report_ind_t *adv_ind)
{
   50C83:	ED0B      	enter      #-0x13
   50C84:	F825      	st         al, @0xFFF8 <(scratchpad)>
   50C85:	FA21      	st         ah, @0xFFFA <(scratchpad)>
#ifndef CSR101x_A05
    hci_advertising_report_t report = (hci_advertising_report_t)adv_ind->report;
   50C86:	0914      	ld         al, #+0x9
   50C87:	E411      	ld         ah, @0xFFE4 <register uy>
   50C88:	0830      	add        ah, #+0x8
   50C89:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   50C8A:	FD09      	bc2        
   50C8B:	1017      	ld         al, @(+0x10, y)
   50C8C:	F925      	st         al, @0xFFF9 <(scratchpad)>
    HCI_EV_DATA_ULP_ADVERTISING_REPORT_T report_data =
            (HCI_EV_DATA_ULP_ADVERTISING_REPORT_T)report.hdr;
   50C8D:	0814      	ld         al, #+0x8
   50C8E:	E411      	ld         ah, @0xFFE4 <register uy>
   50C8F:	E419      	ld         x, @0xFFE4 <register uy>
   50C90:	0838      	add        x, #+0x8
   50C91:	FD09      	bc2        
    cm_adv_report_ind->bd_addr.type = report_data.address_type;
   50C92:	0217      	ld         al, @(+0x2, y)
   50C93:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50C94:	0026      	st         al, @(0x0, x)
    cm_adv_report_ind->bd_addr.addr = report_data.address;
   50C95:	0617      	ld         al, @(+0x6, y)
   50C96:	0426      	st         al, @(+0x4, x)
   50C97:	0517      	ld         al, @(+0x5, y)
   50C98:	0326      	st         al, @(+0x3, x)
   50C99:	0417      	ld         al, @(+0x4, y)
   50C9A:	0226      	st         al, @(+0x2, x)
   50C9B:	0317      	ld         al, @(+0x3, y)
   50C9C:	0126      	st         al, @(+0x1, x)
    cm_adv_report_ind->rssi = report.rssi;
   50C9D:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   50C9E:	0526      	st         al, @(+0x5, x)
    cm_adv_report_ind->type = report_data.event_type;
   50C9F:	0117      	ld         al, @(+0x1, y)
   50CA0:	1B26      	st         al, @(+0x1B, x)
    parseName(cm_adv_report_ind, adv_ind);
   50CA1:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   50CA2:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
            adv_ind->data.address;
    cm_adv_report_ind->rssi = adv_ind->rssi;
    cm_adv_report_ind->type = adv_ind->data.event_type;
    parseName(cm_adv_report_ind, adv_ind);
#endif /* !CSR101x_A05  */
}
   50CA3:	111B      	ld         x, @(+0x11, y)
   50CA4:	133C      	add        y, #+0x13
            (HCI_EV_DATA_ULP_ADVERTISING_REPORT_T)report.hdr;
    cm_adv_report_ind->bd_addr.type = report_data.address_type;
    cm_adv_report_ind->bd_addr.addr = report_data.address;
    cm_adv_report_ind->rssi = report.rssi;
    cm_adv_report_ind->type = report_data.event_type;
    parseName(cm_adv_report_ind, adv_ind);
   50CA5:	FF00      	**prefx    0xFF
   50CA6:	7DE0      	bra        -0x83 <parseName:0x50C23[p]>

0x00050CA7 <CMGetMainData>:
 *---------------------------------------------------------------------------*/

extern CM_MAIN_DATA_T* CMGetMainData(void)
{
    return &g_cm_main_data;
}
   50CA7:	6100      	**prefx    0x61
   50CA8:	1914      	ld         al, #+0x6119
   50CA9:	00E2      	bra        0x0, x

0x00050CAA <CMNotifyEventToApplication>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMNotifyEventToApplication(cm_event core_event,
                                       CM_EVENT_T *p_event_data)
{
   50CAA:	FE0B      	enter      #-0x2
   50CAB:	FA25      	st         al, @0xFFFA <(scratchpad)>
    if(g_cm_main_data.app_handlers->pCallback != NULL)
   50CAC:	6100      	**prefx    0x61
   50CAD:	1919      	ld         x, @0x6119 <g_cm_main_data>
   50CAE:	0116      	ld         al, @(+0x1, x)
   50CAF:	F925      	st         al, @0xFFF9 <(scratchpad)>
   50CB0:	001A      	ld         x, @(0x0, x)
   50CB1:	F829      	st         x, @0xFFF8 <(scratchpad)>
   50CB2:	E315      	ld         al, @0xFFE3 <register uxl>
   50CB3:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   50CB4:	08F4      	beq        +0x8 <CMNotifyEventToApplication+0x12:0x50CBC[p]>
    {
        g_cm_main_data.app_handlers->pCallback(core_event, p_event_data);
   50CB5:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   50CB6:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   50CB7:	FE2B      	st         x, @(-0x2, y)
   50CB8:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50CB9:	FF2B      	st         x, @(-0x1, y)
   50CBA:	FF0E      	ld         xh, @(-0x1, y)
   50CBB:	FE9F      	bsr        @(-0x2, y)
    }
}
   50CBC:	FE0F      	leave      #-0x2

0x00050CBD <CMPrivateInit>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMPrivateInit(CM_INIT_PARAMS_T *cm_init_params)
{
   50CBD:	FE0B      	enter      #-0x2
   50CBE:	E119      	ld         x, @0xFFE1 <register al>
    uint16 index;

    index = sizeof(CM_CONN_INFO_T);

    /* Save the application handler */
    g_cm_main_data.app_handlers = cm_init_params->cm_app_handler;
   50CBF:	0016      	ld         al, @(0x0, x)
   50CC0:	6100      	**prefx    0x61
   50CC1:	1925      	st         al, @0x6119 <g_cm_main_data>

    /* Save the connection information */
    g_cm_main_data.cm_conn_info = (CM_CONN_INFO_T*)cm_init_params->conn_info;
   50CC2:	0116      	ld         al, @(+0x1, x)
   50CC3:	F925      	st         al, @0xFFF9 <(scratchpad)>
   50CC4:	6100      	**prefx    0x61
   50CC5:	1A25      	st         al, @0x611A <g_cm_main_data+0x1>
    g_cm_main_data.max_connections = cm_init_params->max_connections;
   50CC6:	021A      	ld         x, @(+0x2, x)
   50CC7:	F829      	st         x, @0xFFF8 <(scratchpad)>
   50CC8:	6100      	**prefx    0x61
   50CC9:	1B29      	st         x, @0x611B <g_cm_main_data+0x2>
   50CCA:	0014      	ld         al, #+0x0
   50CCB:	0BE0      	bra        +0xB <CMPrivateInit+0x19:0x50CD6[p]>
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMPrivateInit(CM_INIT_PARAMS_T *cm_init_params)
{
   50CCC:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   50CCD:	0E90      	smult      #+0xE
   50CCE:	E119      	ld         x, @0xFFE1 <register al>
   50CCF:	F939      	add        x, @0xFFF9 <(scratchpad)>
    g_cm_main_data.max_connections = cm_init_params->max_connections;

    /* Initialise active connections list */
    for(index = 0; index < g_cm_main_data.max_connections; index++)
    {
        g_cm_main_data.cm_conn_info[index].cid = CM_GATT_INVALID_UCID;
   50CD0:	FF14      	ld         al, #-0x1
   50CD1:	0526      	st         al, @(+0x5, x)
        g_cm_main_data.cm_conn_info[index].device_state
   50CD2:	0314      	ld         al, #+0x3
   50CD3:	0B26      	st         al, @(+0xB, x)
    /* Save the connection information */
    g_cm_main_data.cm_conn_info = (CM_CONN_INFO_T*)cm_init_params->conn_info;
    g_cm_main_data.max_connections = cm_init_params->max_connections;

    /* Initialise active connections list */
    for(index = 0; index < g_cm_main_data.max_connections; index++)
   50CD4:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   50CD5:	0134      	add        al, #+0x1
   50CD6:	FA25      	st         al, @0xFFFA <(scratchpad)>
   50CD7:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   50CD8:	F4FC      	bcs        -0xC <CMPrivateInit+0xF:0x50CCC[p]>
    {
        g_cm_main_data.cm_conn_info[index].cid = CM_GATT_INVALID_UCID;
        g_cm_main_data.cm_conn_info[index].device_state
                = dev_state_disconnected;
    }
}
   50CD9:	FE0F      	leave      #-0x2

0x00050CDA <CMResetDevConnParam>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMResetDevConnParam(device_handle_id device_id)
{
   50CDA:	FE0B      	enter      #-0x2
     g_cm_main_data.cm_conn_info[device_id].conn_param.conn_interval = 0;
   50CDB:	0E90      	smult      #+0xE
   50CDC:	6100      	**prefx    0x61
   50CDD:	1A19      	ld         x, @0x611A <g_cm_main_data+0x1>
   50CDE:	E139      	add        x, @0xFFE1 <register al>
   50CDF:	0010      	ld         ah, #+0x0
   50CE0:	0122      	st         ah, @(+0x1, x)
     g_cm_main_data.cm_conn_info[device_id].conn_param.conn_latency = 0;
   50CE1:	6100      	**prefx    0x61
   50CE2:	1A19      	ld         x, @0x611A <g_cm_main_data+0x1>
   50CE3:	E139      	add        x, @0xFFE1 <register al>
   50CE4:	0222      	st         ah, @(+0x2, x)
     g_cm_main_data.cm_conn_info[device_id].conn_param.supervision_timeout = 0;
   50CE5:	0322      	st         ah, @(+0x3, x)
}
   50CE6:	FE0F      	leave      #-0x2

0x00050CE7 <CMIsDeviceIdValid>:
 *  RETURNS
 *      bool: TRUE for valid device id
 *
 *---------------------------------------------------------------------------*/
extern bool CMIsDeviceIdValid(device_handle_id device_id)
{
   50CE7:	0010      	ld         ah, #+0x0
   50CE8:	6100      	**prefx    0x61
   50CE9:	1B85      	cmp        al, @0x611B <g_cm_main_data+0x2>
   50CEA:	02F8      	bcc        +0x2 <CMIsDeviceIdValid+0x5:0x50CEC[p]>
   50CEB:	0110      	ld         ah, #+0x1
    return VALID_DEVICE_ID(device_id);
}
   50CEC:	E015      	ld         al, @0xFFE0 <register ah>
   50CED:	00E2      	bra        0x0, x

0x00050CEE <CMSetDeviceBondState>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMSetDeviceBondState(device_handle_id device_id, cm_dev_bond_state bond_state)
{
   50CEE:	FE0B      	enter      #-0x2
   50CEF:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    g_cm_main_data.cm_conn_info[device_id].bond_state = bond_state;
   50CF0:	0E90      	smult      #+0xE
   50CF1:	6100      	**prefx    0x61
   50CF2:	1A35      	add        al, @0x611A <g_cm_main_data+0x1>
   50CF3:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   50CF4:	E119      	ld         x, @0xFFE1 <register al>
   50CF5:	0D22      	st         ah, @(+0xD, x)
}
   50CF6:	FE0F      	leave      #-0x2

0x00050CF7 <CMReportPanic>:
 *
 *----------------------------------------------------------------------------*/
extern void CMReportPanic(cm_panic_code panic_code)
{
    /* If we want any debug prints, we can put them here */
    Panic(panic_code);
   50CF7:	FC00      	**prefx    0xFC
   50CF8:	AF00      	**prefx    0xAF
   50CF9:	63E0      	bra        -0x4509D <Panic:0xBC5C[p]>

0x00050CFA <CMSetDeviceEncryptState>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMSetDeviceEncryptState(device_handle_id device_id, bool enc_state)
{
   50CFA:	FC0B      	enter      #-0x4
   50CFB:	0027      	st         al, @(0x0, y)
   50CFC:	0123      	st         ah, @(+0x1, y)
    if(VALID_DEVICE_ID(device_id) == FALSE)
   50CFD:	6100      	**prefx    0x61
   50CFE:	1B85      	cmp        al, @0x611B <g_cm_main_data+0x2>
   50CFF:	03FC      	bcs        +0x3 <CMSetDeviceEncryptState+0x8:0x50D02[p]>
    {
        CMReportPanic(cm_panic_invalid_device_id);
   50D00:	1114      	ld         al, #+0x11
   50D01:	F69C      	bsr        -0xA <CMReportPanic:0x50CF7[p]>
    }
    g_cm_main_data.cm_conn_info[device_id].encryption_enabled = enc_state;
   50D02:	0017      	ld         al, @(0x0, y)
   50D03:	0E90      	smult      #+0xE
   50D04:	6100      	**prefx    0x61
   50D05:	1A35      	add        al, @0x611A <g_cm_main_data+0x1>
   50D06:	F825      	st         al, @0xFFF8 <(scratchpad)>
   50D07:	0117      	ld         al, @(+0x1, y)
   50D08:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   50D09:	0026      	st         al, @(0x0, x)
}
   50D0A:	FC0F      	leave      #-0x4

0x00050D0B <CMGetConnId>:
 *  RETURNS
 *      uint16: cid
 *
 *---------------------------------------------------------------------------*/
extern uint16 CMGetConnId(device_handle_id device_id)
{
   50D0B:	FD0B      	enter      #-0x3
   50D0C:	0027      	st         al, @(0x0, y)
    if(VALID_DEVICE_ID(device_id) == FALSE)
   50D0D:	6100      	**prefx    0x61
   50D0E:	1B85      	cmp        al, @0x611B <g_cm_main_data+0x2>
   50D0F:	03FC      	bcs        +0x3 <CMGetConnId+0x7:0x50D12[p]>
    {
        CMReportPanic(cm_panic_invalid_device_id);
   50D10:	1114      	ld         al, #+0x11
   50D11:	E69C      	bsr        -0x1A <CMReportPanic:0x50CF7[p]>
   50D12:	0017      	ld         al, @(0x0, y)
   50D13:	0E90      	smult      #+0xE
   50D14:	6100      	**prefx    0x61
   50D15:	1A35      	add        al, @0x611A <g_cm_main_data+0x1>
   50D16:	E119      	ld         x, @0xFFE1 <register al>
   50D17:	0516      	ld         al, @(+0x5, x)
    }
    return g_cm_main_data.cm_conn_info[device_id].cid;
}
   50D18:	FD0F      	leave      #-0x3

0x00050D19 <CMSetConnParam>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMSetConnParam(device_handle_id device_id,
                              CM_DEV_CONN_PARAM_T *connection_param)
{
   50D19:	FC0B      	enter      #-0x4
   50D1A:	0027      	st         al, @(0x0, y)
   50D1B:	0123      	st         ah, @(+0x1, y)

    if (VALID_DEVICE_ID(device_id) == FALSE)
   50D1C:	6100      	**prefx    0x61
   50D1D:	1B85      	cmp        al, @0x611B <g_cm_main_data+0x2>
   50D1E:	03FC      	bcs        +0x3 <CMSetConnParam+0x8:0x50D21[p]>
    {
        CMReportPanic(cm_panic_invalid_device_id);
   50D1F:	1114      	ld         al, #+0x11
   50D20:	D79C      	bsr        -0x29 <CMReportPanic:0x50CF7[p]>
    }
    g_cm_main_data.cm_conn_info[device_id].conn_param = *connection_param;
   50D21:	0017      	ld         al, @(0x0, y)
   50D22:	0E90      	smult      #+0xE
   50D23:	E119      	ld         x, @0xFFE1 <register al>
   50D24:	6100      	**prefx    0x61
   50D25:	1A39      	add        x, @0x611A <g_cm_main_data+0x1>
   50D26:	0314      	ld         al, #+0x3
   50D27:	E311      	ld         ah, @0xFFE3 <register uxl>
   50D28:	0130      	add        ah, #+0x1
   50D29:	011B      	ld         x, @(+0x1, y)
   50D2A:	FD09      	bc2        
}
   50D2B:	FC0F      	leave      #-0x4

0x00050D2C <CMSetDevState>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMSetDevState(device_handle_id device_id, cm_dev_state new_state)
{
   50D2C:	FA0B      	enter      #-0x6
   50D2D:	0227      	st         al, @(+0x2, y)
   50D2E:	0323      	st         ah, @(+0x3, y)
    cm_dev_state old_state =
            g_cm_main_data.cm_conn_info[device_id].device_state;
   50D2F:	0E90      	smult      #+0xE
   50D30:	0127      	st         al, @(+0x1, y)
   50D31:	6100      	**prefx    0x61
   50D32:	1A19      	ld         x, @0x611A <g_cm_main_data+0x1>
   50D33:	E139      	add        x, @0xFFE1 <register al>
   50D34:	0B1A      	ld         x, @(+0xB, x)
   50D35:	002B      	st         x, @(0x0, y)

    if(VALID_DEVICE_ID(device_id) == FALSE)
   50D36:	0217      	ld         al, @(+0x2, y)
   50D37:	6100      	**prefx    0x61
   50D38:	1B85      	cmp        al, @0x611B <g_cm_main_data+0x2>
   50D39:	03FC      	bcs        +0x3 <CMSetDevState+0x10:0x50D3C[p]>
    {
        CMReportPanic(cm_panic_invalid_device_id);
   50D3A:	1114      	ld         al, #+0x11
   50D3B:	BC9C      	bsr        -0x44 <CMReportPanic:0x50CF7[p]>
    }

    if(old_state == new_state)
   50D3C:	0017      	ld         al, @(0x0, y)
   50D3D:	0387      	cmp        al, @(+0x3, y)
   50D3E:	17F4      	beq        +0x17 <CMSetDevState+0x29:0x50D55[p]>
        return;

    switch (new_state)
   50D3F:	0317      	ld         al, @(+0x3, y)
   50D40:	0284      	cmp        al, #+0x2
   50D41:	04F4      	beq        +0x4 <CMSetDevState+0x19:0x50D45[p]>
   50D42:	0384      	cmp        al, #+0x3
   50D43:	0DF0      	bne        +0xD <CMSetDevState+0x24:0x50D50[p]>
   50D44:	07E0      	bra        +0x7 <CMSetDevState+0x1F:0x50D4B[p]>
    {
        case dev_state_disconnecting:
        {
            GattDisconnectReq(CMGetConnId(device_id));
   50D45:	0217      	ld         al, @(+0x2, y)
   50D46:	C59C      	bsr        -0x3B <CMGetConnId:0x50D0B[p]>
   50D47:	FB00      	**prefx    0xFB
   50D48:	5D00      	**prefx    0x5D
   50D49:	459C      	bsr        -0x4A2BB <GattDisconnectReq:0x6A8E[p]>
   50D4A:	06E0      	bra        +0x6 <CMSetDevState+0x24:0x50D50[p]>
        }
        break;
        case dev_state_disconnected:
        {
            g_cm_main_data.cm_conn_info[device_id].cid =
   50D4B:	6100      	**prefx    0x61
   50D4C:	1A19      	ld         x, @0x611A <g_cm_main_data+0x1>
   50D4D:	013B      	add        x, @(+0x1, y)
   50D4E:	FF14      	ld         al, #-0x1
   50D4F:	0526      	st         al, @(+0x5, x)
        default:
            /* Nothing to do */
        break;
    }

    g_cm_main_data.cm_conn_info[device_id].device_state = new_state;
   50D50:	6100      	**prefx    0x61
   50D51:	1A19      	ld         x, @0x611A <g_cm_main_data+0x1>
   50D52:	013B      	add        x, @(+0x1, y)
   50D53:	0317      	ld         al, @(+0x3, y)
   50D54:	0B26      	st         al, @(+0xB, x)

}
   50D55:	FA0F      	leave      #-0x6

0x00050D56 <CMGetDeviceId>:
 *  RETURNS
 *      device_handle_id: Device id of the device
 *
 *---------------------------------------------------------------------------*/
extern device_handle_id CMGetDeviceId(uint16 event_id, void *event)
{
   50D56:	FD0B      	enter      #-0x3
    return HALGetDeviceId(event_id, event, &g_cm_main_data);
   50D57:	6100      	**prefx    0x61
   50D58:	1918      	ld         x, #+0x6119
   50D59:	002B      	st         x, @(0x0, y)
   50D5A:	FD00      	**prefx    0xFD
   50D5B:	299C      	bsr        -0x2D7 <HALGetDeviceId:0x50A84[p]>
}
   50D5C:	FD0F      	leave      #-0x3

0x00050D5D <handleSignalLmDisconnectComplete>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleSignalLmDisconnectComplete(
        h_disconnect_complete_ind_t *p_event_data)
{
   50D5D:	F40B      	enter      #-0xC
   50D5E:	0927      	st         al, @(+0x9, y)
    CM_CONNECTION_NOTIFY_T  cm_connect_notify;
    TYPED_BD_ADDR_T bd_addr;

    device_handle_id device_id = CMGetDeviceId(HAL_DISCONNECT_COMPLETE_IND,
                                     (void*)p_event_data);
   50D5F:	1900      	**prefx    0x19
   50D60:	5114      	ld         al, #+0x1951
   50D61:	0913      	ld         ah, @(+0x9, y)
   50D62:	F49C      	bsr        -0xC <CMGetDeviceId:0x50D56[p]>
   50D63:	0827      	st         al, @(+0x8, y)
    if(device_id == CM_INVALID_DEVICE_ID)
   50D64:	FF84      	cmp        al, #-0x1
   50D65:	2FF4      	beq        +0x2F <handleSignalLmDisconnectComplete+0x37:0x50D94[p]>
        return;

    /* Get the bluetooth address of the device */
    CMGetBdAdressFromDeviceId(device_id, &bd_addr);
   50D66:	E411      	ld         ah, @0xFFE4 <register uy>
   50D67:	0330      	add        ah, #+0x3
   50D68:	FC00      	**prefx    0xFC
   50D69:	7F9C      	bsr        -0x381 <CMGetBdAdressFromDeviceId:0x509E8[p]>

    /* Reset the connection parameter variables. */
    CMResetDevConnParam(device_id);
   50D6A:	0817      	ld         al, @(+0x8, y)
   50D6B:	FF00      	**prefx    0xFF
   50D6C:	6E9C      	bsr        -0x92 <CMResetDevConnParam:0x50CDA[p]>

    switch(CMGetDevState(device_id))
   50D6D:	0817      	ld         al, @(+0x8, y)
   50D6E:	FC00      	**prefx    0xFC
   50D6F:	629C      	bsr        -0x39E <CMGetDevState:0x509D1[p]>
   50D70:	FF34      	add        al, #-0x1
   50D71:	0284      	cmp        al, #+0x2
   50D72:	1FF8      	bcc        +0x1F <handleSignalLmDisconnectComplete+0x34:0x50D91[p]>
        case dev_state_disconnecting:
        {
            /* Check whether we are waiting for disconnection of the link in
             * the case of device being unpaired
             */
            if(CMGetDeviceBondState(device_id) == cm_dev_unbonding)
   50D73:	0817      	ld         al, @(+0x8, y)
   50D74:	FC00      	**prefx    0xFC
   50D75:	0A9C      	bsr        -0x3F6 <CMGetDeviceBondState:0x5097F[p]>
   50D76:	0384      	cmp        al, #+0x3
   50D77:	07F0      	bne        +0x7 <handleSignalLmDisconnectComplete+0x21:0x50D7E[p]>
            {
                ClearBondingInfo(CMGetBondId(&bd_addr));
   50D78:	E415      	ld         al, @0xFFE4 <register uy>
   50D79:	0334      	add        al, #+0x3
   50D7A:	0300      	**prefx    0x3
   50D7B:	009C      	bsr        +0x300 <CMGetBondId:0x5107B[p]>
   50D7C:	0300      	**prefx    0x3
   50D7D:	919C      	bsr        +0x291 <ClearBondingInfo:0x5100E[p]>
            }

            /* Enter idle state. */
            CMSetDevState(device_id, dev_state_disconnected);
   50D7E:	0817      	ld         al, @(+0x8, y)
   50D7F:	0310      	ld         ah, #+0x3
   50D80:	AC9C      	bsr        -0x54 <CMSetDevState:0x50D2C[p]>

            /* Prepare the disconnect confirm message */
            cm_connect_notify.reason = p_event_data->reason;
   50D81:	091B      	ld         x, @(+0x9, y)
   50D82:	021A      	ld         x, @(+0x2, x)
   50D83:	022B      	st         x, @(+0x2, y)
            cm_connect_notify.device_id = device_id;
   50D84:	0817      	ld         al, @(+0x8, y)
   50D85:	0027      	st         al, @(0x0, y)
            cm_connect_notify.result = cm_disconn_res_success;
   50D86:	0318      	ld         x, #+0x3
   50D87:	012B      	st         x, @(+0x1, y)

            /* Send connect event to all the server/client handlers regd */
#if defined (SERVER)
            CMServerNotifyGenericEvent(CM_CONNECTION_NOTIFY,
   50D88:	0614      	ld         al, #+0x6
   50D89:	E411      	ld         ah, @0xFFE4 <register uy>
   50D8A:	0500      	**prefx    0x5
   50D8B:	B89C      	bsr        +0x4B8 <CMServerNotifyGenericEvent:0x51243[p]>
            CMClientNotifyGenericEvent(CM_CONNECTION_NOTIFY,
                                  (CM_EVENT_T *)&cm_connect_notify);
#endif /*CLIENT  */

            /* Send disconnect event to application*/
            CMNotifyEventToApplication(CM_CONNECTION_NOTIFY,
   50D8C:	0614      	ld         al, #+0x6
   50D8D:	E411      	ld         ah, @0xFFE4 <register uy>
   50D8E:	FF00      	**prefx    0xFF
   50D8F:	1B9C      	bsr        -0xE5 <CMNotifyEventToApplication:0x50CAA[p]>
   50D90:	04E0      	bra        +0x4 <handleSignalLmDisconnectComplete+0x37:0x50D94[p]>

        default:
            /* The event has been received in an invalid state.
             * Report panic
             */
            CMReportPanic(cm_panic_invalid_state);
   50D91:	0B14      	ld         al, #+0xB
   50D92:	FF00      	**prefx    0xFF
   50D93:	649C      	bsr        -0x9C <CMReportPanic:0x50CF7[p]>
        break;
    }
}
   50D94:	F40F      	leave      #-0xC

0x00050D95 <handleSignalLsDataRxTimingInd>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleSignalLsDataRxTimingInd(h_ls_data_rx_timing_ind_t *p_event_data)
{
   50D95:	F50B      	enter      #-0xB
   50D96:	0827      	st         al, @(+0x8, y)
    CM_DATA_RX_TIMING_IND_T rx_timing_event_ind;

    rx_timing_event_ind.device_id = CMGetDeviceId(HAL_LS_DATA_RX_TIMING_IND,
   50D97:	1900      	**prefx    0x19
   50D98:	4C14      	ld         al, #+0x194C
   50D99:	0813      	ld         ah, @(+0x8, y)
   50D9A:	BC9C      	bsr        -0x44 <CMGetDeviceId:0x50D56[p]>
   50D9B:	0027      	st         al, @(0x0, y)
                                     (void*)p_event_data);

    rx_timing_event_ind.tx_duration = p_event_data->tx_duration;
   50D9C:	081B      	ld         x, @(+0x8, y)
   50D9D:	011A      	ld         x, @(+0x1, x)
   50D9E:	012B      	st         x, @(+0x1, y)

    MemCopy(rx_timing_event_ind.tx_event_offset,p_event_data->tx_event_offset,3);
   50D9F:	0817      	ld         al, @(+0x8, y)
   50DA0:	0234      	add        al, #+0x2
   50DA1:	0827      	st         al, @(+0x8, y)
   50DA2:	0314      	ld         al, #+0x3
   50DA3:	E411      	ld         ah, @0xFFE4 <register uy>
   50DA4:	0230      	add        ah, #+0x2
   50DA5:	081B      	ld         x, @(+0x8, y)
   50DA6:	FD09      	bc2        

    MemCopy(rx_timing_event_ind.tx_transmit_offset,p_event_data->tx_transmit_offset,3);
   50DA7:	081B      	ld         x, @(+0x8, y)
   50DA8:	0338      	add        x, #+0x3
   50DA9:	082B      	st         x, @(+0x8, y)
   50DAA:	0314      	ld         al, #+0x3
   50DAB:	FD09      	bc2        

    /* Send timimg event to the application */
    CMNotifyEventToApplication(CM_DATA_RX_TIMING_IND,
   50DAC:	0D14      	ld         al, #+0xD
   50DAD:	E411      	ld         ah, @0xFFE4 <register uy>
   50DAE:	FF00      	**prefx    0xFF
   50DAF:	FB9C      	bsr        -0x105 <CMNotifyEventToApplication:0x50CAA[p]>
                               (CM_EVENT_T *)&rx_timing_event_ind);

}
   50DB0:	F50F      	leave      #-0xB

0x00050DB1 <handleSignalLsConnUpdateSignallingInd>:
 *
 *---------------------------------------------------------------------------*/
static void handleSignalLsConnUpdateSignallingInd(
        h_ls_connection_update_signalling_ind_t
        *p_event_data)
{
   50DB1:	F70B      	enter      #-0x9
   50DB2:	0627      	st         al, @(+0x6, y)
    CM_CONNECTION_UPDATE_SIGNALLING_IND_T conn_update_signalling_ind;

    conn_update_signalling_ind.device_id = CMGetDeviceId(
   50DB3:	1900      	**prefx    0x19
   50DB4:	3714      	ld         al, #+0x1937
   50DB5:	0613      	ld         ah, @(+0x6, y)
   50DB6:	A09C      	bsr        -0x60 <CMGetDeviceId:0x50D56[p]>
   50DB7:	0027      	st         al, @(0x0, y)
            HAL_LS_CONNECTION_UPDATE_SIGNALLING_IND, (void*)p_event_data);

    conn_update_signalling_ind.sig_identifier
   50DB8:	061B      	ld         x, @(+0x6, y)
   50DB9:	011A      	ld         x, @(+0x1, x)
   50DBA:	012B      	st         x, @(+0x1, y)
            = p_event_data->sig_identifier;

    conn_update_signalling_ind.conn_interval_min
   50DBB:	061B      	ld         x, @(+0x6, y)
   50DBC:	021A      	ld         x, @(+0x2, x)
   50DBD:	022B      	st         x, @(+0x2, y)
            = p_event_data->conn_interval_min;

    conn_update_signalling_ind.conn_interval_max
   50DBE:	061B      	ld         x, @(+0x6, y)
   50DBF:	031A      	ld         x, @(+0x3, x)
   50DC0:	032B      	st         x, @(+0x3, y)
            = p_event_data->conn_interval_max;

    conn_update_signalling_ind.slave_latency
   50DC1:	061B      	ld         x, @(+0x6, y)
   50DC2:	041A      	ld         x, @(+0x4, x)
   50DC3:	042B      	st         x, @(+0x4, y)
            = p_event_data->slave_latency;

    conn_update_signalling_ind.supervision_timeout
   50DC4:	061B      	ld         x, @(+0x6, y)
   50DC5:	051A      	ld         x, @(+0x5, x)
   50DC6:	052B      	st         x, @(+0x5, y)
            = p_event_data->supervision_timeout;

    /* Send connection params update singalling ind to the application */
    CMNotifyEventToApplication(CM_CONNECTION_UPDATE_SIGNALLING_IND,
   50DC7:	1814      	ld         al, #+0x18
   50DC8:	E411      	ld         ah, @0xFFE4 <register uy>
   50DC9:	FF00      	**prefx    0xFF
   50DCA:	E09C      	bsr        -0x120 <CMNotifyEventToApplication:0x50CAA[p]>
                               (CM_EVENT_T *)&conn_update_signalling_ind);
}
   50DCB:	F70F      	leave      #-0x9

0x00050DCC <handleSignalLsConnParamUpdateInd>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleSignalLsConnParamUpdateInd(
        h_ls_connection_param_update_ind_t *p_event_data)
{
   50DCC:	F30B      	enter      #-0xD
   50DCD:	0A27      	st         al, @(+0xA, y)
    CM_CONNECTION_PARAM_UPDATE_IND_T    conn_param_update_ind;

    conn_param_update_ind.device_id = CMGetDeviceId(
   50DCE:	1900      	**prefx    0x19
   50DCF:	3614      	ld         al, #+0x1936
   50DD0:	0A13      	ld         ah, @(+0xA, y)
   50DD1:	859C      	bsr        -0x7B <CMGetDeviceId:0x50D56[p]>
   50DD2:	0027      	st         al, @(0x0, y)
            HAL_LS_CONNECTION_PARAM_UPDATE_IND, (void*)p_event_data);

    conn_param_update_ind.status = p_event_data->status;
   50DD3:	0A1B      	ld         x, @(+0xA, y)
   50DD4:	001A      	ld         x, @(0x0, x)
   50DD5:	012B      	st         x, @(+0x1, y)

    MemCopy(&conn_param_update_ind.address, &p_event_data->address,
   50DD6:	0A1B      	ld         x, @(+0xA, y)
   50DD7:	0138      	add        x, #+0x1
   50DD8:	0514      	ld         al, #+0x5
   50DD9:	E411      	ld         ah, @0xFFE4 <register uy>
   50DDA:	0230      	add        ah, #+0x2
   50DDB:	FD09      	bc2        
            sizeof(p_event_data->address));

    conn_param_update_ind.conn_interval = p_event_data->conn_interval;
   50DDC:	0A1B      	ld         x, @(+0xA, y)
   50DDD:	061A      	ld         x, @(+0x6, x)
   50DDE:	072B      	st         x, @(+0x7, y)

    conn_param_update_ind.conn_latency = p_event_data->conn_latency;
   50DDF:	0A1B      	ld         x, @(+0xA, y)
   50DE0:	071A      	ld         x, @(+0x7, x)
   50DE1:	082B      	st         x, @(+0x8, y)

    conn_param_update_ind.supervision_timeout = p_event_data->supervision_timeout;
   50DE2:	0A1B      	ld         x, @(+0xA, y)
   50DE3:	081A      	ld         x, @(+0x8, x)
   50DE4:	092B      	st         x, @(+0x9, y)

    /* Send connection params update indication to the application */
    CMNotifyEventToApplication(CM_CONNECTION_PARAM_UPDATE_IND,
   50DE5:	1914      	ld         al, #+0x19
   50DE6:	E411      	ld         ah, @0xFFE4 <register uy>
   50DE7:	FF00      	**prefx    0xFF
   50DE8:	C29C      	bsr        -0x13E <CMNotifyEventToApplication:0x50CAA[p]>
                               (CM_EVENT_T *)&conn_param_update_ind);
}
   50DE9:	F30F      	leave      #-0xD

0x00050DEA <handleSignalLsConnParamUpdateCfm>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleSignalLsConnParamUpdateCfm(
        h_ls_connection_param_update_cfm_t *p_event_data)
{
   50DEA:	F60B      	enter      #-0xA
   50DEB:	0727      	st         al, @(+0x7, y)
    CM_CONNECTION_PARAM_UPDATE_CFM_T conn_param_update_cfm;

    conn_param_update_cfm.device_id = CMGetDeviceId(
   50DEC:	1900      	**prefx    0x19
   50DED:	3514      	ld         al, #+0x1935
   50DEE:	0713      	ld         ah, @(+0x7, y)
   50DEF:	FF00      	**prefx    0xFF
   50DF0:	669C      	bsr        -0x9A <CMGetDeviceId:0x50D56[p]>
   50DF1:	0027      	st         al, @(0x0, y)
            HAL_LS_CONNECTION_PARAM_UPDATE_CFM, (void*)p_event_data);

    conn_param_update_cfm.status = p_event_data->status;
   50DF2:	071B      	ld         x, @(+0x7, y)
   50DF3:	001A      	ld         x, @(0x0, x)
   50DF4:	012B      	st         x, @(+0x1, y)

    MemCopy(&conn_param_update_cfm.address, &p_event_data->address,
   50DF5:	0717      	ld         al, @(+0x7, y)
   50DF6:	0134      	add        al, #+0x1
   50DF7:	0727      	st         al, @(+0x7, y)
   50DF8:	0514      	ld         al, #+0x5
   50DF9:	E411      	ld         ah, @0xFFE4 <register uy>
   50DFA:	0230      	add        ah, #+0x2
   50DFB:	071B      	ld         x, @(+0x7, y)
   50DFC:	FD09      	bc2        
            sizeof(p_event_data->address));

    /* Send connection params update confirmation to the application */
    CMNotifyEventToApplication(CM_CONNECTION_PARAM_UPDATE_CFM,
   50DFD:	1A14      	ld         al, #+0x1A
   50DFE:	E411      	ld         ah, @0xFFE4 <register uy>
   50DFF:	FF00      	**prefx    0xFF
   50E00:	AA9C      	bsr        -0x156 <CMNotifyEventToApplication:0x50CAA[p]>
                               (CM_EVENT_T *)&conn_param_update_cfm);
}
   50E01:	F60F      	leave      #-0xA

0x00050E02 <handleSignalLsConnectionUpdate>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleSignalLsConnectionUpdate(
        h_ls_connection_update_ind_t *p_event_data)
{
   50E02:	F50B      	enter      #-0xB
   50E03:	0827      	st         al, @(+0x8, y)
    CM_CONNECTION_UPDATED_T conn_updated;
    CM_DEV_CONN_PARAM_T connection_param;
    device_handle_id device_id = CMGetDeviceId(
            HAL_LS_CONNECTION_UPDATE_IND, (void*)p_event_data);
   50E04:	1900      	**prefx    0x19
   50E05:	5714      	ld         al, #+0x1957
   50E06:	0813      	ld         ah, @(+0x8, y)
   50E07:	FF00      	**prefx    0xFF
   50E08:	4E9C      	bsr        -0xB2 <CMGetDeviceId:0x50D56[p]>
   50E09:	0727      	st         al, @(+0x7, y)

    /* Parse the parameters */
    HALParseConnectionUpdateInd(p_event_data, &connection_param);
   50E0A:	0817      	ld         al, @(+0x8, y)
   50E0B:	E411      	ld         ah, @0xFFE4 <register uy>
   50E0C:	FD00      	**prefx    0xFD
   50E0D:	209C      	bsr        -0x2E0 <HALParseConnectionUpdateInd:0x50B2D[p]>

    /* Set the device connection parameters */
    CMSetConnParam(device_id, &connection_param);
   50E0E:	0717      	ld         al, @(+0x7, y)
   50E0F:	E411      	ld         ah, @0xFFE4 <register uy>
   50E10:	FF00      	**prefx    0xFF
   50E11:	089C      	bsr        -0xF8 <CMSetConnParam:0x50D19[p]>

    /* Create an event for the application */
    conn_updated.device_id = device_id;
   50E12:	0717      	ld         al, @(+0x7, y)
   50E13:	0327      	st         al, @(+0x3, y)
    conn_updated.conn_interval = connection_param.conn_interval;
   50E14:	0017      	ld         al, @(0x0, y)
   50E15:	0427      	st         al, @(+0x4, y)
    conn_updated.conn_latency = connection_param.conn_latency;
   50E16:	0117      	ld         al, @(+0x1, y)
   50E17:	0527      	st         al, @(+0x5, y)
    conn_updated.supervision_timeout = connection_param.supervision_timeout;
   50E18:	0217      	ld         al, @(+0x2, y)
   50E19:	0627      	st         al, @(+0x6, y)

    /* Send connection params updated indication */
    CMNotifyEventToApplication(CM_CONNECTION_UPDATED,
   50E1A:	1B14      	ld         al, #+0x1B
   50E1B:	E411      	ld         ah, @0xFFE4 <register uy>
   50E1C:	0330      	add        ah, #+0x3
   50E1D:	FF00      	**prefx    0xFF
   50E1E:	8C9C      	bsr        -0x174 <CMNotifyEventToApplication:0x50CAA[p]>
                               (CM_EVENT_T *)&conn_updated);
}
   50E1F:	F50F      	leave      #-0xB

0x00050E20 <CMProcessEvent>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/

extern void CMProcessEvent(h_msg_t *msg)
{
   50E20:	E30B      	enter      #-0x1D
   50E21:	1927      	st         al, @(+0x19, y)
    switch(HALGetMsgId(msg))
   50E22:	FC00      	**prefx    0xFC
   50E23:	389C      	bsr        -0x3C8 <HALGetMsgId:0x50A5B[p]>
   50E24:	1827      	st         al, @(+0x18, y)
   50E25:	1900      	**prefx    0x19
   50E26:	5184      	cmp        al, #+0x1951
   50E27:	0100      	**prefx    0x1
   50E28:	20F4      	beq        +0x120 <CMProcessEvent+0x128:0x50F48[p]>
   50E29:	1900      	**prefx    0x19
   50E2A:	5284      	cmp        al, #+0x1952
   50E2B:	41F8      	bcc        +0x41 <CMProcessEvent+0x4C:0x50E6C[p]>
   50E2C:	1800      	**prefx    0x18
   50E2D:	1C84      	cmp        al, #+0x181C
   50E2E:	21F8      	bcc        +0x21 <CMProcessEvent+0x2F:0x50E4F[p]>
   50E2F:	1800      	**prefx    0x18
   50E30:	1A84      	cmp        al, #+0x181A
   50E31:	0100      	**prefx    0x1
   50E32:	23F8      	bcc        +0x123 <CMProcessEvent+0x135:0x50F55[p]>
   50E33:	1800      	**prefx    0x18
   50E34:	1084      	cmp        al, #+0x1810
   50E35:	0100      	**prefx    0x1
   50E36:	1FF4      	beq        +0x11F <CMProcessEvent+0x135:0x50F55[p]>
   50E37:	1800      	**prefx    0x18
   50E38:	1184      	cmp        al, #+0x1811
   50E39:	0BF8      	bcc        +0xB <CMProcessEvent+0x24:0x50E44[p]>
   50E3A:	1800      	**prefx    0x18
   50E3B:	0C84      	cmp        al, #+0x180C
   50E3C:	0100      	**prefx    0x1
   50E3D:	18F4      	beq        +0x118 <CMProcessEvent+0x135:0x50F55[p]>
   50E3E:	1800      	**prefx    0x18
   50E3F:	0E84      	cmp        al, #+0x180E
   50E40:	0200      	**prefx    0x2
   50E41:	80F0      	bne        +0x180 <CMProcessEvent+0x1A1:0x50FC1[p]>
   50E42:	0100      	**prefx    0x1
   50E43:	12E0      	bra        +0x112 <CMProcessEvent+0x135:0x50F55[p]>
   50E44:	1817      	ld         al, @(+0x18, y)
   50E45:	1800      	**prefx    0x18
   50E46:	1584      	cmp        al, #+0x1815
   50E47:	0100      	**prefx    0x1
   50E48:	0DF4      	beq        +0x10D <CMProcessEvent+0x135:0x50F55[p]>
   50E49:	1800      	**prefx    0x18
   50E4A:	1784      	cmp        al, #+0x1817
   50E4B:	0100      	**prefx    0x1
   50E4C:	75F0      	bne        +0x175 <CMProcessEvent+0x1A1:0x50FC1[p]>
   50E4D:	0100      	**prefx    0x1
   50E4E:	07E0      	bra        +0x107 <CMProcessEvent+0x135:0x50F55[p]>
   50E4F:	181B      	ld         x, @(+0x18, y)
   50E50:	1900      	**prefx    0x19
   50E51:	3788      	cmp        x, #+0x1937
   50E52:	0100      	**prefx    0x1
   50E53:	4DF4      	beq        +0x14D <CMProcessEvent+0x180:0x50FA0[p]>
   50E54:	1900      	**prefx    0x19
   50E55:	3888      	cmp        x, #+0x1938
   50E56:	0BF8      	bcc        +0xB <CMProcessEvent+0x41:0x50E61[p]>
   50E57:	1900      	**prefx    0x19
   50E58:	3588      	cmp        x, #+0x1935
   50E59:	0100      	**prefx    0x1
   50E5A:	52F4      	beq        +0x152 <CMProcessEvent+0x18C:0x50FAC[p]>
   50E5B:	1900      	**prefx    0x19
   50E5C:	3688      	cmp        x, #+0x1936
   50E5D:	0100      	**prefx    0x1
   50E5E:	63F0      	bne        +0x163 <CMProcessEvent+0x1A1:0x50FC1[p]>
   50E5F:	0100      	**prefx    0x1
   50E60:	46E0      	bra        +0x146 <CMProcessEvent+0x186:0x50FA6[p]>
   50E61:	1817      	ld         al, @(+0x18, y)
   50E62:	1900      	**prefx    0x19
   50E63:	4784      	cmp        al, #+0x1947
   50E64:	0100      	**prefx    0x1
   50E65:	0CF4      	beq        +0x10C <CMProcessEvent+0x151:0x50F71[p]>
   50E66:	1900      	**prefx    0x19
   50E67:	4C84      	cmp        al, #+0x194C
   50E68:	0100      	**prefx    0x1
   50E69:	58F0      	bne        +0x158 <CMProcessEvent+0x1A1:0x50FC1[p]>
   50E6A:	0100      	**prefx    0x1
   50E6B:	2BE0      	bra        +0x12B <CMProcessEvent+0x176:0x50F96[p]>
   50E6C:	181B      	ld         x, @(+0x18, y)
   50E6D:	1A00      	**prefx    0x1A
   50E6E:	0488      	cmp        x, #+0x1A04
   50E6F:	0100      	**prefx    0x1
   50E70:	8EF4      	beq        +0x8E <CMProcessEvent+0xDE:0x50EFE[p]>
   50E71:	1A00      	**prefx    0x1A
   50E72:	0588      	cmp        x, #+0x1A05
   50E73:	1FF8      	bcc        +0x1F <CMProcessEvent+0x72:0x50E92[p]>
   50E74:	1900      	**prefx    0x19
   50E75:	5588      	cmp        x, #+0x1955
   50E76:	42F4      	beq        +0x42 <CMProcessEvent+0x98:0x50EB8[p]>
   50E77:	1900      	**prefx    0x19
   50E78:	5688      	cmp        x, #+0x1956
   50E79:	0BF8      	bcc        +0xB <CMProcessEvent+0x64:0x50E84[p]>
   50E7A:	1900      	**prefx    0x19
   50E7B:	5288      	cmp        x, #+0x1952
   50E7C:	0100      	**prefx    0x1
   50E7D:	D8F4      	beq        +0xD8 <CMProcessEvent+0x135:0x50F55[p]>
   50E7E:	1900      	**prefx    0x19
   50E7F:	5388      	cmp        x, #+0x1953
   50E80:	0100      	**prefx    0x1
   50E81:	40F0      	bne        +0x140 <CMProcessEvent+0x1A1:0x50FC1[p]>
   50E82:	0100      	**prefx    0x1
   50E83:	DDE0      	bra        +0xDD <CMProcessEvent+0x140:0x50F60[p]>
   50E84:	1817      	ld         al, @(+0x18, y)
   50E85:	1900      	**prefx    0x19
   50E86:	5F84      	cmp        al, #+0x195F
   50E87:	0100      	**prefx    0x1
   50E88:	00F4      	beq        +0x100 <CMProcessEvent+0x168:0x50F88[p]>
   50E89:	1900      	**prefx    0x19
   50E8A:	6384      	cmp        al, #+0x1963
   50E8B:	28F4      	beq        +0x28 <CMProcessEvent+0x93:0x50EB3[p]>
   50E8C:	1900      	**prefx    0x19
   50E8D:	5784      	cmp        al, #+0x1957
   50E8E:	0100      	**prefx    0x1
   50E8F:	32F0      	bne        +0x132 <CMProcessEvent+0x1A1:0x50FC1[p]>
   50E90:	0100      	**prefx    0x1
   50E91:	21E0      	bra        +0x121 <CMProcessEvent+0x192:0x50FB2[p]>
   50E92:	181B      	ld         x, @(+0x18, y)
   50E93:	1A00      	**prefx    0x1A
   50E94:	1088      	cmp        x, #+0x1A10
   50E95:	0100      	**prefx    0x1
   50E96:	C6F4      	beq        +0xC6 <CMProcessEvent+0x13C:0x50F5C[p]>
   50E97:	1A00      	**prefx    0x1A
   50E98:	1188      	cmp        x, #+0x1A11
   50E99:	0BF8      	bcc        +0xB <CMProcessEvent+0x84:0x50EA4[p]>
   50E9A:	1A00      	**prefx    0x1A
   50E9B:	0A88      	cmp        x, #+0x1A0A
   50E9C:	0100      	**prefx    0x1
   50E9D:	FFF4      	beq        +0xFF <CMProcessEvent+0x17C:0x50F9C[p]>
   50E9E:	1A00      	**prefx    0x1A
   50E9F:	0D88      	cmp        x, #+0x1A0D
   50EA0:	0100      	**prefx    0x1
   50EA1:	20F0      	bne        +0x120 <CMProcessEvent+0x1A1:0x50FC1[p]>
   50EA2:	0100      	**prefx    0x1
   50EA3:	15E0      	bra        +0x115 <CMProcessEvent+0x198:0x50FB8[p]>
   50EA4:	1817      	ld         al, @(+0x18, y)
   50EA5:	1A00      	**prefx    0x1A
   50EA6:	1684      	cmp        al, #+0x1A16
   50EA7:	0100      	**prefx    0x1
   50EA8:	B4F4      	beq        +0xB4 <CMProcessEvent+0x13C:0x50F5C[p]>
   50EA9:	1A00      	**prefx    0x1A
   50EAA:	1984      	cmp        al, #+0x1A19
   50EAB:	0100      	**prefx    0x1
   50EAC:	B0F4      	beq        +0xB0 <CMProcessEvent+0x13C:0x50F5C[p]>
   50EAD:	1A00      	**prefx    0x1A
   50EAE:	1384      	cmp        al, #+0x1A13
   50EAF:	0100      	**prefx    0x1
   50EB0:	11F0      	bne        +0x111 <CMProcessEvent+0x1A1:0x50FC1[p]>
   50EB1:	0100      	**prefx    0x1
   50EB2:	A7E0      	bra        +0xA7 <CMProcessEvent+0x139:0x50F59[p]>
        {
#if defined (CENTRAL)        
            CMCentralHandleProcessLMEvent(msg);
#endif
#if defined (OBSERVER)
            CMObserverHandleProcessLMEvent(msg);
   50EB3:	1917      	ld         al, @(+0x19, y)
   50EB4:	0500      	**prefx    0x5
   50EB5:	D89C      	bsr        +0x4D8 <CMObserverHandleProcessLMEvent:0x5138D[p]>
   50EB6:	0100      	**prefx    0x1
   50EB7:	0AE0      	bra        +0x10A <CMProcessEvent+0x1A1:0x50FC1[p]>
        case HAL_CONNECTION_COMPLETE_IND:
        {
            h_ls_connection_complete_ind_t conn_complete_ind;

            /* Parse the connection complete indication */
            HALParseConnCompleteInd(&conn_complete_ind, msg);
   50EB8:	E415      	ld         al, @0xFFE4 <register uy>
   50EB9:	0534      	add        al, #+0x5
   50EBA:	1913      	ld         ah, @(+0x19, y)
   50EBB:	FC00      	**prefx    0xFC
   50EBC:	299C      	bsr        -0x3D7 <HALParseConnCompleteInd:0x50AE5[p]>
 *
 *---------------------------------------------------------------------------*/
static void handleSignalLmEvConnectionComplete(
                        h_ls_connection_complete_ind_t *p_event_data)
{
    if(p_event_data->status == sys_status_success)
   50EBD:	059B      	tst        @(+0x5, y)
   50EBE:	0100      	**prefx    0x1
   50EBF:	02F0      	bne        +0x102 <CMProcessEvent+0x1A1:0x50FC1[p]>
    {
        device_handle_id device_id;
        CM_DEV_CONN_PARAM_T connection_param;

        /* copy the connection parameters received for the connection */
        connection_param.conn_interval = p_event_data->conn_interval;
   50EC0:	0C1B      	ld         x, @(+0xC, y)
   50EC1:	012B      	st         x, @(+0x1, y)
        connection_param.conn_latency = p_event_data->conn_latency;
   50EC2:	0D17      	ld         al, @(+0xD, y)
   50EC3:	0227      	st         al, @(+0x2, y)
        connection_param.supervision_timeout =
   50EC4:	0E1B      	ld         x, @(+0xE, y)
   50EC5:	032B      	st         x, @(+0x3, y)
{
    bond_handle_id index;

    CM_CONN_INFO_T* p_conn_info = &g_cm_main_data.cm_conn_info[0];

    for(index = 0; index < g_cm_main_data.max_connections; index++)
   50EC6:	6100      	**prefx    0x61
   50EC7:	1B15      	ld         al, @0x611B <g_cm_main_data+0x2>
   50EC8:	F825      	st         al, @0xFFF8 <(scratchpad)>
   50EC9:	6100      	**prefx    0x61
   50ECA:	1A19      	ld         x, @0x611A <g_cm_main_data+0x1>
   50ECB:	0014      	ld         al, #+0x0
   50ECC:	15E0      	bra        +0x15 <CMProcessEvent+0xC1:0x50EE1[p]>
   50ECD:	1317      	ld         al, @(+0x13, y)
   50ECE:	0E90      	smult      #+0xE
   50ECF:	1227      	st         al, @(+0x12, y)
   50ED0:	E311      	ld         ah, @0xFFE3 <register uxl>
    {
        /* Find the unconnected device in the GATT database */
        if(p_conn_info[index].cid == CM_GATT_INVALID_UCID)
   50ED1:	0516      	ld         al, @(+0x5, x)
   50ED2:	0E38      	add        x, #+0xE
   50ED3:	FF84      	cmp        al, #-0x1
   50ED4:	0BF0      	bne        +0xB <CMProcessEvent+0xBF:0x50EDF[p]>
        {
            HALAddNewDevice(&p_conn_info[index], p_event_data);
   50ED5:	E015      	ld         al, @0xFFE0 <register ah>
   50ED6:	E411      	ld         ah, @0xFFE4 <register uy>
   50ED7:	0530      	add        ah, #+0x5
   50ED8:	FC00      	**prefx    0xFC
   50ED9:	8C9C      	bsr        -0x474 <HALAddNewDevice:0x50A65[p]>
                p_event_data->supervision_timeout;

        /* Add a new device onto the device database. */
        device_id = addNewDevice(p_event_data);

        if(device_id != CM_INVALID_DEVICE_ID)
   50EDA:	131B      	ld         x, @(+0x13, y)
   50EDB:	FF88      	cmp        x, #-0x1
   50EDC:	0BF0      	bne        +0xB <CMProcessEvent+0xC7:0x50EE7[p]>
   50EDD:	0100      	**prefx    0x1
   50EDE:	E3E0      	bra        +0xE3 <CMProcessEvent+0x1A1:0x50FC1[p]>
{
    bond_handle_id index;

    CM_CONN_INFO_T* p_conn_info = &g_cm_main_data.cm_conn_info[0];

    for(index = 0; index < g_cm_main_data.max_connections; index++)
   50EDF:	1317      	ld         al, @(+0x13, y)
   50EE0:	0134      	add        al, #+0x1
   50EE1:	1327      	st         al, @(+0x13, y)
   50EE2:	1317      	ld         al, @(+0x13, y)
   50EE3:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   50EE4:	E9FC      	bcs        -0x17 <CMProcessEvent+0xAD:0x50ECD[p]>
   50EE5:	0100      	**prefx    0x1
   50EE6:	DBE0      	bra        +0xDB <CMProcessEvent+0x1A1:0x50FC1[p]>
        device_id = addNewDevice(p_event_data);

        if(device_id != CM_INVALID_DEVICE_ID)
        {
            /* set the initial state */
            CMSetDeviceBondState(device_id, cm_dev_unbonded);
   50EE7:	1317      	ld         al, @(+0x13, y)
   50EE8:	0010      	ld         ah, #+0x0
   50EE9:	FE00      	**prefx    0xFE
   50EEA:	049C      	bsr        -0x1FC <CMSetDeviceBondState:0x50CEE[p]>

            /* Check if the device is already bonded */
            if(CMIsDeviceBonded(&g_cm_main_data.cm_conn_info[device_id].
   50EEB:	6100      	**prefx    0x61
   50EEC:	1A15      	ld         al, @0x611A <g_cm_main_data+0x1>
   50EED:	1237      	add        al, @(+0x12, y)
   50EEE:	0634      	add        al, #+0x6
   50EEF:	0300      	**prefx    0x3
   50EF0:	D49C      	bsr        +0x2D4 <CMIsDeviceBonded:0x511C4[p]>
   50EF1:	E199      	tst        @0xFFE1 <register al>
   50EF2:	05F4      	beq        +0x5 <CMProcessEvent+0xD7:0x50EF7[p]>
                                remote_bd_addr))
            {
                /* update the device bond state */
                CMSetDeviceBondState(device_id, cm_dev_bonded);
   50EF3:	1317      	ld         al, @(+0x13, y)
   50EF4:	0210      	ld         ah, #+0x2
   50EF5:	FE00      	**prefx    0xFE
   50EF6:	F89C      	bsr        -0x208 <CMSetDeviceBondState:0x50CEE[p]>
            }

            /* Set the device connection parameters */
            CMSetConnParam(device_id, &connection_param);
   50EF7:	1317      	ld         al, @(+0x13, y)
   50EF8:	E411      	ld         ah, @0xFFE4 <register uy>
   50EF9:	0130      	add        ah, #+0x1
   50EFA:	FE00      	**prefx    0xFE
   50EFB:	1E9C      	bsr        -0x1E2 <CMSetConnParam:0x50D19[p]>
   50EFC:	0100      	**prefx    0x1
   50EFD:	C4E0      	bra        +0xC4 <CMProcessEvent+0x1A1:0x50FC1[p]>
        }
        break;

        case HAL_GATT_CONNECT_CFM:
        {
            handleSignalGattConnectCfm((h_gatt_connect_cfm_t*)HALGetMsg(msg));
   50EFE:	1917      	ld         al, @(+0x19, y)
   50EFF:	FB00      	**prefx    0xFB
   50F00:	609C      	bsr        -0x4A0 <HALGetMsg:0x50A60[p]>
   50F01:	1727      	st         al, @(+0x17, y)

static void handleSignalGattConnectCfm(h_gatt_connect_cfm_t *p_event_data)
{
    CM_CONNECTION_NOTIFY_T cm_connect_notify;

    if(p_event_data->result == sys_status_success)
   50F02:	E119      	ld         x, @0xFFE1 <register al>
   50F03:	0616      	ld         al, @(+0x6, x)
   50F04:	33F0      	bne        +0x33 <CMProcessEvent+0x117:0x50F37[p]>
    {
        device_handle_id device_id;

        /* Store the connection identifer of the connection. */
        device_id = setConnInfo(&p_event_data->bd_addr,
   50F05:	0516      	ld         al, @(+0x5, x)
   50F06:	1027      	st         al, @(+0x10, y)
   50F07:	0018      	ld         x, #+0x0
   50F08:	112B      	st         x, @(+0x11, y)
   50F09:	13E0      	bra        +0x13 <CMProcessEvent+0xFC:0x50F1C[p]>
    device_handle_id index;

    /* Parse through the Db to find the device id comparing the BD Address */
    for(index = 0; index < g_cm_main_data.max_connections; index++)
    {
       if(!MemCmp(&g_cm_main_data.cm_conn_info[index].remote_bd_addr,
   50F0A:	1117      	ld         al, @(+0x11, y)
   50F0B:	0E90      	smult      #+0xE
   50F0C:	1A27      	st         al, @(+0x1A, y)
   50F0D:	6100      	**prefx    0x61
   50F0E:	1A15      	ld         al, @0x611A <g_cm_main_data+0x1>
   50F0F:	1A37      	add        al, @(+0x1A, y)
   50F10:	0634      	add        al, #+0x6
   50F11:	0518      	ld         x, #+0x5
   50F12:	002B      	st         x, @(0x0, y)
   50F13:	1713      	ld         ah, @(+0x17, y)
   50F14:	FC00      	**prefx    0xFC
   50F15:	5000      	**prefx    0x50
   50F16:	1B9C      	bsr        -0x3AFE5 <MemCmp:0x15F31[p]>
   50F17:	E199      	tst        @0xFFE1 <register al>
   50F18:	09F4      	beq        +0x9 <CMProcessEvent+0x101:0x50F21[p]>
static device_handle_id getDeviceFromBdAddr(TYPED_BD_ADDR_T *bd_addr)
{
    device_handle_id index;

    /* Parse through the Db to find the device id comparing the BD Address */
    for(index = 0; index < g_cm_main_data.max_connections; index++)
   50F19:	1117      	ld         al, @(+0x11, y)
   50F1A:	0134      	add        al, #+0x1
   50F1B:	1127      	st         al, @(+0x11, y)
   50F1C:	111B      	ld         x, @(+0x11, y)
   50F1D:	6100      	**prefx    0x61
   50F1E:	1B89      	cmp        x, @0x611B <g_cm_main_data+0x2>
   50F1F:	EBFC      	bcs        -0x15 <CMProcessEvent+0xEA:0x50F0A[p]>
   50F20:	0AE0      	bra        +0xA <CMProcessEvent+0x10A:0x50F2A[p]>

static device_handle_id setConnInfo(TYPED_BD_ADDR_T *bd_addr,
                            uint16 conn_id)
{
    device_handle_id device_id = getDeviceFromBdAddr(bd_addr);
    if(device_id != CM_INVALID_DEVICE_ID)
   50F21:	1117      	ld         al, @(+0x11, y)
   50F22:	FF84      	cmp        al, #-0x1
   50F23:	09F4      	beq        +0x9 <CMProcessEvent+0x10C:0x50F2C[p]>
    {
        g_cm_main_data.cm_conn_info[device_id].cid = conn_id;
   50F24:	6100      	**prefx    0x61
   50F25:	1A19      	ld         x, @0x611A <g_cm_main_data+0x1>
   50F26:	1A3B      	add        x, @(+0x1A, y)
   50F27:	1017      	ld         al, @(+0x10, y)
   50F28:	0526      	st         al, @(+0x5, x)
   50F29:	06E0      	bra        +0x6 <CMProcessEvent+0x10F:0x50F2F[p]>
   50F2A:	FF18      	ld         x, #-0x1
   50F2B:	112B      	st         x, @(+0x11, y)
    }
    else
    {
        CMReportPanic(cm_panic_invalid_device_id);
   50F2C:	1114      	ld         al, #+0x11
   50F2D:	FE00      	**prefx    0xFE
   50F2E:	C99C      	bsr        -0x237 <CMReportPanic:0x50CF7[p]>
        /* Store the connection identifer of the connection. */
        device_id = setConnInfo(&p_event_data->bd_addr,
                                  p_event_data->cid);

        /* Change the device state to connected. */
        CMSetDevState(device_id, dev_state_connected);
   50F2F:	1117      	ld         al, @(+0x11, y)
   50F30:	0110      	ld         ah, #+0x1
   50F31:	FE00      	**prefx    0xFE
   50F32:	FA9C      	bsr        -0x206 <CMSetDevState:0x50D2C[p]>

        /* Copy the device id */
        cm_connect_notify.device_id = device_id;
   50F33:	1117      	ld         al, @(+0x11, y)
   50F34:	0127      	st         al, @(+0x1, y)

        /* Prepare the send connect confirm message */
        cm_connect_notify.result = cm_conn_res_success;
   50F35:	0018      	ld         x, #+0x0
   50F36:	06E0      	bra        +0x6 <CMProcessEvent+0x11C:0x50F3C[p]>
    }
    else if(p_event_data->result != HCI_ERROR_DIRECTED_ADVERTISING_TIMEOUT)
   50F37:	3C84      	cmp        al, #+0x3C
   50F38:	64F4      	beq        +0x64 <CMProcessEvent+0x17C:0x50F9C[p]>
    {
        /* Copy the device id */
        cm_connect_notify.device_id = CM_INVALID_DEVICE_ID;
   50F39:	FF14      	ld         al, #-0x1
   50F3A:	0127      	st         al, @(+0x1, y)

        /* Set the connection notify event state to connect failed */
        cm_connect_notify.result = cm_conn_res_failed;
   50F3B:	0218      	ld         x, #+0x2
   50F3C:	022B      	st         x, @(+0x2, y)
        return;
    }

#if defined (SERVER)
    /* Send connect event to all the client handlers regd */
    CMServerNotifyGenericEvent(CM_CONNECTION_NOTIFY,
   50F3D:	0614      	ld         al, #+0x6
   50F3E:	E411      	ld         ah, @0xFFE4 <register uy>
   50F3F:	0130      	add        ah, #+0x1
   50F40:	0300      	**prefx    0x3
   50F41:	029C      	bsr        +0x302 <CMServerNotifyGenericEvent:0x51243[p]>
    CMClientNotifyGenericEvent(CM_CONNECTION_NOTIFY,
                          (CM_EVENT_T *)&cm_connect_notify);
#endif /* CLIENT */

    /* Send connect event to the application */
    CMNotifyEventToApplication(CM_CONNECTION_NOTIFY,
   50F42:	0614      	ld         al, #+0x6
   50F43:	E411      	ld         ah, @0xFFE4 <register uy>
   50F44:	0130      	add        ah, #+0x1
   50F45:	FD00      	**prefx    0xFD
   50F46:	649C      	bsr        -0x29C <CMNotifyEventToApplication:0x50CAA[p]>
   50F47:	55E0      	bra        +0x55 <CMProcessEvent+0x17C:0x50F9C[p]>
        {
            h_disconnect_complete_ind_t disconn_complete_ind;

#if defined (PERIPHERAL)
#ifndef THIN_CM4_MESH_NODE
            CMPeripheralHandleProcessLmEvent(msg);
   50F48:	1917      	ld         al, @(+0x19, y)
   50F49:	0600      	**prefx    0x6
   50F4A:	709C      	bsr        +0x670 <CMPeripheralHandleProcessLmEvent:0x515BA[p]>
#endif /* THIN_CM4_MESH_NODE */
#endif /* PERIPHERAL */

            /* Parse the disconnection complete indication */
            HALParseDisconnCompleteInd(&disconn_complete_ind, msg);
   50F4B:	E415      	ld         al, @0xFFE4 <register uy>
   50F4C:	0134      	add        al, #+0x1
   50F4D:	1913      	ld         ah, @(+0x19, y)
   50F4E:	FC00      	**prefx    0xFC
   50F4F:	609C      	bsr        -0x3A0 <HALParseDisconnCompleteInd:0x50BAF[p]>

            handleSignalLmDisconnectComplete(&disconn_complete_ind);
   50F50:	E415      	ld         al, @0xFFE4 <register uy>
   50F51:	0134      	add        al, #+0x1
   50F52:	FE00      	**prefx    0xFE
   50F53:	0A9C      	bsr        -0x1F6 <handleSignalLmDisconnectComplete:0x50D5D[p]>
   50F54:	6DE0      	bra        +0x6D <CMProcessEvent+0x1A1:0x50FC1[p]>
            /* FALL THROUGH */
        case HAL_SM_PASSKEY_INPUT_IND:
            /* FALL THROUGH */
        case HAL_SM_KEY_REQUEST_IND:
        {
            CMSecurityHandleProcessLMEvent(msg);
   50F55:	1917      	ld         al, @(+0x19, y)
   50F56:	0200      	**prefx    0x2
   50F57:	9D9C      	bsr        +0x19D <CMSecurityHandleProcessLMEvent:0x510F4[p]>
   50F58:	69E0      	bra        +0x69 <CMProcessEvent+0x1A1:0x50FC1[p]>
        case HAL_GATT_ACCESS_IND:
        {
#if defined (PERIPHERAL)
#ifndef THIN_CM4_MESH_NODE

            CMPeripheralHandleProcessLmEvent(msg);
   50F59:	1917      	ld         al, @(+0x19, y)
   50F5A:	0600      	**prefx    0x6
   50F5B:	5F9C      	bsr        +0x65F <CMPeripheralHandleProcessLmEvent:0x515BA[p]>
#endif /* THIN_CM4_MESH_NODE */
#endif /* PERIPHERAL */

#if defined (SERVER)
            CMServerHandleProcessLMEvent(msg);
   50F5C:	1917      	ld         al, @(+0x19, y)
   50F5D:	0300      	**prefx    0x3
   50F5E:	3C9C      	bsr        +0x33C <CMServerHandleProcessLMEvent:0x5129A[p]>
   50F5F:	62E0      	bra        +0x62 <CMProcessEvent+0x1A1:0x50FC1[p]>
        }
        break;

        /* Radio event replacement - Application and services can be told when data has gone. */
        case HAL_LS_NUMBER_COMPLETED_PACKETS_IND:
            handleSignaNumberOfCompletedPacketsEventInd(
   50F60:	1917      	ld         al, @(+0x19, y)
   50F61:	FB00      	**prefx    0xFB
   50F62:	FE9C      	bsr        -0x502 <HALGetMsg:0x50A60[p]>
   50F63:	1627      	st         al, @(+0x16, y)
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleSignaNumberOfCompletedPacketsEventInd(h_ls_number_completed_packets_ind_t *p_event_data)
{
    if (g_cm_main_data.num_completed_packets_enabled)
   50F64:	6100      	**prefx    0x61
   50F65:	1C99      	tst        @0x611C <g_cm_main_data+0x3>
   50F66:	5BF4      	beq        +0x5B <CMProcessEvent+0x1A1:0x50FC1[p]>
    {
        /* By design we only send out CM_NUMBER_OF_COMPLETED_PKTS_IND onces per 
         * enable request this is to prevent flood the system.
         */
	    g_cm_main_data.num_completed_packets_enabled = FALSE;
   50F67:	0014      	ld         al, #+0x0
   50F68:	6100      	**prefx    0x61
   50F69:	1C25      	st         al, @0x611C <g_cm_main_data+0x3>
#if defined (SERVER)
        /* Send connect event to all the client handlers regd */
        CMServerNotifyGenericEvent(CM_NUMBER_OF_COMPLETED_PKTS_IND,
   50F6A:	1C14      	ld         al, #+0x1C
   50F6B:	1613      	ld         ah, @(+0x16, y)
   50F6C:	0300      	**prefx    0x3
   50F6D:	D69C      	bsr        +0x2D6 <CMServerNotifyGenericEvent:0x51243[p]>
        CMClientNotifyGenericEvent(CM_NUMBER_OF_COMPLETED_PKTS_IND,
                              (CM_EVENT_T *)p_event_data);
#endif /* CLIENT */

        /* Send radio event to the application */
        CMNotifyEventToApplication(CM_NUMBER_OF_COMPLETED_PKTS_IND,
   50F6E:	1C14      	ld         al, #+0x1C
   50F6F:	1613      	ld         ah, @(+0x16, y)
   50F70:	15E0      	bra        +0x15 <CMProcessEvent+0x165:0x50F85[p]>
        case HAL_LS_RADIO_EVENT_IND:
        {
            /* Radio event- Application configures radio event on first tx of a
            * connection event.
            */
            handleSignalLsRadioEventInd(
   50F71:	1917      	ld         al, @(+0x19, y)
   50F72:	FB00      	**prefx    0xFB
   50F73:	ED9C      	bsr        -0x513 <HALGetMsg:0x50A60[p]>
   50F74:	1527      	st         al, @(+0x15, y)
 *---------------------------------------------------------------------------*/
static void handleSignalLsRadioEventInd(h_ls_radio_event_ind_t *p_event_data)
{
    CM_RADIO_EVENT_IND_T radio_event_ind;

    radio_event_ind.device_id = CMGetDeviceId(HAL_LS_RADIO_EVENT_IND,
   50F75:	1817      	ld         al, @(+0x18, y)
   50F76:	1513      	ld         ah, @(+0x15, y)
   50F77:	FE00      	**prefx    0xFE
   50F78:	DE9C      	bsr        -0x222 <CMGetDeviceId:0x50D56[p]>
   50F79:	0127      	st         al, @(+0x1, y)
                                     (void*)p_event_data);

    radio_event_ind.radio = p_event_data->radio;
   50F7A:	151B      	ld         x, @(+0x15, y)
   50F7B:	011A      	ld         x, @(+0x1, x)
   50F7C:	022B      	st         x, @(+0x2, y)

    HALParseRadioEventInd(&radio_event_ind, p_event_data);
   50F7D:	E415      	ld         al, @0xFFE4 <register uy>
   50F7E:	0134      	add        al, #+0x1
   50F7F:	1513      	ld         ah, @(+0x15, y)
   50F80:	FB00      	**prefx    0xFB
   50F81:	789C      	bsr        -0x488 <HALParseRadioEventInd:0x50AF9[p]>

    /* Send radio event to the application */
    CMNotifyEventToApplication(CM_RADIO_EVENT_IND,
   50F82:	0B14      	ld         al, #+0xB
   50F83:	E411      	ld         ah, @0xFFE4 <register uy>
   50F84:	0130      	add        ah, #+0x1
   50F85:	FD00      	**prefx    0xFD
   50F86:	249C      	bsr        -0x2DC <CMNotifyEventToApplication:0x50CAA[p]>
   50F87:	3AE0      	bra        +0x3A <CMProcessEvent+0x1A1:0x50FC1[p]>

#ifndef CSR101x_A05
        /* Handle the Early wake up indication received */
        case HAL_LS_EARLY_WAKEUP_IND:
        {
            handleSignalLsEarlyWakeUpInd(
   50F88:	1917      	ld         al, @(+0x19, y)
   50F89:	FB00      	**prefx    0xFB
   50F8A:	D69C      	bsr        -0x52A <HALGetMsg:0x50A60[p]>
   50F8B:	1427      	st         al, @(+0x14, y)
 *---------------------------------------------------------------------------*/
static void handleSignalLsEarlyWakeUpInd(h_ls_early_wakeup_ind_t *p_event_data)
{
    CM_EARLY_WAKEUP_IND_T early_wakeup_ind;

    early_wakeup_ind.device_id = CMGetDeviceId(HAL_LS_EARLY_WAKEUP_IND,
   50F8C:	1817      	ld         al, @(+0x18, y)
   50F8D:	1413      	ld         ah, @(+0x14, y)
   50F8E:	FE00      	**prefx    0xFE
   50F8F:	C79C      	bsr        -0x239 <CMGetDeviceId:0x50D56[p]>
   50F90:	0127      	st         al, @(+0x1, y)
                                     (void*)p_event_data);
    early_wakeup_ind.interval = p_event_data->interval;
   50F91:	141B      	ld         x, @(+0x14, y)
   50F92:	011A      	ld         x, @(+0x1, x)
   50F93:	022B      	st         x, @(+0x2, y)

    /* Send radio event to the application */
    CMNotifyEventToApplication(CM_EARLY_WAKEUP_IND,
   50F94:	0C14      	ld         al, #+0xC
   50F95:	EEE0      	bra        -0x12 <CMProcessEvent+0x163:0x50F83[p]>

#ifndef THIN_CM4_MESH_NODE
        case HAL_LS_DATA_RX_TIMING_IND:
        {
            /* Provides timing report to application on receiving data packet */
            handleSignalLsDataRxTimingInd((h_ls_data_rx_timing_ind_t *)HALGetMsg(msg));
   50F96:	1917      	ld         al, @(+0x19, y)
   50F97:	FB00      	**prefx    0xFB
   50F98:	C89C      	bsr        -0x538 <HALGetMsg:0x50A60[p]>
   50F99:	FE00      	**prefx    0xFE
   50F9A:	FB9C      	bsr        -0x205 <handleSignalLsDataRxTimingInd:0x50D95[p]>
   50F9B:	26E0      	bra        +0x26 <CMProcessEvent+0x1A1:0x50FC1[p]>

        case HAL_GATT_CANCEL_CONNECT_CFM:
        {
#if defined (PERIPHERAL)
#ifndef THIN_CM4_MESH_NODE
            CMPeripheralHandleProcessLmEvent(msg);
   50F9C:	1917      	ld         al, @(+0x19, y)
   50F9D:	0600      	**prefx    0x6
   50F9E:	1C9C      	bsr        +0x61C <CMPeripheralHandleProcessLmEvent:0x515BA[p]>
   50F9F:	22E0      	bra        +0x22 <CMProcessEvent+0x1A1:0x50FC1[p]>
        /* This event is received when the remote slave device sends a
         * L2CAP connection parameter request.
         */
        case HAL_LS_CONNECTION_UPDATE_SIGNALLING_IND:
        {
            handleSignalLsConnUpdateSignallingInd(
   50FA0:	1917      	ld         al, @(+0x19, y)
   50FA1:	FB00      	**prefx    0xFB
   50FA2:	BE9C      	bsr        -0x542 <HALGetMsg:0x50A60[p]>
   50FA3:	FE00      	**prefx    0xFE
   50FA4:	0D9C      	bsr        -0x1F3 <handleSignalLsConnUpdateSignallingInd:0x50DB1[p]>
   50FA5:	1CE0      	bra        +0x1C <CMProcessEvent+0x1A1:0x50FC1[p]>
        /* This event indicates completion of remotely triggered Connection
         * parameter update procedure
         */
        case HAL_LS_CONNECTION_PARAM_UPDATE_IND:
        {
            handleSignalLsConnParamUpdateInd(
   50FA6:	1917      	ld         al, @(+0x19, y)
   50FA7:	FB00      	**prefx    0xFB
   50FA8:	B89C      	bsr        -0x548 <HALGetMsg:0x50A60[p]>
   50FA9:	FE00      	**prefx    0xFE
   50FAA:	229C      	bsr        -0x1DE <handleSignalLsConnParamUpdateInd:0x50DCC[p]>
   50FAB:	16E0      	bra        +0x16 <CMProcessEvent+0x1A1:0x50FC1[p]>
        /* This event is received in response to the
         * connection parameter update request
         */
        case HAL_LS_CONNECTION_PARAM_UPDATE_CFM:
        {
            handleSignalLsConnParamUpdateCfm(
   50FAC:	1917      	ld         al, @(+0x19, y)
   50FAD:	FB00      	**prefx    0xFB
   50FAE:	B29C      	bsr        -0x54E <HALGetMsg:0x50A60[p]>
   50FAF:	FE00      	**prefx    0xFE
   50FB0:	3A9C      	bsr        -0x1C6 <handleSignalLsConnParamUpdateCfm:0x50DEA[p]>
   50FB1:	10E0      	bra        +0x10 <CMProcessEvent+0x1A1:0x50FC1[p]>
        /* This event is sent by the controller on connection parameter
         * update.
         */
        case HAL_LS_CONNECTION_UPDATE_IND:
        {
            handleSignalLsConnectionUpdate(
   50FB2:	1917      	ld         al, @(+0x19, y)
   50FB3:	FB00      	**prefx    0xFB
   50FB4:	AC9C      	bsr        -0x554 <HALGetMsg:0x50A60[p]>
   50FB5:	FE00      	**prefx    0xFE
   50FB6:	4C9C      	bsr        -0x1B4 <handleSignalLsConnectionUpdate:0x50E02[p]>
   50FB7:	0AE0      	bra        +0xA <CMProcessEvent+0x1A1:0x50FC1[p]>
        }
        break;

        case HAL_GATT_EXCHANGE_MTU_IND:
        {
            handleSignalGattExchangeMtuInd(
   50FB8:	1917      	ld         al, @(+0x19, y)
   50FB9:	FB00      	**prefx    0xFB
   50FBA:	A69C      	bsr        -0x55A <HALGetMsg:0x50A60[p]>
   50FBB:	E119      	ld         x, @0xFFE1 <register al>
 *
 *---------------------------------------------------------------------------*/
static void handleSignalGattExchangeMtuInd(
        h_gatt_exchange_mtu_ind_t *p_event_data)
{
    GattExchangeMtuRsp(p_event_data->cid, APP_MTU_DEFAULT);
   50FBC:	0016      	ld         al, @(0x0, x)
   50FBD:	1710      	ld         ah, #+0x17
   50FBE:	FB00      	**prefx    0xFB
   50FBF:	5B00      	**prefx    0x5B
   50FC0:	C89C      	bsr        -0x4A538 <GattExchangeMtuRsp:0x6A88[p]>
        break;

        default:
            break;
    }
}
   50FC1:	E30F      	leave      #-0x1D

0x00050FC2 <CMGetBondedBDAddr>:
 *      bool: TRUE if the device found
 *
 *---------------------------------------------------------------------------*/

extern bool CMGetBondedBDAddr(bond_handle_id bond_id, TYPED_BD_ADDR_T *bdaddr)
{
   50FC2:	FE0B      	enter      #-0x2
   50FC3:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    if(bond_id < g_security_data.max_bonded_device)
   50FC4:	6100      	**prefx    0x61
   50FC5:	1E85      	cmp        al, @0x611E <g_security_data+0x1>
   50FC6:	03FC      	bcs        +0x3 <CMGetBondedBDAddr+0x7:0x50FC9[p]>
   50FC7:	0014      	ld         al, #+0x0
   50FC8:	0AE0      	bra        +0xA <CMGetBondedBDAddr+0x10:0x50FD2[p]>
    {
        /* valid bond id */
        *bdaddr = g_security_data.bonded_device[bond_id].bd_addr;
   50FC9:	2E90      	smult      #+0x2E
   50FCA:	E119      	ld         x, @0xFFE1 <register al>
   50FCB:	6100      	**prefx    0x61
   50FCC:	1D39      	add        x, @0x611D <g_security_data>
   50FCD:	0514      	ld         al, #+0x5
   50FCE:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   50FCF:	0138      	add        x, #+0x1
   50FD0:	FD09      	bc2        
   50FD1:	0114      	ld         al, #+0x1
        return TRUE;
    }
    return FALSE;
}
   50FD2:	FE0F      	leave      #-0x2

0x00050FD3 <handleSignalSMLongTermKeyInd>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/

static void handleSignalSMLongTermKeyInd(h_sm_long_key_ind_t *p_event_data)
{
   50FD3:	F00B      	enter      #-0x10
   50FD4:	0D27      	st         al, @(+0xD, y)
    device_handle_id device_id = CMGetDeviceId(HAL_SM_LONG_TERM_KEY_IND,
                                               (void*)p_event_data);
   50FD5:	1800      	**prefx    0x18
   50FD6:	1514      	ld         al, #+0x1815
   50FD7:	0D13      	ld         ah, @(+0xD, y)
   50FD8:	FD00      	**prefx    0xFD
   50FD9:	7D9C      	bsr        -0x283 <CMGetDeviceId:0x50D56[p]>
   50FDA:	0C27      	st         al, @(+0xC, y)

    if(device_id == CM_INVALID_DEVICE_ID)
   50FDB:	FF84      	cmp        al, #-0x1
   50FDC:	31F4      	beq        +0x31 <handleSignalSMLongTermKeyInd+0x3A:0x5100D[p]>
        return;

     /* Handling signal as per current state */
    switch(CMGetDevState(device_id))
   50FDD:	FA00      	**prefx    0xFA
   50FDE:	F39C      	bsr        -0x60D <CMGetDevState:0x509D1[p]>
   50FDF:	0184      	cmp        al, #+0x1
   50FE0:	2AF0      	bne        +0x2A <handleSignalSMLongTermKeyInd+0x37:0x5100A[p]>
    {
        case dev_state_connected:
        {
            CM_LTK_RESP_T ltk_rsp;
            ltk_rsp.cid = p_event_data->cid;
   50FE1:	0D1B      	ld         x, @(+0xD, y)
   50FE2:	001A      	ld         x, @(0x0, x)
   50FE3:	002B      	st         x, @(0x0, y)
            uint16 ltk[8];

            /* Initialise the parameters */
            ltk_rsp.key_size = 0;
   50FE4:	0014      	ld         al, #+0x0
   50FE5:	0227      	st         al, @(+0x2, y)
            ltk_rsp.ltk = NULL;
   50FE6:	0127      	st         al, @(+0x1, y)

            /* Check if the device is bonded */
            bond_handle_id bond_id = CMGetBondIdFromDeviceId(device_id);
   50FE7:	0C17      	ld         al, @(+0xC, y)
   50FE8:	FA00      	**prefx    0xFA
   50FE9:	169C      	bsr        -0x5EA <CMGetBondIdFromDeviceId:0x509FF[p]>
   50FEA:	F925      	st         al, @0xFFF9 <(scratchpad)>
            if(bond_id != CM_INVALID_BOND_ID)
   50FEB:	FF84      	cmp        al, #-0x1
   50FEC:	13F4      	beq        +0x13 <handleSignalSMLongTermKeyInd+0x2C:0x50FFF[p]>
            {
                if(g_security_data.bonded_device[bond_id].keys.keys_present &
   50FED:	2E90      	smult      #+0x2E
   50FEE:	E119      	ld         x, @0xFFE1 <register al>
   50FEF:	6100      	**prefx    0x61
   50FF0:	1D39      	add        x, @0x611D <g_security_data>
   50FF1:	0716      	ld         al, @(+0x7, x)
   50FF2:	02C4      	and        al, #0x2
   50FF3:	0CF4      	beq        +0xC <handleSignalSMLongTermKeyInd+0x2C:0x50FFF[p]>
                   (1<<SM_KEY_TYPE_ENC_CENTRAL))
                {
                    MemCopy(ltk,
   50FF4:	E415      	ld         al, @0xFFE4 <register uy>
   50FF5:	0434      	add        al, #+0x4
   50FF6:	F825      	st         al, @0xFFF8 <(scratchpad)>
   50FF7:	0F38      	add        x, #+0xF
   50FF8:	0814      	ld         al, #+0x8
   50FF9:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   50FFA:	FD09      	bc2        
                            g_security_data.bonded_device[bond_id].keys.ltk,
                            CM_MAX_WORDS_LTK);
                    ltk_rsp.key_size = 16;
   50FFB:	1018      	ld         x, #+0x10
   50FFC:	022B      	st         x, @(+0x2, y)
                    ltk_rsp.ltk = ltk;
   50FFD:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   50FFE:	0127      	st         al, @(+0x1, y)
                }
            }

#ifndef CSR101x_A05
            ltk_rsp.security_level =
   50FFF:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   51000:	2E90      	smult      #+0x2E
   51001:	6100      	**prefx    0x61
   51002:	1D35      	add        al, @0x611D <g_security_data>
   51003:	E119      	ld         x, @0xFFE1 <register al>
   51004:	2D1A      	ld         x, @(+0x2D, x)
   51005:	032B      	st         x, @(+0x3, y)
                    g_security_data.bonded_device[bond_id].keys.security_level;
#endif /* !CSR101x_A05 */

            HALSendLongTermKeyAuthRsp(&ltk_rsp);
   51006:	E415      	ld         al, @0xFFE4 <register uy>
   51007:	FC00      	**prefx    0xFC
   51008:	8B9C      	bsr        -0x475 <HALSendLongTermKeyAuthRsp:0x50B93[p]>
   51009:	04E0      	bra        +0x4 <handleSignalSMLongTermKeyInd+0x3A:0x5100D[p]>
        }
        break;

        default:
            /* Control should never come here */
            CMReportPanic(cm_panic_invalid_state);
   5100A:	0B14      	ld         al, #+0xB
   5100B:	FD00      	**prefx    0xFD
   5100C:	EB9C      	bsr        -0x315 <CMReportPanic:0x50CF7[p]>

        break;
    }
}
   5100D:	F00F      	leave      #-0x10

0x0005100E <ClearBondingInfo>:
 *      bool: True if the procedure successful
 *
 *----------------------------------------------------------------------------*/

extern bool ClearBondingInfo(bond_handle_id bond_id)
{
   5100E:	F40B      	enter      #-0xC
   5100F:	0927      	st         al, @(+0x9, y)
    CM_BONDING_NOTIFY_T cm_bond_notify;

    if(bond_id == CM_INVALID_BOND_ID)
   51010:	FF84      	cmp        al, #-0x1
   51011:	03F0      	bne        +0x3 <ClearBondingInfo+0x6:0x51014[p]>
   51012:	0014      	ld         al, #+0x0
   51013:	24E0      	bra        +0x24 <ClearBondingInfo+0x29:0x51037[p]>
        return FALSE;

    CMGetBondedBDAddr(bond_id, &cm_bond_notify.bd_addr);
   51014:	0917      	ld         al, @(+0x9, y)
   51015:	E411      	ld         ah, @0xFFE4 <register uy>
   51016:	0230      	add        ah, #+0x2
   51017:	AB9C      	bsr        -0x55 <CMGetBondedBDAddr:0x50FC2[p]>
    cm_bond_notify.bond_id = bond_id ;
   51018:	0917      	ld         al, @(+0x9, y)
   51019:	0727      	st         al, @(+0x7, y)
    cm_bond_notify.result = cm_unbond_res_success;
   5101A:	0114      	ld         al, #+0x1
   5101B:	0827      	st         al, @(+0x8, y)

    /* Reset the bonded flag */
    g_security_data.bonded_device[bond_id].bonded = FALSE;
   5101C:	6100      	**prefx    0x61
   5101D:	1D19      	ld         x, @0x611D <g_security_data>
   5101E:	0917      	ld         al, @(+0x9, y)
   5101F:	2E90      	smult      #+0x2E
   51020:	F825      	st         al, @0xFFF8 <(scratchpad)>
   51021:	E139      	add        x, @0xFFE1 <register al>
   51022:	0014      	ld         al, #+0x0
   51023:	0026      	st         al, @(0x0, x)

    /* Write to the NVM */
    Nvm_Write((uint16*)&g_security_data.bonded_device[bond_id],
   51024:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   51025:	6100      	**prefx    0x61
   51026:	1F35      	add        al, @0x611F <g_security_data+0x2>
   51027:	0027      	st         al, @(0x0, y)
   51028:	E315      	ld         al, @0xFFE3 <register uxl>
   51029:	2E10      	ld         ah, #+0x2E
   5102A:	F800      	**prefx    0xF8
   5102B:	1A9C      	bsr        -0x7E6 <Nvm_Write:0x50845[p]>
    CMClientNotifyGenericEvent(CM_BONDING_NOTIFY, (CM_EVENT_T *)&cm_bond_notify);
#endif /* CLIENT */

#if defined (SERVER)
    /* Send bond notify event to the server handlers */
    CMServerNotifyGenericEvent(CM_BONDING_NOTIFY,(CM_EVENT_T *)&cm_bond_notify);
   5102C:	0714      	ld         al, #+0x7
   5102D:	E411      	ld         ah, @0xFFE4 <register uy>
   5102E:	0130      	add        ah, #+0x1
   5102F:	0200      	**prefx    0x2
   51030:	139C      	bsr        +0x213 <CMServerNotifyGenericEvent:0x51243[p]>
#endif /* SERVER */

    /* Send bond notify event to the application */
    CMNotifyEventToApplication(CM_BONDING_NOTIFY,
   51031:	0714      	ld         al, #+0x7
   51032:	E411      	ld         ah, @0xFFE4 <register uy>
   51033:	0130      	add        ah, #+0x1
   51034:	FC00      	**prefx    0xFC
   51035:	759C      	bsr        -0x38B <CMNotifyEventToApplication:0x50CAA[p]>
   51036:	0114      	ld         al, #+0x1
                               (CM_EVENT_T *)&cm_bond_notify);

    return TRUE;
}
   51037:	F40F      	leave      #-0xC

0x00051038 <handleSignalSmSimplePairingCompleteInd>:
 *
 *---------------------------------------------------------------------------*/

static void handleSignalSmSimplePairingCompleteInd(
                                 h_sm_pairing_complete_ind_t *p_event_data)
{
   51038:	F40B      	enter      #-0xC
   51039:	0927      	st         al, @(+0x9, y)
    device_handle_id device_id = CMGetDeviceId(HAL_SM_PAIRING_COMPLETE_IND,
                                     (void*)p_event_data);
   5103A:	1800      	**prefx    0x18
   5103B:	1B14      	ld         al, #+0x181B
   5103C:	0913      	ld         ah, @(+0x9, y)
   5103D:	FD00      	**prefx    0xFD
   5103E:	189C      	bsr        -0x2E8 <CMGetDeviceId:0x50D56[p]>
   5103F:	0827      	st         al, @(+0x8, y)

    if(device_id == CM_INVALID_DEVICE_ID)
   51040:	FF84      	cmp        al, #-0x1
   51041:	39F4      	beq        +0x39 <handleSignalSmSimplePairingCompleteInd+0x42:0x5107A[p]>
        return;

    switch(CMGetDevState(device_id))
   51042:	FA00      	**prefx    0xFA
   51043:	8E9C      	bsr        -0x672 <CMGetDevState:0x509D1[p]>
   51044:	0184      	cmp        al, #+0x1
   51045:	35F0      	bne        +0x35 <handleSignalSmSimplePairingCompleteInd+0x42:0x5107A[p]>
    {
        case dev_state_connected:
        {
            CM_BONDING_NOTIFY_T cm_bond_notify;

            if(p_event_data->status == sys_status_success)
   51046:	091B      	ld         x, @(+0x9, y)
   51047:	0116      	ld         al, @(+0x1, x)
   51048:	11F0      	bne        +0x11 <handleSignalSmSimplePairingCompleteInd+0x21:0x51059[p]>
            {
                /* Ignore this event if the device already bonded.
                 * This event could be arrived because of the
                 * encryption during reconnection.
                 */
                if(CMGetDeviceBondState(device_id) == cm_dev_bonded)
   51049:	0817      	ld         al, @(+0x8, y)
   5104A:	F900      	**prefx    0xF9
   5104B:	349C      	bsr        -0x6CC <CMGetDeviceBondState:0x5097F[p]>
   5104C:	0284      	cmp        al, #+0x2
   5104D:	2DF4      	beq        +0x2D <handleSignalSmSimplePairingCompleteInd+0x42:0x5107A[p]>
                    return;

                /* Update the device state to bonded */
                CMSetDeviceBondState(device_id, cm_dev_bonded);
   5104E:	0817      	ld         al, @(+0x8, y)
   5104F:	0210      	ld         ah, #+0x2
   51050:	FD00      	**prefx    0xFD
   51051:	9D9C      	bsr        -0x363 <CMSetDeviceBondState:0x50CEE[p]>

                /* Get the bond id */
                cm_bond_notify.bond_id = CMGetBondIdFromDeviceId(device_id);
   51052:	0817      	ld         al, @(+0x8, y)
   51053:	FA00      	**prefx    0xFA
   51054:	AB9C      	bsr        -0x655 <CMGetBondIdFromDeviceId:0x509FF[p]>
   51055:	0627      	st         al, @(+0x6, y)

                /* Update the bond state */
                cm_bond_notify.result = cm_bond_res_success;
   51056:	0014      	ld         al, #+0x0
   51057:	0727      	st         al, @(+0x7, y)
   51058:	0BE0      	bra        +0xB <handleSignalSmSimplePairingCompleteInd+0x2B:0x51063[p]>
            }
            else
            {
                if(p_event_data->status == sm_status_repeated_attempts)
   51059:	0B00      	**prefx    0xB
   5105A:	0984      	cmp        al, #+0xB09
   5105B:	04F0      	bne        +0x4 <handleSignalSmSimplePairingCompleteInd+0x27:0x5105F[p]>
                {
                    cm_bond_notify.result = cm_bond_res_rep_attempt_failed;
   5105C:	0418      	ld         x, #+0x4
   5105D:	072B      	st         x, @(+0x7, y)
   5105E:	03E0      	bra        +0x3 <handleSignalSmSimplePairingCompleteInd+0x29:0x51061[p]>
                }
                else
                {
                    cm_bond_notify.result = cm_bond_res_failed;
   5105F:	0314      	ld         al, #+0x3
   51060:	0727      	st         al, @(+0x7, y)
                }

                /* Assign the invalid bond id */
                cm_bond_notify.bond_id = CM_INVALID_BOND_ID;
   51061:	FF18      	ld         x, #-0x1
   51062:	062B      	st         x, @(+0x6, y)
            }

            /* copy the device id */
            cm_bond_notify.device_id = device_id;
   51063:	0817      	ld         al, @(+0x8, y)
   51064:	0027      	st         al, @(0x0, y)

            /* Copy the device id */
            CMGetBdAdressFromDeviceId(device_id, &cm_bond_notify.bd_addr);
   51065:	E411      	ld         ah, @0xFFE4 <register uy>
   51066:	0130      	add        ah, #+0x1
   51067:	FA00      	**prefx    0xFA
   51068:	809C      	bsr        -0x680 <CMGetBdAdressFromDeviceId:0x509E8[p]>

            /* Send the bonding status back to all registered services */

#if defined (SERVER)
            CMServerNotifyGenericEvent(CM_BONDING_NOTIFY,
   51069:	0714      	ld         al, #+0x7
   5106A:	E411      	ld         ah, @0xFFE4 <register uy>
   5106B:	0200      	**prefx    0x2
   5106C:	D79C      	bsr        +0x1D7 <CMServerNotifyGenericEvent:0x51243[p]>
#if defined (CLIENT)
            CMClientNotifyGenericEvent(CM_BONDING_NOTIFY,
                                  (CM_EVENT_T *)&cm_bond_notify);
#endif /* CLIENT */

            CMNotifyEventToApplication(CM_BONDING_NOTIFY,
   5106D:	0714      	ld         al, #+0x7
   5106E:	E411      	ld         ah, @0xFFE4 <register uy>
   5106F:	FC00      	**prefx    0xFC
   51070:	3A9C      	bsr        -0x3C6 <CMNotifyEventToApplication:0x50CAA[p]>
                              (CM_EVENT_T *)&cm_bond_notify);

            if(p_event_data->status == sm_status_repeated_attempts)
   51071:	091B      	ld         x, @(+0x9, y)
   51072:	0116      	ld         al, @(+0x1, x)
   51073:	0B00      	**prefx    0xB
   51074:	0984      	cmp        al, #+0xB09
   51075:	05F0      	bne        +0x5 <handleSignalSmSimplePairingCompleteInd+0x42:0x5107A[p]>
            {
                /* Bonding failed, disconnect the link */
                CMSetDevState(device_id, dev_state_disconnecting);
   51076:	0817      	ld         al, @(+0x8, y)
   51077:	0210      	ld         ah, #+0x2
   51078:	FD00      	**prefx    0xFD
   51079:	B39C      	bsr        -0x34D <CMSetDevState:0x50D2C[p]>
            /* Firmware may send this signal after disconnection. So don't
             * panic but ignore this signal.
             */
        break;
    }
}
   5107A:	F40F      	leave      #-0xC

0x0005107B <CMGetBondId>:
 *    bond_handle_id: index in the bonded devices list
 *
 *----------------------------------------------------------------------------*/

extern bond_handle_id CMGetBondId(TYPED_BD_ADDR_T *bd_addr)
{
   5107B:	FB0B      	enter      #-0x5
   5107C:	0227      	st         al, @(+0x2, y)
   5107D:	0014      	ld         al, #+0x0
   5107E:	15E0      	bra        +0x15 <CMGetBondId+0x18:0x51093[p]>
    bond_handle_id index;

    for(index = 0; index < g_security_data.max_bonded_device; index++)
    {
        if(g_security_data.bonded_device[index].bonded == TRUE)
   5107F:	0117      	ld         al, @(+0x1, y)
   51080:	2E90      	smult      #+0x2E
   51081:	E119      	ld         x, @0xFFE1 <register al>
   51082:	6100      	**prefx    0x61
   51083:	1D39      	add        x, @0x611D <g_security_data>
   51084:	0016      	ld         al, @(0x0, x)
   51085:	0184      	cmp        al, #+0x1
   51086:	0BF0      	bne        +0xB <CMGetBondId+0x16:0x51091[p]>
        {
            if(HALMatchBluetoothAddress(bd_addr,
   51087:	E315      	ld         al, @0xFFE3 <register uxl>
   51088:	1734      	add        al, #+0x17
   51089:	0027      	st         al, @(0x0, y)
   5108A:	0217      	ld         al, @(+0x2, y)
   5108B:	0138      	add        x, #+0x1
   5108C:	E311      	ld         ah, @0xFFE3 <register uxl>
   5108D:	FB00      	**prefx    0xFB
   5108E:	B49C      	bsr        -0x54C <HALMatchBluetoothAddress:0x50B42[p]>
   5108F:	E199      	tst        @0xFFE1 <register al>
   51090:	0AF0      	bne        +0xA <CMGetBondId+0x1F:0x5109A[p]>

extern bond_handle_id CMGetBondId(TYPED_BD_ADDR_T *bd_addr)
{
    bond_handle_id index;

    for(index = 0; index < g_security_data.max_bonded_device; index++)
   51091:	0117      	ld         al, @(+0x1, y)
   51092:	0134      	add        al, #+0x1
   51093:	0127      	st         al, @(+0x1, y)
   51094:	0117      	ld         al, @(+0x1, y)
   51095:	6100      	**prefx    0x61
   51096:	1E85      	cmp        al, @0x611E <g_security_data+0x1>
   51097:	E8FC      	bcs        -0x18 <CMGetBondId+0x4:0x5107F[p]>
   51098:	FF14      	ld         al, #-0x1
   51099:	0127      	st         al, @(+0x1, y)
            }
        }
    }

    return CM_INVALID_BOND_ID;
}
   5109A:	0117      	ld         al, @(+0x1, y)
   5109B:	FB0F      	leave      #-0x5

0x0005109C <storeBondedDeviceInfo>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/

static bond_handle_id storeBondedDeviceInfo(CM_BONDED_DEVICE_INFO_T *bond_info)
{
   5109C:	FB0B      	enter      #-0x5
   5109D:	0227      	st         al, @(+0x2, y)
    bond_handle_id index;

    /* Clear the old bonding information*/
    index = CMGetBondId(&bond_info->bd_addr);
   5109E:	0134      	add        al, #+0x1
   5109F:	DC9C      	bsr        -0x24 <CMGetBondId:0x5107B[p]>
   510A0:	0127      	st         al, @(+0x1, y)

    if(index == CM_INVALID_BOND_ID)
   510A1:	FF84      	cmp        al, #-0x1
   510A2:	17F0      	bne        +0x17 <storeBondedDeviceInfo+0x1D:0x510B9[p]>

static bond_handle_id getFreeIndex(void)
{
    bond_handle_id bond_index;

    for(bond_index = 0; bond_index < g_security_data.max_bonded_device; bond_index++)
   510A3:	6100      	**prefx    0x61
   510A4:	1E15      	ld         al, @0x611E <g_security_data+0x1>
   510A5:	F925      	st         al, @0xFFF9 <(scratchpad)>
    {
        if(g_security_data.bonded_device[bond_index].bonded == FALSE)
   510A6:	6100      	**prefx    0x61
   510A7:	1D19      	ld         x, @0x611D <g_security_data>
   510A8:	F829      	st         x, @0xFFF8 <(scratchpad)>
   510A9:	0014      	ld         al, #+0x0
   510AA:	09E0      	bra        +0x9 <storeBondedDeviceInfo+0x17:0x510B3[p]>
   510AB:	0117      	ld         al, @(+0x1, y)
   510AC:	2E90      	smult      #+0x2E
   510AD:	F835      	add        al, @0xFFF8 <(scratchpad)>
   510AE:	E119      	ld         x, @0xFFE1 <register al>
   510AF:	009A      	tst        @(0x0, x)
   510B0:	09F4      	beq        +0x9 <storeBondedDeviceInfo+0x1D:0x510B9[p]>

static bond_handle_id getFreeIndex(void)
{
    bond_handle_id bond_index;

    for(bond_index = 0; bond_index < g_security_data.max_bonded_device; bond_index++)
   510B1:	0117      	ld         al, @(+0x1, y)
   510B2:	0134      	add        al, #+0x1
   510B3:	0127      	st         al, @(+0x1, y)
   510B4:	011B      	ld         x, @(+0x1, y)
   510B5:	F989      	cmp        x, @0xFFF9 <(scratchpad)>
   510B6:	F5FC      	bcs        -0xB <storeBondedDeviceInfo+0xF:0x510AB[p]>
   510B7:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   510B8:	0127      	st         al, @(+0x1, y)
        /* get the free slot */
        index = getFreeIndex();
    }

    /* Store the new keys */
    MemCopy(&g_security_data.bonded_device[index], bond_info,
   510B9:	0117      	ld         al, @(+0x1, y)
   510BA:	2E90      	smult      #+0x2E
   510BB:	F825      	st         al, @0xFFF8 <(scratchpad)>
   510BC:	6100      	**prefx    0x61
   510BD:	1D11      	ld         ah, @0x611D <g_security_data>
   510BE:	E131      	add        ah, @0xFFE1 <register al>
   510BF:	2E14      	ld         al, #+0x2E
   510C0:	021B      	ld         x, @(+0x2, y)
   510C1:	FD09      	bc2        
            sizeof(CM_BONDED_DEVICE_INFO_T));

    /* Write to NVM */
    Nvm_Write((uint16*)&g_security_data.bonded_device[index],
   510C2:	6100      	**prefx    0x61
   510C3:	1D15      	ld         al, @0x611D <g_security_data>
   510C4:	F835      	add        al, @0xFFF8 <(scratchpad)>
   510C5:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   510C6:	6100      	**prefx    0x61
   510C7:	1F39      	add        x, @0x611F <g_security_data+0x2>
   510C8:	002B      	st         x, @(0x0, y)
   510C9:	2E10      	ld         ah, #+0x2E
   510CA:	F700      	**prefx    0xF7
   510CB:	7A9C      	bsr        -0x886 <Nvm_Write:0x50845[p]>
              sizeof(CM_BONDED_DEVICE_INFO_T),
              NVM_CM_OFFSET_BONDED_INFO(index));

    return index;
}
   510CC:	0117      	ld         al, @(+0x1, y)
   510CD:	FB0F      	leave      #-0x5

0x000510CE <handleSignalSmKeysInd>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/

static void handleSignalSmKeysInd(h_sm_keys_ind_t *p_event_data)
{
   510CE:	CE0B      	enter      #-0x32
   510CF:	2F27      	st         al, @(+0x2F, y)
    device_handle_id device_id = CMGetDeviceId(HAL_SM_KEYS_IND,
                                               (void*)p_event_data);
   510D0:	1800      	**prefx    0x18
   510D1:	1A14      	ld         al, #+0x181A
   510D2:	2F13      	ld         ah, @(+0x2F, y)
   510D3:	FD00      	**prefx    0xFD
   510D4:	829C      	bsr        -0x37E <CMGetDeviceId:0x50D56[p]>
   510D5:	2E27      	st         al, @(+0x2E, y)

    if(device_id == CM_INVALID_DEVICE_ID)
   510D6:	FF84      	cmp        al, #-0x1
   510D7:	1CF4      	beq        +0x1C <handleSignalSmKeysInd+0x25:0x510F3[p]>
        return;

    /* Handling signal as per current state */
    switch(CMGetDevState(device_id))
   510D8:	F900      	**prefx    0xF9
   510D9:	F89C      	bsr        -0x708 <CMGetDevState:0x509D1[p]>
   510DA:	0184      	cmp        al, #+0x1
   510DB:	15F0      	bne        +0x15 <handleSignalSmKeysInd+0x22:0x510F0[p]>
    {
        case dev_state_connected:
        {
            CM_BONDED_DEVICE_INFO_T bond_info;

            bond_info.bonded = TRUE;
   510DC:	0114      	ld         al, #+0x1
   510DD:	0027      	st         al, @(0x0, y)
            CMGetBdAdressFromDeviceId(device_id, &bond_info.bd_addr);
   510DE:	2E17      	ld         al, @(+0x2E, y)
   510DF:	E411      	ld         ah, @0xFFE4 <register uy>
   510E0:	0130      	add        ah, #+0x1
   510E1:	F900      	**prefx    0xF9
   510E2:	069C      	bsr        -0x6FA <CMGetBdAdressFromDeviceId:0x509E8[p]>
            bond_info.peer_con_role = CMGetPeerDeviceRole(device_id);
   510E3:	2E17      	ld         al, @(+0x2E, y)
   510E4:	F900      	**prefx    0xF9
   510E5:	D99C      	bsr        -0x727 <CMGetPeerDeviceRole:0x509BE[p]>
   510E6:	0627      	st         al, @(+0x6, y)

            /* Store the new keys */
            MemCopy(&bond_info.keys, p_event_data->keys, sizeof(SM_KEYSET_T));
   510E7:	2F1B      	ld         x, @(+0x2F, y)
   510E8:	011A      	ld         x, @(+0x1, x)
   510E9:	2714      	ld         al, #+0x27
   510EA:	E411      	ld         ah, @0xFFE4 <register uy>
   510EB:	0730      	add        ah, #+0x7
   510EC:	FD09      	bc2        

            /* store the bond information */
            storeBondedDeviceInfo(&bond_info);
   510ED:	E415      	ld         al, @0xFFE4 <register uy>
   510EE:	AE9C      	bsr        -0x52 <storeBondedDeviceInfo:0x5109C[p]>
   510EF:	04E0      	bra        +0x4 <handleSignalSmKeysInd+0x25:0x510F3[p]>
        }
        break;

        default:
            /* Control should never come here */
            CMReportPanic(cm_panic_invalid_state);
   510F0:	0B14      	ld         al, #+0xB
   510F1:	FC00      	**prefx    0xFC
   510F2:	059C      	bsr        -0x3FB <CMReportPanic:0x50CF7[p]>

        break;
    }
}
   510F3:	CE0F      	leave      #-0x32

0x000510F4 <CMSecurityHandleProcessLMEvent>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/

extern void CMSecurityHandleProcessLMEvent(h_msg_t *msg)
{
   510F4:	F00B      	enter      #-0x10
   510F5:	0D27      	st         al, @(+0xD, y)
    switch(HALGetMsgId(msg))
   510F6:	F900      	**prefx    0xF9
   510F7:	649C      	bsr        -0x69C <HALGetMsgId:0x50A5B[p]>
   510F8:	0C27      	st         al, @(+0xC, y)
   510F9:	1800      	**prefx    0x18
   510FA:	1584      	cmp        al, #+0x1815
   510FB:	2CF4      	beq        +0x2C <CMSecurityHandleProcessLMEvent+0x33:0x51127[p]>
   510FC:	1800      	**prefx    0x18
   510FD:	1684      	cmp        al, #+0x1816
   510FE:	0EF8      	bcc        +0xE <CMSecurityHandleProcessLMEvent+0x18:0x5110C[p]>
   510FF:	1800      	**prefx    0x18
   51100:	0E84      	cmp        al, #+0x180E
   51101:	0100      	**prefx    0x1
   51102:	A5F4      	beq        +0xA5 <CMSecurityHandleProcessLMEvent+0xB3:0x511A7[p]>
   51103:	1800      	**prefx    0x18
   51104:	1084      	cmp        al, #+0x1810
   51105:	0100      	**prefx    0x1
   51106:	8BF4      	beq        +0x8B <CMSecurityHandleProcessLMEvent+0x9D:0x51191[p]>
   51107:	1800      	**prefx    0x18
   51108:	0C84      	cmp        al, #+0x180C
   51109:	0100      	**prefx    0x1
   5110A:	B9F0      	bne        +0xB9 <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
   5110B:	74E0      	bra        +0x74 <CMSecurityHandleProcessLMEvent+0x8B:0x5117F[p]>
   5110C:	0C17      	ld         al, @(+0xC, y)
   5110D:	1800      	**prefx    0x18
   5110E:	1A84      	cmp        al, #+0x181A
   5110F:	12F4      	beq        +0x12 <CMSecurityHandleProcessLMEvent+0x2D:0x51121[p]>
   51110:	1800      	**prefx    0x18
   51111:	1B84      	cmp        al, #+0x181B
   51112:	06F8      	bcc        +0x6 <CMSecurityHandleProcessLMEvent+0x24:0x51118[p]>
   51113:	1800      	**prefx    0x18
   51114:	1784      	cmp        al, #+0x1817
   51115:	0100      	**prefx    0x1
   51116:	ADF0      	bne        +0xAD <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
   51117:	41E0      	bra        +0x41 <CMSecurityHandleProcessLMEvent+0x64:0x51158[p]>
   51118:	0C1B      	ld         x, @(+0xC, y)
   51119:	1800      	**prefx    0x18
   5111A:	1B88      	cmp        x, #+0x181B
   5111B:	13F4      	beq        +0x13 <CMSecurityHandleProcessLMEvent+0x3A:0x5112E[p]>
   5111C:	1900      	**prefx    0x19
   5111D:	5288      	cmp        x, #+0x1952
   5111E:	0100      	**prefx    0x1
   5111F:	A4F0      	bne        +0xA4 <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
   51120:	15E0      	bra        +0x15 <CMSecurityHandleProcessLMEvent+0x41:0x51135[p]>
        {
            /* Indication for the keys and associated security information
             * on a connection that has completed Short Term Key Generation
             * or Transport Specific Key Distribution
             */
            handleSignalSmKeysInd(
   51121:	0D17      	ld         al, @(+0xD, y)
   51122:	F900      	**prefx    0xF9
   51123:	3D9C      	bsr        -0x6C3 <HALGetMsg:0x50A60[p]>
   51124:	AA9C      	bsr        -0x56 <handleSignalSmKeysInd:0x510CE[p]>
   51125:	0100      	**prefx    0x1
   51126:	9DE0      	bra        +0x9D <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
        {
            /* Indication for the keys and associated security information
             * on a connection that has completed Short Term Key Generation
             * or Transport Specific Key Distribution
             */
            handleSignalSMLongTermKeyInd(
   51127:	0D17      	ld         al, @(+0xD, y)
   51128:	F900      	**prefx    0xF9
   51129:	379C      	bsr        -0x6C9 <HALGetMsg:0x50A60[p]>
   5112A:	FF00      	**prefx    0xFF
   5112B:	A89C      	bsr        -0x158 <handleSignalSMLongTermKeyInd:0x50FD3[p]>
   5112C:	0100      	**prefx    0x1
   5112D:	96E0      	bra        +0x96 <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
        break;
#endif /* THIN_CM4_MESH_NODE */
        case HAL_SM_PAIRING_COMPLETE_IND:
        {
            /* Indication for completion of Pairing procedure */
            handleSignalSmSimplePairingCompleteInd(
   5112E:	0D17      	ld         al, @(+0xD, y)
   5112F:	F900      	**prefx    0xF9
   51130:	309C      	bsr        -0x6D0 <HALGetMsg:0x50A60[p]>
   51131:	FF00      	**prefx    0xFF
   51132:	069C      	bsr        -0xFA <handleSignalSmSimplePairingCompleteInd:0x51038[p]>
   51133:	0100      	**prefx    0x1
   51134:	8FE0      	bra        +0x8F <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
        break;
		case HAL_SM_ENCRYPTION_CHANGE_IND:
        {
            h_ls_encryption_change_ind_t enc_change_ind;
            
            HALParseEncChangeInd(&enc_change_ind, msg);            
   51135:	E415      	ld         al, @0xFFE4 <register uy>
   51136:	0D13      	ld         ah, @(+0xD, y)
   51137:	FA00      	**prefx    0xFA
   51138:	B79C      	bsr        -0x649 <HALParseEncChangeInd:0x50AEF[p]>

static void handleSignalLMEncryptionChange(
                    h_ls_encryption_change_ind_t *p_event_data)
{
    device_handle_id device_id = CMGetDeviceId(HAL_SM_ENCRYPTION_CHANGE_IND,
                                     (void*)p_event_data);
   51139:	0C17      	ld         al, @(+0xC, y)
   5113A:	E411      	ld         ah, @0xFFE4 <register uy>
   5113B:	FC00      	**prefx    0xFC
   5113C:	1A9C      	bsr        -0x3E6 <CMGetDeviceId:0x50D56[p]>
   5113D:	0927      	st         al, @(+0x9, y)

    /* Handling signal as per current state */

    switch(CMGetDevState(device_id))
   5113E:	F900      	**prefx    0xF9
   5113F:	929C      	bsr        -0x76E <CMGetDevState:0x509D1[p]>
   51140:	0184      	cmp        al, #+0x1
   51141:	62F0      	bne        +0x62 <CMSecurityHandleProcessLMEvent+0xAF:0x511A3[p]>
    {
        case dev_state_connected:
        {
            CM_ENCRYPTION_NOTIFY_T enc_ind;
            enc_ind.device_id = device_id;
            enc_ind.enc_enable = p_event_data->enc_enable;
   51142:	0213      	ld         ah, @(+0x2, y)

            if(p_event_data->status == sys_status_success)
   51143:	009B      	tst        @(0x0, y)
   51144:	04F0      	bne        +0x4 <CMSecurityHandleProcessLMEvent+0x54:0x51148[p]>
            {
                enc_ind.status = TRUE;
   51145:	0114      	ld         al, #+0x1
   51146:	0427      	st         al, @(+0x4, y)
   51147:	03E0      	bra        +0x3 <CMSecurityHandleProcessLMEvent+0x56:0x5114A[p]>
            }
            else
            {
                enc_ind.status = FALSE;
   51148:	0018      	ld         x, #+0x0
   51149:	042B      	st         x, @(+0x4, y)
    {
        case dev_state_connected:
        {
            CM_ENCRYPTION_NOTIFY_T enc_ind;
            enc_ind.device_id = device_id;
            enc_ind.enc_enable = p_event_data->enc_enable;
   5114A:	0523      	st         ah, @(+0x5, y)
    switch(CMGetDevState(device_id))
    {
        case dev_state_connected:
        {
            CM_ENCRYPTION_NOTIFY_T enc_ind;
            enc_ind.device_id = device_id;
   5114B:	0917      	ld         al, @(+0x9, y)
   5114C:	0327      	st         al, @(+0x3, y)
            {
                enc_ind.status = FALSE;
            }

            /* Update the Device Encryption State */
            CMSetDeviceEncryptState(device_id, p_event_data->enc_enable);
   5114D:	FC00      	**prefx    0xFC
   5114E:	AC9C      	bsr        -0x454 <CMSetDeviceEncryptState:0x50CFA[p]>

            /* Send the Encryption Change Status to the application. */

#if defined (SERVER)
            CMServerNotifyGenericEvent(CM_ENCRYPTION_NOTIFY,
   5114F:	0814      	ld         al, #+0x8
   51150:	E411      	ld         ah, @0xFFE4 <register uy>
   51151:	0330      	add        ah, #+0x3
   51152:	0100      	**prefx    0x1
   51153:	F09C      	bsr        +0xF0 <CMServerNotifyGenericEvent:0x51243[p]>

#if defined (CLIENT)
            CMClientNotifyGenericEvent(CM_ENCRYPTION_NOTIFY, (CM_EVENT_T *)&enc_ind);
#endif /* CLIENT */

            CMNotifyEventToApplication(CM_ENCRYPTION_NOTIFY,
   51154:	0814      	ld         al, #+0x8
   51155:	E411      	ld         ah, @0xFFE4 <register uy>
   51156:	0330      	add        ah, #+0x3
   51157:	37E0      	bra        +0x37 <CMSecurityHandleProcessLMEvent+0x9A:0x5118E[p]>
            /* Indication for SM Diversifier approval requested by F/W when
             * the last bonded host exchange keys. Application may or may not
             * approve the diversifier depending upon whether the application
             * is still bonded to the same host
             */
            handleSignalSmDivApproveInd(
   51158:	0D17      	ld         al, @(+0xD, y)
   51159:	F900      	**prefx    0xF9
   5115A:	069C      	bsr        -0x6FA <HALGetMsg:0x50A60[p]>
   5115B:	0B27      	st         al, @(+0xB, y)
 *----------------------------------------------------------------------------*/

static void handleSignalSmDivApproveInd(h_sm_div_approval_ind_t *p_event_data)
{
    device_handle_id device_id = CMGetDeviceId(HAL_SM_DIV_APPROVAL_IND,
                                     (void*)p_event_data);
   5115C:	0C17      	ld         al, @(+0xC, y)
   5115D:	0B13      	ld         ah, @(+0xB, y)
   5115E:	FC00      	**prefx    0xFC
   5115F:	F79C      	bsr        -0x409 <CMGetDeviceId:0x50D56[p]>
   51160:	0827      	st         al, @(+0x8, y)

    switch(CMGetDevState(device_id))
   51161:	F800      	**prefx    0xF8
   51162:	6F9C      	bsr        -0x791 <CMGetDevState:0x509D1[p]>
   51163:	0184      	cmp        al, #+0x1
   51164:	3FF0      	bne        +0x3F <CMSecurityHandleProcessLMEvent+0xAF:0x511A3[p]>
    {
        case dev_state_connected:
        {
            sm_div_verdict approve_div = SM_DIV_REVOKED;
            bond_handle_id bond_id = CMGetBondIdFromDeviceId(device_id);
   51165:	0817      	ld         al, @(+0x8, y)
   51166:	F900      	**prefx    0xF9
   51167:	989C      	bsr        -0x768 <CMGetBondIdFromDeviceId:0x509FF[p]>

            if(bond_id != CM_INVALID_BOND_ID)
   51168:	FF84      	cmp        al, #-0x1
   51169:	04F0      	bne        +0x4 <CMSecurityHandleProcessLMEvent+0x79:0x5116D[p]>
   5116A:	0118      	ld         x, #+0x1
   5116B:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5116C:	0DE0      	bra        +0xD <CMSecurityHandleProcessLMEvent+0x85:0x51179[p]>
   5116D:	0018      	ld         x, #+0x0
   5116E:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5116F:	2E90      	smult      #+0x2E
   51170:	6100      	**prefx    0x61
   51171:	1D35      	add        al, @0x611D <g_security_data>
   51172:	E119      	ld         x, @0xFFE1 <register al>
   51173:	0916      	ld         al, @(+0x9, x)
   51174:	0B1B      	ld         x, @(+0xB, y)
   51175:	0186      	cmp        al, @(+0x1, x)
   51176:	03F4      	beq        +0x3 <CMSecurityHandleProcessLMEvent+0x85:0x51179[p]>
   51177:	0114      	ld         al, #+0x1
   51178:	F825      	st         al, @0xFFF8 <(scratchpad)>
                   approve_div = SM_DIV_APPROVED;
                }
            }

            /* Send the diversifier approval response */
            HALSMDivApprovalRsp(p_event_data->cid, approve_div);
   51179:	0B1B      	ld         x, @(+0xB, y)
   5117A:	0016      	ld         al, @(0x0, x)
   5117B:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5117C:	FA00      	**prefx    0xFA
   5117D:	0C9C      	bsr        -0x5F4 <HALSMDivApprovalRsp:0x50B89[p]>
   5117E:	45E0      	bra        +0x45 <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
        }
        break;
        case HAL_SM_PAIRING_AUTH_IND:
        {
            /* Authorize or Reject the pairing request */
            handleSignalSmPairingAuthInd(
   5117F:	0D17      	ld         al, @(+0xD, y)
   51180:	F900      	**prefx    0xF9
   51181:	DF9C      	bsr        -0x721 <HALGetMsg:0x50A60[p]>
   51182:	0A27      	st         al, @(+0xA, y)

static void handleSignalSmPairingAuthInd(h_sm_pairing_auth_ind_t *p_event_data)
{
    CM_BONDING_AUTH_IND_T   bonding_auth_ind;

    bonding_auth_ind.device_id = CMGetDeviceId(HAL_SM_PAIRING_AUTH_IND,
   51183:	0C17      	ld         al, @(+0xC, y)
   51184:	0A13      	ld         ah, @(+0xA, y)
   51185:	FC00      	**prefx    0xFC
   51186:	D09C      	bsr        -0x430 <CMGetDeviceId:0x50D56[p]>
   51187:	0027      	st         al, @(0x0, y)
                                     (void*)p_event_data);

    HALParseSmPairingAuthInd(&bonding_auth_ind, p_event_data);
   51188:	E415      	ld         al, @0xFFE4 <register uy>
   51189:	0A13      	ld         ah, @(+0xA, y)
   5118A:	FA00      	**prefx    0xFA
   5118B:	A19C      	bsr        -0x65F <HALParseSmPairingAuthInd:0x50B2C[p]>

    CMNotifyEventToApplication(CM_BONDING_AUTH_IND,
   5118C:	0914      	ld         al, #+0x9
   5118D:	E411      	ld         ah, @0xFFE4 <register uy>
   5118E:	FB00      	**prefx    0xFB
   5118F:	1B9C      	bsr        -0x4E5 <CMNotifyEventToApplication:0x50CAA[p]>
   51190:	33E0      	bra        +0x33 <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
        }
        break;

        case HAL_SM_PASSKEY_INPUT_IND:
        {
            handleSignalSmPasskeyInputInd
   51191:	0D17      	ld         al, @(+0xD, y)
   51192:	F900      	**prefx    0xF9
   51193:	CD9C      	bsr        -0x733 <HALGetMsg:0x50A60[p]>
   51194:	E111      	ld         ah, @0xFFE1 <register al>
 *---------------------------------------------------------------------------*/

static void handleSignalSmPasskeyInputInd(h_sm_passkey_input_ind_t *p_event_data)
{
    device_handle_id device_id = CMGetDeviceId(HAL_SM_PASSKEY_INPUT_IND,
                                                   (void*)p_event_data);
   51195:	0C17      	ld         al, @(+0xC, y)
   51196:	FC00      	**prefx    0xFC
   51197:	BF9C      	bsr        -0x441 <CMGetDeviceId:0x50D56[p]>
   51198:	0727      	st         al, @(+0x7, y)

        if(device_id == CM_INVALID_DEVICE_ID)
   51199:	FF84      	cmp        al, #-0x1
   5119A:	29F4      	beq        +0x29 <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
            return;

        /* Handling signal as per current state */
        switch(CMGetDevState(device_id))
   5119B:	F800      	**prefx    0xF8
   5119C:	359C      	bsr        -0x7CB <CMGetDevState:0x509D1[p]>
   5119D:	0184      	cmp        al, #+0x1
   5119E:	05F0      	bne        +0x5 <CMSecurityHandleProcessLMEvent+0xAF:0x511A3[p]>
        {
        case dev_state_connected:
        {
            CM_PASSKEY_NOTIFY_T passkey_ind;
            passkey_ind.device_id = device_id;
   5119F:	0717      	ld         al, @(+0x7, y)
   511A0:	0027      	st         al, @(0x0, y)
            CMNotifyEventToApplication(CM_PASSKEY_INPUT,
   511A1:	0A14      	ld         al, #+0xA
   511A2:	EBE0      	bra        -0x15 <CMSecurityHandleProcessLMEvent+0x99:0x5118D[p]>
        }
        break;

        default:
            /* Control should never come here */
            CMReportPanic(cm_panic_invalid_state);
   511A3:	0B14      	ld         al, #+0xB
   511A4:	FB00      	**prefx    0xFB
   511A5:	529C      	bsr        -0x4AE <CMReportPanic:0x50CF7[p]>
   511A6:	1DE0      	bra        +0x1D <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
        }
        break;

        case HAL_SM_KEY_REQUEST_IND:
        {
            handleSignalSmkeyRequestInd
   511A7:	0D17      	ld         al, @(+0xD, y)
   511A8:	F900      	**prefx    0xF9
   511A9:	B79C      	bsr        -0x749 <HALGetMsg:0x50A60[p]>
   511AA:	E111      	ld         ah, @0xFFE1 <register al>

static void handleSignalSmkeyRequestInd(h_sm_key_request_ind_t *p_event_data)
{
    h_sm_keyset_t *keys = NULL;
    device_handle_id device_id = CMGetDeviceId(HAL_SM_KEY_REQUEST_IND,
                                               (void*)p_event_data);
   511AB:	0C17      	ld         al, @(+0xC, y)
   511AC:	FC00      	**prefx    0xFC
   511AD:	A99C      	bsr        -0x457 <CMGetDeviceId:0x50D56[p]>
   511AE:	0627      	st         al, @(+0x6, y)

    if(device_id == CM_INVALID_DEVICE_ID)
   511AF:	FF84      	cmp        al, #-0x1
   511B0:	13F4      	beq        +0x13 <CMSecurityHandleProcessLMEvent+0xCF:0x511C3[p]>
        return;

    if(CMGetDeviceBondState(device_id) == cm_dev_bonded)
   511B1:	F800      	**prefx    0xF8
   511B2:	CD9C      	bsr        -0x833 <CMGetDeviceBondState:0x5097F[p]>
   511B3:	0284      	cmp        al, #+0x2
   511B4:	03F4      	beq        +0x3 <CMSecurityHandleProcessLMEvent+0xC3:0x511B7[p]>
   511B5:	0018      	ld         x, #+0x0
   511B6:	09E0      	bra        +0x9 <CMSecurityHandleProcessLMEvent+0xCB:0x511BF[p]>
    {
        bond_handle_id bond_id = CMGetBondIdFromDeviceId(device_id);
   511B7:	0617      	ld         al, @(+0x6, y)
   511B8:	F800      	**prefx    0xF8
   511B9:	469C      	bsr        -0x7BA <CMGetBondIdFromDeviceId:0x509FF[p]>
        keys = &g_security_data.bonded_device[bond_id].keys;
   511BA:	2E90      	smult      #+0x2E
   511BB:	E119      	ld         x, @0xFFE1 <register al>
   511BC:	6100      	**prefx    0x61
   511BD:	1D39      	add        x, @0x611D <g_security_data>
   511BE:	0738      	add        x, #+0x7
    }
    HALSMKeyRequestResponse(device_id, keys);
   511BF:	0617      	ld         al, @(+0x6, y)
   511C0:	E311      	ld         ah, @0xFFE3 <register uxl>
   511C1:	FA00      	**prefx    0xFA
   511C2:	C99C      	bsr        -0x637 <HALSMKeyRequestResponse:0x50B8B[p]>
        break;
#endif /* THIN_CM4_MESH_NODE */
        default:
        break;
    }
}
   511C3:	F00F      	leave      #-0x10

0x000511C4 <CMIsDeviceBonded>:
 *      bool - True if device is bonded
 *
 *----------------------------------------------------------------------------*/

extern bool CMIsDeviceBonded(TYPED_BD_ADDR_T *bdaddr)
{
   511C4:	FB0B      	enter      #-0x5
   511C5:	0227      	st         al, @(+0x2, y)
   511C6:	0014      	ld         al, #+0x0
   511C7:	16E0      	bra        +0x16 <CMIsDeviceBonded+0x19:0x511DD[p]>
    uint16 count;

    for(count = 0; count < g_security_data.max_bonded_device; count++)
    {
        if(!g_security_data.bonded_device[count].bonded)
   511C8:	0117      	ld         al, @(+0x1, y)
   511C9:	2E90      	smult      #+0x2E
   511CA:	E119      	ld         x, @0xFFE1 <register al>
   511CB:	6100      	**prefx    0x61
   511CC:	1D39      	add        x, @0x611D <g_security_data>
   511CD:	009A      	tst        @(0x0, x)
   511CE:	0DF4      	beq        +0xD <CMIsDeviceBonded+0x17:0x511DB[p]>
            continue;

        if(HALMatchBluetoothAddress(bdaddr,
   511CF:	E315      	ld         al, @0xFFE3 <register uxl>
   511D0:	1734      	add        al, #+0x17
   511D1:	0027      	st         al, @(0x0, y)
   511D2:	0217      	ld         al, @(+0x2, y)
   511D3:	0138      	add        x, #+0x1
   511D4:	E311      	ld         ah, @0xFFE3 <register uxl>
   511D5:	F900      	**prefx    0xF9
   511D6:	6C9C      	bsr        -0x694 <HALMatchBluetoothAddress:0x50B42[p]>
   511D7:	E199      	tst        @0xFFE1 <register al>
   511D8:	03F4      	beq        +0x3 <CMIsDeviceBonded+0x17:0x511DB[p]>
   511D9:	0114      	ld         al, #+0x1
   511DA:	09E0      	bra        +0x9 <CMIsDeviceBonded+0x1F:0x511E3[p]>

extern bool CMIsDeviceBonded(TYPED_BD_ADDR_T *bdaddr)
{
    uint16 count;

    for(count = 0; count < g_security_data.max_bonded_device; count++)
   511DB:	0117      	ld         al, @(+0x1, y)
   511DC:	0134      	add        al, #+0x1
   511DD:	0127      	st         al, @(+0x1, y)
   511DE:	0117      	ld         al, @(+0x1, y)
   511DF:	6100      	**prefx    0x61
   511E0:	1E85      	cmp        al, @0x611E <g_security_data+0x1>
   511E1:	E7FC      	bcs        -0x19 <CMIsDeviceBonded+0x4:0x511C8[p]>
   511E2:	0014      	ld         al, #+0x0
        {
            return TRUE;
        }
    }
    return FALSE;
}
   511E3:	FB0F      	leave      #-0x5

0x000511E4 <CMSecurityInit>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/

extern void CMSecurityInit(CM_INIT_PARAMS_T *cm_init_params)
{
   511E4:	F90B      	enter      #-0x7
   511E5:	0427      	st         al, @(+0x4, y)
    /* Initialise the Security Manager */
    HALSMInit(cm_init_params->diversifier);
   511E6:	E119      	ld         x, @0xFFE1 <register al>
   511E7:	0916      	ld         al, @(+0x9, x)
   511E8:	FA00      	**prefx    0xFA
   511E9:	1D9C      	bsr        -0x5E3 <HALSMInit:0x50C06[p]>

    g_security_data.bonded_device =
   511EA:	041B      	ld         x, @(+0x4, y)
   511EB:	031A      	ld         x, @(+0x3, x)
   511EC:	6100      	**prefx    0x61
   511ED:	1D29      	st         x, @0x611D <g_security_data>
            (CM_BONDED_DEVICE_INFO_T*)cm_init_params->bonded_devices;
    g_security_data.max_bonded_device = cm_init_params->max_bonded_devices;
   511EE:	041B      	ld         x, @(+0x4, y)
   511EF:	041A      	ld         x, @(+0x4, x)
   511F0:	6100      	**prefx    0x61
   511F1:	1E29      	st         x, @0x611E <g_security_data+0x1>
    g_security_data.nvm_offset = *cm_init_params->nvm_offset;
   511F2:	041B      	ld         x, @(+0x4, y)
   511F3:	0D16      	ld         al, @(+0xD, x)
   511F4:	E119      	ld         x, @0xFFE1 <register al>
   511F5:	0016      	ld         al, @(0x0, x)
   511F6:	6100      	**prefx    0x61
   511F7:	1F25      	st         al, @0x611F <g_security_data+0x2>

    /* Read the Bonded device Info from NVM */
    readBondingInfoFromNVM(cm_init_params->nvm_start_fresh);
   511F8:	041B      	ld         x, @(+0x4, y)
   511F9:	0C1A      	ld         x, @(+0xC, x)
   511FA:	032B      	st         x, @(+0x3, y)
   511FB:	0014      	ld         al, #+0x0
   511FC:	28E0      	bra        +0x28 <CMSecurityInit+0x40:0x51224[p]>
static void readBondingInfoFromNVM(bool nvm_start_fresh)
{
    uint16 index;
    for( index = 0; index < g_security_data.max_bonded_device; index++)
    {
        if(!nvm_start_fresh)
   511FD:	039B      	tst        @(+0x3, y)
   511FE:	0EF0      	bne        +0xE <CMSecurityInit+0x28:0x5120C[p]>
   511FF:	0217      	ld         al, @(+0x2, y)
   51200:	2E90      	smult      #+0x2E
   51201:	E119      	ld         x, @0xFFE1 <register al>
        {
            /* NVM is not fresh */

            /* Read from NVM */
            Nvm_Read((uint16*)&g_security_data.bonded_device[index],
   51202:	6100      	**prefx    0x61
   51203:	1D15      	ld         al, @0x611D <g_security_data>
   51204:	E335      	add        al, @0xFFE3 <register uxl>
   51205:	6100      	**prefx    0x61
   51206:	1F39      	add        x, @0x611F <g_security_data+0x2>
   51207:	002B      	st         x, @(0x0, y)
   51208:	2E10      	ld         ah, #+0x2E
   51209:	F600      	**prefx    0xF6
   5120A:	529C      	bsr        -0x9AE <Nvm_Read:0x5085C[p]>
   5120B:	17E0      	bra        +0x17 <CMSecurityInit+0x3E:0x51222[p]>
   5120C:	0217      	ld         al, @(+0x2, y)
   5120D:	2E90      	smult      #+0x2E
   5120E:	0127      	st         al, @(+0x1, y)
                      NVM_CM_OFFSET_BONDED_INFO(index));
        }
        else
        {
            /* Reset the bonded device */
            MemSet(&g_security_data.bonded_device[index], 0,
   5120F:	6100      	**prefx    0x61
   51210:	1D15      	ld         al, @0x611D <g_security_data>
   51211:	0137      	add        al, @(+0x1, y)
   51212:	2E18      	ld         x, #+0x2E
   51213:	002B      	st         x, @(0x0, y)
   51214:	0010      	ld         ah, #+0x0
   51215:	FB00      	**prefx    0xFB
   51216:	1900      	**prefx    0x19
   51217:	399C      	bsr        -0x4E6C7 <MemSet:0x2B50[p]>
                   sizeof(CM_BONDED_DEVICE_INFO_T));

            /* Write to NVM */
            Nvm_Write((uint16*)&g_security_data.bonded_device[index],
   51218:	6100      	**prefx    0x61
   51219:	1D15      	ld         al, @0x611D <g_security_data>
   5121A:	0137      	add        al, @(+0x1, y)
   5121B:	011B      	ld         x, @(+0x1, y)
   5121C:	6100      	**prefx    0x61
   5121D:	1F39      	add        x, @0x611F <g_security_data+0x2>
   5121E:	002B      	st         x, @(0x0, y)
   5121F:	2E10      	ld         ah, #+0x2E
   51220:	F600      	**prefx    0xF6
   51221:	249C      	bsr        -0x9DC <Nvm_Write:0x50845[p]>
 *---------------------------------------------------------------------------*/

static void readBondingInfoFromNVM(bool nvm_start_fresh)
{
    uint16 index;
    for( index = 0; index < g_security_data.max_bonded_device; index++)
   51222:	0217      	ld         al, @(+0x2, y)
   51223:	0134      	add        al, #+0x1
   51224:	0227      	st         al, @(+0x2, y)
   51225:	6100      	**prefx    0x61
   51226:	1E15      	ld         al, @0x611E <g_security_data+0x1>
   51227:	021B      	ld         x, @(+0x2, y)
   51228:	E189      	cmp        x, @0xFFE1 <register al>
   51229:	D4FC      	bcs        -0x2C <CMSecurityInit+0x19:0x511FD[p]>

    /* Read the Bonded device Info from NVM */
    readBondingInfoFromNVM(cm_init_params->nvm_start_fresh);

    /* increment the nvm offset */
    *cm_init_params->nvm_offset += NVM_CM_MAX_MEMORY_WORDS;
   5122A:	041B      	ld         x, @(+0x4, y)
   5122B:	0D1A      	ld         x, @(+0xD, x)
   5122C:	2E90      	smult      #+0x2E
   5122D:	0036      	add        al, @(0x0, x)
   5122E:	0026      	st         al, @(0x0, x)
}
   5122F:	F90F      	leave      #-0x7

0x00051230 <CMServerGetHandler>:
 *  RETURNS
 *      CM_HANDLERS_T
 *
 *---------------------------------------------------------------------------*/
extern CM_HANDLERS_T *CMServerGetHandler(uint16 handle)
{
   51230:	FE0B      	enter      #-0x2
    uint16 index;

    for(index = 0; index < g_server_data.num_reg_services; index++)
   51231:	6100      	**prefx    0x61
   51232:	2219      	ld         x, @0x6122 <g_server_data+0x2>
   51233:	F829      	st         x, @0xFFF8 <(scratchpad)>
   51234:	6100      	**prefx    0x61
   51235:	2019      	ld         x, @0x6120 <g_server_data>
   51236:	0010      	ld         ah, #+0x0
   51237:	07E0      	bra        +0x7 <CMServerGetHandler+0xE:0x5123E[p]>
    {
        if((handle >= g_server_data.server_info[index].start_handle) &&
   51238:	0286      	cmp        al, @(+0x2, x)
   51239:	03FC      	bcs        +0x3 <CMServerGetHandler+0xC:0x5123C[p]>
   5123A:	0386      	cmp        al, @(+0x3, x)
   5123B:	062C      	bcz        +0x6 <CMServerGetHandler+0x11:0x51241[p]>
 *---------------------------------------------------------------------------*/
extern CM_HANDLERS_T *CMServerGetHandler(uint16 handle)
{
    uint16 index;

    for(index = 0; index < g_server_data.num_reg_services; index++)
   5123C:	0130      	add        ah, #+0x1
   5123D:	0438      	add        x, #+0x4
   5123E:	F881      	cmp        ah, @0xFFF8 <(scratchpad)>
   5123F:	F9FC      	bcs        -0x7 <CMServerGetHandler+0x8:0x51238[p]>
   51240:	0018      	ld         x, #+0x0
            return &g_server_data.server_info[index].server_handler;
        }
    }

    return NULL;
}
   51241:	E315      	ld         al, @0xFFE3 <register uxl>
   51242:	FE0F      	leave      #-0x2

0x00051243 <CMServerNotifyGenericEvent>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMServerNotifyGenericEvent(cm_event event_type,
                                CM_EVENT_T *server_event)
{
   51243:	F90B      	enter      #-0x7
   51244:	0327      	st         al, @(+0x3, y)
   51245:	0423      	st         ah, @(+0x4, y)
   51246:	0014      	ld         al, #+0x0
   51247:	14E0      	bra        +0x14 <CMServerNotifyGenericEvent+0x18:0x5125B[p]>
    uint16 index;
    CM_HANDLERS_T server_handler;

    for(index = 0; index < g_server_data.num_reg_services; index++)
    {
       server_handler = g_server_data.server_info[index].server_handler;
   51248:	6100      	**prefx    0x61
   51249:	2019      	ld         x, @0x6120 <g_server_data>
   5124A:	0217      	ld         al, @(+0x2, y)
   5124B:	02A0      	asl        #0x2
   5124C:	E139      	add        x, @0xFFE1 <register al>
   5124D:	0116      	ld         al, @(+0x1, x)
   5124E:	0127      	st         al, @(+0x1, y)
   5124F:	001A      	ld         x, @(0x0, x)
   51250:	002B      	st         x, @(0x0, y)

       if(server_handler.pCallback == NULL)
   51251:	E315      	ld         al, @0xFFE3 <register uxl>
   51252:	011B      	ld         x, @(+0x1, y)
   51253:	E3B5      	or         al, @0xFFE3 <register uxl>
   51254:	05F4      	beq        +0x5 <CMServerNotifyGenericEvent+0x16:0x51259[p]>
           continue; /* NULL Callback */

       /* Notify the servers */
       server_handler.pCallback(event_type, server_event);
   51255:	0317      	ld         al, @(+0x3, y)
   51256:	0413      	ld         ah, @(+0x4, y)
   51257:	000E      	ld         xh, @(0x0, y)
   51258:	019F      	bsr        @(+0x1, y)
                                CM_EVENT_T *server_event)
{
    uint16 index;
    CM_HANDLERS_T server_handler;

    for(index = 0; index < g_server_data.num_reg_services; index++)
   51259:	0217      	ld         al, @(+0x2, y)
   5125A:	0134      	add        al, #+0x1
   5125B:	0227      	st         al, @(+0x2, y)
   5125C:	021B      	ld         x, @(+0x2, y)
   5125D:	6100      	**prefx    0x61
   5125E:	2289      	cmp        x, @0x6122 <g_server_data+0x2>
   5125F:	E9FC      	bcs        -0x17 <CMServerNotifyGenericEvent+0x5:0x51248[p]>
           continue; /* NULL Callback */

       /* Notify the servers */
       server_handler.pCallback(event_type, server_event);
    }
}
   51260:	F90F      	leave      #-0x7

0x00051261 <CMServerNotifyGattEvent>:
 *
 *---------------------------------------------------------------------------*/
extern void CMServerNotifyGattEvent(cm_event event_type,
                                CM_EVENT_T *server_event,
                                CM_HANDLERS_T *server_handler)
{
   51261:	FE0B      	enter      #-0x2
   51262:	FA25      	st         al, @0xFFFA <(scratchpad)>
   51263:	021B      	ld         x, @(+0x2, y)
    if((server_handler != NULL) && (server_handler->pCallback != NULL))
   51264:	0FF4      	beq        +0xF <CMServerNotifyGattEvent+0x12:0x51273[p]>
   51265:	0116      	ld         al, @(+0x1, x)
   51266:	F925      	st         al, @0xFFF9 <(scratchpad)>
   51267:	001A      	ld         x, @(0x0, x)
   51268:	F829      	st         x, @0xFFF8 <(scratchpad)>
   51269:	E315      	ld         al, @0xFFE3 <register uxl>
   5126A:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   5126B:	08F4      	beq        +0x8 <CMServerNotifyGattEvent+0x12:0x51273[p]>
    {
        server_handler->pCallback(event_type, server_event);
   5126C:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   5126D:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5126E:	FE2B      	st         x, @(-0x2, y)
   5126F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   51270:	FF2B      	st         x, @(-0x1, y)
   51271:	FF0E      	ld         xh, @(-0x1, y)
   51272:	FE9F      	bsr        @(-0x2, y)
    }
}
   51273:	FE0F      	leave      #-0x2

0x00051274 <CMServerInitRegisterHandler>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMServerInitRegisterHandler(
                            CM_SERVER_INFO_T *cm_server_info)
{
   51274:	FD0B      	enter      #-0x3
   51275:	0027      	st         al, @(0x0, y)
    if(g_server_data.num_reg_services >= g_server_data.max_server_services)
   51276:	6100      	**prefx    0x61
   51277:	2215      	ld         al, @0x6122 <g_server_data+0x2>
   51278:	6100      	**prefx    0x61
   51279:	2185      	cmp        al, @0x6121 <g_server_data+0x1>
   5127A:	04FC      	bcs        +0x4 <CMServerInitRegisterHandler+0xA:0x5127E[p]>
    {
        CMReportPanic(cm_panic_server_service_size_exceeded);
   5127B:	0F14      	ld         al, #+0xF
   5127C:	FA00      	**prefx    0xFA
   5127D:	7A9C      	bsr        -0x586 <CMReportPanic:0x50CF7[p]>
    }

    g_server_data.server_info[g_server_data.num_reg_services] = *cm_server_info;
   5127E:	6100      	**prefx    0x61
   5127F:	2215      	ld         al, @0x6122 <g_server_data+0x2>
   51280:	F925      	st         al, @0xFFF9 <(scratchpad)>
   51281:	02A0      	asl        #0x2
   51282:	6100      	**prefx    0x61
   51283:	2019      	ld         x, @0x6120 <g_server_data>
   51284:	E335      	add        al, @0xFFE3 <register uxl>
   51285:	FA25      	st         al, @0xFFFA <(scratchpad)>
   51286:	001B      	ld         x, @(0x0, y)
   51287:	011A      	ld         x, @(+0x1, x)
   51288:	FB29      	st         x, @0xFFFB <(scratchpad)>
   51289:	001B      	ld         x, @(0x0, y)
   5128A:	0212      	ld         ah, @(+0x2, x)
   5128B:	0316      	ld         al, @(+0x3, x)
   5128C:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5128D:	0016      	ld         al, @(0x0, x)
   5128E:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5128F:	0026      	st         al, @(0x0, x)
   51290:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   51291:	0126      	st         al, @(+0x1, x)
   51292:	0222      	st         ah, @(+0x2, x)
   51293:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   51294:	0326      	st         al, @(+0x3, x)

    ++g_server_data.num_reg_services;
   51295:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   51296:	0138      	add        x, #+0x1
   51297:	6100      	**prefx    0x61
   51298:	2229      	st         x, @0x6122 <g_server_data+0x2>
}
   51299:	FD0F      	leave      #-0x3

0x0005129A <CMServerHandleProcessLMEvent>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/

extern void CMServerHandleProcessLMEvent(h_msg_t *msg)
{
   5129A:	EA0B      	enter      #-0x16
   5129B:	1327      	st         al, @(+0x13, y)
    switch(HALGetMsgId(msg))
   5129C:	F800      	**prefx    0xF8
   5129D:	BE9C      	bsr        -0x842 <HALGetMsgId:0x50A5B[p]>
   5129E:	1227      	st         al, @(+0x12, y)
   5129F:	1A00      	**prefx    0x1A
   512A0:	1384      	cmp        al, #+0x1A13
   512A1:	4FF4      	beq        +0x4F <CMServerHandleProcessLMEvent+0x56:0x512F0[p]>
   512A2:	1A00      	**prefx    0x1A
   512A3:	1484      	cmp        al, #+0x1A14
   512A4:	06F8      	bcc        +0x6 <CMServerHandleProcessLMEvent+0x10:0x512AA[p]>
   512A5:	1A00      	**prefx    0x1A
   512A6:	1084      	cmp        al, #+0x1A10
   512A7:	0100      	**prefx    0x1
   512A8:	A7F0      	bne        +0xA7 <CMServerHandleProcessLMEvent+0xB5:0x5134F[p]>
   512A9:	0AE0      	bra        +0xA <CMServerHandleProcessLMEvent+0x19:0x512B3[p]>
   512AA:	1217      	ld         al, @(+0x12, y)
   512AB:	1A00      	**prefx    0x1A
   512AC:	1684      	cmp        al, #+0x1A16
   512AD:	18F4      	beq        +0x18 <CMServerHandleProcessLMEvent+0x2B:0x512C5[p]>
   512AE:	1A00      	**prefx    0x1A
   512AF:	1984      	cmp        al, #+0x1A19
   512B0:	0100      	**prefx    0x1
   512B1:	9EF0      	bne        +0x9E <CMServerHandleProcessLMEvent+0xB5:0x5134F[p]>
   512B2:	27E0      	bra        +0x27 <CMServerHandleProcessLMEvent+0x3F:0x512D9[p]>
    {
        case HAL_GATT_ADD_DB_CFM:
        {
            handleSignalGattAddDbCfm(
   512B3:	1317      	ld         al, @(+0x13, y)
   512B4:	F800      	**prefx    0xF8
   512B5:	AB9C      	bsr        -0x855 <HALGetMsg:0x50A60[p]>
   512B6:	E119      	ld         x, @0xFFE1 <register al>
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleSignalGattAddDbCfm(h_gatt_add_db_cfm_t *p_event_data)
{
    if(p_event_data->result != sys_status_success)
   512B7:	009A      	tst        @(0x0, x)
   512B8:	04F4      	beq        +0x4 <CMServerHandleProcessLMEvent+0x22:0x512BC[p]>
    {
        CMReportPanic(cm_panic_db_registration);
   512B9:	0514      	ld         al, #+0x5
   512BA:	0100      	**prefx    0x1
   512BB:	92E0      	bra        +0x92 <CMServerHandleProcessLMEvent+0xB3:0x5134D[p]>
    }
    else
    {
        CM_INIT_CFM_T cm_init_cfm;
        cm_init_cfm.status = sys_status_success;
   512BC:	0018      	ld         x, #+0x0
   512BD:	032B      	st         x, @(+0x3, y)

        /* Send CM init confirmation event to the application */
        CMNotifyEventToApplication(CM_INIT_CFM,
   512BE:	0014      	ld         al, #+0x0
   512BF:	E411      	ld         ah, @0xFFE4 <register uy>
   512C0:	0330      	add        ah, #+0x3
   512C1:	FA00      	**prefx    0xFA
   512C2:	E89C      	bsr        -0x618 <CMNotifyEventToApplication:0x50CAA[p]>
   512C3:	0100      	**prefx    0x1
   512C4:	8BE0      	bra        +0x8B <CMServerHandleProcessLMEvent+0xB5:0x5134F[p]>
        }
        break;
#ifndef THIN_CM4_MESH_NODE
        case HAL_GATT_CHAR_VAL_NOTIFICATION_CFM:
        {
            handleGattCharValNotificationCfm((h_gatt_char_val_ind_cfm_t *)
   512C5:	1317      	ld         al, @(+0x13, y)
   512C6:	F800      	**prefx    0xF8
   512C7:	999C      	bsr        -0x867 <HALGetMsg:0x50A60[p]>
   512C8:	1127      	st         al, @(+0x11, y)

static void handleGattCharValNotificationCfm(h_gatt_char_val_ind_cfm_t *p_event_data)
{
    CM_NOTIFICATION_CFM_T cm_notification_cfm;
    device_handle_id device_id = CMGetDeviceId(HAL_GATT_CHAR_VAL_NOTIFICATION_CFM,
            (void*)p_event_data);
   512C9:	1217      	ld         al, @(+0x12, y)
   512CA:	1113      	ld         ah, @(+0x11, y)
   512CB:	FB00      	**prefx    0xFB
   512CC:	8A9C      	bsr        -0x576 <CMGetDeviceId:0x50D56[p]>

    cm_notification_cfm.device_id = device_id;
   512CD:	0327      	st         al, @(+0x3, y)
    cm_notification_cfm.status = p_event_data->result;
   512CE:	111B      	ld         x, @(+0x11, y)
   512CF:	011A      	ld         x, @(+0x1, x)
   512D0:	052B      	st         x, @(+0x5, y)
    cm_notification_cfm.handle = p_event_data->handle;
   512D1:	111B      	ld         x, @(+0x11, y)
   512D2:	0216      	ld         al, @(+0x2, x)
   512D3:	0427      	st         al, @(+0x4, y)

    /* Send notification confirmation to server */
    CMServerNotifyGattEvent(CM_NOTIFICATION_CFM,
   512D4:	FF00      	**prefx    0xFF
   512D5:	5B9C      	bsr        -0xA5 <CMServerGetHandler:0x51230[p]>
   512D6:	0027      	st         al, @(0x0, y)
   512D7:	1314      	ld         al, #+0x13
   512D8:	15E0      	bra        +0x15 <CMServerHandleProcessLMEvent+0x53:0x512ED[p]>
        }
        break;

        case HAL_GATT_CHAR_VAL_INDICATION_CFM:
        {
            handleGattCharValIndicationCfm((h_gatt_char_val_ind_cfm_t *)
   512D9:	1317      	ld         al, @(+0x13, y)
   512DA:	F800      	**prefx    0xF8
   512DB:	859C      	bsr        -0x87B <HALGetMsg:0x50A60[p]>
   512DC:	1027      	st         al, @(+0x10, y)

static void handleGattCharValIndicationCfm(h_gatt_char_val_ind_cfm_t *p_event_data)
{
    CM_INDICATION_CFM_T cm_indication_cfm;
    device_handle_id device_id = CMGetDeviceId(HAL_GATT_CHAR_VAL_NOTIFICATION_CFM,
            (void*)p_event_data);
   512DD:	1A00      	**prefx    0x1A
   512DE:	1614      	ld         al, #+0x1A16
   512DF:	1013      	ld         ah, @(+0x10, y)
   512E0:	FA00      	**prefx    0xFA
   512E1:	759C      	bsr        -0x58B <CMGetDeviceId:0x50D56[p]>

    cm_indication_cfm.device_id = device_id;
   512E2:	0327      	st         al, @(+0x3, y)
    cm_indication_cfm.status = p_event_data->result;
   512E3:	101B      	ld         x, @(+0x10, y)
   512E4:	011A      	ld         x, @(+0x1, x)
   512E5:	052B      	st         x, @(+0x5, y)
    cm_indication_cfm.handle = p_event_data->handle;
   512E6:	101B      	ld         x, @(+0x10, y)
   512E7:	0216      	ld         al, @(+0x2, x)
   512E8:	0427      	st         al, @(+0x4, y)

    /* Send indication confirmation to server */
    CMServerNotifyGattEvent(CM_INDICATION_CFM,
   512E9:	FF00      	**prefx    0xFF
   512EA:	469C      	bsr        -0xBA <CMServerGetHandler:0x51230[p]>
   512EB:	0027      	st         al, @(0x0, y)
   512EC:	1414      	ld         al, #+0x14
   512ED:	E411      	ld         ah, @0xFFE4 <register uy>
   512EE:	0330      	add        ah, #+0x3
   512EF:	4DE0      	bra        +0x4D <CMServerHandleProcessLMEvent+0xA2:0x5133C[p]>
        break;
#endif /* THIN_CM4_MESH_NODE */
        case GATT_ACCESS_IND:
        {
            /* Access Indication */
            handleSignalGattAccessInd(
   512F0:	1317      	ld         al, @(+0x13, y)
   512F1:	F700      	**prefx    0xF7
   512F2:	6E9C      	bsr        -0x892 <HALGetMsg:0x50A60[p]>
   512F3:	0F27      	st         al, @(+0xF, y)
 *---------------------------------------------------------------------------*/
static void handleSignalGattAccessInd(h_gatt_access_ind_t *p_event_data)
{
    CM_SERVER_ACCESSED_T cm_server_accessed;
    device_handle_id device_id = CMGetDeviceId(HAL_GATT_ACCESS_IND,
                                               (void*)p_event_data);
   512F4:	1217      	ld         al, @(+0x12, y)
   512F5:	0F13      	ld         ah, @(+0xF, y)
   512F6:	FA00      	**prefx    0xFA
   512F7:	5F9C      	bsr        -0x5A1 <CMGetDeviceId:0x50D56[p]>
   512F8:	0D27      	st         al, @(+0xD, y)
    cm_dev_state state = CMGetDevState(device_id);
   512F9:	F700      	**prefx    0xF7
   512FA:	D79C      	bsr        -0x929 <CMGetDevState:0x509D1[p]>
   512FB:	0E27      	st         al, @(+0xE, y)

    cm_server_accessed.device_id = device_id;
   512FC:	0D17      	ld         al, @(+0xD, y)
   512FD:	0327      	st         al, @(+0x3, y)
    cm_server_accessed.handle = p_event_data->handle;
   512FE:	0F1B      	ld         x, @(+0xF, y)
   512FF:	011A      	ld         x, @(+0x1, x)
   51300:	042B      	st         x, @(+0x4, y)
    cm_server_accessed.offset = p_event_data->offset;
   51301:	0F1B      	ld         x, @(+0xF, y)
   51302:	031A      	ld         x, @(+0x3, x)
   51303:	072B      	st         x, @(+0x7, y)

    /* Send access event to the application */
    CMNotifyEventToApplication(CM_SERVER_ACCESSED,
   51304:	1714      	ld         al, #+0x17
   51305:	E411      	ld         ah, @0xFFE4 <register uy>
   51306:	0330      	add        ah, #+0x3
   51307:	FA00      	**prefx    0xFA
   51308:	A29C      	bsr        -0x65E <CMNotifyEventToApplication:0x50CAA[p]>
                               (CM_EVENT_T *)&cm_server_accessed);

    switch(state)
   51309:	0E17      	ld         al, @(+0xE, y)
   5130A:	0184      	cmp        al, #+0x1
   5130B:	41F0      	bne        +0x41 <CMServerHandleProcessLMEvent+0xB2:0x5134C[p]>
    {
        case dev_state_connected:
        {
            /* Received GATT ACCESS IND with write access */
            if(p_event_data->flags ==
   5130C:	0F1B      	ld         x, @(+0xF, y)
   5130D:	0216      	ld         al, @(+0x2, x)
   5130E:	C000      	**prefx    0xC0
   5130F:	0284      	cmp        al, #-0x3FFE
   51310:	14F0      	bne        +0x14 <CMServerHandleProcessLMEvent+0x8A:0x51324[p]>
                 ATT_ACCESS_WRITE_COMPLETE))
            {
                CM_WRITE_ACCESS_T cm_server_write;

                /* Prepare the send write access message to notify the server */
                cm_server_write.device_id = device_id;
   51311:	0D17      	ld         al, @(+0xD, y)
   51312:	0827      	st         al, @(+0x8, y)
                cm_server_write.handle = p_event_data->handle;
   51313:	011A      	ld         x, @(+0x1, x)
   51314:	092B      	st         x, @(+0x9, y)
                cm_server_write.offset = p_event_data->offset;
   51315:	0F1B      	ld         x, @(+0xF, y)
   51316:	031A      	ld         x, @(+0x3, x)
   51317:	0C2B      	st         x, @(+0xC, y)

                /*  Parse Server Write Indication */
                HALParseAccessWriteInd(&cm_server_write,p_event_data);
   51318:	E415      	ld         al, @0xFFE4 <register uy>
   51319:	0834      	add        al, #+0x8
   5131A:	0F13      	ld         ah, @(+0xF, y)
   5131B:	F800      	**prefx    0xF8
   5131C:	FA9C      	bsr        -0x806 <HALParseAccessWriteInd:0x50B16[p]>

                /* Send write access event to the server */
                CMServerNotifyGattEvent(CM_WRITE_ACCESS,
   5131D:	0F1B      	ld         x, @(+0xF, y)
   5131E:	0116      	ld         al, @(+0x1, x)
   5131F:	FF00      	**prefx    0xFF
   51320:	109C      	bsr        -0xF0 <CMServerGetHandler:0x51230[p]>
   51321:	0027      	st         al, @(0x0, y)
   51322:	1614      	ld         al, #+0x16
   51323:	17E0      	bra        +0x17 <CMServerHandleProcessLMEvent+0xA0:0x5133A[p]>
                              (CM_EVENT_T *)&cm_server_write,
                              CMServerGetHandler(p_event_data->handle));
            }
            /* Received GATT ACCESS IND with read access */
            else if(p_event_data->flags ==
   51324:	8000      	**prefx    0x80
   51325:	0184      	cmp        al, #-0x7FFF
   51326:	19F0      	bne        +0x19 <CMServerHandleProcessLMEvent+0xA5:0x5133F[p]>
                ATT_ACCESS_PERMISSION))
            {
                CM_READ_ACCESS_T cm_server_read;

                /* Prepare the send read access message to notify the server */
                cm_server_read.device_id = device_id;
   51327:	0D17      	ld         al, @(+0xD, y)
   51328:	0827      	st         al, @(+0x8, y)
                cm_server_read.handle = p_event_data->handle;
   51329:	0F1B      	ld         x, @(+0xF, y)
   5132A:	011A      	ld         x, @(+0x1, x)
   5132B:	092B      	st         x, @(+0x9, y)
                cm_server_read.offset = p_event_data->offset;
   5132C:	0F1B      	ld         x, @(+0xF, y)
   5132D:	031A      	ld         x, @(+0x3, x)
   5132E:	0C2B      	st         x, @(+0xC, y)

                /*  Parse Server Write Indication */
                HALParseAccessReadInd(&cm_server_read, p_event_data);
   5132F:	E415      	ld         al, @0xFFE4 <register uy>
   51330:	0834      	add        al, #+0x8
   51331:	0F13      	ld         ah, @(+0xF, y)
   51332:	F800      	**prefx    0xF8
   51333:	EE9C      	bsr        -0x812 <HALParseAccessReadInd:0x50B21[p]>

                /* Send read access event to the server */
                CMServerNotifyGattEvent(CM_READ_ACCESS,
   51334:	0F1B      	ld         x, @(+0xF, y)
   51335:	0116      	ld         al, @(+0x1, x)
   51336:	FF00      	**prefx    0xFF
   51337:	F99C      	bsr        -0x107 <CMServerGetHandler:0x51230[p]>
   51338:	0027      	st         al, @(0x0, y)
   51339:	1514      	ld         al, #+0x15
   5133A:	E411      	ld         ah, @0xFFE4 <register uy>
   5133B:	0830      	add        ah, #+0x8
   5133C:	FF00      	**prefx    0xFF
   5133D:	249C      	bsr        -0xDC <CMServerNotifyGattEvent:0x51261[p]>
   5133E:	11E0      	bra        +0x11 <CMServerHandleProcessLMEvent+0xB5:0x5134F[p]>
                               CMServerGetHandler(p_event_data->handle));
            }
            else
            {
                /* Request not supported */
                GattAccessRsp(p_event_data->cid, p_event_data->handle,
   5133F:	0F1B      	ld         x, @(+0xF, y)
   51340:	0112      	ld         ah, @(+0x1, x)
   51341:	0A00      	**prefx    0xA
   51342:	0614      	ld         al, #+0xA06
   51343:	0027      	st         al, @(0x0, y)
   51344:	0018      	ld         x, #+0x0
   51345:	012B      	st         x, @(+0x1, y)
   51346:	022B      	st         x, @(+0x2, y)
   51347:	0F1B      	ld         x, @(+0xF, y)
   51348:	0016      	ld         al, @(0x0, x)
   51349:	6800      	**prefx    0x68
   5134A:	A29C      	bsr        +0x67A2 <GattAccessRsp:0x57AEC[p]>
   5134B:	04E0      	bra        +0x4 <CMServerHandleProcessLMEvent+0xB5:0x5134F[p]>

        default:
            /* The event has been received in an invalid state.
             * Report panic
             */
            CMReportPanic(cm_panic_invalid_state);
   5134C:	0B14      	ld         al, #+0xB
   5134D:	FA00      	**prefx    0xFA
   5134E:	A99C      	bsr        -0x657 <CMReportPanic:0x50CF7[p]>
        break;
        default:
        break;
    }

}
   5134F:	EA0F      	leave      #-0x16

0x00051350 <CMSendValueNotification>:
 *      cm_status_code: cm_status_success if the request is processed
 *
 *----------------------------------------------------------------------------*/
extern cm_status_code CMSendValueNotification(CM_VALUE_NOTIFICATION_T
                                              *cm_value_notify)
{
   51350:	FE0B      	enter      #-0x2
    /* Handle the procedure in HAL */
    HALSendValueNotification(cm_value_notify);
   51351:	F800      	**prefx    0xF8
   51352:	6F9C      	bsr        -0x791 <HALSendValueNotification:0x50BC1[p]>

    return cm_status_success;
}
   51353:	0014      	ld         al, #+0x0
   51354:	FE0F      	leave      #-0x2

0x00051355 <CMSendValueNotificationExt>:
 *----------------------------------------------------------------------------*/
extern sys_status CMSendValueNotificationExt(
                            CM_VALUE_NOTIFICATION_T *cm_value_notify)
{
     /* Handle the procedure in HAL */
    return HALSendValueNotificationExt(cm_value_notify);
   51355:	F800      	**prefx    0xF8
   51356:	48E0      	bra        -0x7B8 <HALSendValueNotificationExt:0x50B9E[p]>

0x00051357 <CMSendAccessRsp>:
 *  RETURNS/MODIFIES
 *      cm_status_code: cm_status_success if the request is processed
 *
 *----------------------------------------------------------------------------*/
extern cm_status_code CMSendAccessRsp(CM_ACCESS_RESPONSE_T *cm_access_rsp)
{
   51357:	FA0B      	enter      #-0x6
   51358:	0327      	st         al, @(+0x3, y)
    uint16 cid = CMGetConnId(cm_access_rsp->device_id);
   51359:	E119      	ld         x, @0xFFE1 <register al>
   5135A:	0016      	ld         al, @(0x0, x)
   5135B:	FA00      	**prefx    0xFA
   5135C:	AF9C      	bsr        -0x651 <CMGetConnId:0x50D0B[p]>

    /* Send ACCESS RESPONSE */
    GattAccessRsp(cid, cm_access_rsp->handle, cm_access_rsp->rc,
   5135D:	031B      	ld         x, @(+0x3, y)
   5135E:	0112      	ld         ah, @(+0x1, x)
   5135F:	041A      	ld         x, @(+0x4, x)
   51360:	002B      	st         x, @(0x0, y)
   51361:	031B      	ld         x, @(+0x3, y)
   51362:	031A      	ld         x, @(+0x3, x)
   51363:	012B      	st         x, @(+0x1, y)
   51364:	031B      	ld         x, @(+0x3, y)
   51365:	021A      	ld         x, @(+0x2, x)
   51366:	022B      	st         x, @(+0x2, y)
   51367:	6800      	**prefx    0x68
   51368:	849C      	bsr        +0x6784 <GattAccessRsp:0x57AEC[p]>
                  cm_access_rsp->size_value, cm_access_rsp->value);

    return cm_status_success;
}
   51369:	0014      	ld         al, #+0x0
   5136A:	FA0F      	leave      #-0x6

0x0005136B <CMServerInit>:
 *      bool: TRUE if gatt database is being registered, FALSE otherwise
 *
 *---------------------------------------------------------------------------*/

extern bool CMServerInit(CM_INIT_PARAMS_T *cm_init_params)
{
   5136B:	FD0B      	enter      #-0x3
   5136C:	0027      	st         al, @(0x0, y)
    /* Initialises the server write */
    HALServerWriteInit();
   5136D:	F900      	**prefx    0xF9
   5136E:	A19C      	bsr        -0x75F <HALServerWriteInit:0x50C0F[p]>

    /* Save the server service information */
    g_server_data.server_info = cm_init_params->server_info;
   5136F:	001B      	ld         x, @(0x0, y)
   51370:	071A      	ld         x, @(+0x7, x)
   51371:	6100      	**prefx    0x61
   51372:	2029      	st         x, @0x6120 <g_server_data>
    g_server_data.max_server_services = cm_init_params->max_server_services;
   51373:	001B      	ld         x, @(0x0, y)
   51374:	081A      	ld         x, @(+0x8, x)
   51375:	6100      	**prefx    0x61
   51376:	2129      	st         x, @0x6121 <g_server_data+0x1>

    /* Initialise number of register handlers */
    g_server_data.num_reg_services = 0;
   51377:	0014      	ld         al, #+0x0
   51378:	6100      	**prefx    0x61
   51379:	2225      	st         al, @0x6122 <g_server_data+0x2>

    /* Register the GATT database */
    if((cm_init_params->db_length > 0) && (cm_init_params->gatt_db != NULL))
   5137A:	001B      	ld         x, @(0x0, y)
   5137B:	0B16      	ld         al, @(+0xB, x)
   5137C:	08F4      	beq        +0x8 <CMServerInit+0x19:0x51384[p]>
   5137D:	0A12      	ld         ah, @(+0xA, x)
   5137E:	06F4      	beq        +0x6 <CMServerInit+0x19:0x51384[p]>
    {
        GattAddDatabaseReq(cm_init_params->db_length, cm_init_params->gatt_db);
   5137F:	FB00      	**prefx    0xFB
   51380:	5700      	**prefx    0x57
   51381:	159C      	bsr        -0x4A8EB <GattAddDatabaseReq:0x6A96[p]>
   51382:	0114      	ld         al, #+0x1
   51383:	02E0      	bra        +0x2 <CMServerInit+0x1A:0x51385[p]>
        return TRUE;
   51384:	0014      	ld         al, #+0x0
    }
    return FALSE;
}
   51385:	FD0F      	leave      #-0x3

0x00051386 <CMObserverInit>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMObserverInit(void)
{
    g_cm_observer_data.scan_state = cm_scan_state_idle;
   51386:	0014      	ld         al, #+0x0
   51387:	6100      	**prefx    0x61
   51388:	2E25      	st         al, @0x612E <g_cm_observer_data+0xB>
}
   51389:	00E2      	bra        0x0, x

0x0005138A <CMObserverEnableRawReports>:
 *
 *---------------------------------------------------------------------------*/

extern void CMObserverEnableRawReports(bool rawAdvertReports)
{
    g_cm_observer_data.rawAdvertReports = rawAdvertReports;
   5138A:	6100      	**prefx    0x61
   5138B:	2F25      	st         al, @0x612F <g_cm_observer_data+0xC>
}
   5138C:	00E2      	bra        0x0, x

0x0005138D <CMObserverHandleProcessLMEvent>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/

extern void CMObserverHandleProcessLMEvent(h_msg_t *msg)
{
   5138D:	E00B      	enter      #-0x20
   5138E:	1D27      	st         al, @(+0x1D, y)
    switch(HALGetMsgId(msg))
   5138F:	F700      	**prefx    0xF7
   51390:	CB9C      	bsr        -0x935 <HALGetMsgId:0x50A5B[p]>
   51391:	1900      	**prefx    0x19
   51392:	6384      	cmp        al, #+0x1963
   51393:	18F0      	bne        +0x18 <CMObserverHandleProcessLMEvent+0x1E:0x513AB[p]>
        {
#ifndef THIN_CM4_MESH_NODE
            CM_ADV_REPORT_IND_T cm_adv_report_ind;
#endif /* THIN_CM4_MESH_NODE */
            h_ls_advertising_report_ind_t *adv_ind =
                    (h_ls_advertising_report_ind_t *) HALGetMsg(msg);
   51394:	1D17      	ld         al, @(+0x1D, y)
   51395:	F700      	**prefx    0xF7
   51396:	CA9C      	bsr        -0x936 <HALGetMsg:0x50A60[p]>
   51397:	1C27      	st         al, @(+0x1C, y)
            
            if(g_cm_observer_data.rawAdvertReports)
   51398:	6100      	**prefx    0x61
   51399:	2F99      	tst        @0x612F <g_cm_observer_data+0xC>
   5139A:	04F4      	beq        +0x4 <CMObserverHandleProcessLMEvent+0x11:0x5139E[p]>
            {
                /* Send raw advertising report event to the application */
                CMNotifyEventToApplication(CM_RAW_ADV_REPORT_IND,
   5139B:	0114      	ld         al, #+0x1
   5139C:	1C13      	ld         ah, @(+0x1C, y)
   5139D:	0CE0      	bra        +0xC <CMObserverHandleProcessLMEvent+0x1C:0x513A9[p]>
                                           (CM_EVENT_T *)adv_ind);
                break;
            }
#ifndef THIN_CM4_MESH_NODE
            /* Ignore if it is not advertisement report */
            if(!HALIsAdvertisingReport(adv_ind))
   5139E:	1C17      	ld         al, @(+0x1C, y)
   5139F:	F700      	**prefx    0xF7
   513A0:	649C      	bsr        -0x89C <HALIsAdvertisingReport:0x50B04[p]>
   513A1:	E199      	tst        @0xFFE1 <register al>
   513A2:	09F4      	beq        +0x9 <CMObserverHandleProcessLMEvent+0x1E:0x513AB[p]>
                break;

            /* Parse the advertising report indication */
            HALParseAdvertisingReportInd(&cm_adv_report_ind, adv_ind);
   513A3:	E415      	ld         al, @0xFFE4 <register uy>
   513A4:	1C13      	ld         ah, @(+0x1C, y)
   513A5:	F900      	**prefx    0xF9
   513A6:	DD9C      	bsr        -0x723 <HALParseAdvertisingReportInd:0x50C83[p]>

            /* Send advertising report event to the application */
            CMNotifyEventToApplication(CM_ADV_REPORT_IND,
   513A7:	0214      	ld         al, #+0x2
   513A8:	E411      	ld         ah, @0xFFE4 <register uy>
   513A9:	F900      	**prefx    0xF9
   513AA:	009C      	bsr        -0x700 <CMNotifyEventToApplication:0x50CAA[p]>
        break;

        default:
        break;
    }
}
   513AB:	E00F      	leave      #-0x20

0x000513AC <CMPeripheralInit>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMPeripheralInit(void)
{
   513AC:	FE0B      	enter      #-0x2
    /*  Initialise the advertising state */
    g_cm_peripheral_data.advert_state = cm_advert_state_idle;
   513AD:	6100      	**prefx    0x61
   513AE:	7D18      	ld         x, #+0x617D
   513AF:	0014      	ld         al, #+0x0
   513B0:	0026      	st         al, @(0x0, x)

    /* Initialise the bond id to removed flag */
    g_cm_peripheral_data.bond_id_to_be_removed = CM_INVALID_BOND_ID;
   513B1:	FF14      	ld         al, #-0x1
   513B2:	FF26      	st         al, @(-0x1, x)

    /*  Initialise the unbonding flag */
    g_cm_peripheral_data.unbonding = FALSE;
   513B3:	0014      	ld         al, #+0x0
   513B4:	FE26      	st         al, @(-0x2, x)
}
   513B5:	FE0F      	leave      #-0x2

0x000513B6 <CMGetAdvState>:
 *---------------------------------------------------------------------------*/

extern cm_advert_state CMGetAdvState(void)
{
    return g_cm_peripheral_data.advert_state;
}
   513B6:	6100      	**prefx    0x61
   513B7:	7D15      	ld         al, @0x617D <___libgatt_lib_db_615+0xA>
   513B8:	00E2      	bra        0x0, x

0x000513B9 <CMIsAdvertising>:
 *  RETURNS
 *      bool: TRUE if the CM is advertising
 *
 *---------------------------------------------------------------------------*/
extern bool CMIsAdvertising(void)
{
   513B9:	FE0B      	enter      #-0x2
    switch(CMGetAdvState())
   513BA:	FC9C      	bsr        -0x4 <CMGetAdvState:0x513B6[p]>
   513BB:	FF34      	add        al, #-0x1
   513BC:	0384      	cmp        al, #+0x3
   513BD:	03FC      	bcs        +0x3 <CMIsAdvertising+0x7:0x513C0[p]>
   513BE:	0014      	ld         al, #+0x0
   513BF:	02E0      	bra        +0x2 <CMIsAdvertising+0x8:0x513C1[p]>
   513C0:	0114      	ld         al, #+0x1
        default:
            return FALSE;
        break;
    }
    return FALSE;
}
   513C1:	FE0F      	leave      #-0x2

0x000513C2 <addAdvScanData>:
 *  RETURNS
 *     Nothing
 *
 *---------------------------------------------------------------------------*/
static void addAdvScanData(CM_PERIPHERAL_ADVERT_TYPE_T *cur_advert_type)
{
   513C2:	F90B      	enter      #-0x7
   513C3:	0427      	st         al, @(+0x4, y)
     * is 3 bytes. Refer BT Spec 4.0, Vol 3, Part C, Sec 11.1.3.
     */
    uint16 length_added_to_adv = NUM_OF_GAP_AD_FLAGS;

    /* Reset existing advertising data */
    LsStoreAdvScanData(0, NULL, ad_src_advertise);
   513C4:	0010      	ld         ah, #+0x0
   513C5:	0023      	st         ah, @(0x0, y)
   513C6:	0014      	ld         al, #+0x0
   513C7:	FB00      	**prefx    0xFB
   513C8:	2700      	**prefx    0x27
   513C9:	359C      	bsr        -0x4D8CB <LsStoreAdvScanData:0x3AFE[p]>

    /* Reset existing scan response data */
    LsStoreAdvScanData(0, NULL, ad_src_scan_rsp);
   513CA:	0114      	ld         al, #+0x1
   513CB:	0027      	st         al, @(0x0, y)
   513CC:	0014      	ld         al, #+0x0
   513CD:	0010      	ld         ah, #+0x0
   513CE:	FB00      	**prefx    0xFB
   513CF:	2700      	**prefx    0x27
   513D0:	2E9C      	bsr        -0x4D8D2 <LsStoreAdvScanData:0x3AFE[p]>

    /* Add UUID list of the services supported by the device */
    if((cur_advert_type->advert_flags) & uuid_present)
   513D1:	041B      	ld         x, @(+0x4, y)
   513D2:	0216      	ld         al, @(+0x2, x)
   513D3:	40C4      	and        al, #0x40
   513D4:	04F0      	bne        +0x4 <addAdvScanData+0x16:0x513D8[p]>
   513D5:	0310      	ld         ah, #+0x3
   513D6:	0323      	st         ah, @(+0x3, y)
   513D7:	0DE0      	bra        +0xD <addAdvScanData+0x22:0x513E4[p]>
    {
        uint8 *data = (uint8*)g_cm_peripheral_data.advert_params.
                        advert_data.device_uuid.uuid;

        uint16 length = g_cm_peripheral_data.advert_params.
                          advert_data.device_uuid.length;
   513D8:	6100      	**prefx    0x61
   513D9:	3415      	ld         al, @0x6134 <g_cm_peripheral_data+0x4>

        /* One added for Length field, which will be added to Adv Data by
         * GAP layer
         */
        length_added_to_adv += (length + 1);
   513DA:	E119      	ld         x, @0xFFE1 <register al>
   513DB:	0438      	add        x, #+0x4
   513DC:	032B      	st         x, @(+0x3, y)

        /* Add the UUID data */
        LsStoreAdvScanData(length, data, ad_src_advertise);
   513DD:	0010      	ld         ah, #+0x0
   513DE:	0023      	st         ah, @(0x0, y)
   513DF:	6100      	**prefx    0x61
   513E0:	3311      	ld         ah, @0x6133 <g_cm_peripheral_data+0x3>
   513E1:	FB00      	**prefx    0xFB
   513E2:	2700      	**prefx    0x27
   513E3:	1B9C      	bsr        -0x4D8E5 <LsStoreAdvScanData:0x3AFE[p]>
    }

    /* Add device appearance to the advertisements */
    if((cur_advert_type->advert_flags) & appearance_present)
   513E4:	041B      	ld         x, @(+0x4, y)
   513E5:	0216      	ld         al, @(+0x2, x)
   513E6:	0100      	**prefx    0x1
   513E7:	80C4      	and        al, #0x80
   513E8:	0FF4      	beq        +0xF <addAdvScanData+0x35:0x513F7[p]>
    {
        uint8 *data = g_cm_peripheral_data.advert_params.
                      advert_data.device_appearance.value;

        uint16 length = g_cm_peripheral_data.advert_params.
                        advert_data.device_appearance.length;
   513E9:	6100      	**prefx    0x61
   513EA:	3815      	ld         al, @0x6138 <g_cm_peripheral_data+0x8>

        /* One added for Length field, which will be added to Adv Data by
         * GAP layer
         */
        length_added_to_adv += (length + 1);
   513EB:	0134      	add        al, #+0x1
   513EC:	0313      	ld         ah, @(+0x3, y)
   513ED:	E131      	add        ah, @0xFFE1 <register al>
   513EE:	0323      	st         ah, @(+0x3, y)
   513EF:	FF34      	add        al, #-0x1

        /* Add the appearance data */
        LsStoreAdvScanData(length, data, ad_src_advertise);
   513F0:	0018      	ld         x, #+0x0
   513F1:	002B      	st         x, @(0x0, y)
   513F2:	6100      	**prefx    0x61
   513F3:	3711      	ld         ah, @0x6137 <g_cm_peripheral_data+0x7>
   513F4:	FB00      	**prefx    0xFB
   513F5:	2700      	**prefx    0x27
   513F6:	089C      	bsr        -0x4D8F8 <LsStoreAdvScanData:0x3AFE[p]>
    }

    /* Add tx power value of device to the advertising data */
    if((cur_advert_type->advert_flags) & tx_power_present)
   513F7:	041B      	ld         x, @(+0x4, y)
   513F8:	0216      	ld         al, @(+0x2, x)
   513F9:	0100      	**prefx    0x1
   513FA:	00C4      	and        al, #0x100
   513FB:	11F4      	beq        +0x11 <addAdvScanData+0x4A:0x5140C[p]>
    {
        /* Tx power level value prefixed with 'Tx Power' AD Type */
        uint8 device_tx_power[TX_POWER_VALUE_LENGTH] = {AD_TYPE_TX_POWER};
   513FC:	0A10      	ld         ah, #+0xA
   513FD:	0123      	st         ah, @(+0x1, y)

        /* Add the read tx power level to device_tx_power
         * Tx power level value is of 1 byte
         */
        device_tx_power[TX_POWER_VALUE_LENGTH - 1] =
   513FE:	6100      	**prefx    0x61
   513FF:	3D15      	ld         al, @0x613D <g_cm_peripheral_data+0xD>
   51400:	0227      	st         al, @(+0x2, y)
                        tx_power_level;

        /* One added for Length field, which will be added to Adv Data by
         * GAP layer
         */
        length_added_to_adv += (TX_POWER_VALUE_LENGTH + 1);
   51401:	031B      	ld         x, @(+0x3, y)
   51402:	0338      	add        x, #+0x3
   51403:	032B      	st         x, @(+0x3, y)

        /* Add the TX power */
        LsStoreAdvScanData(TX_POWER_VALUE_LENGTH, device_tx_power,
   51404:	0010      	ld         ah, #+0x0
   51405:	0023      	st         ah, @(0x0, y)
   51406:	0214      	ld         al, #+0x2
   51407:	E411      	ld         ah, @0xFFE4 <register uy>
   51408:	0130      	add        ah, #+0x1
   51409:	FB00      	**prefx    0xFB
   5140A:	2700      	**prefx    0x27
   5140B:	F39C      	bsr        -0x4D90D <LsStoreAdvScanData:0x3AFE[p]>
                              ad_src_advertise);
    }

    /* Add manufacturer data to the advertising data */
    if((cur_advert_type->advert_flags) & manufacturer_data_present)
   5140C:	041B      	ld         x, @(+0x4, y)
   5140D:	0216      	ld         al, @(+0x2, x)
   5140E:	0400      	**prefx    0x4
   5140F:	00C4      	and        al, #0x400
   51410:	0FF4      	beq        +0xF <addAdvScanData+0x5D:0x5141F[p]>
    {
        uint8 *data = g_cm_peripheral_data.advert_params.
                      advert_data.manuf_data.value;

        uint16 length = g_cm_peripheral_data.advert_params.
                        advert_data.manuf_data.length;
   51411:	6100      	**prefx    0x61
   51412:	3C15      	ld         al, @0x613C <g_cm_peripheral_data+0xC>

        /* One added for Length field, which will be added to Adv Data by
         * GAP layer
         */
        length_added_to_adv += (length + 1);
   51413:	0134      	add        al, #+0x1
   51414:	0313      	ld         ah, @(+0x3, y)
   51415:	E131      	add        ah, @0xFFE1 <register al>
   51416:	0323      	st         ah, @(+0x3, y)
   51417:	FF34      	add        al, #-0x1

        /* Add the appearance data */
        LsStoreAdvScanData(length, data, ad_src_advertise);
   51418:	0018      	ld         x, #+0x0
   51419:	002B      	st         x, @(0x0, y)
   5141A:	6100      	**prefx    0x61
   5141B:	3B11      	ld         ah, @0x613B <g_cm_peripheral_data+0xB>
   5141C:	FB00      	**prefx    0xFB
   5141D:	2700      	**prefx    0x27
   5141E:	E09C      	bsr        -0x4D920 <LsStoreAdvScanData:0x3AFE[p]>
    }

    /* Add device name to the advertising data */
    if((cur_advert_type->advert_flags) & name_present)
   5141F:	041B      	ld         x, @(+0x4, y)
   51420:	0212      	ld         ah, @(+0x2, x)
   51421:	E015      	ld         al, @0xFFE0 <register ah>
   51422:	20C4      	and        al, #0x20
   51423:	22F4      	beq        +0x22 <addAdvScanData+0x83:0x51445[p]>
{
    uint8 *p_device_name = NULL;
    uint16 device_name_adtype_len;

    /* Read device name along with AD Type and its length */
    p_device_name = g_cm_peripheral_data.advert_params.
   51424:	6100      	**prefx    0x61
   51425:	3919      	ld         x, @0x6139 <g_cm_peripheral_data+0x9>
                                advert_data.device_name.name;

    device_name_adtype_len = g_cm_peripheral_data.advert_params.
   51426:	6100      	**prefx    0x61
   51427:	3A15      	ld         al, @0x613A <g_cm_peripheral_data+0xA>
                             advert_data.device_name.length;

    /* Add complete device name to Advertisement data */
    p_device_name[0] = AD_TYPE_LOCAL_NAME_COMPLETE;
   51428:	0910      	ld         ah, #+0x9
   51429:	0022      	st         ah, @(0x0, x)

    /* Check if Complete Device Name can fit in remaining advertisement
     * data space including the one byte length field which will be added
     * by the GAP layer
     */
    if((device_name_adtype_len + 1) <= (MAX_ADV_DATA_LEN - adv_data_len))
   5142A:	E111      	ld         ah, @0xFFE1 <register al>
   5142B:	0130      	add        ah, #+0x1
   5142C:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   5142D:	1F10      	ld         ah, #+0x1F
   5142E:	0353      	sub        ah, @(+0x3, y)
   5142F:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   51430:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   51431:	F881      	cmp        ah, @0xFFF8 <(scratchpad)>
   51432:	022C      	bcz        +0x2 <addAdvScanData+0x72:0x51434[p]>
   51433:	03E0      	bra        +0x3 <addAdvScanData+0x74:0x51436[p]>
    {
        /* Add Complete Device Name to Advertisement Data */
        LsStoreAdvScanData(device_name_adtype_len , p_device_name,
   51434:	0010      	ld         ah, #+0x0
   51435:	05E0      	bra        +0x5 <addAdvScanData+0x78:0x5143A[p]>
                      ad_src_advertise);
    }
    /* Check if Complete Device Name can fit in Scan response message */
    else if((device_name_adtype_len + 1) <= (MAX_ADV_DATA_LEN - scan_data_len))
   51436:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   51437:	2080      	cmp        ah, #+0x20
   51438:	04F8      	bcc        +0x4 <addAdvScanData+0x7A:0x5143C[p]>
    {
        /* Add Complete Device Name to Scan Response Data */
        LsStoreAdvScanData(device_name_adtype_len , p_device_name,
   51439:	0110      	ld         ah, #+0x1
   5143A:	0023      	st         ah, @(0x0, y)
   5143B:	20E0      	bra        +0x20 <addAdvScanData+0x99:0x5145B[p]>
                      ad_src_scan_rsp);
    }
    /* Check if Shortened Device Name can fit in remaining advertisement
     * data space
     */
    else if((MAX_ADV_DATA_LEN - adv_data_len) >=
   5143C:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5143D:	0984      	cmp        al, #+0x9
   5143E:	182C      	bcz        +0x18 <addAdvScanData+0x94:0x51456[p]>
            (SHORTENED_DEV_NAME_LEN + 2)) /* Added 2 for Length and AD type
                                           * added by GAP layer
                                           */
    {
        /* Add shortened device name to Advertisement data */
        p_device_name[0] = AD_TYPE_LOCAL_NAME_SHORT;
   5143F:	0810      	ld         ah, #+0x8
   51440:	0022      	st         ah, @(0x0, x)

        /* Add the short name to the advertisement data */
        LsStoreAdvScanData(SHORTENED_DEV_NAME_LEN , p_device_name,
   51441:	0014      	ld         al, #+0x0
   51442:	0027      	st         al, @(0x0, y)
   51443:	0814      	ld         al, #+0x8
   51444:	17E0      	bra        +0x17 <addAdvScanData+0x99:0x5145B[p]>
    {
       /* Add the name */
       addDeviceNameToAdvData(length_added_to_adv, 0);
    }

    else if((cur_advert_type->advert_flags) & name_present_scan_rsp)
   51445:	0800      	**prefx    0x8
   51446:	00C0      	and        ah, #0x800
   51447:	18F4      	beq        +0x18 <addAdvScanData+0x9D:0x5145F[p]>
{
    uint8 *p_device_name = NULL;
    uint16 device_name_len;

    /* Read device name along with AD Type and its length */
    p_device_name = g_cm_peripheral_data.advert_params.
   51448:	6100      	**prefx    0x61
   51449:	3919      	ld         x, @0x6139 <g_cm_peripheral_data+0x9>
                                advert_data.device_name.name;

    device_name_len = g_cm_peripheral_data.advert_params.
   5144A:	6100      	**prefx    0x61
   5144B:	3A11      	ld         ah, @0x613A <g_cm_peripheral_data+0xA>
                             advert_data.device_name.length;

    if((device_name_len + 1) <= (MAX_ADV_DATA_LEN - scan_data_len))
   5144C:	E015      	ld         al, @0xFFE0 <register ah>
   5144D:	0134      	add        al, #+0x1
   5144E:	2084      	cmp        al, #+0x20
   5144F:	07F8      	bcc        +0x7 <addAdvScanData+0x94:0x51456[p]>
    {
        /* Add complete device name to Advertisement data */
        p_device_name[0] = AD_TYPE_LOCAL_NAME_COMPLETE;
   51450:	0914      	ld         al, #+0x9
   51451:	0026      	st         al, @(0x0, x)

        /* Add Complete Device Name to Scan Response Data */
        LsStoreAdvScanData(device_name_len , p_device_name,
   51452:	0114      	ld         al, #+0x1
   51453:	0027      	st         al, @(0x0, y)
   51454:	E015      	ld         al, @0xFFE0 <register ah>
   51455:	06E0      	bra        +0x6 <addAdvScanData+0x99:0x5145B[p]>
                           ad_src_scan_rsp);
    }
    else /* Add device name to remaining Scan reponse data space */
    {
        /* Add as much as can be stored in Scan Response data */
        p_device_name[0] = AD_TYPE_LOCAL_NAME_SHORT;
   51456:	0810      	ld         ah, #+0x8
   51457:	0022      	st         ah, @(0x0, x)

        /* Add the name to the scan response */
        LsStoreAdvScanData(MAX_ADV_DATA_LEN - scan_data_len,
   51458:	0114      	ld         al, #+0x1
   51459:	0027      	st         al, @(0x0, y)
   5145A:	1F14      	ld         al, #+0x1F
   5145B:	E311      	ld         ah, @0xFFE3 <register uxl>
   5145C:	FB00      	**prefx    0xFB
   5145D:	2700      	**prefx    0x27
   5145E:	A09C      	bsr        -0x4D960 <LsStoreAdvScanData:0x3AFE[p]>
    else if((cur_advert_type->advert_flags) & name_present_scan_rsp)
    {
       /* Add the name to scan response packet */
       addDeviceNameToScanRspData(0);
    }
}
   5145F:	F90F      	leave      #-0x7

0x00051460 <gattAdvertTimerHandler>:
 *
 *---------------------------------------------------------------------------*/
static void gattAdvertTimerHandler(timer_id tid)
{
    /* Based upon the timer id, stop on-going advertisements */
    if(g_cm_peripheral_data.advert_tid == tid)
   51460:	6100      	**prefx    0x61
   51461:	7811      	ld         ah, @0x6178 <___libgatt_lib_db_615+0x5>
   51462:	E181      	cmp        ah, @0xFFE1 <register al>
   51463:	18F0      	bne        +0x18 <gattAdvertTimerHandler+0x1B:0x5147B[p]>
    {
        g_cm_peripheral_data.advert_tid = TIMER_INVALID;
   51464:	0014      	ld         al, #+0x0
   51465:	6100      	**prefx    0x61
   51466:	7825      	st         al, @0x6178 <___libgatt_lib_db_615+0x5>

        if((g_cm_peripheral_data.cur_adv_type + 1) <
   51467:	6100      	**prefx    0x61
   51468:	7715      	ld         al, @0x6177 <___libgatt_lib_db_615+0x4>
   51469:	0134      	add        al, #+0x1
   5146A:	6100      	**prefx    0x61
   5146B:	7685      	cmp        al, @0x6176 <___libgatt_lib_db_615+0x3>
   5146C:	07F8      	bcc        +0x7 <gattAdvertTimerHandler+0x13:0x51473[p]>
                g_cm_peripheral_data.advert_params.num_adv_types)
        {
            /* Move to the next advertisement type */
            ++g_cm_peripheral_data.cur_adv_type;
   5146D:	6100      	**prefx    0x61
   5146E:	7725      	st         al, @0x6177 <___libgatt_lib_db_615+0x4>

            /* More advertisements available */
            g_cm_peripheral_data.moreAdvertisementTypes = TRUE;
   5146F:	0114      	ld         al, #+0x1
   51470:	6100      	**prefx    0x61
   51471:	7A25      	st         al, @0x617A <___libgatt_lib_db_615+0x7>
   51472:	06E0      	bra        +0x6 <gattAdvertTimerHandler+0x18:0x51478[p]>
        }
        else
        {
            /* More advertisements un available */
            g_cm_peripheral_data.moreAdvertisementTypes = FALSE;
   51473:	0014      	ld         al, #+0x0
   51474:	6100      	**prefx    0x61
   51475:	7A25      	st         al, @0x617A <___libgatt_lib_db_615+0x7>

            /* Reset the current advertisement type */
            g_cm_peripheral_data.cur_adv_type = 0;
   51476:	6100      	**prefx    0x61
   51477:	7725      	st         al, @0x6177 <___libgatt_lib_db_615+0x4>
        }

        /* Stop the current advertisement type */
        GattCancelConnectReq();
   51478:	FB00      	**prefx    0xFB
   51479:	5600      	**prefx    0x56
   5147A:	16E0      	bra        -0x4A9EA <GattCancelConnectReq:0x6A90[p]>
   5147B:	00E2      	bra        0x0, x

0x0005147C <CMSetAdvState>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/

extern void CMSetAdvState(cm_advert_state new_state)
{
   5147C:	FA0B      	enter      #-0x6
   5147D:	0327      	st         al, @(+0x3, y)
    cm_advert_state old_state = g_cm_peripheral_data.advert_state;
   5147E:	6100      	**prefx    0x61
   5147F:	7D15      	ld         al, @0x617D <___libgatt_lib_db_615+0xA>
   51480:	0227      	st         al, @(+0x2, y)

    if (old_state != new_state)
   51481:	0387      	cmp        al, @(+0x3, y)
   51482:	20F4      	beq        +0x20 <CMSetAdvState+0x26:0x514A2[p]>
    {
        CM_ADVERT_STATE_IND_T advert_state_ind;

        /* Handle exiting old state */
        switch (old_state)
   51483:	FF34      	add        al, #-0x1
   51484:	0384      	cmp        al, #+0x3
   51485:	13F8      	bcc        +0x13 <CMSetAdvState+0x1C:0x51498[p]>
                /* FALLTHROUGH */
            case cm_advert_state_fast_advertising:
                /* FALLTHROUGH */
            case cm_advert_state_slow_advertising:
            {
                if(new_state != cm_advert_state_directed_advertising &&
   51486:	0317      	ld         al, @(+0x3, y)
   51487:	FF34      	add        al, #-0x1
   51488:	0284      	cmp        al, #+0x2
   51489:	0F2C      	bcz        +0xF <CMSetAdvState+0x1C:0x51498[p]>
 *
 *---------------------------------------------------------------------------*/
static void advertisingExit(void)
{
    /* Cancel advertisement timer */
    TimerDelete(g_cm_peripheral_data.advert_tid);
   5148A:	6100      	**prefx    0x61
   5148B:	7815      	ld         al, @0x6178 <___libgatt_lib_db_615+0x5>
   5148C:	FC00      	**prefx    0xFC
   5148D:	D800      	**prefx    0xD8
   5148E:	959C      	bsr        -0x4286B <TimerDelete:0xEC23[p]>
    g_cm_peripheral_data.advert_tid                 = TIMER_INVALID;
   5148F:	0014      	ld         al, #+0x0
   51490:	6100      	**prefx    0x61
   51491:	7825      	st         al, @0x6178 <___libgatt_lib_db_615+0x5>

    /* Initialise the advertisement flags */
    g_cm_peripheral_data.stop_adverts               = FALSE;
   51492:	6100      	**prefx    0x61
   51493:	7925      	st         al, @0x6179 <___libgatt_lib_db_615+0x6>
    g_cm_peripheral_data.cur_adv_type               = 0;
   51494:	6100      	**prefx    0x61
   51495:	7725      	st         al, @0x6177 <___libgatt_lib_db_615+0x4>
    g_cm_peripheral_data.moreAdvertisementTypes     = FALSE;
   51496:	6100      	**prefx    0x61
   51497:	7A25      	st         al, @0x617A <___libgatt_lib_db_615+0x7>
            /* Nothing to do */
            break;
        }

        /* Save the new state */
        g_cm_peripheral_data.advert_state =  new_state;
   51498:	0317      	ld         al, @(+0x3, y)
   51499:	6100      	**prefx    0x61
   5149A:	7D25      	st         al, @0x617D <___libgatt_lib_db_615+0xA>

        /* Notify the Application about the Advertising state change */
        advert_state_ind.new_state = new_state;
   5149B:	0127      	st         al, @(+0x1, y)
        advert_state_ind.old_state = old_state;
   5149C:	0217      	ld         al, @(+0x2, y)
   5149D:	0027      	st         al, @(0x0, y)
        CMNotifyEventToApplication(CM_ADVERT_STATE_IND,
   5149E:	0314      	ld         al, #+0x3
   5149F:	E411      	ld         ah, @0xFFE4 <register uy>
   514A0:	F800      	**prefx    0xF8
   514A1:	099C      	bsr        -0x7F7 <CMNotifyEventToApplication:0x50CAA[p]>
                                       (CM_EVENT_T *)&advert_state_ind);
    }
}
   514A2:	FA0F      	leave      #-0x6

0x000514A3 <startAdvertisements>:
 *  RETURNS
 *     Nothing
 *
 *---------------------------------------------------------------------------*/
static void startAdvertisements(void)
{
   514A3:	F80B      	enter      #-0x8
    uint16 connect_flags = 0;  /* connection flags */
    CM_PERIPHERAL_ADVERT_TYPE_T *cur_advert_type = &g_cm_peripheral_data.
                                                   advert_params.adv_type
                                                   [g_cm_peripheral_data.
                                                    cur_adv_type];
   514A4:	6100      	**prefx    0x61
   514A5:	7715      	ld         al, @0x6177 <___libgatt_lib_db_615+0x4>
   514A6:	0E90      	smult      #+0xE
   514A7:	0527      	st         al, @(+0x5, y)
   514A8:	6100      	**prefx    0x61
   514A9:	3E34      	add        al, #+0x613E
   514AA:	0427      	st         al, @(+0x4, y)

    if(cur_advert_type->advert_flags & local_address_random)
   514AB:	051B      	ld         x, @(+0x5, y)
   514AC:	6100      	**prefx    0x61
   514AD:	4012      	ld         ah, @(+0x6140, x)
   514AE:	E015      	ld         al, @0xFFE0 <register ah>
   514AF:	0200      	**prefx    0x2
   514B0:	00C4      	and        al, #0x200
   514B1:	03F0      	bne        +0x3 <startAdvertisements+0x11:0x514B4[p]>
   514B2:	F825      	st         al, @0xFFF8 <(scratchpad)>
   514B3:	03E0      	bra        +0x3 <startAdvertisements+0x13:0x514B6[p]>
   514B4:	1018      	ld         x, #+0x10
   514B5:	F829      	st         x, @0xFFF8 <(scratchpad)>
    {
        /* Local Bluetooth Address type is public */
        connect_flags |= L2CAP_OWN_ADDR_TYPE_PUBLIC;
    }

    if((cur_advert_type->advert_flags & directed_advert_supported) ||
   514B6:	051B      	ld         x, @(+0x5, y)
   514B7:	6100      	**prefx    0x61
   514B8:	4016      	ld         al, @(+0x6140, x)
   514B9:	06C4      	and        al, #0x6
   514BA:	13F4      	beq        +0x13 <startAdvertisements+0x2A:0x514CD[p]>
       (cur_advert_type->advert_flags & ldc_directed_advert_supported))
    {
        if(cur_advert_type->advert_flags & directed_advert_supported)
   514BB:	02C0      	and        ah, #0x2
   514BC:	05F4      	beq        +0x5 <startAdvertisements+0x1E:0x514C1[p]>
        {
            /* Directed advertisement type  */
            connect_flags |= L2CAP_CONNECTION_SLAVE_DIRECTED;
   514BD:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   514BE:	02B0      	or         ah, #+0x2
   514BF:	0323      	st         ah, @(+0x3, y)
   514C0:	04E0      	bra        +0x4 <startAdvertisements+0x21:0x514C4[p]>
        }
        else
        {
            /* Low duty cycle directed advertisement type  */
            connect_flags |= L2CAP_CONNECTION_SLAVE_DIRECTED_LDC;
   514C1:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   514C2:	05B4      	or         al, #+0x5
   514C3:	0327      	st         al, @(+0x3, y)
        }

        /* Set the Bluetooth Address for the directed advertising */
        GapSetAdvAddress(&cur_advert_type->directed_bd_addr);
   514C4:	041B      	ld         x, @(+0x4, y)
   514C5:	0938      	add        x, #+0x9
   514C6:	E315      	ld         al, @0xFFE3 <register uxl>
   514C7:	FB00      	**prefx    0xFB
   514C8:	2700      	**prefx    0x27
   514C9:	269C      	bsr        -0x4D8DA <GapSetAdvAddress:0x3BEF[p]>

        /* Set the Advertising state to directed advertising */
        CMSetAdvState(cm_advert_state_directed_advertising);
   514CA:	0114      	ld         al, #+0x1
   514CB:	B19C      	bsr        -0x4F <CMSetAdvState:0x5147C[p]>
   514CC:	70E0      	bra        +0x70 <startAdvertisements+0x99:0x5153C[p]>
    }
    else if (cur_advert_type->advert_flags & non_conn_advert_supported)
   514CD:	E015      	ld         al, @0xFFE0 <register ah>
   514CE:	1000      	**prefx    0x10
   514CF:	00C4      	and        al, #0x1000
   514D0:	53F4      	beq        +0x53 <startAdvertisements+0x80:0x51523[p]>
    {
        /* Set the GAP mode for peripheral */
        HALGapSetPeripheralMode(g_cm_peripheral_data.advert_params.role,
   514D1:	6100      	**prefx    0x61
   514D2:	3111      	ld         ah, @0x6131 <g_cm_peripheral_data+0x1>
   514D3:	0023      	st         ah, @(0x0, y)
   514D4:	051B      	ld         x, @(+0x5, y)
   514D5:	6100      	**prefx    0x61
   514D6:	3E1A      	ld         x, @(+0x613E, x)
   514D7:	012B      	st         x, @(+0x1, y)
   514D8:	051B      	ld         x, @(+0x5, y)
   514D9:	6100      	**prefx    0x61
   514DA:	3F1A      	ld         x, @(+0x613F, x)
   514DB:	022B      	st         x, @(+0x2, y)
   514DC:	6100      	**prefx    0x61
   514DD:	3215      	ld         al, @0x6132 <g_cm_peripheral_data+0x2>
   514DE:	6100      	**prefx    0x61
   514DF:	3011      	ld         ah, @0x6130 <g_cm_peripheral_data>
   514E0:	F700      	**prefx    0xF7
   514E1:	319C      	bsr        -0x8CF <HALGapSetPeripheralMode:0x50C12[p]>
                            g_cm_peripheral_data.advert_params.security,
                            cur_advert_type->discover,
                            cur_advert_type->connect);

        /* clear the existing advertisement data, if any */
        LsStoreAdvScanData(0, NULL, ad_src_advertise);
   514E2:	0010      	ld         ah, #+0x0
   514E3:	0023      	st         ah, @(0x0, y)
   514E4:	0014      	ld         al, #+0x0
   514E5:	FB00      	**prefx    0xFB
   514E6:	2600      	**prefx    0x26
   514E7:	179C      	bsr        -0x4D9E9 <LsStoreAdvScanData:0x3AFE[p]>

        /*Set the advertisement interval,API accepts the value in microseconds*/
        GapSetAdvInterval(cur_advert_type->adv_interval_min * MILLISECOND,
   514E8:	051B      	ld         x, @(+0x5, y)
   514E9:	6100      	**prefx    0x61
   514EA:	4116      	ld         al, @(+0x6141, x)
   514EB:	0400      	**prefx    0x4
   514EC:	E890      	smult      #+0x3E8
   514ED:	FA25      	st         al, @0xFFFA <(scratchpad)>
   514EE:	6100      	**prefx    0x61
   514EF:	4212      	ld         ah, @(+0x6142, x)
   514F0:	E015      	ld         al, @0xFFE0 <register ah>
   514F1:	0009      	**unsigned
   514F2:	0400      	**prefx    0x4
   514F3:	E890      	umult      #0x3E8
   514F4:	F925      	st         al, @0xFFF9 <(scratchpad)>
   514F5:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   514F6:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   514F7:	F839      	add        x, @0xFFF8 <(scratchpad)>
   514F8:	F829      	st         x, @0xFFF8 <(scratchpad)>
   514F9:	051B      	ld         x, @(+0x5, y)
   514FA:	6100      	**prefx    0x61
   514FB:	431A      	ld         x, @(+0x6143, x)
   514FC:	E315      	ld         al, @0xFFE3 <register uxl>
   514FD:	0400      	**prefx    0x4
   514FE:	E890      	smult      #+0x3E8
   514FF:	FA25      	st         al, @0xFFFA <(scratchpad)>
   51500:	051B      	ld         x, @(+0x5, y)
   51501:	6100      	**prefx    0x61
   51502:	4412      	ld         ah, @(+0x6144, x)
   51503:	E015      	ld         al, @0xFFE0 <register ah>
   51504:	0009      	**unsigned
   51505:	0400      	**prefx    0x4
   51506:	E890      	umult      #0x3E8
   51507:	FA31      	add        ah, @0xFFFA <(scratchpad)>
   51508:	0127      	st         al, @(+0x1, y)
   51509:	0023      	st         ah, @(0x0, y)
   5150A:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5150B:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5150C:	FB00      	**prefx    0xFB
   5150D:	2700      	**prefx    0x27
   5150E:	CF9C      	bsr        -0x4D931 <GapSetAdvInterval:0x3BDD[p]>
                          cur_advert_type->adv_interval_max * MILLISECOND);

        /* Add advertisement data if any */
        addAdvScanData(cur_advert_type);
   5150F:	0417      	ld         al, @(+0x4, y)
   51510:	FF00      	**prefx    0xFF
   51511:	B19C      	bsr        -0x14F <addAdvScanData:0x513C2[p]>

        if(cur_advert_type->advert_flags & local_address_random )
   51512:	051B      	ld         x, @(+0x5, y)
   51513:	6100      	**prefx    0x61
   51514:	4016      	ld         al, @(+0x6140, x)
   51515:	0200      	**prefx    0x2
   51516:	00C4      	and        al, #0x200
   51517:	04F4      	beq        +0x4 <startAdvertisements+0x78:0x5151B[p]>
        {
            /* Start broadcasting */
            LsStartStopAdvertise(TRUE, whitelist_disabled, ls_addr_type_random);
   51518:	0110      	ld         ah, #+0x1
   51519:	0023      	st         ah, @(0x0, y)
   5151A:	03E0      	bra        +0x3 <startAdvertisements+0x7A:0x5151D[p]>
        }
        else
        {
            /* Start broadcasting */
            LsStartStopAdvertise(TRUE, whitelist_disabled, ls_addr_type_public);
   5151B:	0014      	ld         al, #+0x0
   5151C:	0027      	st         al, @(0x0, y)
   5151D:	0114      	ld         al, #+0x1
   5151E:	0010      	ld         ah, #+0x0
   5151F:	FB00      	**prefx    0xFB
   51520:	2600      	**prefx    0x26
   51521:	F79C      	bsr        -0x4DA09 <LsStartStopAdvertise:0x3B18[p]>
   51522:	64E0      	bra        +0x64 <startAdvertisements+0xE3:0x51586[p]>
        return;
    }
    else
    {
        /* Advertisement type undirected */
        connect_flags |= L2CAP_CONNECTION_SLAVE_UNDIRECTED;
   51523:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   51524:	04B8      	or         x, #+0x4
   51525:	032B      	st         x, @(+0x3, y)

        if(cur_advert_type->advert_flags & whitelist_supported)
   51526:	E015      	ld         al, @0xFFE0 <register ah>
   51527:	01C4      	and        al, #0x1
   51528:	04F4      	beq        +0x4 <startAdvertisements+0x89:0x5152C[p]>
        {
            /* Whitelist supported */
            connect_flags |= L2CAP_CONNECTION_SLAVE_WHITELIST;
   51529:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5152A:	07B4      	or         al, #+0x7
   5152B:	0327      	st         al, @(+0x3, y)
        }

        if(cur_advert_type->advert_flags & fast_advert_supported)
   5152C:	08C0      	and        ah, #0x8
   5152D:	04F4      	beq        +0x4 <startAdvertisements+0x8E:0x51531[p]>
        {
            /* Set the Advertising state to fast advertising */
            CMSetAdvState(cm_advert_state_fast_advertising);
   5152E:	0214      	ld         al, #+0x2
   5152F:	FF00      	**prefx    0xFF
   51530:	4C9C      	bsr        -0xB4 <CMSetAdvState:0x5147C[p]>
        }
        if(cur_advert_type->advert_flags & slow_advert_supported)
   51531:	051B      	ld         x, @(+0x5, y)
   51532:	6100      	**prefx    0x61
   51533:	4016      	ld         al, @(+0x6140, x)
   51534:	10C4      	and        al, #0x10
   51535:	04F4      	beq        +0x4 <startAdvertisements+0x96:0x51539[p]>
        {
            /* Set the Advertising state to slow advertising */
            CMSetAdvState(cm_advert_state_slow_advertising);
   51536:	0314      	ld         al, #+0x3
   51537:	FF00      	**prefx    0xFF
   51538:	449C      	bsr        -0xBC <CMSetAdvState:0x5147C[p]>
        }

        /* Add the advertisement and scan data */
        addAdvScanData(cur_advert_type);
   51539:	0417      	ld         al, @(+0x4, y)
   5153A:	FF00      	**prefx    0xFF
   5153B:	879C      	bsr        -0x179 <addAdvScanData:0x513C2[p]>
    }

    if(!(cur_advert_type->advert_flags & directed_advert_supported))
   5153C:	051B      	ld         x, @(+0x5, y)
   5153D:	6100      	**prefx    0x61
   5153E:	4016      	ld         al, @(+0x6140, x)
   5153F:	02C4      	and        al, #0x2
   51540:	10F0      	bne        +0x10 <startAdvertisements+0xAD:0x51550[p]>
    {
        /* Set the advertising intervals */
        GapSetAdvInterval(cur_advert_type->adv_interval_min,
   51541:	6100      	**prefx    0x61
   51542:	4216      	ld         al, @(+0x6142, x)
   51543:	6100      	**prefx    0x61
   51544:	4112      	ld         ah, @(+0x6141, x)
   51545:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   51546:	6100      	**prefx    0x61
   51547:	4312      	ld         ah, @(+0x6143, x)
   51548:	6100      	**prefx    0x61
   51549:	441A      	ld         x, @(+0x6144, x)
   5154A:	012B      	st         x, @(+0x1, y)
   5154B:	0023      	st         ah, @(0x0, y)
   5154C:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5154D:	FB00      	**prefx    0xFB
   5154E:	2700      	**prefx    0x27
   5154F:	8E9C      	bsr        -0x4D972 <GapSetAdvInterval:0x3BDD[p]>
                          cur_advert_type->adv_interval_max);
    }

    /* Set the GAP mode for peripheral */
    HALGapSetPeripheralMode(g_cm_peripheral_data.advert_params.role,
   51550:	6100      	**prefx    0x61
   51551:	3111      	ld         ah, @0x6131 <g_cm_peripheral_data+0x1>
   51552:	0023      	st         ah, @(0x0, y)
   51553:	051B      	ld         x, @(+0x5, y)
   51554:	6100      	**prefx    0x61
   51555:	3E1A      	ld         x, @(+0x613E, x)
   51556:	012B      	st         x, @(+0x1, y)
   51557:	051B      	ld         x, @(+0x5, y)
   51558:	6100      	**prefx    0x61
   51559:	3F1A      	ld         x, @(+0x613F, x)
   5155A:	022B      	st         x, @(+0x2, y)
   5155B:	6100      	**prefx    0x61
   5155C:	3215      	ld         al, @0x6132 <g_cm_peripheral_data+0x2>
   5155D:	6100      	**prefx    0x61
   5155E:	3011      	ld         ah, @0x6130 <g_cm_peripheral_data>
   5155F:	F700      	**prefx    0xF7
   51560:	B29C      	bsr        -0x94E <HALGapSetPeripheralMode:0x50C12[p]>
                            g_cm_peripheral_data.advert_params.security,
                            cur_advert_type->discover,
                            cur_advert_type->connect);

    /* Start GATT connection in Slave role */
    GattConnectReq(NULL, connect_flags);
   51561:	0014      	ld         al, #+0x0
   51562:	0313      	ld         ah, @(+0x3, y)
   51563:	FB00      	**prefx    0xFB
   51564:	5500      	**prefx    0x55
   51565:	2D9C      	bsr        -0x4AAD3 <GattConnectReq:0x6A92[p]>

    /* Start advertisement timer */
    if(!(cur_advert_type->advert_flags & directed_advert_supported) &&
   51566:	051B      	ld         x, @(+0x5, y)
   51567:	6100      	**prefx    0x61
   51568:	4016      	ld         al, @(+0x6140, x)
   51569:	02C4      	and        al, #0x2
   5156A:	1CF0      	bne        +0x1C <startAdvertisements+0xE3:0x51586[p]>
   5156B:	6100      	**prefx    0x61
   5156C:	4516      	ld         al, @(+0x6145, x)
   5156D:	6100      	**prefx    0x61
   5156E:	46B6      	or         al, @(+0x6146, x)
   5156F:	17F4      	beq        +0x17 <startAdvertisements+0xE3:0x51586[p]>
                            cur_advert_type->timeout_value)
    {
        TimerDelete(g_cm_peripheral_data.advert_tid);
   51570:	6100      	**prefx    0x61
   51571:	7815      	ld         al, @0x6178 <___libgatt_lib_db_615+0x5>
   51572:	FC00      	**prefx    0xFC
   51573:	D700      	**prefx    0xD7
   51574:	AF9C      	bsr        -0x42951 <TimerDelete:0xEC23[p]>

        /* Start advertisement timer  */
        g_cm_peripheral_data.advert_tid = TimerCreate(
   51575:	051B      	ld         x, @(+0x5, y)
   51576:	6100      	**prefx    0x61
   51577:	4616      	ld         al, @(+0x6146, x)
   51578:	6100      	**prefx    0x61
   51579:	4512      	ld         ah, @(+0x6145, x)
   5157A:	0118      	ld         x, #+0x1
   5157B:	002B      	st         x, @(0x0, y)
   5157C:	1400      	**prefx    0x14
   5157D:	6018      	ld         x, #+0x1460
   5157E:	022B      	st         x, @(+0x2, y)
   5157F:	0518      	ld         x, #+0x5
   51580:	012B      	st         x, @(+0x1, y)
   51581:	FC00      	**prefx    0xFC
   51582:	D700      	**prefx    0xD7
   51583:	AB9C      	bsr        -0x42955 <TimerCreate:0xEC2E[p]>
   51584:	6100      	**prefx    0x61
   51585:	7825      	st         al, @0x6178 <___libgatt_lib_db_615+0x5>
                                        cur_advert_type->timeout_value, TRUE,
                                        gattAdvertTimerHandler);
    }

}
   51586:	F80F      	leave      #-0x8

0x00051587 <handleSignalLsCancelConnectCfm>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleSignalLsCancelConnectCfm(h_gatt_cancel_connect_cfm_t
                                           *p_event_data)
{
   51587:	FE0B      	enter      #-0x2
    if(!CMIsAdvertising())
   51588:	FE00      	**prefx    0xFE
   51589:	309C      	bsr        -0x1D0 <CMIsAdvertising:0x513B9[p]>
   5158A:	E199      	tst        @0xFFE1 <register al>
   5158B:	1EF4      	beq        +0x1E <handleSignalLsCancelConnectCfm+0x22:0x515A9[p]>
        return; /* Not for peripheral role */

    if(g_cm_peripheral_data.stop_adverts)
   5158C:	6100      	**prefx    0x61
   5158D:	7999      	tst        @0x6179 <___libgatt_lib_db_615+0x6>
   5158E:	12F4      	beq        +0x12 <handleSignalLsCancelConnectCfm+0x19:0x515A0[p]>
    {
        /* Stop advertising was requested */

        if(g_cm_peripheral_data.unbonding)
   5158F:	6100      	**prefx    0x61
   51590:	7B99      	tst        @0x617B <___libgatt_lib_db_615+0x8>
   51591:	0BF4      	beq        +0xB <handleSignalLsCancelConnectCfm+0x15:0x5159C[p]>
        {
            /* Clearing the bonding information */
            ClearBondingInfo(GET_BOND_ID_TO_BE_UNBONDED);
   51592:	6100      	**prefx    0x61
   51593:	7C15      	ld         al, @0x617C <___libgatt_lib_db_615+0x9>
   51594:	FA00      	**prefx    0xFA
   51595:	799C      	bsr        -0x587 <ClearBondingInfo:0x5100E[p]>

            /* Reset the unbonding flag */
            g_cm_peripheral_data.unbonding = FALSE;
   51596:	0014      	ld         al, #+0x0
   51597:	6100      	**prefx    0x61
   51598:	7B25      	st         al, @0x617B <___libgatt_lib_db_615+0x8>

            /* Reset the bond id to un bonded */
            GET_BOND_ID_TO_BE_UNBONDED = CM_INVALID_BOND_ID;
   51599:	FF14      	ld         al, #-0x1
   5159A:	6100      	**prefx    0x61
   5159B:	7C25      	st         al, @0x617C <___libgatt_lib_db_615+0x9>
        }

        /* Reset the stop advertisements flag */
        g_cm_peripheral_data.stop_adverts = FALSE;
   5159C:	0014      	ld         al, #+0x0
   5159D:	6100      	**prefx    0x61
   5159E:	7925      	st         al, @0x6179 <___libgatt_lib_db_615+0x6>
   5159F:	08E0      	bra        +0x8 <handleSignalLsCancelConnectCfm+0x20:0x515A7[p]>
        CMSetAdvState(cm_advert_state_idle);
    }
    else
    {
        /* Check if more advertisement types are availble */
        if(g_cm_peripheral_data.moreAdvertisementTypes)
   515A0:	6100      	**prefx    0x61
   515A1:	7A99      	tst        @0x617A <___libgatt_lib_db_615+0x7>
   515A2:	04F4      	beq        +0x4 <handleSignalLsCancelConnectCfm+0x1F:0x515A6[p]>
        {
            /* One of the advertisement type has expired */
            startAdvertisements();
   515A3:	FF00      	**prefx    0xFF
   515A4:	FF9C      	bsr        -0x101 <startAdvertisements:0x514A3[p]>
   515A5:	04E0      	bra        +0x4 <handleSignalLsCancelConnectCfm+0x22:0x515A9[p]>
        }
        else
        {
            /* Move the Advertising state to idle */
            CMSetAdvState(cm_advert_state_idle);
   515A6:	0014      	ld         al, #+0x0
   515A7:	FF00      	**prefx    0xFF
   515A8:	D49C      	bsr        -0x12C <CMSetAdvState:0x5147C[p]>
        }
    }
}
   515A9:	FE0F      	leave      #-0x2

0x000515AA <CMPeripheralDirectAdvTimeout>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void CMPeripheralDirectAdvTimeout(void)
{
    g_cm_peripheral_data.moreAdvertisementTypes = FALSE;
   515AA:	0014      	ld         al, #+0x0
   515AB:	6100      	**prefx    0x61
   515AC:	7A25      	st         al, @0x617A <___libgatt_lib_db_615+0x7>

    if((g_cm_peripheral_data.cur_adv_type + 1) <
   515AD:	6100      	**prefx    0x61
   515AE:	7715      	ld         al, @0x6177 <___libgatt_lib_db_615+0x4>
   515AF:	0134      	add        al, #+0x1
   515B0:	6100      	**prefx    0x61
   515B1:	7685      	cmp        al, @0x6176 <___libgatt_lib_db_615+0x3>
   515B2:	06F8      	bcc        +0x6 <CMPeripheralDirectAdvTimeout+0xE:0x515B8[p]>
            g_cm_peripheral_data.advert_params.num_adv_types)
    {
        /* Move to the next advertisement type */
        ++g_cm_peripheral_data.cur_adv_type;
   515B3:	6100      	**prefx    0x61
   515B4:	7725      	st         al, @0x6177 <___libgatt_lib_db_615+0x4>

        /* More advertisements available */
        g_cm_peripheral_data.moreAdvertisementTypes = TRUE;
   515B5:	0114      	ld         al, #+0x1
   515B6:	6100      	**prefx    0x61
   515B7:	7A25      	st         al, @0x617A <___libgatt_lib_db_615+0x7>
    }

    /* Handles the advertisement exit */
    handleSignalLsCancelConnectCfm(NULL);
   515B8:	0014      	ld         al, #+0x0
   515B9:	CEE0      	bra        -0x32 <handleSignalLsCancelConnectCfm:0x51587[p]>

0x000515BA <CMPeripheralHandleProcessLmEvent>:
 *      Nothing
 *
 *---------------------------------------------------------------------------*/

extern void CMPeripheralHandleProcessLmEvent(h_msg_t *msg)
{
   515BA:	FC0B      	enter      #-0x4
   515BB:	0127      	st         al, @(+0x1, y)
    switch(HALGetMsgId(msg))
   515BC:	F500      	**prefx    0xF5
   515BD:	9E9C      	bsr        -0xB62 <HALGetMsgId:0x50A5B[p]>
   515BE:	1A00      	**prefx    0x1A
   515BF:	0484      	cmp        al, #+0x1A04
   515C0:	0BF4      	beq        +0xB <CMPeripheralHandleProcessLmEvent+0x11:0x515CB[p]>
   515C1:	1A00      	**prefx    0x1A
   515C2:	0A84      	cmp        al, #+0x1A0A
   515C3:	1EF0      	bne        +0x1E <CMPeripheralHandleProcessLmEvent+0x27:0x515E1[p]>
    {
        case HAL_GATT_CANCEL_CONNECT_CFM:
        {
            handleSignalLsCancelConnectCfm(
   515C4:	0117      	ld         al, @(+0x1, y)
   515C5:	F500      	**prefx    0xF5
   515C6:	9A9C      	bsr        -0xB66 <HALGetMsg:0x50A60[p]>

        default:
             /* Ignore any other event */
        break;
    }
}
   515C7:	021B      	ld         x, @(+0x2, y)
   515C8:	030E      	ld         xh, @(+0x3, y)
   515C9:	043C      	add        y, #+0x4
{
    switch(HALGetMsgId(msg))
    {
        case HAL_GATT_CANCEL_CONNECT_CFM:
        {
            handleSignalLsCancelConnectCfm(
   515CA:	BDE0      	bra        -0x43 <handleSignalLsCancelConnectCfm:0x51587[p]>
        }
        break;

        case HAL_GATT_CONNECT_CFM:
        {
            handleSignalGattConnectCfm((h_gatt_connect_cfm_t*)HALGetMsg(msg));
   515CB:	0117      	ld         al, @(+0x1, y)
   515CC:	F500      	**prefx    0xF5
   515CD:	939C      	bsr        -0xB6D <HALGetMsg:0x50A60[p]>
   515CE:	0027      	st         al, @(0x0, y)
 *
 *---------------------------------------------------------------------------*/

static void handleSignalGattConnectCfm(h_gatt_connect_cfm_t *p_event_data)
{
    if(!CMIsAdvertising())
   515CF:	FE00      	**prefx    0xFE
   515D0:	E99C      	bsr        -0x217 <CMIsAdvertising:0x513B9[p]>
   515D1:	E199      	tst        @0xFFE1 <register al>
   515D2:	0FF4      	beq        +0xF <CMPeripheralHandleProcessLmEvent+0x27:0x515E1[p]>
        return;

    if(p_event_data->result == HCI_ERROR_DIRECTED_ADVERTISING_TIMEOUT)
   515D3:	001B      	ld         x, @(0x0, y)
   515D4:	0616      	ld         al, @(+0x6, x)
   515D5:	3C84      	cmp        al, #+0x3C
   515D6:	05F0      	bne        +0x5 <CMPeripheralHandleProcessLmEvent+0x21:0x515DB[p]>

        default:
             /* Ignore any other event */
        break;
    }
}
   515D7:	021B      	ld         x, @(+0x2, y)
   515D8:	030E      	ld         xh, @(+0x3, y)
   515D9:	043C      	add        y, #+0x4
        return;

    if(p_event_data->result == HCI_ERROR_DIRECTED_ADVERTISING_TIMEOUT)
    {
        /* HDC direct advertisement stopped */
        CMPeripheralDirectAdvTimeout();
   515DA:	D0E0      	bra        -0x30 <CMPeripheralDirectAdvTimeout:0x515AA[p]>

        return;
    }

    /* Set the advertisement state to idle */
    CMSetAdvState(cm_advert_state_idle);
   515DB:	0014      	ld         al, #+0x0

        default:
             /* Ignore any other event */
        break;
    }
}
   515DC:	021B      	ld         x, @(+0x2, y)
   515DD:	030E      	ld         xh, @(+0x3, y)
   515DE:	043C      	add        y, #+0x4

        return;
    }

    /* Set the advertisement state to idle */
    CMSetAdvState(cm_advert_state_idle);
   515DF:	FF00      	**prefx    0xFF
   515E0:	9CE0      	bra        -0x164 <CMSetAdvState:0x5147C[p]>

        default:
             /* Ignore any other event */
        break;
    }
}
   515E1:	FC0F      	leave      #-0x4

0x000515E2 <GetBatteryState>:
 *  RETURNS
 *      State of the battery
 *
 *---------------------------------------------------------------------------*/
extern uint8 GetBatteryState(void)
{
   515E2:	FE0B      	enter      #-0x2
    uint8 battery_state = BATTERY_STATE_POWERING_DEVICE;

#ifdef CSR101x_A05
    if(BatteryReadVoltage() <= BatteryReadLowThreshold())
#else
    if(BatteryReadVoltage() <= BATTERY_THRESHOLD_VOLTAGE)
   515E3:	FC00      	**prefx    0xFC
   515E4:	AC00      	**prefx    0xAC
   515E5:	C49C      	bsr        -0x4543C <BatteryReadVoltage:0xC1A9[p]>
   515E6:	0800      	**prefx    0x8
   515E7:	3584      	cmp        al, #+0x835
   515E8:	03F8      	bcc        +0x3 <GetBatteryState+0x9:0x515EB[p]>
   515E9:	1014      	ld         al, #+0x10
   515EA:	02E0      	bra        +0x2 <GetBatteryState+0xA:0x515EC[p]>
   515EB:	0114      	ld         al, #+0x1
#endif /* CSR101x_A05 */
    {
        battery_state = BATTERY_STATE_NEEDS_REPLACEMENT;
    }
    return battery_state;
}
   515EC:	FE0F      	leave      #-0x2

0x000515ED <ReadBatteryLevel>:
 *  RETURNS
 *      Battery Level in percent
 *
 *----------------------------------------------------------------------------*/
extern uint8 ReadBatteryLevel(void)
{
   515ED:	FC0B      	enter      #-0x4
    uint32 bat_voltage;
    uint32 bat_level;

    /* Read battery voltage and level it with minimum voltage */
    bat_voltage = BatteryReadVoltage();
   515EE:	FC00      	**prefx    0xFC
   515EF:	AC00      	**prefx    0xAC
   515F0:	B99C      	bsr        -0x45447 <BatteryReadVoltage:0xC1A9[p]>

    /* Level the read battery voltage to the minimum value */
    if(bat_voltage < BATTERY_FLAT_BATTERY_VOLTAGE)
   515F1:	0700      	**prefx    0x7
   515F2:	0884      	cmp        al, #+0x708
   515F3:	03F8      	bcc        +0x3 <ReadBatteryLevel+0x9:0x515F6[p]>
   515F4:	0700      	**prefx    0x7
   515F5:	0814      	ld         al, #+0x708
    }

    bat_voltage -= BATTERY_FLAT_BATTERY_VOLTAGE;

    /* Get battery level in percent */
    bat_level = (bat_voltage * 100) / (BATTERY_FULL_BATTERY_VOLTAGE - 
   515F6:	0010      	ld         ah, #+0x0
   515F7:	F900      	**prefx    0xF9
   515F8:	F834      	add        al, #-0x708
   515F9:	FF40      	addc       ah, #-0x1
   515FA:	E019      	ld         x, @0xFFE0 <register ah>
   515FB:	F825      	st         al, @0xFFF8 <(scratchpad)>
   515FC:	E315      	ld         al, @0xFFE3 <register uxl>
   515FD:	6490      	smult      #+0x64
   515FE:	E119      	ld         x, @0xFFE1 <register al>
   515FF:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   51600:	0009      	**unsigned
   51601:	6490      	umult      #0x64
   51602:	F925      	st         al, @0xFFF9 <(scratchpad)>
   51603:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   51604:	F839      	add        x, @0xFFF8 <(scratchpad)>
   51605:	0010      	ld         ah, #+0x0
   51606:	0023      	st         ah, @(0x0, y)
   51607:	0500      	**prefx    0x5
   51608:	B014      	ld         al, #+0x4B0
   51609:	0127      	st         al, @(+0x1, y)
   5160A:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5160B:	E311      	ld         ah, @0xFFE3 <register uxl>
   5160C:	FC00      	**prefx    0xFC
   5160D:	5700      	**prefx    0x57
   5160E:	F69C      	bsr        -0x3A90A <__udivhi3:0x16D04[p]>
   5160F:	E099      	tst        @0xFFE0 <register ah>
   51610:	03F0      	bne        +0x3 <ReadBatteryLevel+0x26:0x51613[p]>
   51611:	6584      	cmp        al, #+0x65
   51612:	02FC      	bcs        +0x2 <ReadBatteryLevel+0x27:0x51614[p]>
   51613:	6414      	ld         al, #+0x64
    {
        bat_level = 100;
    }

    return (uint8)bat_level;
}
   51614:	FC0F      	leave      #-0x4

0x00051615 <SendLowBatteryIndication>:
 *  RETURNS
 *      None
 *
 *---------------------------------------------------------------------------*/
extern void SendLowBatteryIndication(void)
{
   51615:	F90B      	enter      #-0x7
    CSRMESH_BATTERY_STATE_T batt_state;

    batt_state.batterylevel = ReadBatteryLevel();
   51616:	D79C      	bsr        -0x29 <ReadBatteryLevel:0x515ED[p]>
   51617:	0227      	st         al, @(+0x2, y)
    batt_state.batterystate = BATTERY_STATE_NEEDS_REPLACEMENT;
   51618:	1014      	ld         al, #+0x10
   51619:	0327      	st         al, @(+0x3, y)
    batt_state.tid = 0;
   5161A:	0014      	ld         al, #+0x0
   5161B:	0427      	st         al, @(+0x4, y)
#ifdef ENABLE_BATTERY_MODEL
    /* Broadcast battery state if it reduces below the threshold value */
    BatteryState(DEFAULT_NW_ID, MESH_BROADCAST_ID, AppGetCurrentTTL(), 
   5161C:	0300      	**prefx    0x3
   5161D:	E19C      	bsr        +0x2E1 <AppGetCurrentTTL:0x518FE[p]>
   5161E:	0027      	st         al, @(0x0, y)
   5161F:	E415      	ld         al, @0xFFE4 <register uy>
   51620:	0234      	add        al, #+0x2
   51621:	0127      	st         al, @(+0x1, y)
   51622:	0014      	ld         al, #+0x0
   51623:	0010      	ld         ah, #+0x0
   51624:	6200      	**prefx    0x62
   51625:	5F9C      	bsr        +0x625F <BatteryState:0x57884[p]>
                                                                   &batt_state);
#endif
}
   51626:	F90F      	leave      #-0x7

0x00051627 <setPioMask>:
 *
 *  RETURNS
 *      Index of the mask associated with the passed PIO line
 *----------------------------------------------------------------------------*/
static uint16 setPioMask(uint16 pio, pio_mask_t *pio_mask)
{
   51627:	FE0B      	enter      #-0x2
   51628:	E119      	ld         x, @0xFFE1 <register al>
   51629:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    uint16 pio_in_mask = 0;

    /* Configure PIO mask  */
    if ( pio <= 15 )
   5162A:	1084      	cmp        al, #+0x10
   5162B:	07F8      	bcc        +0x7 <setPioMask+0xB:0x51632[p]>
    {
        /* PIO is in bank 0 */
        pio_mask->mask[0] |= (1 << pio);
   5162C:	0114      	ld         al, #+0x1
   5162D:	E3A1      	asl        @0xFFE3 <register uxl>
   5162E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5162F:	00B6      	or         al, @(0x0, x)
   51630:	0026      	st         al, @(0x0, x)
   51631:	0DE0      	bra        +0xD <setPioMask+0x17:0x5163E[p]>
        pio_in_mask = 0;
    }
    else
    if ( pio <= 31 )
   51632:	2084      	cmp        al, #+0x20
   51633:	09F8      	bcc        +0x9 <setPioMask+0x15:0x5163C[p]>
    {
        /* PIO is in bank 1 */
        pio_mask->mask[1] |= (1 << (pio - 16));
   51634:	F038      	add        x, #-0x10
   51635:	0114      	ld         al, #+0x1
   51636:	E3A1      	asl        @0xFFE3 <register uxl>
   51637:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   51638:	01B6      	or         al, @(+0x1, x)
   51639:	0126      	st         al, @(+0x1, x)
   5163A:	0114      	ld         al, #+0x1
   5163B:	0CE0      	bra        +0xC <setPioMask+0x20:0x51647[p]>
        pio_in_mask = 1;
    }
    else
    if ( pio <= 37 )
   5163C:	2584      	cmp        al, #+0x25
   5163D:	032C      	bcz        +0x3 <setPioMask+0x19:0x51640[p]>
   5163E:	0014      	ld         al, #+0x0
   5163F:	08E0      	bra        +0x8 <setPioMask+0x20:0x51647[p]>
    {
        /* PIO is in bank 2 */
        pio_mask->mask[2] |= (1 << (pio - 32));
   51640:	E038      	add        x, #-0x20
   51641:	0114      	ld         al, #+0x1
   51642:	E3A1      	asl        @0xFFE3 <register uxl>
   51643:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   51644:	02B6      	or         al, @(+0x2, x)
   51645:	0226      	st         al, @(+0x2, x)
   51646:	0214      	ld         al, #+0x2
        pio_in_mask = 2;
    }

    return pio_in_mask;
}
   51647:	FE0F      	leave      #-0x2

0x00051648 <GetIOTSwitchMask>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern bool GetIOTSwitchMask(uint8 pio, pio_mask_t *switch_mask,
                             uint16 *switch_index)
{
   51648:	FE0B      	enter      #-0x2
    bool return_val = FALSE;

    if(pio == SW2_PIO)
   51649:	1884      	cmp        al, #+0x18
   5164A:	08F0      	bne        +0x8 <GetIOTSwitchMask+0xA:0x51652[p]>
    {
        MemCopy(switch_mask, &pio_msk_sw2, sizeof(pio_msk_sw2));
   5164B:	0314      	ld         al, #+0x3
   5164C:	6200      	**prefx    0x62
   5164D:	8218      	ld         x, #+0x6182
   5164E:	FD09      	bc2        
        *switch_index = sw2_mask_idx;
   5164F:	6200      	**prefx    0x62
   51650:	8B15      	ld         al, @0x618B <sw2_mask_idx>
   51651:	14E0      	bra        +0x14 <GetIOTSwitchMask+0x1D:0x51665[p]>
        return_val = TRUE;
    }

    if(pio == SW3_PIO)
   51652:	1784      	cmp        al, #+0x17
   51653:	08F0      	bne        +0x8 <GetIOTSwitchMask+0x13:0x5165B[p]>
    {
        MemCopy(switch_mask, &pio_msk_sw3, sizeof(pio_msk_sw3));
   51654:	0314      	ld         al, #+0x3
   51655:	6200      	**prefx    0x62
   51656:	8518      	ld         x, #+0x6185
   51657:	FD09      	bc2        
        *switch_index = sw3_mask_idx;
   51658:	6200      	**prefx    0x62
   51659:	8C15      	ld         al, @0x618C <sw3_mask_idx>
   5165A:	0BE0      	bra        +0xB <GetIOTSwitchMask+0x1D:0x51665[p]>
        return_val = TRUE;
    }

    if(pio == SW4_PIO)
   5165B:	1684      	cmp        al, #+0x16
   5165C:	03F4      	beq        +0x3 <GetIOTSwitchMask+0x17:0x5165F[p]>
   5165D:	0014      	ld         al, #+0x0
   5165E:	0AE0      	bra        +0xA <GetIOTSwitchMask+0x20:0x51668[p]>
    {
        MemCopy(switch_mask, &pio_msk_sw4, sizeof(pio_msk_sw4));
   5165F:	0314      	ld         al, #+0x3
   51660:	6200      	**prefx    0x62
   51661:	8818      	ld         x, #+0x6188
   51662:	FD09      	bc2        
        *switch_index = sw4_mask_idx;
   51663:	6200      	**prefx    0x62
   51664:	8D15      	ld         al, @0x618D <sw4_mask_idx>
   51665:	021B      	ld         x, @(+0x2, y)
   51666:	0026      	st         al, @(0x0, x)
   51667:	0114      	ld         al, #+0x1
        return_val = TRUE;
    }
    return return_val;
}
   51668:	FE0F      	leave      #-0x2

0x00051669 <IOTSwitchInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void IOTSwitchInit(void)
{
   51669:	F50B      	enter      #-0xB
    
    /* Event mode */
    pio_event_mode_t event_mode;

    /* Initialise the mask for the button PIO */
    pio_msk_sw2.mask[0] = 0;
   5166A:	0014      	ld         al, #+0x0
   5166B:	6200      	**prefx    0x62
   5166C:	8218      	ld         x, #+0x6182
   5166D:	0026      	st         al, @(0x0, x)
    pio_msk_sw2.mask[1] = 0;
   5166E:	6200      	**prefx    0x62
   5166F:	8325      	st         al, @0x6183 <pio_msk_sw2+0x1>
    pio_msk_sw2.mask[2] = 0;
   51670:	6200      	**prefx    0x62
   51671:	8425      	st         al, @0x6184 <pio_msk_sw2+0x2>

    pio_msk_sw3.mask[0] = 0;
   51672:	6200      	**prefx    0x62
   51673:	8518      	ld         x, #+0x6185
   51674:	0026      	st         al, @(0x0, x)
    pio_msk_sw3.mask[1] = 0;
   51675:	6200      	**prefx    0x62
   51676:	8625      	st         al, @0x6186 <pio_msk_sw3+0x1>
    pio_msk_sw3.mask[2] = 0;
   51677:	6200      	**prefx    0x62
   51678:	8725      	st         al, @0x6187 <pio_msk_sw3+0x2>

    pio_msk_sw4.mask[0] = 0;
   51679:	6200      	**prefx    0x62
   5167A:	8818      	ld         x, #+0x6188
   5167B:	0026      	st         al, @(0x0, x)
    pio_msk_sw4.mask[1] = 0;
   5167C:	6200      	**prefx    0x62
   5167D:	8925      	st         al, @0x6189 <pio_msk_sw4+0x1>
    pio_msk_sw4.mask[2] = 0;
   5167E:	6200      	**prefx    0x62
   5167F:	8A25      	st         al, @0x618A <pio_msk_sw4+0x2>

    /* Set the mask for the button PIO */
    sw2_mask_idx = setPioMask(SW2_PIO, &pio_msk_sw2);
   51680:	1814      	ld         al, #+0x18
   51681:	6200      	**prefx    0x62
   51682:	8210      	ld         ah, #+0x6182
   51683:	A49C      	bsr        -0x5C <setPioMask:0x51627[p]>
   51684:	6200      	**prefx    0x62
   51685:	8B25      	st         al, @0x618B <sw2_mask_idx>

    /* Set the mask for the button PIO */
    sw3_mask_idx = setPioMask(SW3_PIO, &pio_msk_sw3);
   51686:	1714      	ld         al, #+0x17
   51687:	6200      	**prefx    0x62
   51688:	8510      	ld         ah, #+0x6185
   51689:	9E9C      	bsr        -0x62 <setPioMask:0x51627[p]>
   5168A:	6200      	**prefx    0x62
   5168B:	8C25      	st         al, @0x618C <sw3_mask_idx>

    /* Set the mask for the button PIO */
    sw4_mask_idx = setPioMask(SW4_PIO, &pio_msk_sw4);
   5168C:	1614      	ld         al, #+0x16
   5168D:	6200      	**prefx    0x62
   5168E:	8810      	ld         ah, #+0x6188
   5168F:	989C      	bsr        -0x68 <setPioMask:0x51627[p]>
   51690:	6200      	**prefx    0x62
   51691:	8D25      	st         al, @0x618D <sw4_mask_idx>

    /* Set the dirs mask to all zeros (inputs) */
    dirs.mask[0] = 0;
   51692:	0014      	ld         al, #+0x0
   51693:	0627      	st         al, @(+0x6, y)
    dirs.mask[1] = 0;
   51694:	0727      	st         al, @(+0x7, y)
    dirs.mask[2] = 0;
   51695:	0827      	st         al, @(+0x8, y)

    /* Configure button PIO as an input */
    PioSetDirMultiple(pio_msk_sw2, dirs);
   51696:	0314      	ld         al, #+0x3
   51697:	E411      	ld         ah, @0xFFE4 <register uy>
   51698:	6200      	**prefx    0x62
   51699:	8218      	ld         x, #+0x6182
   5169A:	FD09      	bc2        
   5169B:	0314      	ld         al, #+0x3
   5169C:	E419      	ld         x, @0xFFE4 <register uy>
   5169D:	0638      	add        x, #+0x6
   5169E:	FD09      	bc2        
   5169F:	FB00      	**prefx    0xFB
   516A0:	5900      	**prefx    0x59
   516A1:	669C      	bsr        -0x4A69A <PioSetDirMultiple:0x7007[p]>
    PioSetDirMultiple(pio_msk_sw3, dirs);
   516A2:	0314      	ld         al, #+0x3
   516A3:	E411      	ld         ah, @0xFFE4 <register uy>
   516A4:	6200      	**prefx    0x62
   516A5:	8518      	ld         x, #+0x6185
   516A6:	FD09      	bc2        
   516A7:	0314      	ld         al, #+0x3
   516A8:	E419      	ld         x, @0xFFE4 <register uy>
   516A9:	0638      	add        x, #+0x6
   516AA:	FD09      	bc2        
   516AB:	FB00      	**prefx    0xFB
   516AC:	5900      	**prefx    0x59
   516AD:	5A9C      	bsr        -0x4A6A6 <PioSetDirMultiple:0x7007[p]>
    PioSetDirMultiple(pio_msk_sw4, dirs);
   516AE:	0314      	ld         al, #+0x3
   516AF:	E411      	ld         ah, @0xFFE4 <register uy>
   516B0:	6200      	**prefx    0x62
   516B1:	8818      	ld         x, #+0x6188
   516B2:	FD09      	bc2        
   516B3:	0314      	ld         al, #+0x3
   516B4:	E419      	ld         x, @0xFFE4 <register uy>
   516B5:	0638      	add        x, #+0x6
   516B6:	FD09      	bc2        
   516B7:	FB00      	**prefx    0xFB
   516B8:	5900      	**prefx    0x59
   516B9:	4E9C      	bsr        -0x4A6B2 <PioSetDirMultiple:0x7007[p]>

    /* Configure pull-up on button PIO */
    PioSetPullModeMultiple(pio_msk_sw2, pio_mode_strong_pull_up);
   516BA:	0314      	ld         al, #+0x3
   516BB:	E411      	ld         ah, @0xFFE4 <register uy>
   516BC:	6200      	**prefx    0x62
   516BD:	8218      	ld         x, #+0x6182
   516BE:	FD09      	bc2        
   516BF:	0718      	ld         x, #+0x7
   516C0:	032B      	st         x, @(+0x3, y)
   516C1:	FB00      	**prefx    0xFB
   516C2:	5900      	**prefx    0x59
   516C3:	329C      	bsr        -0x4A6CE <PioSetPullModeMultiple:0x6FF5[p]>
    PioSetPullModeMultiple(pio_msk_sw3, pio_mode_strong_pull_up);
   516C4:	0314      	ld         al, #+0x3
   516C5:	E411      	ld         ah, @0xFFE4 <register uy>
   516C6:	6200      	**prefx    0x62
   516C7:	8518      	ld         x, #+0x6185
   516C8:	FD09      	bc2        
   516C9:	0714      	ld         al, #+0x7
   516CA:	0327      	st         al, @(+0x3, y)
   516CB:	FB00      	**prefx    0xFB
   516CC:	5900      	**prefx    0x59
   516CD:	289C      	bsr        -0x4A6D8 <PioSetPullModeMultiple:0x6FF5[p]>
    PioSetPullModeMultiple(pio_msk_sw4, pio_mode_strong_pull_up);
   516CE:	0314      	ld         al, #+0x3
   516CF:	E411      	ld         ah, @0xFFE4 <register uy>
   516D0:	6200      	**prefx    0x62
   516D1:	8818      	ld         x, #+0x6188
   516D2:	FD09      	bc2        
   516D3:	0718      	ld         x, #+0x7
   516D4:	032B      	st         x, @(+0x3, y)
   516D5:	FB00      	**prefx    0xFB
   516D6:	5900      	**prefx    0x59
   516D7:	1E9C      	bsr        -0x4A6E2 <PioSetPullModeMultiple:0x6FF5[p]>

    /* Event mode selection */    
    event_mode = pio_event_mode_both | pio_event_mode_wake_both;
    
    /* Configure event notification */
    PioSetEventMultiple(pio_msk_sw2, event_mode);  /* Event mode flags */
   516D8:	0314      	ld         al, #+0x3
   516D9:	E411      	ld         ah, @0xFFE4 <register uy>
   516DA:	6200      	**prefx    0x62
   516DB:	8218      	ld         x, #+0x6182
   516DC:	FD09      	bc2        
   516DD:	0F14      	ld         al, #+0xF
   516DE:	0327      	st         al, @(+0x3, y)
   516DF:	FB00      	**prefx    0xFB
   516E0:	5A00      	**prefx    0x5A
   516E1:	2E9C      	bsr        -0x4A5D2 <PioSetEventMultiple:0x710F[p]>
    PioSetEventMultiple(pio_msk_sw3, event_mode);
   516E2:	0314      	ld         al, #+0x3
   516E3:	E411      	ld         ah, @0xFFE4 <register uy>
   516E4:	6200      	**prefx    0x62
   516E5:	8518      	ld         x, #+0x6185
   516E6:	FD09      	bc2        
   516E7:	0F18      	ld         x, #+0xF
   516E8:	032B      	st         x, @(+0x3, y)
   516E9:	FB00      	**prefx    0xFB
   516EA:	5A00      	**prefx    0x5A
   516EB:	249C      	bsr        -0x4A5DC <PioSetEventMultiple:0x710F[p]>
    PioSetEventMultiple(pio_msk_sw4, event_mode);
   516EC:	0314      	ld         al, #+0x3
   516ED:	E411      	ld         ah, @0xFFE4 <register uy>
   516EE:	6200      	**prefx    0x62
   516EF:	8818      	ld         x, #+0x6188
   516F0:	FD09      	bc2        
   516F1:	0F14      	ld         al, #+0xF
   516F2:	0327      	st         al, @(+0x3, y)
   516F3:	FB00      	**prefx    0xFB
   516F4:	5A00      	**prefx    0x5A
   516F5:	1A9C      	bsr        -0x4A5E6 <PioSetEventMultiple:0x710F[p]>
}
   516F6:	F50F      	leave      #-0xB

0x000516F7 <IOTLightControlDevicePower>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void IOTLightControlDevicePower(bool power_on)
{
   516F7:	FE0B      	enter      #-0x2
    if (power_on == TRUE)
   516F8:	0184      	cmp        al, #+0x1
   516F9:	2FF0      	bne        +0x2F <IOTLightControlDevicePower+0x31:0x51728[p]>
    {
        if(pio_open == FALSE)
   516FA:	6100      	**prefx    0x61
   516FB:	7E99      	tst        @0x617E <pio_open>
   516FC:	19F0      	bne        +0x19 <IOTLightControlDevicePower+0x1E:0x51715[p]>
        {
            /* Open the pwm on switch on */
            pwm_ramp_red = PioOpenPWM(LED_PIO_RED, pio_pwm_ramp);
   516FD:	0614      	ld         al, #+0x6
   516FE:	0010      	ld         ah, #+0x0
   516FF:	FB00      	**prefx    0xFB
   51700:	5A00      	**prefx    0x5A
   51701:	AA9C      	bsr        -0x4A656 <PioOpenPWM:0x70AB[p]>
   51702:	6100      	**prefx    0x61
   51703:	7F25      	st         al, @0x617F <pwm_ramp_red>
            pwm_ramp_green = PioOpenPWM(LED_PIO_GREEN, pio_pwm_ramp);
   51704:	0514      	ld         al, #+0x5
   51705:	0010      	ld         ah, #+0x0
   51706:	FB00      	**prefx    0xFB
   51707:	5A00      	**prefx    0x5A
   51708:	A39C      	bsr        -0x4A65D <PioOpenPWM:0x70AB[p]>
   51709:	6200      	**prefx    0x62
   5170A:	8025      	st         al, @0x6180 <pwm_ramp_green>
            pwm_ramp_blue = PioOpenPWM(LED_PIO_BLUE, pio_pwm_ramp);
   5170B:	0414      	ld         al, #+0x4
   5170C:	0010      	ld         ah, #+0x0
   5170D:	FB00      	**prefx    0xFB
   5170E:	5A00      	**prefx    0x5A
   5170F:	9C9C      	bsr        -0x4A664 <PioOpenPWM:0x70AB[p]>
   51710:	6200      	**prefx    0x62
   51711:	8125      	st         al, @0x6181 <pwm_ramp_blue>
            pio_open = TRUE;
   51712:	0114      	ld         al, #+0x1
   51713:	6100      	**prefx    0x61
   51714:	7E25      	st         al, @0x617E <pio_open>
        }
        /* Enable PWM channel */
        PioEnablePWM(pwm_ramp_red, TRUE);
   51715:	6100      	**prefx    0x61
   51716:	7F15      	ld         al, @0x617F <pwm_ramp_red>
   51717:	0110      	ld         ah, #+0x1
   51718:	FB00      	**prefx    0xFB
   51719:	5A00      	**prefx    0x5A
   5171A:	9F9C      	bsr        -0x4A661 <PioEnablePWM:0x70B9[p]>
        PioEnablePWM(pwm_ramp_green, TRUE);
   5171B:	6200      	**prefx    0x62
   5171C:	8015      	ld         al, @0x6180 <pwm_ramp_green>
   5171D:	0110      	ld         ah, #+0x1
   5171E:	FB00      	**prefx    0xFB
   5171F:	5A00      	**prefx    0x5A
   51720:	999C      	bsr        -0x4A667 <PioEnablePWM:0x70B9[p]>
        PioEnablePWM(pwm_ramp_blue, TRUE);
   51721:	6200      	**prefx    0x62
   51722:	8115      	ld         al, @0x6181 <pwm_ramp_blue>
   51723:	0110      	ld         ah, #+0x1
   51724:	FB00      	**prefx    0xFB
   51725:	5A00      	**prefx    0x5A
   51726:	939C      	bsr        -0x4A66D <PioEnablePWM:0x70B9[p]>
   51727:	38E0      	bra        +0x38 <IOTLightControlDevicePower+0x68:0x5175F[p]>
    }
    else if(pio_open == TRUE)
   51728:	6100      	**prefx    0x61
   51729:	7E15      	ld         al, @0x617E <pio_open>
   5172A:	0184      	cmp        al, #+0x1
   5172B:	34F0      	bne        +0x34 <IOTLightControlDevicePower+0x68:0x5175F[p]>
    {
        /* When power off is selected, disable and close all PWMs */
        PioEnablePWM(pwm_ramp_red, FALSE);
   5172C:	6100      	**prefx    0x61
   5172D:	7F15      	ld         al, @0x617F <pwm_ramp_red>
   5172E:	0010      	ld         ah, #+0x0
   5172F:	FB00      	**prefx    0xFB
   51730:	5A00      	**prefx    0x5A
   51731:	889C      	bsr        -0x4A678 <PioEnablePWM:0x70B9[p]>
        PioEnablePWM(pwm_ramp_green, FALSE);
   51732:	6200      	**prefx    0x62
   51733:	8015      	ld         al, @0x6180 <pwm_ramp_green>
   51734:	0010      	ld         ah, #+0x0
   51735:	FB00      	**prefx    0xFB
   51736:	5A00      	**prefx    0x5A
   51737:	829C      	bsr        -0x4A67E <PioEnablePWM:0x70B9[p]>
        PioEnablePWM(pwm_ramp_blue, FALSE);
   51738:	6200      	**prefx    0x62
   51739:	8115      	ld         al, @0x6181 <pwm_ramp_blue>
   5173A:	0010      	ld         ah, #+0x0
   5173B:	FB00      	**prefx    0xFB
   5173C:	5900      	**prefx    0x59
   5173D:	7C9C      	bsr        -0x4A684 <PioEnablePWM:0x70B9[p]>

        PioClosePWM(pwm_ramp_red);
   5173E:	6100      	**prefx    0x61
   5173F:	7F15      	ld         al, @0x617F <pwm_ramp_red>
   51740:	FB00      	**prefx    0xFB
   51741:	5900      	**prefx    0x59
   51742:	549C      	bsr        -0x4A6AC <PioClosePWM:0x7096[p]>
        PioClosePWM(pwm_ramp_green);
   51743:	6200      	**prefx    0x62
   51744:	8015      	ld         al, @0x6180 <pwm_ramp_green>
   51745:	FB00      	**prefx    0xFB
   51746:	5900      	**prefx    0x59
   51747:	4F9C      	bsr        -0x4A6B1 <PioClosePWM:0x7096[p]>
        PioClosePWM(pwm_ramp_blue);
   51748:	6200      	**prefx    0x62
   51749:	8115      	ld         al, @0x6181 <pwm_ramp_blue>
   5174A:	FB00      	**prefx    0xFB
   5174B:	5900      	**prefx    0x59
   5174C:	4A9C      	bsr        -0x4A6B6 <PioClosePWM:0x7096[p]>

        PioSet(LED_PIO_RED, 1);
   5174D:	0614      	ld         al, #+0x6
   5174E:	0110      	ld         ah, #+0x1
   5174F:	FB00      	**prefx    0xFB
   51750:	5A00      	**prefx    0x5A
   51751:	889C      	bsr        -0x4A678 <PioSet:0x70D9[p]>
        PioSet(LED_PIO_GREEN, 1);
   51752:	0514      	ld         al, #+0x5
   51753:	0110      	ld         ah, #+0x1
   51754:	FB00      	**prefx    0xFB
   51755:	5A00      	**prefx    0x5A
   51756:	839C      	bsr        -0x4A67D <PioSet:0x70D9[p]>
        PioSet(LED_PIO_BLUE, 1);
   51757:	0414      	ld         al, #+0x4
   51758:	0110      	ld         ah, #+0x1
   51759:	FB00      	**prefx    0xFB
   5175A:	5900      	**prefx    0x59
   5175B:	7E9C      	bsr        -0x4A682 <PioSet:0x70D9[p]>
        pio_open = FALSE;
   5175C:	0014      	ld         al, #+0x0
   5175D:	6100      	**prefx    0x61
   5175E:	7E25      	st         al, @0x617E <pio_open>
    }
}
   5175F:	FE0F      	leave      #-0x2

0x00051760 <IOTLightControlDeviceBlink>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void IOTLightControlDeviceBlink(uint8 red, uint8 green, uint8 blue,
                                       uint8 on_time, uint8 off_time)
{
   51760:	F50B      	enter      #-0xB
   51761:	0727      	st         al, @(+0x7, y)
   51762:	0823      	st         ah, @(+0x8, y)
    /* PWM configuration structure */
    pio_pwm_config_t pwm_cfg;

    IOTLightControlDevicePower(TRUE);
   51763:	0114      	ld         al, #+0x1
   51764:	939C      	bsr        -0x6D <IOTLightControlDevicePower:0x516F7[p]>

    /* Invert the On and Off times as LEDs on IOT board are Common-Anode type
     */

    pwm_cfg.ramp.dull_on_time = COLOR_MAX_VALUE - red;
   51765:	0100      	**prefx    0x1
   51766:	FF14      	ld         al, #+0xFF
   51767:	0757      	sub        al, @(+0x7, y)
   51768:	0027      	st         al, @(0x0, y)
    pwm_cfg.ramp.dull_off_time = red;
   51769:	0717      	ld         al, @(+0x7, y)
   5176A:	0127      	st         al, @(+0x1, y)
    pwm_cfg.ramp.dull_hold_time = off_time;
   5176B:	0D17      	ld         al, @(+0xD, y)
   5176C:	0227      	st         al, @(+0x2, y)
    pwm_cfg.ramp.bright_on_time = COLOR_MAX_VALUE;
   5176D:	0100      	**prefx    0x1
   5176E:	FF14      	ld         al, #+0xFF
   5176F:	0327      	st         al, @(+0x3, y)
    pwm_cfg.ramp.bright_off_time = 0;
   51770:	0014      	ld         al, #+0x0
   51771:	0427      	st         al, @(+0x4, y)
    pwm_cfg.ramp.bright_hold_time = on_time;
   51772:	0C17      	ld         al, @(+0xC, y)
   51773:	0527      	st         al, @(+0x5, y)
    pwm_cfg.ramp.number_of_steps = 0U;
   51774:	0014      	ld         al, #+0x0
   51775:	0627      	st         al, @(+0x6, y)

    PioConfigPWM(pwm_ramp_red,&pwm_cfg);
   51776:	6100      	**prefx    0x61
   51777:	7F15      	ld         al, @0x617F <pwm_ramp_red>
   51778:	E411      	ld         ah, @0xFFE4 <register uy>
   51779:	FB00      	**prefx    0xFB
   5177A:	5800      	**prefx    0x58
   5177B:	739C      	bsr        -0x4A78D <PioConfigPWM:0x6FEE[p]>

    pwm_cfg.ramp.dull_on_time = COLOR_MAX_VALUE - green;
   5177C:	0100      	**prefx    0x1
   5177D:	FF14      	ld         al, #+0xFF
   5177E:	0857      	sub        al, @(+0x8, y)
   5177F:	0027      	st         al, @(0x0, y)
    pwm_cfg.ramp.dull_off_time = green;
   51780:	0817      	ld         al, @(+0x8, y)
   51781:	0127      	st         al, @(+0x1, y)
    pwm_cfg.ramp.dull_hold_time = off_time;
   51782:	0D17      	ld         al, @(+0xD, y)
   51783:	0227      	st         al, @(+0x2, y)
    pwm_cfg.ramp.bright_on_time = COLOR_MAX_VALUE;
   51784:	0100      	**prefx    0x1
   51785:	FF14      	ld         al, #+0xFF
   51786:	0327      	st         al, @(+0x3, y)
    pwm_cfg.ramp.bright_off_time = 0;
   51787:	0014      	ld         al, #+0x0
   51788:	0427      	st         al, @(+0x4, y)
    pwm_cfg.ramp.bright_hold_time = on_time;
   51789:	0C17      	ld         al, @(+0xC, y)
   5178A:	0527      	st         al, @(+0x5, y)
    pwm_cfg.ramp.number_of_steps = 0U;
   5178B:	0014      	ld         al, #+0x0
   5178C:	0627      	st         al, @(+0x6, y)

    PioConfigPWM(pwm_ramp_green,&pwm_cfg);
   5178D:	6200      	**prefx    0x62
   5178E:	8015      	ld         al, @0x6180 <pwm_ramp_green>
   5178F:	E411      	ld         ah, @0xFFE4 <register uy>
   51790:	FB00      	**prefx    0xFB
   51791:	5800      	**prefx    0x58
   51792:	5C9C      	bsr        -0x4A7A4 <PioConfigPWM:0x6FEE[p]>

    pwm_cfg.ramp.dull_on_time = COLOR_MAX_VALUE - blue;
   51793:	0100      	**prefx    0x1
   51794:	FF14      	ld         al, #+0xFF
   51795:	0B57      	sub        al, @(+0xB, y)
   51796:	0027      	st         al, @(0x0, y)
    pwm_cfg.ramp.dull_off_time = blue;
   51797:	0B17      	ld         al, @(+0xB, y)
   51798:	0127      	st         al, @(+0x1, y)
    pwm_cfg.ramp.dull_hold_time = off_time;
   51799:	0D17      	ld         al, @(+0xD, y)
   5179A:	0227      	st         al, @(+0x2, y)
    pwm_cfg.ramp.bright_on_time = COLOR_MAX_VALUE;
   5179B:	0100      	**prefx    0x1
   5179C:	FF14      	ld         al, #+0xFF
   5179D:	0327      	st         al, @(+0x3, y)
    pwm_cfg.ramp.bright_off_time = 0;
   5179E:	0014      	ld         al, #+0x0
   5179F:	0427      	st         al, @(+0x4, y)
    pwm_cfg.ramp.bright_hold_time = on_time;
   517A0:	0C17      	ld         al, @(+0xC, y)
   517A1:	0527      	st         al, @(+0x5, y)
    pwm_cfg.ramp.number_of_steps = 0U;
   517A2:	0014      	ld         al, #+0x0
   517A3:	0627      	st         al, @(+0x6, y)

    PioConfigPWM(pwm_ramp_blue,&pwm_cfg);
   517A4:	6200      	**prefx    0x62
   517A5:	8115      	ld         al, @0x6181 <pwm_ramp_blue>
   517A6:	E411      	ld         ah, @0xFFE4 <register uy>
   517A7:	FB00      	**prefx    0xFB
   517A8:	5800      	**prefx    0x58
   517A9:	459C      	bsr        -0x4A7BB <PioConfigPWM:0x6FEE[p]>
}
   517AA:	F50F      	leave      #-0xB

0x000517AB <IOTLightControlDeviceInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void IOTLightControlDeviceInit(void)
{
   517AB:	FE0B      	enter      #-0x2
    /* Configure the LED_PIO_RED PIO as output PIO */
    PioSetDir(LED_PIO_RED, PIO_DIRECTION_OUTPUT);
   517AC:	0614      	ld         al, #+0x6
   517AD:	0110      	ld         ah, #+0x1
   517AE:	FB00      	**prefx    0xFB
   517AF:	5800      	**prefx    0x58
   517B0:	6D9C      	bsr        -0x4A793 <PioSetDir:0x701D[p]>

    /* Configure the LED_PIO_GREEN PIO as output PIO */
    PioSetDir(LED_PIO_GREEN, PIO_DIRECTION_OUTPUT);
   517B1:	0514      	ld         al, #+0x5
   517B2:	0110      	ld         ah, #+0x1
   517B3:	FB00      	**prefx    0xFB
   517B4:	5800      	**prefx    0x58
   517B5:	689C      	bsr        -0x4A798 <PioSetDir:0x701D[p]>

    /* Configure the LED_PIO_BLUE PIO as output PIO */
    PioSetDir(LED_PIO_BLUE, PIO_DIRECTION_OUTPUT);
   517B6:	0414      	ld         al, #+0x4
   517B7:	0110      	ld         ah, #+0x1
   517B8:	FB00      	**prefx    0xFB
   517B9:	5800      	**prefx    0x58
   517BA:	639C      	bsr        -0x4A79D <PioSetDir:0x701D[p]>

    /* Open a PWM instance */
    pwm_ramp_red = PioOpenPWM(LED_PIO_RED, pio_pwm_ramp);
   517BB:	0614      	ld         al, #+0x6
   517BC:	0010      	ld         ah, #+0x0
   517BD:	FB00      	**prefx    0xFB
   517BE:	5900      	**prefx    0x59
   517BF:	EC9C      	bsr        -0x4A714 <PioOpenPWM:0x70AB[p]>
   517C0:	6100      	**prefx    0x61
   517C1:	7F25      	st         al, @0x617F <pwm_ramp_red>
    pwm_ramp_green = PioOpenPWM(LED_PIO_GREEN, pio_pwm_ramp);
   517C2:	0514      	ld         al, #+0x5
   517C3:	0010      	ld         ah, #+0x0
   517C4:	FB00      	**prefx    0xFB
   517C5:	5900      	**prefx    0x59
   517C6:	E59C      	bsr        -0x4A71B <PioOpenPWM:0x70AB[p]>
   517C7:	6200      	**prefx    0x62
   517C8:	8025      	st         al, @0x6180 <pwm_ramp_green>
    pwm_ramp_blue = PioOpenPWM(LED_PIO_BLUE, pio_pwm_ramp);
   517C9:	0414      	ld         al, #+0x4
   517CA:	0010      	ld         ah, #+0x0
   517CB:	FB00      	**prefx    0xFB
   517CC:	5900      	**prefx    0x59
   517CD:	DE9C      	bsr        -0x4A722 <PioOpenPWM:0x70AB[p]>
   517CE:	6200      	**prefx    0x62
   517CF:	8125      	st         al, @0x6181 <pwm_ramp_blue>
    pio_open = TRUE;
   517D0:	0114      	ld         al, #+0x1
   517D1:	6100      	**prefx    0x61
   517D2:	7E25      	st         al, @0x617E <pio_open>

    /* Set the light to OFF state on initialization */
    IOTLightControlDevicePower(FALSE);
   517D3:	0014      	ld         al, #+0x0
   517D4:	FF00      	**prefx    0xFF
   517D5:	229C      	bsr        -0xDE <IOTLightControlDevicePower:0x516F7[p]>
}
   517D6:	FE0F      	leave      #-0x2

0x000517D7 <getPsKeyOffset>:
 *      CSRmeshResult - Indicating if PS has been initialised
 *      successfully
 *
 *----------------------------------------------------------------------------*/
static CsrUint16 getPsKeyOffset(CsrUint8 key)
{
   517D7:	FE0B      	enter      #-0x2
   517D8:	F925      	st         al, @0xFFF9 <(scratchpad)>
   517D9:	0014      	ld         al, #+0x0
   517DA:	F825      	st         al, @0xFFF8 <(scratchpad)>
    CsrUint8 count;
    for(count = 0; count < SIZE_OF_TABLE; count++)
    {
        if(csr_mesh_pskey_offset_table[count].key == key)
   517DB:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   517DC:	01A0      	asl        #0x1
   517DD:	E119      	ld         x, @0xFFE1 <register al>
   517DE:	A000      	**prefx    0xA0
   517DF:	1F16      	ld         al, @(-0x5FE1, x)
   517E0:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   517E1:	06F4      	beq        +0x6 <getPsKeyOffset+0x10:0x517E7[p]>
 *
 *----------------------------------------------------------------------------*/
static CsrUint16 getPsKeyOffset(CsrUint8 key)
{
    CsrUint8 count;
    for(count = 0; count < SIZE_OF_TABLE; count++)
   517E2:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   517E3:	0134      	add        al, #+0x1
   517E4:	F825      	st         al, @0xFFF8 <(scratchpad)>
   517E5:	0F84      	cmp        al, #+0xF
   517E6:	F5F0      	bne        -0xB <getPsKeyOffset+0x4:0x517DB[p]>
   517E7:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   517E8:	01A0      	asl        #0x1
   517E9:	E119      	ld         x, @0xFFE1 <register al>
   517EA:	A000      	**prefx    0xA0
   517EB:	2016      	ld         al, @(-0x5FE0, x)
        {
            break;
        }
    }
    return csr_mesh_pskey_offset_table[count].offset;
}
   517EC:	FE0F      	leave      #-0x2

0x000517ED <CSRmeshPsInit>:
{
    /* No initialization required here as the NVM is already initialized 
     * by the application. Return SUCCESS.
     */
    return CSR_MESH_RESULT_SUCCESS;
}
   517ED:	0014      	ld         al, #+0x0
   517EE:	00E2      	bra        0x0, x

0x000517EF <CSRmeshPsSecureWrite>:
 *  RETURNS/MODIFIES
 *      CSRmeshResult - Indicating if PS-write was successful or not
 *
 *----------------------------------------------------------------------------*/
extern CSRmeshResult CSRmeshPsSecureWrite(CsrUint8 key, CsrUint16 *valueBuffer, CsrUint16 length)
{
   517EF:	FC0B      	enter      #-0x4
   517F0:	0123      	st         ah, @(+0x1, y)
    /* There is no special secure memory on CSR10xx platform so storing the
     * the values in the same NVM 
     */
    Nvm_Write(valueBuffer, length, getPsKeyOffset(key));
   517F1:	E69C      	bsr        -0x1A <getPsKeyOffset:0x517D7[p]>
   517F2:	0027      	st         al, @(0x0, y)
   517F3:	0117      	ld         al, @(+0x1, y)
   517F4:	0413      	ld         ah, @(+0x4, y)
   517F5:	F000      	**prefx    0xF0
   517F6:	4F9C      	bsr        -0xFB1 <Nvm_Write:0x50845[p]>
    return CSR_MESH_RESULT_SUCCESS;
}
   517F7:	0014      	ld         al, #+0x0
   517F8:	FC0F      	leave      #-0x4

0x000517F9 <CSRmeshPsWriteWithOffset>:
 *  RETURNS/MODIFIES
 *      CSRmeshResult - Indicating if PS-write was successful or not
 *
 *----------------------------------------------------------------------------*/
extern CSRmeshResult CSRmeshPsWriteWithOffset(CsrUint8 key, CsrUint16 offset, CsrUint16 *valueBuffer, CsrUint16 length)
{
   517F9:	FC0B      	enter      #-0x4
   517FA:	0123      	st         ah, @(+0x1, y)
    Nvm_Write(valueBuffer, length, getPsKeyOffset(key) + offset);
   517FB:	DC9C      	bsr        -0x24 <getPsKeyOffset:0x517D7[p]>
   517FC:	0137      	add        al, @(+0x1, y)
   517FD:	0027      	st         al, @(0x0, y)
   517FE:	0417      	ld         al, @(+0x4, y)
   517FF:	0513      	ld         ah, @(+0x5, y)
   51800:	F000      	**prefx    0xF0
   51801:	449C      	bsr        -0xFBC <Nvm_Write:0x50845[p]>
    return CSR_MESH_RESULT_SUCCESS;
}
   51802:	0014      	ld         al, #+0x0
   51803:	FC0F      	leave      #-0x4

0x00051804 <CSRmeshPsWrite>:
 *  RETURNS/MODIFIES
 *      CSRmeshResult - Indicating if PS-write was successful or not
 *
 *----------------------------------------------------------------------------*/
extern CSRmeshResult CSRmeshPsWrite(CsrUint8 key, CsrUint16 *valueBuffer, CsrUint16 length)
{
   51804:	FC0B      	enter      #-0x4
   51805:	0123      	st         ah, @(+0x1, y)
    Nvm_Write(valueBuffer, length, getPsKeyOffset(key));
   51806:	D19C      	bsr        -0x2F <getPsKeyOffset:0x517D7[p]>
   51807:	0027      	st         al, @(0x0, y)
   51808:	0117      	ld         al, @(+0x1, y)
   51809:	0413      	ld         ah, @(+0x4, y)
   5180A:	F000      	**prefx    0xF0
   5180B:	3A9C      	bsr        -0xFC6 <Nvm_Write:0x50845[p]>
    return CSR_MESH_RESULT_SUCCESS;
}
   5180C:	0014      	ld         al, #+0x0
   5180D:	FC0F      	leave      #-0x4

0x0005180E <CSRmeshPsSecureRead>:
 *  RETURNS/MODIFIES
 *      CSRmeshResult - Indicating if PS-read was successful or not
 *
 *----------------------------------------------------------------------------*/
extern CSRmeshResult CSRmeshPsSecureRead(CsrUint8 key, CsrUint16 *valueBuffer, CsrUint16 length)
{
   5180E:	FC0B      	enter      #-0x4
   5180F:	0123      	st         ah, @(+0x1, y)
    /* There is no special secure memory on CSR10xx platform so storing the
     * the values in the same NVM as other values.
     */
    Nvm_Read(valueBuffer, length, getPsKeyOffset(key));
   51810:	C79C      	bsr        -0x39 <getPsKeyOffset:0x517D7[p]>
   51811:	0027      	st         al, @(0x0, y)
   51812:	0117      	ld         al, @(+0x1, y)
   51813:	0413      	ld         ah, @(+0x4, y)
   51814:	F000      	**prefx    0xF0
   51815:	479C      	bsr        -0xFB9 <Nvm_Read:0x5085C[p]>
    return CSR_MESH_RESULT_SUCCESS;
}
   51816:	0014      	ld         al, #+0x0
   51817:	FC0F      	leave      #-0x4

0x00051818 <CSRmeshPsRead>:
 *  RETURNS/MODIFIES
 *      CSRmeshResult - Indicating if PS-read was successful or not
 *
 *----------------------------------------------------------------------------*/
extern CSRmeshResult CSRmeshPsRead(CsrUint8 key, CsrUint16 *valueBuffer, CsrUint16 length)
{
   51818:	FC0B      	enter      #-0x4
   51819:	0123      	st         ah, @(+0x1, y)
    Nvm_Read(valueBuffer, length, getPsKeyOffset(key));
   5181A:	BD9C      	bsr        -0x43 <getPsKeyOffset:0x517D7[p]>
   5181B:	0027      	st         al, @(0x0, y)
   5181C:	0117      	ld         al, @(+0x1, y)
   5181D:	0413      	ld         ah, @(+0x4, y)
   5181E:	F000      	**prefx    0xF0
   5181F:	3D9C      	bsr        -0xFC3 <Nvm_Read:0x5085C[p]>
    return CSR_MESH_RESULT_SUCCESS;
}
   51820:	0014      	ld         al, #+0x0
   51821:	FC0F      	leave      #-0x4

0x00051822 <CSRmeshIsPsReadyForAccess>:
 * RETURNS/Modifies 
 *     TRUE if PS is ready for access
 *
 *----------------------------------------------------------------------------*/
extern CsrBool CSRmeshIsPsReadyForAccess()
{
   51822:	FC0B      	enter      #-0x4
    CsrBool result = FALSE;
    CsrUint16 csrmesh_nvm_sanity;
    
    Nvm_Read(&csrmesh_nvm_sanity, 1, CSR_MESH_NVM_SANITY_WORD_OFFSET);
   51823:	0100      	**prefx    0x1
   51824:	0B14      	ld         al, #+0x10B
   51825:	0027      	st         al, @(0x0, y)
   51826:	E415      	ld         al, @0xFFE4 <register uy>
   51827:	0134      	add        al, #+0x1
   51828:	0110      	ld         ah, #+0x1
   51829:	F000      	**prefx    0xF0
   5182A:	329C      	bsr        -0xFCE <Nvm_Read:0x5085C[p]>
    
    if( csrmesh_nvm_sanity == CSR_MESH_NVM_SANITY_WORD)
   5182B:	0117      	ld         al, @(+0x1, y)
   5182C:	5084      	cmp        al, #+0x50
   5182D:	03F0      	bne        +0x3 <CSRmeshIsPsReadyForAccess+0xE:0x51830[p]>
   5182E:	0114      	ld         al, #+0x1
   5182F:	0CE0      	bra        +0xC <CSRmeshIsPsReadyForAccess+0x19:0x5183B[p]>
    {
        result = TRUE;
    }
    else
    {
        csrmesh_nvm_sanity = CSR_MESH_NVM_SANITY_WORD;
   51830:	5014      	ld         al, #+0x50
   51831:	0127      	st         al, @(+0x1, y)
        Nvm_Write(&csrmesh_nvm_sanity, 1, CSR_MESH_NVM_SANITY_WORD_OFFSET);
   51832:	0100      	**prefx    0x1
   51833:	0B14      	ld         al, #+0x10B
   51834:	0027      	st         al, @(0x0, y)
   51835:	E415      	ld         al, @0xFFE4 <register uy>
   51836:	0134      	add        al, #+0x1
   51837:	0110      	ld         ah, #+0x1
   51838:	F000      	**prefx    0xF0
   51839:	0C9C      	bsr        -0xFF4 <Nvm_Write:0x50845[p]>
   5183A:	0014      	ld         al, #+0x0
    }
    return result;
}
   5183B:	FC0F      	leave      #-0x4

0x0005183C <CSRmeshPsReadSecureKey>:
 *      CsrUint16 * - Returns pointer to the secure key, present in application
 *
 *----------------------------------------------------------------------------*/
extern CsrUint16 * CSRmeshPsReadSecureKey(void)
{
    return Nvm_Read_Secure_Key();
   5183C:	F000      	**prefx    0xF0
   5183D:	E3E0      	bra        -0x101D <Nvm_Read_Secure_Key:0x50820[p]>

0x0005183E <AttentionModelDataInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void AttentionModelDataInit(ATTENTION_HANDLER_DATA_T* attn_handler_data)
{
   5183E:	FE0B      	enter      #-0x2
    if(attn_handler_data != NULL)
   5183F:	E199      	tst        @0xFFE1 <register al>
   51840:	03F4      	beq        +0x3 <AttentionModelDataInit+0x5:0x51843[p]>
    {
        p_attn_model_hdlr_data = attn_handler_data;
   51841:	6200      	**prefx    0x62
   51842:	8F25      	st         al, @0x618F <p_attn_model_hdlr_data>
    }

    /* Delete attention timer if it exists */
    if (TIMER_INVALID != attn_tid)
   51843:	6200      	**prefx    0x62
   51844:	8E15      	ld         al, @0x618E <attn_tid>
   51845:	07F4      	beq        +0x7 <AttentionModelDataInit+0xE:0x5184C[p]>
    {
        TimerDelete(attn_tid);
   51846:	FC00      	**prefx    0xFC
   51847:	D400      	**prefx    0xD4
   51848:	DB9C      	bsr        -0x42C25 <TimerDelete:0xEC23[p]>
        attn_tid = TIMER_INVALID;
   51849:	0014      	ld         al, #+0x0
   5184A:	6200      	**prefx    0x62
   5184B:	8E25      	st         al, @0x618E <attn_tid>
    }
}
   5184C:	FE0F      	leave      #-0x2

0x0005184D <AttentionModelHandlerInit>:
 *
 *---------------------------------------------------------------------------*/
extern void AttentionModelHandlerInit(CsrUint8 nw_id,
                                      uint16 model_groups[],
                                      CsrUint16 num_groups)
{
   5184D:	FB0B      	enter      #-0x5
    /* Initialize Attention Model */
    AttentionModelInit(nw_id, 
   5184E:	051B      	ld         x, @(+0x5, y)
   5184F:	002B      	st         x, @(0x0, y)
   51850:	1800      	**prefx    0x18
   51851:	5818      	ld         x, #+0x1858
   51852:	022B      	st         x, @(+0x2, y)
   51853:	0518      	ld         x, #+0x5
   51854:	012B      	st         x, @(+0x1, y)
   51855:	5E00      	**prefx    0x5E
   51856:	0A9C      	bsr        +0x5E0A <AttentionModelInit:0x57660[p]>
                       model_groups,
                       num_groups,
                       attentionModelEventHandler);

}
   51857:	FB0F      	leave      #-0x5

0x00051858 <attentionModelEventHandler>:
 *---------------------------------------------------------------------------*/
static CSRmeshResult attentionModelEventHandler(CSRMESH_MODEL_EVENT_T event_code,
                                                CSRMESH_EVENT_DATA_T* data,
                                                CsrUint16 length,
                                                void **state_data)
{
   51858:	FA0B      	enter      #-0x6
   51859:	E019      	ld         x, @0xFFE0 <register ah>
    switch(event_code)
   5185A:	8400      	**prefx    0x84
   5185B:	0084      	cmp        al, #-0x7C00
   5185C:	4BF0      	bne        +0x4B <attentionModelEventHandler+0x4F:0x518A7[p]>
    {
        case CSRMESH_ATTENTION_SET_STATE:
        {
            CSRMESH_ATTENTION_SET_STATE_T *p_event = 
                 (CSRMESH_ATTENTION_SET_STATE_T *)data->data;
   5185D:	091A      	ld         x, @(+0x9, x)
   5185E:	032B      	st         x, @(+0x3, y)

            p_attn_model_hdlr_data->attn_model.attractattention =
   5185F:	6200      	**prefx    0x62
   51860:	8F11      	ld         ah, @0x618F <p_attn_model_hdlr_data>
   51861:	0016      	ld         al, @(0x0, x)
   51862:	E019      	ld         x, @0xFFE0 <register ah>
   51863:	0026      	st         al, @(0x0, x)
                                                    p_event->attractattention;
            p_attn_model_hdlr_data->attn_model.duration = p_event->duration;
   51864:	031B      	ld         x, @(+0x3, y)
   51865:	0116      	ld         al, @(+0x1, x)
   51866:	E019      	ld         x, @0xFFE0 <register ah>
   51867:	0126      	st         al, @(+0x1, x)
            p_attn_model_hdlr_data->attn_model.tid = p_event->tid;
   51868:	031B      	ld         x, @(+0x3, y)
   51869:	0216      	ld         al, @(+0x2, x)
   5186A:	E019      	ld         x, @0xFFE0 <register ah>
   5186B:	0226      	st         al, @(+0x2, x)

            /* Delete attention timer if it exists */
            if (TIMER_INVALID != attn_tid)
   5186C:	6200      	**prefx    0x62
   5186D:	8E15      	ld         al, @0x618E <attn_tid>
   5186E:	07F4      	beq        +0x7 <attentionModelEventHandler+0x1D:0x51875[p]>
            {
                TimerDelete(attn_tid);
   5186F:	FC00      	**prefx    0xFC
   51870:	D400      	**prefx    0xD4
   51871:	B29C      	bsr        -0x42C4E <TimerDelete:0xEC23[p]>
                attn_tid = TIMER_INVALID;
   51872:	0018      	ld         x, #+0x0
   51873:	6200      	**prefx    0x62
   51874:	8E29      	st         x, @0x618E <attn_tid>
            }

            /* If attention Enabled */
            if (p_event->attractattention)
   51875:	031B      	ld         x, @(+0x3, y)
   51876:	009A      	tst        @(0x0, x)
   51877:	25F4      	beq        +0x25 <attentionModelEventHandler+0x44:0x5189C[p]>
            {
                /* Create attention duration timer if required */
                if (p_event->duration != 0xFFFF)
   51878:	0112      	ld         ah, @(+0x1, x)
   51879:	FF80      	cmp        ah, #-0x1
   5187A:	15F4      	beq        +0x15 <attentionModelEventHandler+0x37:0x5188F[p]>
                {
                    attn_tid = 
   5187B:	E015      	ld         al, @0xFFE0 <register ah>
   5187C:	0009      	**unsigned
   5187D:	0400      	**prefx    0x4
   5187E:	E890      	umult      #0x3E8
   5187F:	F925      	st         al, @0xFFF9 <(scratchpad)>
   51880:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   51881:	0118      	ld         x, #+0x1
   51882:	002B      	st         x, @(0x0, y)
   51883:	1900      	**prefx    0x19
   51884:	A910      	ld         ah, #+0x18A9
   51885:	0223      	st         ah, @(+0x2, y)
   51886:	0514      	ld         al, #+0x5
   51887:	0127      	st         al, @(+0x1, y)
   51888:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   51889:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5188A:	FC00      	**prefx    0xFC
   5188B:	D400      	**prefx    0xD4
   5188C:	A29C      	bsr        -0x42C5E <TimerCreate:0xEC2E[p]>
   5188D:	6200      	**prefx    0x62
   5188E:	8E25      	st         al, @0x618E <attn_tid>
                                                    TRUE, attnTimerHandler);
                }

#ifdef ENABLE_DUTY_CYCLE_CHANGE_SUPPORT
                /* Change the Rx scan duty cycle on enabling attention */
                EnableHighDutyScanMode(TRUE);
   5188F:	0114      	ld         al, #+0x1
   51890:	2300      	**prefx    0x23
   51891:	299C      	bsr        +0x2329 <EnableHighDutyScanMode:0x53BBA[p]>
#endif /* ENABLE_DUTY_CYCLE_CHANGE_SUPPORT */

                /* Enable Red light blinking to attract attention */
                IOTLightControlDeviceBlink(127, 0, 0, 32, 32);
   51892:	0018      	ld         x, #+0x0
   51893:	002B      	st         x, @(0x0, y)
   51894:	2010      	ld         ah, #+0x20
   51895:	0123      	st         ah, @(+0x1, y)
   51896:	0223      	st         ah, @(+0x2, y)
   51897:	7F14      	ld         al, #+0x7F
   51898:	0010      	ld         ah, #+0x0
   51899:	FF00      	**prefx    0xFF
   5189A:	C69C      	bsr        -0x13A <IOTLightControlDeviceBlink:0x51760[p]>
   5189B:	06E0      	bra        +0x6 <attentionModelEventHandler+0x49:0x518A1[p]>
            {
#ifdef ENABLE_DUTY_CYCLE_CHANGE_SUPPORT
                /* Set back the scan to low duty cycle only if the device has
                 * already been grouped.
                 */
                EnableHighDutyScanMode(FALSE);
   5189C:	0014      	ld         al, #+0x0
   5189D:	2300      	**prefx    0x23
   5189E:	1C9C      	bsr        +0x231C <EnableHighDutyScanMode:0x53BBA[p]>
#endif /* ENABLE_DUTY_CYCLE_CHANGE_SUPPORT */

                /* Restore Light State */
                RestoreLightState();
   5189F:	2300      	**prefx    0x23
   518A0:	EA9C      	bsr        +0x22EA <RestoreLightState:0x53B8A[p]>
            }

            /* Send response data to model */
            if (state_data != NULL)
   518A1:	079B      	tst        @(+0x7, y)
   518A2:	05F4      	beq        +0x5 <attentionModelEventHandler+0x4F:0x518A7[p]>
            {
                *state_data = (void *)&p_attn_model_hdlr_data->attn_model;
   518A3:	6200      	**prefx    0x62
   518A4:	8F11      	ld         ah, @0x618F <p_attn_model_hdlr_data>
   518A5:	071B      	ld         x, @(+0x7, y)
   518A6:	0022      	st         ah, @(0x0, x)
        default:
        break;
    }

    return CSR_MESH_RESULT_SUCCESS;
}
   518A7:	0014      	ld         al, #+0x0
   518A8:	FA0F      	leave      #-0x6

0x000518A9 <attnTimerHandler>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void attnTimerHandler(timer_id tid)
{
   518A9:	FE0B      	enter      #-0x2
    if (attn_tid == tid)
   518AA:	6200      	**prefx    0x62
   518AB:	8E11      	ld         ah, @0x618E <attn_tid>
   518AC:	E181      	cmp        ah, @0xFFE1 <register al>
   518AD:	09F0      	bne        +0x9 <attnTimerHandler+0xD:0x518B6[p]>
    {
        attn_tid = TIMER_INVALID;
   518AE:	0014      	ld         al, #+0x0
   518AF:	6200      	**prefx    0x62
   518B0:	8E25      	st         al, @0x618E <attn_tid>
        RestoreLightState();
   518B1:	2300      	**prefx    0x23
   518B2:	D89C      	bsr        +0x22D8 <RestoreLightState:0x53B8A[p]>

#ifdef ENABLE_DUTY_CYCLE_CHANGE_SUPPORT
        /* Set back the scan to low duty cycle only if the device has
         * already been grouped.
         */
        EnableHighDutyScanMode(FALSE);
   518B3:	0014      	ld         al, #+0x0
   518B4:	2300      	**prefx    0x23
   518B5:	059C      	bsr        +0x2305 <EnableHighDutyScanMode:0x53BBA[p]>
#endif /* ENABLE_DUTY_CYCLE_CHANGE_SUPPORT */
    }
}
   518B6:	FE0F      	leave      #-0x2

0x000518B7 <BatteryModelDataInit>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void BatteryModelDataInit(BATTERY_HANDLER_DATA_T* p_handler_data)
{
    if(p_handler_data != NULL)
   518B7:	E199      	tst        @0xFFE1 <register al>
   518B8:	03F4      	beq        +0x3 <BatteryModelDataInit+0x4:0x518BB[p]>
    {
        p_batt_model_hdlr_data = p_handler_data;
   518B9:	6200      	**prefx    0x62
   518BA:	9025      	st         al, @0x6190 <p_batt_model_hdlr_data>
   518BB:	00E2      	bra        0x0, x

0x000518BC <BatteryModelHandlerInit>:
 *
 *---------------------------------------------------------------------------*/
extern void BatteryModelHandlerInit(CsrUint8 nw_id,
                                  uint16 model_groups[],
                                  CsrUint16 num_groups)
{
   518BC:	FB0B      	enter      #-0x5
    /* Initialize Battery Model */
    BatteryModelInit(nw_id, 
   518BD:	051B      	ld         x, @(+0x5, y)
   518BE:	002B      	st         x, @(0x0, y)
   518BF:	1900      	**prefx    0x19
   518C0:	C718      	ld         x, #+0x18C7
   518C1:	022B      	st         x, @(+0x2, y)
   518C2:	0518      	ld         x, #+0x5
   518C3:	012B      	st         x, @(+0x1, y)
   518C4:	6000      	**prefx    0x60
   518C5:	E69C      	bsr        +0x5FE6 <BatteryModelInit:0x578AB[p]>
                     model_groups,
                     num_groups,
                     batteryModelEventHandler);
}
   518C6:	FB0F      	leave      #-0x5

0x000518C7 <batteryModelEventHandler>:
 *---------------------------------------------------------------------------*/
static CSRmeshResult batteryModelEventHandler(CSRMESH_MODEL_EVENT_T event_code,
                                              CSRMESH_EVENT_DATA_T* data,
                                              CsrUint16 length,
                                              void **state_data)
{
   518C7:	FB0B      	enter      #-0x5
   518C8:	E019      	ld         x, @0xFFE0 <register ah>
    switch(event_code)
   518C9:	8300      	**prefx    0x83
   518CA:	0084      	cmp        al, #-0x7D00
   518CB:	1BF0      	bne        +0x1B <batteryModelEventHandler+0x1F:0x518E6[p]>
    {
        case CSRMESH_BATTERY_GET_STATE:
        {
            CSRMESH_BATTERY_GET_STATE_T *p_get_state = 
                                  (CSRMESH_BATTERY_GET_STATE_T *)data->data;
   518CC:	091A      	ld         x, @(+0x9, x)
   518CD:	012B      	st         x, @(+0x1, y)

            /* Read Battery Level */
            p_batt_model_hdlr_data->battery_model.batterylevel 
   518CE:	6200      	**prefx    0x62
   518CF:	9011      	ld         ah, @0x6190 <p_batt_model_hdlr_data>
   518D0:	0223      	st         ah, @(+0x2, y)
   518D1:	FD00      	**prefx    0xFD
   518D2:	1B9C      	bsr        -0x2E5 <ReadBatteryLevel:0x515ED[p]>
   518D3:	021B      	ld         x, @(+0x2, y)
   518D4:	0026      	st         al, @(0x0, x)
                                                        = ReadBatteryLevel();
            p_batt_model_hdlr_data->battery_model.batterystate
   518D5:	6200      	**prefx    0x62
   518D6:	9011      	ld         ah, @0x6190 <p_batt_model_hdlr_data>
   518D7:	0023      	st         ah, @(0x0, y)
   518D8:	FD00      	**prefx    0xFD
   518D9:	099C      	bsr        -0x2F7 <GetBatteryState:0x515E2[p]>
   518DA:	001B      	ld         x, @(0x0, y)
   518DB:	0126      	st         al, @(+0x1, x)
                                                        = GetBatteryState();
            p_batt_model_hdlr_data->battery_model.tid   = p_get_state->tid;
   518DC:	6200      	**prefx    0x62
   518DD:	9011      	ld         ah, @0x6190 <p_batt_model_hdlr_data>
   518DE:	011B      	ld         x, @(+0x1, y)
   518DF:	0016      	ld         al, @(0x0, x)
   518E0:	E019      	ld         x, @0xFFE0 <register ah>
   518E1:	0226      	st         al, @(+0x2, x)

            /* Pass Battery state data to model */
            if (state_data != NULL)
   518E2:	069B      	tst        @(+0x6, y)
   518E3:	03F4      	beq        +0x3 <batteryModelEventHandler+0x1F:0x518E6[p]>
            {
                *state_data = (void *)&p_batt_model_hdlr_data->battery_model;
   518E4:	061B      	ld         x, @(+0x6, y)
   518E5:	0022      	st         ah, @(0x0, x)
        default:
        break;
    }

    return CSR_MESH_RESULT_SUCCESS;
}
   518E6:	0014      	ld         al, #+0x0
   518E7:	FB0F      	leave      #-0x5

0x000518E8 <AppGetAssociatedState>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern app_association_state AppGetAssociatedState(void)
{
   518E8:	FE0B      	enter      #-0x2
   518E9:	6200      	**prefx    0x62
   518EA:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   518EB:	0216      	ld         al, @(+0x2, x)
    return p_mesh_hdlr_data->assoc_state;
}
   518EC:	FE0F      	leave      #-0x2

0x000518ED <IsGattBearerEnabled>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern bool IsGattBearerEnabled(void)
{
   518ED:	FE0B      	enter      #-0x2
   518EE:	6200      	**prefx    0x62
   518EF:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   518F0:	0416      	ld         al, @(+0x4, x)
   518F1:	02C4      	and        al, #0x2
    return p_mesh_hdlr_data->bearer_tx_state.bearerEnabled &
                                                     GATT_SERVER_BEARER_ACTIVE;
}
   518F2:	FE0F      	leave      #-0x2

0x000518F3 <AppGetStoredBearerState>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern CSR_MESH_TRANSMIT_STATE_T AppGetStoredBearerState(void)
{
   518F3:	FE0B      	enter      #-0x2
   518F4:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   518F5:	F825      	st         al, @0xFFF8 <(scratchpad)>
    return p_mesh_hdlr_data->bearer_tx_state;
   518F6:	0614      	ld         al, #+0x6
   518F7:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   518F8:	6200      	**prefx    0x62
   518F9:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   518FA:	0338      	add        x, #+0x3
   518FB:	FD09      	bc2        
}
   518FC:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   518FD:	FE0F      	leave      #-0x2

0x000518FE <AppGetCurrentTTL>:
 *  RETURNS
 *      TTL value stored in the application.
 *
 *---------------------------------------------------------------------------*/
extern uint8 AppGetCurrentTTL(void)
{
   518FE:	FE0B      	enter      #-0x2
   518FF:	6200      	**prefx    0x62
   51900:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   51901:	0916      	ld         al, @(+0x9, x)
    return p_mesh_hdlr_data->ttl_value;
}
   51902:	FE0F      	leave      #-0x2

0x00051903 <AppInitializeSeqCache>:
    seqCache.seq_deviation    = 0x20;
    seqCache.seq_lookup_table = seqTable;
    seqCache.stored_seq_lookup_table = storedSeqTable;
    CSRmeshSetSrcSequenceCache(CSR_MESH_DEFAULT_NETID, &seqCache, new_association);
#endif
}
   51903:	00E2      	bra        0x0, x

0x00051904 <AppClearSeqCache>:
    /* Clear the source sequence cache */
    MemSet(seqTable, 0x00, SRC_SEQ_CACHE_SLOT_SIZE * sizeof(CSR_MESH_SQN_LOOKUP_TABLE_T));
    MemSet(storedSeqTable, 0x00, SRC_SEQ_CACHE_SLOT_SIZE * sizeof(CSR_MESH_SQN_LOOKUP_TABLE_T));
    CSRmeshSetSrcSequenceCache(CSR_MESH_DEFAULT_NETID, NULL, FALSE);
#else
    CSRmeshDisableSequenceCache();
   51904:	2700      	**prefx    0x27
   51905:	6FE0      	bra        +0x276F <CSRmeshDisableSequenceCache:0x54074[p]>

0x00051906 <AppSetTxPower>:
 *
 *  RETURNS/MODIFIES
 *      Set power level in dBm
 *----------------------------------------------------------------------------*/
extern void AppSetTxPower(CsrInt8 power)
{
   51906:	FE0B      	enter      #-0x2
   51907:	E111      	ld         ah, @0xFFE1 <register al>
    CsrUint8 level = 0;

    if (power & 0x80)
   51908:	0100      	**prefx    0x1
   51909:	80C4      	and        al, #0x80
   5190A:	03F4      	beq        +0x3 <AppSetTxPower+0x7:0x5190D[p]>
    {
        power |= 0xFF00;
   5190B:	FF00      	**prefx    0xFF
   5190C:	00B0      	or         ah, #-0x100
    }
    /* Map Power level in dBm to index */
    if (power <= MIN_TX_POWER_LEVEL)
   5190D:	C580      	cmp        ah, #-0x3B
   5190E:	0324      	bge        +0x3 <AppSetTxPower+0xB:0x51911[p]>
   5190F:	0018      	ld         x, #+0x0
   51910:	0FE0      	bra        +0xF <AppSetTxPower+0x19:0x5191F[p]>
    {
        level = LS_MIN_TRANSMIT_POWER_LEVEL;
    }
    else if (power >= MAX_TX_POWER_LEVEL)
   51911:	0380      	cmp        ah, #+0x3
   51912:	0328      	ble        +0x3 <AppSetTxPower+0xF:0x51915[p]>
   51913:	0F18      	ld         x, #+0xF
   51914:	0BE0      	bra        +0xB <AppSetTxPower+0x19:0x5191F[p]>
   51915:	0018      	ld         x, #+0x0
    else
    {
#if defined(CSR102x) || defined(CSR102x_A05)
        for (level = 0; level < (sizeof(fh_tx_pwr_map) - 1); level++)
        {
              if ((power >= fh_tx_pwr_map[level]) && (power < fh_tx_pwr_map[level + 1]))
   51916:	A000      	**prefx    0xA0
   51917:	3D82      	cmp        ah, @(-0x5FC3, x)
   51918:	04E4      	blt        +0x4 <AppSetTxPower+0x16:0x5191C[p]>
   51919:	A000      	**prefx    0xA0
   5191A:	3E82      	cmp        ah, @(-0x5FC2, x)
   5191B:	04E4      	blt        +0x4 <AppSetTxPower+0x19:0x5191F[p]>
        level = LS_MAX_TRANSMIT_POWER_LEVEL;
    }
    else
    {
#if defined(CSR102x) || defined(CSR102x_A05)
        for (level = 0; level < (sizeof(fh_tx_pwr_map) - 1); level++)
   5191C:	0138      	add        x, #+0x1
   5191D:	0F88      	cmp        x, #+0xF
   5191E:	F8F0      	bne        -0x8 <AppSetTxPower+0x10:0x51916[p]>
#else
        level = (power - MIN_TX_POWER_LEVEL) / 
TX_POWER_LEVEL_STEP;
#endif
    }
    CsrSchedSetTxPower(level);
   5191F:	E315      	ld         al, @0xFFE3 <register uxl>
}
   51920:	001B      	ld         x, @(0x0, y)
   51921:	023C      	add        y, #+0x2
#else
        level = (power - MIN_TX_POWER_LEVEL) / 
TX_POWER_LEVEL_STEP;
#endif
    }
    CsrSchedSetTxPower(level);
   51922:	4400      	**prefx    0x44
   51923:	37E0      	bra        +0x4437 <CsrSchedSetTxPower:0x55D5A[p]>

0x00051924 <MeshHandlerInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void MeshHandlerInit(MESH_HANDLER_DATA_T* mesh_handler_data)
{
   51924:	FD0B      	enter      #-0x3
   51925:	0027      	st         al, @(0x0, y)
    CSRmeshRegisterAppCallback(appProcessMeshEvent);
   51926:	1900      	**prefx    0x19
   51927:	5D14      	ld         al, #+0x195D
   51928:	0510      	ld         ah, #+0x5
   51929:	2700      	**prefx    0x27
   5192A:	AA9C      	bsr        +0x26AA <CSRmeshRegisterAppCallback:0x53FD4[p]>
    p_mesh_hdlr_data = mesh_handler_data;
   5192B:	0017      	ld         al, @(0x0, y)
   5192C:	6200      	**prefx    0x62
   5192D:	9325      	st         al, @0x6193 <p_mesh_hdlr_data>
}
   5192E:	FD0F      	leave      #-0x3

0x0005192F <InitiateAssociation>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void InitiateAssociation(void)
{
   5192F:	FB0B      	enter      #-0x5
    /* Blink light to indicate that it is not associated */
    IOTLightControlDeviceBlink(0, 0, 127, 32, 32);
   51930:	7F14      	ld         al, #+0x7F
   51931:	0027      	st         al, @(0x0, y)
   51932:	2014      	ld         al, #+0x20
   51933:	0127      	st         al, @(+0x1, y)
   51934:	0227      	st         al, @(+0x2, y)
   51935:	0014      	ld         al, #+0x0
   51936:	0010      	ld         ah, #+0x0
   51937:	FE00      	**prefx    0xFE
   51938:	289C      	bsr        -0x1D8 <IOTLightControlDeviceBlink:0x51760[p]>
    dev_id_advert_tid = TIMER_INVALID;
    dev_id_advert_tid = TimerCreate(DEVICE_ID_ADVERT_TIME,
                                    TRUE,
                                    deviceIdAdvertTimeoutHandler);
#endif /* ENABLE_DEVICE_UUID_ADVERTS */
}
   51939:	FB0F      	leave      #-0x5

0x0005193A <attnTimerHandler>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void attnTimerHandler(timer_id tid)
{
    if (assoc_attn_tid == tid)
   5193A:	6200      	**prefx    0x62
   5193B:	9111      	ld         ah, @0x6191 <assoc_attn_tid>
   5193C:	E181      	cmp        ah, @0xFFE1 <register al>
   5193D:	06F0      	bne        +0x6 <attnTimerHandler+0x9:0x51943[p]>
    {
        assoc_attn_tid = TIMER_INVALID;
   5193E:	0014      	ld         al, #+0x0
   5193F:	6200      	**prefx    0x62
   51940:	9125      	st         al, @0x6191 <assoc_attn_tid>
        RestoreLightState();
   51941:	2200      	**prefx    0x22
   51942:	48E0      	bra        +0x2248 <RestoreLightState:0x53B8A[p]>
   51943:	00E2      	bra        0x0, x

0x00051944 <removeAssocTimeoutHandler>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void removeAssocTimeoutHandler(timer_id tid)
{
    if (remove_assoc_tid == tid)
   51944:	6200      	**prefx    0x62
   51945:	9211      	ld         ah, @0x6192 <remove_assoc_tid>
   51946:	E181      	cmp        ah, @0xFFE1 <register al>
   51947:	06F0      	bne        +0x6 <removeAssocTimeoutHandler+0x9:0x5194D[p]>
    {
        remove_assoc_tid = TIMER_INVALID;
   51948:	0014      	ld         al, #+0x0
   51949:	6200      	**prefx    0x62
   5194A:	9225      	st         al, @0x6192 <remove_assoc_tid>
        RemoveAssociation();
   5194B:	2300      	**prefx    0x23
   5194C:	87E0      	bra        +0x2287 <RemoveAssociation:0x53BD3[p]>
   5194D:	00E2      	bra        0x0, x

0x0005194E <AppUpdateBearerState>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void AppUpdateBearerState(CSR_MESH_TRANSMIT_STATE_T *p_bearer_state)
{
   5194E:	F50B      	enter      #-0xB
   5194F:	E119      	ld         x, @0xFFE1 <register al>
    CSR_MESH_TRANSMIT_STATE_T ret_bearer_state;

    /* The MASP relay enable is always set to TRUE. Also the relay for the 
     * default NETID is also enabled by default.
     */
    p_bearer_state->maspRelayEnable = TRUE;
   51950:	0114      	ld         al, #+0x1
   51951:	0526      	st         al, @(+0x5, x)
    p_bearer_state->relay.enable = TRUE;
   51952:	0426      	st         al, @(+0x4, x)
    p_bearer_state->relay.netId = CSR_MESH_DEFAULT_NETID;
   51953:	0014      	ld         al, #+0x0
   51954:	0326      	st         al, @(+0x3, x)

    /* Update the bearer state here */
    ret_evt_data.appCallbackDataPtr = &ret_bearer_state;
   51955:	E415      	ld         al, @0xFFE4 <register uy>
   51956:	0334      	add        al, #+0x3
   51957:	0227      	st         al, @(+0x2, y)
    CSRmeshSetTransmitState(p_bearer_state, &ret_evt_data);
   51958:	E315      	ld         al, @0xFFE3 <register uxl>
   51959:	E411      	ld         ah, @0xFFE4 <register uy>
   5195A:	2700      	**prefx    0x27
   5195B:	1B9C      	bsr        +0x271B <CSRmeshSetTransmitState:0x54076[p]>
}
   5195C:	F50F      	leave      #-0xB

0x0005195D <appProcessMeshEvent>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void appProcessMeshEvent(CSR_MESH_APP_EVENT_DATA_T 
                                                            eventDataCallback)
{
   5195D:	F30B      	enter      #-0xD
   5195E:	0D17      	ld         al, @(+0xD, y)
   5195F:	0F13      	ld         ah, @(+0xF, y)
   51960:	0A23      	st         ah, @(+0xA, y)
    CSR_MESH_OPERATION_STATUS_T operation_status = eventDataCallback.status;
    CSR_MESH_EVENT_T             operation_event = eventDataCallback.event;

    /*Handling signal as per current state */
    switch(operation_status)
   51961:	0E13      	ld         ah, @(+0xE, y)
   51962:	0480      	cmp        ah, #+0x4
   51963:	0100      	**prefx    0x1
   51964:	16F4      	beq        +0x116 <appProcessMeshEvent+0x11D:0x51A7A[p]>
   51965:	0100      	**prefx    0x1
   51966:	FF80      	cmp        ah, #+0xFF
   51967:	0100      	**prefx    0x1
   51968:	FFF4      	beq        +0xFF <appProcessMeshEvent+0x10A:0x51A67[p]>
   51969:	E099      	tst        @0xFFE0 <register ah>
   5196A:	0100      	**prefx    0x1
   5196B:	1FF0      	bne        +0x11F <appProcessMeshEvent+0x12D:0x51A8A[p]>
    {
        case CSR_MESH_OPERATION_SUCCESS:
        {
            switch(operation_event)
   5196C:	1484      	cmp        al, #+0x14
   5196D:	0100      	**prefx    0x1
   5196E:	97F4      	beq        +0x97 <appProcessMeshEvent+0xA8:0x51A05[p]>
   5196F:	1584      	cmp        al, #+0x15
   51970:	0DF8      	bcc        +0xD <appProcessMeshEvent+0x20:0x5197D[p]>
   51971:	0B84      	cmp        al, #+0xB
   51972:	07F8      	bcc        +0x7 <appProcessMeshEvent+0x1C:0x51979[p]>
   51973:	0984      	cmp        al, #+0x9
   51974:	2FF8      	bcc        +0x2F <appProcessMeshEvent+0x46:0x519A3[p]>
   51975:	0884      	cmp        al, #+0x8
   51976:	0100      	**prefx    0x1
   51977:	13F0      	bne        +0x113 <appProcessMeshEvent+0x12D:0x51A8A[p]>
   51978:	16E0      	bra        +0x16 <appProcessMeshEvent+0x31:0x5198E[p]>
   51979:	1384      	cmp        al, #+0x13
   5197A:	0100      	**prefx    0x1
   5197B:	0FF0      	bne        +0x10F <appProcessMeshEvent+0x12D:0x51A8A[p]>
   5197C:	4BE0      	bra        +0x4B <appProcessMeshEvent+0x6A:0x519C7[p]>
   5197D:	1884      	cmp        al, #+0x18
   5197E:	0100      	**prefx    0x1
   5197F:	A5F4      	beq        +0xA5 <appProcessMeshEvent+0xC7:0x51A24[p]>
   51980:	1984      	cmp        al, #+0x19
   51981:	06F8      	bcc        +0x6 <appProcessMeshEvent+0x2A:0x51987[p]>
   51982:	1584      	cmp        al, #+0x15
   51983:	0100      	**prefx    0x1
   51984:	06F0      	bne        +0x106 <appProcessMeshEvent+0x12D:0x51A8A[p]>
   51985:	0100      	**prefx    0x1
   51986:	90E0      	bra        +0x90 <appProcessMeshEvent+0xB9:0x51A16[p]>
   51987:	2384      	cmp        al, #+0x23
   51988:	0100      	**prefx    0x1
   51989:	A2F4      	beq        +0xA2 <appProcessMeshEvent+0xCE:0x51A2B[p]>
   5198A:	2484      	cmp        al, #+0x24
   5198B:	0100      	**prefx    0x1
   5198C:	FEF0      	bne        +0xFE <appProcessMeshEvent+0x12D:0x51A8A[p]>
   5198D:	4EE0      	bra        +0x4E <appProcessMeshEvent+0x7E:0x519DB[p]>
            {
                case CSR_MESH_ASSOC_STARTED_EVENT:
                {
                    p_mesh_hdlr_data->assoc_state 
   5198E:	6200      	**prefx    0x62
   5198F:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   51990:	0114      	ld         al, #+0x1
   51991:	0226      	st         al, @(+0x2, x)
                                                = app_state_association_started;

                    /* Delete the attention timeout timer if enabled */
                    if( assoc_attn_tid != TIMER_INVALID)
   51992:	6200      	**prefx    0x62
   51993:	9115      	ld         al, @0x6191 <assoc_attn_tid>
   51994:	07F4      	beq        +0x7 <appProcessMeshEvent+0x3E:0x5199B[p]>
                    {
                        TimerDelete(assoc_attn_tid);
   51995:	FC00      	**prefx    0xFC
   51996:	D300      	**prefx    0xD3
   51997:	8C9C      	bsr        -0x42D74 <TimerDelete:0xEC23[p]>
                        assoc_attn_tid = TIMER_INVALID;
   51998:	0018      	ld         x, #+0x0
   51999:	6200      	**prefx    0x62
   5199A:	9129      	st         x, @0x6191 <assoc_attn_tid>
                    }

                    /* Blink Light in Yellow to indicate association started */
                    IOTLightControlDeviceBlink(127, 127, 0, 32, 32);
   5199B:	0010      	ld         ah, #+0x0
   5199C:	0023      	st         ah, @(0x0, y)
   5199D:	2014      	ld         al, #+0x20
   5199E:	0127      	st         al, @(+0x1, y)
   5199F:	0227      	st         al, @(+0x2, y)
   519A0:	7F14      	ld         al, #+0x7F
   519A1:	0100      	**prefx    0x1
   519A2:	B2E0      	bra        +0xB2 <appProcessMeshEvent+0xF7:0x51A54[p]>
                }
                break;
                case CSR_MESH_ASSOC_COMPLETE_EVENT:
                case CSR_MESH_SEND_ASSOC_COMPLETE_EVENT:
                {
                    p_mesh_hdlr_data->assoc_state = app_state_associated;
   519A3:	6200      	**prefx    0x62
   519A4:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   519A5:	0210      	ld         ah, #+0x2
   519A6:	0222      	st         ah, @(+0x2, x)

                    /* Initialize the source sequence cache */
                    AppInitializeSeqCache(TRUE);

                    /* Write association state to NVM */
                    Nvm_Write((uint16 *)&p_mesh_hdlr_data->assoc_state,
   519A7:	0238      	add        x, #+0x2
   519A8:	0100      	**prefx    0x1
   519A9:	0614      	ld         al, #+0x106
   519AA:	0027      	st         al, @(0x0, y)
   519AB:	E315      	ld         al, @0xFFE3 <register uxl>
   519AC:	0110      	ld         ah, #+0x1
   519AD:	EF00      	**prefx    0xEF
   519AE:	979C      	bsr        -0x1169 <Nvm_Write:0x50845[p]>
                             sizeof(p_mesh_hdlr_data->assoc_state),
                             NVM_OFFSET_ASSOCIATION_STATE);

                    /* Disable promiscuous mode */
                    p_mesh_hdlr_data->bearer_tx_state.bearerPromiscuous = 0;
   519AF:	6200      	**prefx    0x62
   519B0:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   519B1:	0010      	ld         ah, #+0x0
   519B2:	0522      	st         ah, @(+0x5, x)

                    /* Save the state to NVM */
                    Nvm_Write((uint16 *)&p_mesh_hdlr_data->bearer_tx_state, 
   519B3:	0338      	add        x, #+0x3
   519B4:	0100      	**prefx    0x1
   519B5:	0814      	ld         al, #+0x108
   519B6:	0027      	st         al, @(0x0, y)
   519B7:	E315      	ld         al, @0xFFE3 <register uxl>
   519B8:	0310      	ld         ah, #+0x3
   519B9:	EF00      	**prefx    0xEF
   519BA:	8B9C      	bsr        -0x1175 <Nvm_Write:0x50845[p]>

                    /* If the device is connected as a bridge, the stored 
                     * promiscuous settings would be assigned at the time of 
                     * disconnection.
                     */
                    if(GetConnectedDeviceId() == CM_INVALID_DEVICE_ID)
   519BB:	0400      	**prefx    0x4
   519BC:	689C      	bsr        +0x468 <GetConnectedDeviceId:0x51E24[p]>
   519BD:	FF84      	cmp        al, #-0x1
   519BE:	05F0      	bne        +0x5 <appProcessMeshEvent+0x66:0x519C3[p]>
                    {
                        AppUpdateBearerState(&p_mesh_hdlr_data->bearer_tx_state);
   519BF:	6200      	**prefx    0x62
   519C0:	9315      	ld         al, @0x6193 <p_mesh_hdlr_data>
   519C1:	0334      	add        al, #+0x3
   519C2:	8C9C      	bsr        -0x74 <AppUpdateBearerState:0x5194E[p]>
                    }

                   /* Call this function in the application to indicate 
                    * association complete.
                    */
                    AppHandleAssociationComplete();
   519C3:	2200      	**prefx    0x22
   519C4:	E39C      	bsr        +0x21E3 <AppHandleAssociationComplete:0x53BA7[p]>
   519C5:	0100      	**prefx    0x1
   519C6:	C4E0      	bra        +0xC4 <appProcessMeshEvent+0x12D:0x51A8A[p]>
                {                    
                    /* Create a timer(0) to remove the association.This is done
                     * in order to unwind the stack to avoid stack
                     * overflow issues.
                     */
                    if(remove_assoc_tid == TIMER_INVALID)
   519C7:	6200      	**prefx    0x62
   519C8:	9299      	tst        @0x6192 <remove_assoc_tid>
   519C9:	0100      	**prefx    0x1
   519CA:	C0F0      	bne        +0xC0 <appProcessMeshEvent+0x12D:0x51A8A[p]>
                    {
                        remove_assoc_tid = TimerCreate(0,
   519CB:	0118      	ld         x, #+0x1
   519CC:	002B      	st         x, @(0x0, y)
   519CD:	1900      	**prefx    0x19
   519CE:	4410      	ld         ah, #+0x1944
   519CF:	0223      	st         ah, @(+0x2, y)
   519D0:	0514      	ld         al, #+0x5
   519D1:	0127      	st         al, @(+0x1, y)
   519D2:	0010      	ld         ah, #+0x0
   519D3:	0014      	ld         al, #+0x0
   519D4:	FC00      	**prefx    0xFC
   519D5:	D200      	**prefx    0xD2
   519D6:	589C      	bsr        -0x42DA8 <TimerCreate:0xEC2E[p]>
   519D7:	6200      	**prefx    0x62
   519D8:	9225      	st         al, @0x6192 <remove_assoc_tid>
   519D9:	0100      	**prefx    0x1
   519DA:	B0E0      	bra        +0xB0 <appProcessMeshEvent+0x12D:0x51A8A[p]>
                }
                break;
                case CSR_MESH_BEARER_STATE_EVENT:
                {
                    CSR_MESH_BEARER_STATE_DATA_T bearer_state;
                    bearer_state = *((CSR_MESH_BEARER_STATE_DATA_T *)
   519DB:	0A1B      	ld         x, @(+0xA, y)
   519DC:	0212      	ld         ah, @(+0x2, x)
   519DD:	0116      	ld         al, @(+0x1, x)
   519DE:	F925      	st         al, @0xFFF9 <(scratchpad)>

                    /* The bearers supported by the application are only 
                     * considered here. Also the LE bearer should always be 
                     * enabled.
                     */
                    p_mesh_hdlr_data->bearer_tx_state.bearerRelayActive =
   519DF:	6200      	**prefx    0x62
   519E0:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   519E1:	F829      	st         x, @0xFFF8 <(scratchpad)>
   519E2:	0A1B      	ld         x, @(+0xA, y)
   519E3:	0016      	ld         al, @(0x0, x)
   519E4:	03C4      	and        al, #0x3
   519E5:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   519E6:	0326      	st         al, @(+0x3, x)
                        (bearer_state.bearerRelayActive & APP_SUPPORTED_BEARERS);
                    p_mesh_hdlr_data->bearer_tx_state.bearerEnabled =
   519E7:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   519E8:	03C4      	and        al, #0x3
                        (bearer_state.bearerEnabled & APP_SUPPORTED_BEARERS);
                    p_mesh_hdlr_data->bearer_tx_state.bearerPromiscuous = 
   519E9:	03C0      	and        ah, #0x3
   519EA:	0522      	st         ah, @(+0x5, x)
                        (bearer_state.bearerPromiscuous & APP_SUPPORTED_BEARERS);
                    p_mesh_hdlr_data->bearer_tx_state.bearerEnabled |= 
   519EB:	E111      	ld         ah, @0xFFE1 <register al>
   519EC:	01B0      	or         ah, #+0x1
   519ED:	0422      	st         ah, @(+0x4, x)
                        LE_BEARER_ACTIVE;

                    /* Save the state to NVM */
                    Nvm_Write((uint16 *)&p_mesh_hdlr_data->bearer_tx_state, 
   519EE:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   519EF:	0334      	add        al, #+0x3
   519F0:	0100      	**prefx    0x1
   519F1:	0818      	ld         x, #+0x108
   519F2:	002B      	st         x, @(0x0, y)
   519F3:	0310      	ld         ah, #+0x3
   519F4:	EE00      	**prefx    0xEE
   519F5:	509C      	bsr        -0x11B0 <Nvm_Write:0x50845[p]>
                              sizeof(CSR_MESH_BEARER_STATE_DATA_T),
                              NVM_OFFSET_BEARER_STATE);

                    if(GetConnectedDeviceId() == CM_INVALID_DEVICE_ID)
   519F6:	0400      	**prefx    0x4
   519F7:	2D9C      	bsr        +0x42D <GetConnectedDeviceId:0x51E24[p]>
   519F8:	FF84      	cmp        al, #-0x1
   519F9:	0100      	**prefx    0x1
   519FA:	90F0      	bne        +0x90 <appProcessMeshEvent+0x12D:0x51A8A[p]>
                    {
                        /* Trigger connectable adverts. If the GATT bearer is
                         * enabled it will start advertising
                         */
                        GattTriggerConnectableAdverts(NULL);
   519FB:	0014      	ld         al, #+0x0
   519FC:	0700      	**prefx    0x7
   519FD:	F89C      	bsr        +0x6F8 <GattTriggerConnectableAdverts:0x520F5[p]>
                        AppUpdateBearerState(&p_mesh_hdlr_data->bearer_tx_state);
   519FE:	6200      	**prefx    0x62
   519FF:	9315      	ld         al, @0x6193 <p_mesh_hdlr_data>
   51A00:	0334      	add        al, #+0x3
   51A01:	FF00      	**prefx    0xFF
   51A02:	4C9C      	bsr        -0xB4 <AppUpdateBearerState:0x5194E[p]>
   51A03:	0100      	**prefx    0x1
   51A04:	86E0      	bra        +0x86 <appProcessMeshEvent+0x12D:0x51A8A[p]>
                    CSR_MESH_CONFIG_BEARER_PARAM_T *config_param;

                    config_param = (CSR_MESH_CONFIG_BEARER_PARAM_T *)
                                        (eventDataCallback.appCallbackDataPtr);

                    p_mesh_hdlr_data->ttl_value = config_param->default_ttl;
   51A05:	6200      	**prefx    0x62
   51A06:	9311      	ld         ah, @0x6193 <p_mesh_hdlr_data>
   51A07:	0A1B      	ld         x, @(+0xA, y)
   51A08:	0416      	ld         al, @(+0x4, x)
   51A09:	E019      	ld         x, @0xFFE0 <register ah>
   51A0A:	0926      	st         al, @(+0x9, x)
                    AppSetTxPower(config_param->tx_power);
   51A0B:	0A1B      	ld         x, @(+0xA, y)
   51A0C:	0316      	ld         al, @(+0x3, x)
   51A0D:	FF00      	**prefx    0xFF
   51A0E:	F89C      	bsr        -0x108 <AppSetTxPower:0x51906[p]>

                    /* Save the ttl value onto NVM */
                    Nvm_Write((uint16 *)&p_mesh_hdlr_data->ttl_value, 
   51A0F:	6200      	**prefx    0x62
   51A10:	9315      	ld         al, @0x6193 <p_mesh_hdlr_data>
   51A11:	0934      	add        al, #+0x9
   51A12:	0100      	**prefx    0x1
   51A13:	0710      	ld         ah, #+0x107
   51A14:	0023      	st         ah, @(0x0, y)
   51A15:	61E0      	bra        +0x61 <appProcessMeshEvent+0x119:0x51A76[p]>

                case CSR_MESH_CONFIG_GET_PARAMS_EVENT:
                {
                    CSR_MESH_CONFIG_BEARER_PARAM_T bearer_param;

                    LsReadTransmitPowerLevel(&bearer_param.tx_power);
   51A16:	E415      	ld         al, @0xFFE4 <register uy>
   51A17:	0834      	add        al, #+0x8
   51A18:	FB00      	**prefx    0xFB
   51A19:	2100      	**prefx    0x21
   51A1A:	859C      	bsr        -0x4DF7B <LsReadTransmitPowerLevel:0x3A9F[p]>
                    bearer_param.tx_power&= 0x00FF;
   51A1B:	0817      	ld         al, @(+0x8, y)
   51A1C:	0100      	**prefx    0x1
   51A1D:	FFC4      	and        al, #0xFF
   51A1E:	0827      	st         al, @(+0x8, y)
                    MemCopy(((CSR_MESH_CONFIG_BEARER_PARAM_T *)(eventDataCallback.appCallbackDataPtr)), 
   51A1F:	0514      	ld         al, #+0x5
   51A20:	0A13      	ld         ah, @(+0xA, y)
   51A21:	E419      	ld         x, @0xFFE4 <register uy>
   51A22:	0538      	add        x, #+0x5
   51A23:	66E0      	bra        +0x66 <appProcessMeshEvent+0x12C:0x51A89[p]>
                    break;
                }

                case CSR_MESH_GROUP_SET_MODEL_GROUPID_EVENT:
                {
                    HandleGroupSetMsg(( *((CSR_MESH_GROUP_ID_RELATED_DATA_T *)
   51A24:	0514      	ld         al, #+0x5
   51A25:	E411      	ld         ah, @0xFFE4 <register uy>
   51A26:	0A1B      	ld         x, @(+0xA, y)
   51A27:	FD09      	bc2        
   51A28:	2100      	**prefx    0x21
   51A29:	C39C      	bsr        +0x20C3 <HandleGroupSetMsg:0x53AEC[p]>
   51A2A:	60E0      	bra        +0x60 <appProcessMeshEvent+0x12D:0x51A8A[p]>
        
                    attn_data = (CSR_MESH_ASSOCIATION_ATTENTION_DATA_T *)
                                      (eventDataCallback.appCallbackDataPtr);
        
                    /* Delete attention timer if it exists */
                    if (TIMER_INVALID != assoc_attn_tid)
   51A2B:	6200      	**prefx    0x62
   51A2C:	9115      	ld         al, @0x6191 <assoc_attn_tid>
   51A2D:	07F4      	beq        +0x7 <appProcessMeshEvent+0xD7:0x51A34[p]>
                    {
                        TimerDelete(assoc_attn_tid);
   51A2E:	FC00      	**prefx    0xFC
   51A2F:	D200      	**prefx    0xD2
   51A30:	F39C      	bsr        -0x42E0D <TimerDelete:0xEC23[p]>
                        assoc_attn_tid = TIMER_INVALID;
   51A31:	0018      	ld         x, #+0x0
   51A32:	6200      	**prefx    0x62
   51A33:	9129      	st         x, @0x6191 <assoc_attn_tid>
                    }
                    /* If attention Enabled */
                    if (attn_data->attract_attention)
   51A34:	0A1B      	ld         x, @(+0xA, y)
   51A35:	009A      	tst        @(0x0, x)
   51A36:	22F4      	beq        +0x22 <appProcessMeshEvent+0xFB:0x51A58[p]>
                    {
                        /* Create attention duration timer if required */
                        if(attn_data->duration != 0xFFFF)
   51A37:	0112      	ld         ah, @(+0x1, x)
   51A38:	FF80      	cmp        ah, #-0x1
   51A39:	15F4      	beq        +0x15 <appProcessMeshEvent+0xF1:0x51A4E[p]>
                        {
                            assoc_attn_tid = TimerCreate(
   51A3A:	E015      	ld         al, @0xFFE0 <register ah>
   51A3B:	0009      	**unsigned
   51A3C:	0400      	**prefx    0x4
   51A3D:	E890      	umult      #0x3E8
   51A3E:	F925      	st         al, @0xFFF9 <(scratchpad)>
   51A3F:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   51A40:	0118      	ld         x, #+0x1
   51A41:	002B      	st         x, @(0x0, y)
   51A42:	1900      	**prefx    0x19
   51A43:	3A10      	ld         ah, #+0x193A
   51A44:	0223      	st         ah, @(+0x2, y)
   51A45:	0514      	ld         al, #+0x5
   51A46:	0127      	st         al, @(+0x1, y)
   51A47:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   51A48:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   51A49:	FC00      	**prefx    0xFC
   51A4A:	D200      	**prefx    0xD2
   51A4B:	E39C      	bsr        -0x42E1D <TimerCreate:0xEC2E[p]>
   51A4C:	6200      	**prefx    0x62
   51A4D:	9125      	st         al, @0x6191 <assoc_attn_tid>
                                            attn_data->duration * MILLISECOND, 
                                            TRUE, attnTimerHandler);
                        }
                        /* Enable Green light blinking to attract attention */
                        IOTLightControlDeviceBlink(0, 127, 0, 16, 16);
   51A4E:	0018      	ld         x, #+0x0
   51A4F:	002B      	st         x, @(0x0, y)
   51A50:	1010      	ld         ah, #+0x10
   51A51:	0123      	st         ah, @(+0x1, y)
   51A52:	0223      	st         ah, @(+0x2, y)
   51A53:	0014      	ld         al, #+0x0
   51A54:	7F10      	ld         ah, #+0x7F
   51A55:	FD00      	**prefx    0xFD
   51A56:	0A9C      	bsr        -0x2F6 <IOTLightControlDeviceBlink:0x51760[p]>
   51A57:	33E0      	bra        +0x33 <appProcessMeshEvent+0x12D:0x51A8A[p]>
                    }
                    else
                    {
                        if(p_mesh_hdlr_data->assoc_state 
   51A58:	6200      	**prefx    0x62
   51A59:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   51A5A:	029A      	tst        @(+0x2, x)
   51A5B:	09F0      	bne        +0x9 <appProcessMeshEvent+0x107:0x51A64[p]>
                                                == app_state_not_associated)
                        {
                            /* Blink blue to indicate not associated status */
                            IOTLightControlDeviceBlink(0, 0, 127, 32, 32);
   51A5C:	7F14      	ld         al, #+0x7F
   51A5D:	0027      	st         al, @(0x0, y)
   51A5E:	2018      	ld         x, #+0x20
   51A5F:	012B      	st         x, @(+0x1, y)
   51A60:	022B      	st         x, @(+0x2, y)
   51A61:	0014      	ld         al, #+0x0
   51A62:	0010      	ld         ah, #+0x0
   51A63:	F2E0      	bra        -0xE <appProcessMeshEvent+0xF8:0x51A55[p]>
                        }
                        else
                        {
                            /* Restore Light State */
                            RestoreLightState();
   51A64:	2100      	**prefx    0x21
   51A65:	259C      	bsr        +0x2125 <RestoreLightState:0x53B8A[p]>
   51A66:	24E0      	bra        +0x24 <appProcessMeshEvent+0x12D:0x51A8A[p]>
        break;
        case CSR_MESH_OPERATION_MEMORY_FULL:
        break;
        case CSR_MESH_OPERATION_GENERIC_FAIL:
        {
            switch(operation_event)
   51A67:	F734      	add        al, #-0x9
   51A68:	0284      	cmp        al, #+0x2
   51A69:	21F8      	bcc        +0x21 <appProcessMeshEvent+0x12D:0x51A8A[p]>
                case CSR_MESH_SEND_ASSOC_COMPLETE_EVENT:
                {
                    DEBUG_STR("\r\n Association failed !!! \r\n");

                    /* Initiate association once again */
                    p_mesh_hdlr_data->assoc_state = app_state_not_associated;
   51A6A:	6200      	**prefx    0x62
   51A6B:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   51A6C:	0010      	ld         ah, #+0x0
   51A6D:	0222      	st         ah, @(+0x2, x)
                    InitiateAssociation();
   51A6E:	FF00      	**prefx    0xFF
   51A6F:	C09C      	bsr        -0x140 <InitiateAssociation:0x5192F[p]>

                    /* Write association state to NVM */
                    Nvm_Write((uint16 *)&p_mesh_hdlr_data->assoc_state,
   51A70:	6200      	**prefx    0x62
   51A71:	9315      	ld         al, @0x6193 <p_mesh_hdlr_data>
   51A72:	0234      	add        al, #+0x2
   51A73:	0100      	**prefx    0x1
   51A74:	0618      	ld         x, #+0x106
   51A75:	002B      	st         x, @(0x0, y)
   51A76:	0110      	ld         ah, #+0x1
   51A77:	EE00      	**prefx    0xEE
   51A78:	CD9C      	bsr        -0x1233 <Nvm_Write:0x50845[p]>
   51A79:	11E0      	bra        +0x11 <appProcessMeshEvent+0x12D:0x51A8A[p]>
            }
        }
        break;
        case CSR_MESH_OPERATION_REQUEST_FOR_INFO:
        {
            switch(operation_event)
   51A7A:	1684      	cmp        al, #+0x16
   51A7B:	04F4      	beq        +0x4 <appProcessMeshEvent+0x122:0x51A7F[p]>
   51A7C:	1784      	cmp        al, #+0x17
   51A7D:	0DF0      	bne        +0xD <appProcessMeshEvent+0x12D:0x51A8A[p]>
   51A7E:	06E0      	bra        +0x6 <appProcessMeshEvent+0x127:0x51A84[p]>
            {
                case CSR_MESH_GET_VID_PID_VERSTION_EVENT:
                {
                    MemCopy(((CSR_MESH_VID_PID_VERSION_T *)
   51A7F:	6200      	**prefx    0x62
   51A80:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   51A81:	011A      	ld         x, @(+0x1, x)
   51A82:	0414      	ld         al, #+0x4
   51A83:	05E0      	bra        +0x5 <appProcessMeshEvent+0x12B:0x51A88[p]>
                            sizeof(CSR_MESH_VID_PID_VERSION_T));
                }
                break;
                case CSR_MESH_GET_DEVICE_APPEARANCE_EVENT:
                {
                    MemCopy(((CSR_MESH_DEVICE_APPEARANCE_T *)
   51A84:	6200      	**prefx    0x62
   51A85:	9319      	ld         x, @0x6193 <p_mesh_hdlr_data>
   51A86:	001A      	ld         x, @(0x0, x)
   51A87:	0D14      	ld         al, #+0xD
   51A88:	0A13      	ld         ah, @(+0xA, y)
   51A89:	FD09      	bc2        
        break;

        default:
        break;
    }
}
   51A8A:	F30F      	leave      #-0xD

0x00051A8B <DataModelHandlerInit>:
 *
 *----------------------------------------------------------------------------*/
extern void DataModelHandlerInit(CsrUint8 nw_id,
                                 uint16 model_groups[],
                                 CsrUint16 num_groups)
{
   51A8B:	FB0B      	enter      #-0x5
    /* Register both both data client and server as we support both send
     * and receive stream
     */
    /* Server */
    DataModelInit(nw_id, model_groups, num_groups, appDataServerHandler);
   51A8C:	051B      	ld         x, @(+0x5, y)
   51A8D:	002B      	st         x, @(0x0, y)
   51A8E:	1C00      	**prefx    0x1C
   51A8F:	B818      	ld         x, #+0x1BB8
   51A90:	022B      	st         x, @(+0x2, y)
   51A91:	0518      	ld         x, #+0x5
   51A92:	012B      	st         x, @(+0x1, y)
   51A93:	5C00      	**prefx    0x5C
   51A94:	6A9C      	bsr        +0x5C6A <DataModelInit:0x576FE[p]>
    /* Client */
    DataModelClientInit(appDataClientHandler);
   51A95:	1B00      	**prefx    0x1B
   51A96:	3414      	ld         al, #+0x1B34
   51A97:	0510      	ld         ah, #+0x5
   51A98:	5E00      	**prefx    0x5E
   51A99:	D89C      	bsr        +0x5DD8 <DataModelClientInit:0x57871[p]>

    /* Reset timers */
    stream_send_retry_tid = TIMER_INVALID;
   51A9A:	0014      	ld         al, #+0x0
   51A9B:	6200      	**prefx    0x62
   51A9C:	9425      	st         al, @0x6194 <stream_send_retry_tid>
    rx_stream_timeout_tid = TIMER_INVALID;
   51A9D:	6300      	**prefx    0x63
   51A9E:	A125      	st         al, @0x62A1 <rx_stream_timeout_tid>

    /* Reset the device info */
    device_info_length = sizeof(DEVICE_INFO_STRING);
   51A9F:	7518      	ld         x, #+0x75
   51AA0:	6300      	**prefx    0x63
   51AA1:	9929      	st         x, @0x6299 <device_info_length>
    device_info[0] = CSR_DEVICE_INFO_RSP;
   51AA2:	6200      	**prefx    0x62
   51AA3:	9910      	ld         ah, #+0x6199
   51AA4:	0214      	ld         al, #+0x2
   51AA5:	E019      	ld         x, @0xFFE0 <register ah>
   51AA6:	0026      	st         al, @(0x0, x)
    device_info[1] = device_info_length;
   51AA7:	7514      	ld         al, #+0x75
   51AA8:	0126      	st         al, @(+0x1, x)

    /* Initialise stream state */
    app_stream_state.rx.src_id = 0;
   51AA9:	6300      	**prefx    0x63
   51AAA:	9A18      	ld         x, #+0x629A
   51AAB:	0014      	ld         al, #+0x0
   51AAC:	0026      	st         al, @(0x0, x)
    app_stream_state.rx.status = stream_receive_idle;
   51AAD:	0114      	ld         al, #+0x1
   51AAE:	0226      	st         al, @(+0x2, x)

    app_stream_state.tx.dest_id = 0;
   51AAF:	0014      	ld         al, #+0x0
   51AB0:	0326      	st         al, @(+0x3, x)
    app_stream_state.tx.status = stream_send_idle;
   51AB1:	0114      	ld         al, #+0x1
   51AB2:	0626      	st         al, @(+0x6, x)
    app_stream_state.tx.last_data_len = 0;
   51AB3:	0014      	ld         al, #+0x0
   51AB4:	0526      	st         al, @(+0x5, x)

    MemCopy(&device_info[2], DEVICE_INFO_STRING, sizeof(DEVICE_INFO_STRING));
   51AB5:	0230      	add        ah, #+0x2
   51AB6:	7514      	ld         al, #+0x75
   51AB7:	A000      	**prefx    0xA0
   51AB8:	4D18      	ld         x, #-0x5FB3
   51AB9:	FD09      	bc2        
}
   51ABA:	FB0F      	leave      #-0x5

0x00051ABB <rxStreamTimeoutHandler>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void rxStreamTimeoutHandler(timer_id tid)
{
    if( tid == rx_stream_timeout_tid )
   51ABB:	6300      	**prefx    0x63
   51ABC:	A185      	cmp        al, @0x62A1 <rx_stream_timeout_tid>
   51ABD:	0DF0      	bne        +0xD <rxStreamTimeoutHandler+0xF:0x51ACA[p]>
    {
        /* Reset the stream */
        rx_stream_timeout_tid = TIMER_INVALID;
   51ABE:	0014      	ld         al, #+0x0
   51ABF:	6300      	**prefx    0x63
   51AC0:	A125      	st         al, @0x62A1 <rx_stream_timeout_tid>
        rx_stream_in_progress = FALSE;
   51AC1:	6200      	**prefx    0x62
   51AC2:	9825      	st         al, @0x6198 <rx_stream_in_progress>
 *     model so that it is ready to receive a new stream.
 *----------------------------------------------------------------------------*/
static void resetRxStreamState(void)
{
    /* Reset source ID */
    app_stream_state.rx.src_id = 0;
   51AC3:	6300      	**prefx    0x63
   51AC4:	9A25      	st         al, @0x629A <app_stream_state>
    app_stream_state.rx.status = stream_receive_idle;
   51AC5:	0114      	ld         al, #+0x1
   51AC6:	6300      	**prefx    0x63
   51AC7:	9C25      	st         al, @0x629C <app_stream_state+0x2>
        rx_stream_timeout_tid = TIMER_INVALID;
        rx_stream_in_progress = FALSE;
        resetRxStreamState();

#ifdef ENABLE_WATCHDOG_MODEL
        WatchdogStart();
   51AC8:	0200      	**prefx    0x2
   51AC9:	2EE0      	bra        +0x22E <WatchdogStart:0x51CF7[p]>
   51ACA:	00E2      	bra        0x0, x

0x00051ACB <endStream>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void endStream(void)
{
   51ACB:	FA0B      	enter      #-0x6
    CSRMESH_DATA_STREAM_FLUSH_T flush_param;
    if(app_stream_state.tx.status == stream_send_in_progress)
   51ACC:	6300      	**prefx    0x63
   51ACD:	A015      	ld         al, @0x62A0 <app_stream_state+0x6>
   51ACE:	0384      	cmp        al, #+0x3
   51ACF:	07F0      	bne        +0x7 <endStream+0xB:0x51AD6[p]>
    {
        app_stream_state.tx.status = stream_finish_flush_sent;
   51AD0:	0414      	ld         al, #+0x4
   51AD1:	6300      	**prefx    0x63
   51AD2:	A025      	st         al, @0x62A0 <app_stream_state+0x6>
        app_stream_state.tx.last_data_len = 0;
   51AD3:	0014      	ld         al, #+0x0
   51AD4:	6300      	**prefx    0x63
   51AD5:	9F25      	st         al, @0x629F <app_stream_state+0x5>
    }
    /* Send flush to end stream */
    flush_param.streamsn = app_stream_state.tx.sn;
   51AD6:	6300      	**prefx    0x63
   51AD7:	9E15      	ld         al, @0x629E <app_stream_state+0x4>
   51AD8:	0227      	st         al, @(+0x2, y)
    DataStreamFlush(CSR_MESH_DEFAULT_NETID, app_stream_state.tx.dest_id, 
   51AD9:	6300      	**prefx    0x63
   51ADA:	9D15      	ld         al, @0x629D <app_stream_state+0x3>
   51ADB:	0327      	st         al, @(+0x3, y)
   51ADC:	FE00      	**prefx    0xFE
   51ADD:	219C      	bsr        -0x1DF <AppGetCurrentTTL:0x518FE[p]>
   51ADE:	0027      	st         al, @(0x0, y)
   51ADF:	E415      	ld         al, @0xFFE4 <register uy>
   51AE0:	0234      	add        al, #+0x2
   51AE1:	0127      	st         al, @(+0x1, y)
   51AE2:	0014      	ld         al, #+0x0
   51AE3:	0313      	ld         ah, @(+0x3, y)
   51AE4:	5D00      	**prefx    0x5D
   51AE5:	6E9C      	bsr        +0x5D6E <DataStreamFlush:0x57853[p]>
                                    AppGetCurrentTTL(), &flush_param);
}
   51AE6:	FA0F      	leave      #-0x6

0x00051AE7 <handleCSRmeshDataStreamSendCfm>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void handleCSRmeshDataStreamSendCfm(
                                    CSRMESH_DATA_STREAM_RECEIVED_T *p_event)
{
   51AE7:	EF0B      	enter      #-0x11
    
    tx_stream_offset += app_stream_state.tx.last_data_len;
   51AE8:	6200      	**prefx    0x62
   51AE9:	9515      	ld         al, @0x6195 <tx_stream_offset>
   51AEA:	6300      	**prefx    0x63
   51AEB:	9F35      	add        al, @0x629F <app_stream_state+0x5>
   51AEC:	6200      	**prefx    0x62
   51AED:	9525      	st         al, @0x6195 <tx_stream_offset>
static void sendNextPacket(void)
{
    uint16 data_pending, len;
    CSRMESH_DATA_STREAM_SEND_T send_param;
    /* Stop retry timer */
    stream_send_retry_count = 0;
   51AEE:	0014      	ld         al, #+0x0
   51AEF:	6200      	**prefx    0x62
   51AF0:	9625      	st         al, @0x6196 <stream_send_retry_count>
    TimerDelete(stream_send_retry_tid);
   51AF1:	6200      	**prefx    0x62
   51AF2:	9415      	ld         al, @0x6194 <stream_send_retry_tid>
   51AF3:	FC00      	**prefx    0xFC
   51AF4:	D100      	**prefx    0xD1
   51AF5:	2E9C      	bsr        -0x42ED2 <TimerDelete:0xEC23[p]>
    stream_send_retry_tid = TIMER_INVALID;
   51AF6:	0014      	ld         al, #+0x0
   51AF7:	6200      	**prefx    0x62
   51AF8:	9425      	st         al, @0x6194 <stream_send_retry_tid>

    data_pending = device_info_length+2 - tx_stream_offset;
   51AF9:	6200      	**prefx    0x62
   51AFA:	9519      	ld         x, @0x6195 <tx_stream_offset>
   51AFB:	6300      	**prefx    0x63
   51AFC:	9915      	ld         al, @0x6299 <device_info_length>
   51AFD:	E355      	sub        al, @0xFFE3 <register uxl>
   51AFE:	0234      	add        al, #+0x2

    if( data_pending )
   51AFF:	31F4      	beq        +0x31 <handleCSRmeshDataStreamSendCfm+0x49:0x51B30[p]>
    {
        len = (data_pending > MAX_DATA_STREAM_PACKET_SIZE)? 
   51B00:	0E27      	st         al, @(+0xE, y)
   51B01:	0884      	cmp        al, #+0x8
   51B02:	032C      	bcz        +0x3 <handleCSRmeshDataStreamSendCfm+0x1E:0x51B05[p]>
   51B03:	0814      	ld         al, #+0x8
   51B04:	0E27      	st         al, @(+0xE, y)
                                MAX_DATA_STREAM_PACKET_SIZE : data_pending;

        MemCopy(send_param.streamoctets, &device_info[tx_stream_offset],len);
   51B05:	6200      	**prefx    0x62
   51B06:	9938      	add        x, #+0x6199
   51B07:	0E17      	ld         al, @(+0xE, y)
   51B08:	E411      	ld         ah, @0xFFE4 <register uy>
   51B09:	0430      	add        ah, #+0x4
   51B0A:	FD09      	bc2        
        send_param.streamoctets_len = len;
   51B0B:	0E17      	ld         al, @(+0xE, y)
   51B0C:	0C27      	st         al, @(+0xC, y)
        send_param.streamsn = app_stream_state.tx.sn;
   51B0D:	6300      	**prefx    0x63
   51B0E:	9E15      	ld         al, @0x629E <app_stream_state+0x4>
   51B0F:	0327      	st         al, @(+0x3, y)
                
        /* Send the next packet */
        DataStreamSend(CSR_MESH_DEFAULT_NETID, app_stream_state.tx.dest_id,
   51B10:	6300      	**prefx    0x63
   51B11:	9D15      	ld         al, @0x629D <app_stream_state+0x3>
   51B12:	0D27      	st         al, @(+0xD, y)
   51B13:	FE00      	**prefx    0xFE
   51B14:	EA9C      	bsr        -0x216 <AppGetCurrentTTL:0x518FE[p]>
   51B15:	0027      	st         al, @(0x0, y)
   51B16:	E415      	ld         al, @0xFFE4 <register uy>
   51B17:	0334      	add        al, #+0x3
   51B18:	0127      	st         al, @(+0x1, y)
   51B19:	0014      	ld         al, #+0x0
   51B1A:	0D13      	ld         ah, @(+0xD, y)
   51B1B:	5D00      	**prefx    0x5D
   51B1C:	029C      	bsr        +0x5D02 <DataStreamSend:0x5781E[p]>
                       AppGetCurrentTTL(), &send_param);
        app_stream_state.tx.last_data_len = len;
   51B1D:	0E17      	ld         al, @(+0xE, y)
   51B1E:	6300      	**prefx    0x63
   51B1F:	9F25      	st         al, @0x629F <app_stream_state+0x5>

        stream_send_retry_tid = TimerCreate(STREAM_SEND_RETRY_TIME, TRUE,
   51B20:	0114      	ld         al, #+0x1
   51B21:	0027      	st         al, @(0x0, y)
   51B22:	1B00      	**prefx    0x1B
   51B23:	5F14      	ld         al, #+0x1B5F
   51B24:	0227      	st         al, @(+0x2, y)
   51B25:	0514      	ld         al, #+0x5
   51B26:	0127      	st         al, @(+0x1, y)
   51B27:	0710      	ld         ah, #+0x7
   51B28:	A100      	**prefx    0xA1
   51B29:	2014      	ld         al, #-0x5EE0
   51B2A:	FC00      	**prefx    0xFC
   51B2B:	D100      	**prefx    0xD1
   51B2C:	029C      	bsr        -0x42EFE <TimerCreate:0xEC2E[p]>
   51B2D:	6200      	**prefx    0x62
   51B2E:	9425      	st         al, @0x6194 <stream_send_retry_tid>
   51B2F:	04E0      	bra        +0x4 <handleCSRmeshDataStreamSendCfm+0x4C:0x51B33[p]>
                                                       streamSendRetryTimer);
    }
    else
    {
        /* Send flush to indicate end of stream */
        endStream();
   51B30:	9B9C      	bsr        -0x65 <endStream:0x51ACB[p]>
#ifdef ENABLE_WATCHDOG_MODEL
        WatchdogStart();
   51B31:	0200      	**prefx    0x2
   51B32:	C59C      	bsr        +0x1C5 <WatchdogStart:0x51CF7[p]>
{
    
    tx_stream_offset += app_stream_state.tx.last_data_len;
    /* Send next block if it is not end of string */
    sendNextPacket();
}
   51B33:	EF0F      	leave      #-0x11

0x00051B34 <appDataClientHandler>:
 *---------------------------------------------------------------------------*/
static CSRmeshResult appDataClientHandler(CSRMESH_MODEL_EVENT_T event_code, 
                                          CSRMESH_EVENT_DATA_T* p_event,
                                          CsrUint16 length,
                                          void **state_data)
{
   51B34:	FE0B      	enter      #-0x2
   51B35:	E019      	ld         x, @0xFFE0 <register ah>
    uint16 nesn;

    switch(event_code)
   51B36:	7284      	cmp        al, #+0x72
   51B37:	26F0      	bne        +0x26 <appDataClientHandler+0x29:0x51B5D[p]>
    {
        /* Received a repsonse to a flush or a data_stream */
        case CSRMESH_DATA_STREAM_RECEIVED:
        {
            CSRMESH_DATA_STREAM_RECEIVED_T *p_data_rcvd =
                      (CSRMESH_DATA_STREAM_RECEIVED_T *)p_event->data;
   51B38:	091A      	ld         x, @(+0x9, x)
            /* Handle the message only if it is addressed to self device ID */
            /* Get the nesn from ack */
            nesn = p_data_rcvd->streamnesn;
   51B39:	0012      	ld         ah, @(0x0, x)

            if(app_stream_state.tx.status == stream_start_flush_sent &&
   51B3A:	6300      	**prefx    0x63
   51B3B:	A015      	ld         al, @0x62A0 <app_stream_state+0x6>
   51B3C:	0284      	cmp        al, #+0x2
   51B3D:	08F0      	bne        +0x8 <appDataClientHandler+0x11:0x51B45[p]>
   51B3E:	6300      	**prefx    0x63
   51B3F:	9E81      	cmp        ah, @0x629E <app_stream_state+0x4>
   51B40:	1DF0      	bne        +0x1D <appDataClientHandler+0x29:0x51B5D[p]>
               nesn == app_stream_state.tx.sn)
            {
                /* Received the acknowledgement for the stream flush
                 * sent to start streaming
                 */
                app_stream_state.tx.status = stream_send_in_progress;
   51B41:	0314      	ld         al, #+0x3
   51B42:	6300      	**prefx    0x63
   51B43:	A025      	st         al, @0x62A0 <app_stream_state+0x6>
   51B44:	17E0      	bra        +0x17 <appDataClientHandler+0x27:0x51B5B[p]>

                /* If there is any stream packet pending, send it */
                handleCSRmeshDataStreamSendCfm(p_data_rcvd);
            }
            else if(app_stream_state.tx.status == stream_finish_flush_sent &&
   51B45:	0484      	cmp        al, #+0x4
   51B46:	0BF0      	bne        +0xB <appDataClientHandler+0x1D:0x51B51[p]>
   51B47:	6300      	**prefx    0x63
   51B48:	9E81      	cmp        ah, @0x629E <app_stream_state+0x4>
   51B49:	14F0      	bne        +0x14 <appDataClientHandler+0x29:0x51B5D[p]>
               nesn == app_stream_state.tx.sn)
            {
                /* Received the acknowledgement for the stream flush sent
                 * to finish the stream
                 */
                app_stream_state.tx.status = stream_send_idle;
   51B4A:	0114      	ld         al, #+0x1
   51B4B:	6300      	**prefx    0x63
   51B4C:	A025      	st         al, @0x62A0 <app_stream_state+0x6>
                app_stream_state.tx.sn = 0;
   51B4D:	0014      	ld         al, #+0x0
   51B4E:	6300      	**prefx    0x63
   51B4F:	9E25      	st         al, @0x629E <app_stream_state+0x4>
   51B50:	0DE0      	bra        +0xD <appDataClientHandler+0x29:0x51B5D[p]>
            }
            
            /* nesn must be tx.sn + tx.last_data_len */
            else if(app_stream_state.tx.status == stream_send_in_progress &&
   51B51:	0384      	cmp        al, #+0x3
   51B52:	0BF0      	bne        +0xB <appDataClientHandler+0x29:0x51B5D[p]>
   51B53:	6300      	**prefx    0x63
   51B54:	9F15      	ld         al, @0x629F <app_stream_state+0x5>
   51B55:	6300      	**prefx    0x63
   51B56:	9E35      	add        al, @0x629E <app_stream_state+0x4>
   51B57:	E181      	cmp        ah, @0xFFE1 <register al>
   51B58:	05F0      	bne        +0x5 <appDataClientHandler+0x29:0x51B5D[p]>
                    nesn == app_stream_state.tx.sn +
                                  app_stream_state.tx.last_data_len)
            {
                app_stream_state.tx.sn += app_stream_state.tx.last_data_len;
   51B59:	6300      	**prefx    0x63
   51B5A:	9E21      	st         ah, @0x629E <app_stream_state+0x4>
                /* If there is any stream packet pending, send it */
                handleCSRmeshDataStreamSendCfm(p_data_rcvd);
   51B5B:	E315      	ld         al, @0xFFE3 <register uxl>
   51B5C:	8B9C      	bsr        -0x75 <handleCSRmeshDataStreamSendCfm:0x51AE7[p]>

        default:
        break;
    }
    return CSR_MESH_RESULT_SUCCESS;
}
   51B5D:	0014      	ld         al, #+0x0
   51B5E:	FE0F      	leave      #-0x2

0x00051B5F <streamSendRetryTimer>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void streamSendRetryTimer(timer_id tid)
{
   51B5F:	F00B      	enter      #-0x10
    CSRMESH_DATA_STREAM_SEND_T send_param;
    if( tid == stream_send_retry_tid )
   51B60:	6200      	**prefx    0x62
   51B61:	9485      	cmp        al, @0x6194 <stream_send_retry_tid>
   51B62:	3EF0      	bne        +0x3E <streamSendRetryTimer+0x41:0x51BA0[p]>
    {
        stream_send_retry_tid = TIMER_INVALID;
   51B63:	0014      	ld         al, #+0x0
   51B64:	6200      	**prefx    0x62
   51B65:	9425      	st         al, @0x6194 <stream_send_retry_tid>
        stream_send_retry_count++;
   51B66:	6200      	**prefx    0x62
   51B67:	9615      	ld         al, @0x6196 <stream_send_retry_count>
   51B68:	0134      	add        al, #+0x1
   51B69:	6200      	**prefx    0x62
   51B6A:	9625      	st         al, @0x6196 <stream_send_retry_count>
        if( stream_send_retry_count < MAX_SEND_RETRIES )
   51B6B:	0384      	cmp        al, #+0x3
   51B6C:	2DF8      	bcc        +0x2D <streamSendRetryTimer+0x3A:0x51B99[p]>
        {
            MemCopy(send_param.streamoctets, &device_info[tx_stream_offset],
   51B6D:	6200      	**prefx    0x62
   51B6E:	9519      	ld         x, @0x6195 <tx_stream_offset>
   51B6F:	6200      	**prefx    0x62
   51B70:	9938      	add        x, #+0x6199
   51B71:	6300      	**prefx    0x63
   51B72:	9F15      	ld         al, @0x629F <app_stream_state+0x5>
   51B73:	E411      	ld         ah, @0xFFE4 <register uy>
   51B74:	0430      	add        ah, #+0x4
   51B75:	FD09      	bc2        
                                             app_stream_state.tx.last_data_len);
            send_param.streamoctets_len = app_stream_state.tx.last_data_len;
   51B76:	6300      	**prefx    0x63
   51B77:	9F15      	ld         al, @0x629F <app_stream_state+0x5>
   51B78:	0C27      	st         al, @(+0xC, y)
            send_param.streamsn = app_stream_state.tx.sn;
   51B79:	6300      	**prefx    0x63
   51B7A:	9E15      	ld         al, @0x629E <app_stream_state+0x4>
   51B7B:	0327      	st         al, @(+0x3, y)
                

            /* Send the next packet */
            DataStreamSend(CSR_MESH_DEFAULT_NETID, 
   51B7C:	6300      	**prefx    0x63
   51B7D:	9D15      	ld         al, @0x629D <app_stream_state+0x3>
   51B7E:	0D27      	st         al, @(+0xD, y)
   51B7F:	FD00      	**prefx    0xFD
   51B80:	7E9C      	bsr        -0x282 <AppGetCurrentTTL:0x518FE[p]>
   51B81:	0027      	st         al, @(0x0, y)
   51B82:	E415      	ld         al, @0xFFE4 <register uy>
   51B83:	0334      	add        al, #+0x3
   51B84:	0127      	st         al, @(+0x1, y)
   51B85:	0014      	ld         al, #+0x0
   51B86:	0D13      	ld         ah, @(+0xD, y)
   51B87:	5D00      	**prefx    0x5D
   51B88:	969C      	bsr        +0x5C96 <DataStreamSend:0x5781E[p]>
                                      app_stream_state.tx.dest_id,
                                      AppGetCurrentTTL(), &send_param);

            stream_send_retry_tid =  TimerCreate(STREAM_SEND_RETRY_TIME, TRUE,
   51B89:	0114      	ld         al, #+0x1
   51B8A:	0027      	st         al, @(0x0, y)
   51B8B:	1B00      	**prefx    0x1B
   51B8C:	5F14      	ld         al, #+0x1B5F
   51B8D:	0227      	st         al, @(+0x2, y)
   51B8E:	0514      	ld         al, #+0x5
   51B8F:	0127      	st         al, @(+0x1, y)
   51B90:	0710      	ld         ah, #+0x7
   51B91:	A100      	**prefx    0xA1
   51B92:	2014      	ld         al, #-0x5EE0
   51B93:	FC00      	**prefx    0xFC
   51B94:	D100      	**prefx    0xD1
   51B95:	999C      	bsr        -0x42F67 <TimerCreate:0xEC2E[p]>
   51B96:	6200      	**prefx    0x62
   51B97:	9425      	st         al, @0x6194 <stream_send_retry_tid>
   51B98:	08E0      	bra        +0x8 <streamSendRetryTimer+0x41:0x51BA0[p]>
                                                          streamSendRetryTimer);
        }
        else
        {
            stream_send_retry_count = 0;
   51B99:	0014      	ld         al, #+0x0
   51B9A:	6200      	**prefx    0x62
   51B9B:	9625      	st         al, @0x6196 <stream_send_retry_count>
            endStream();
   51B9C:	FF00      	**prefx    0xFF
   51B9D:	2E9C      	bsr        -0xD2 <endStream:0x51ACB[p]>
#ifdef ENABLE_WATCHDOG_MODEL
            WatchdogStart();
   51B9E:	0100      	**prefx    0x1
   51B9F:	589C      	bsr        +0x158 <WatchdogStart:0x51CF7[p]>
#endif /* ENABLE_WATCHDOG_MODEL */
        }
    }
}
   51BA0:	F00F      	leave      #-0x10

0x00051BA1 <startStream>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void startStream(uint16 dest_id)
{
   51BA1:	FA0B      	enter      #-0x6
   51BA2:	0327      	st         al, @(+0x3, y)
    CSRMESH_DATA_STREAM_FLUSH_T flush_param;
    app_stream_state.tx.dest_id = dest_id;
   51BA3:	6300      	**prefx    0x63
   51BA4:	9D18      	ld         x, #+0x629D
   51BA5:	0026      	st         al, @(0x0, x)

    /* Initialise the next expected sequence number to 0 */
    app_stream_state.tx.sn = 0;
   51BA6:	0014      	ld         al, #+0x0
   51BA7:	0126      	st         al, @(+0x1, x)
    
    app_stream_state.tx.status = stream_start_flush_sent;
   51BA8:	0214      	ld         al, #+0x2
   51BA9:	0326      	st         al, @(+0x3, x)
    app_stream_state.tx.last_data_len = 0;
   51BAA:	0014      	ld         al, #+0x0
   51BAB:	0226      	st         al, @(+0x2, x)

    /* Send flush to indicate start of stream */
    flush_param.streamsn = app_stream_state.tx.sn;
   51BAC:	0227      	st         al, @(+0x2, y)
    DataStreamFlush(CSR_MESH_DEFAULT_NETID, dest_id, 
   51BAD:	FD00      	**prefx    0xFD
   51BAE:	509C      	bsr        -0x2B0 <AppGetCurrentTTL:0x518FE[p]>
   51BAF:	0027      	st         al, @(0x0, y)
   51BB0:	E415      	ld         al, @0xFFE4 <register uy>
   51BB1:	0234      	add        al, #+0x2
   51BB2:	0127      	st         al, @(+0x1, y)
   51BB3:	0014      	ld         al, #+0x0
   51BB4:	0313      	ld         ah, @(+0x3, y)
   51BB5:	5D00      	**prefx    0x5D
   51BB6:	9D9C      	bsr        +0x5C9D <DataStreamFlush:0x57853[p]>
                    AppGetCurrentTTL(), &flush_param);
}
   51BB7:	FA0F      	leave      #-0x6

0x00051BB8 <appDataServerHandler>:
 *
 *---------------------------------------------------------------------------*/
static CSRmeshResult appDataServerHandler(CSRMESH_MODEL_EVENT_T event_code, 
                                          CSRMESH_EVENT_DATA_T* p_event,
                                          CsrUint16 length, void **state_data)
{
   51BB8:	F80B      	enter      #-0x8
    uint16 sn;
    uint16 send_ack_msg;
    uint16 b_use_msg = FALSE;

    switch(event_code)
   51BB9:	7184      	cmp        al, #+0x71
   51BBA:	6BF4      	beq        +0x6B <appDataServerHandler+0x6D:0x51C25[p]>
   51BBB:	7384      	cmp        al, #+0x73
   51BBC:	0100      	**prefx    0x1
   51BBD:	EEF4      	beq        +0xEE <appDataServerHandler+0xF3:0x51CAB[p]>
   51BBE:	7084      	cmp        al, #+0x70
   51BBF:	0100      	**prefx    0x1
   51BC0:	10F0      	bne        +0x110 <appDataServerHandler+0x118:0x51CD0[p]>
        case CSRMESH_DATA_STREAM_FLUSH:
        {
            CSRMESH_DATA_STREAM_FLUSH_T *p_flush_msg = 
                (CSRMESH_DATA_STREAM_FLUSH_T *)p_event->data;

            sn = p_flush_msg->streamsn;
   51BC1:	E019      	ld         x, @0xFFE0 <register ah>
   51BC2:	0916      	ld         al, @(+0x9, x)
   51BC3:	E119      	ld         x, @0xFFE1 <register al>
   51BC4:	0016      	ld         al, @(0x0, x)
   51BC5:	F825      	st         al, @0xFFF8 <(scratchpad)>

            /*  If the state is no-stream, update nesn and the sender ID */
            if( app_stream_state.rx.status == stream_receive_idle)
   51BC6:	6300      	**prefx    0x63
   51BC7:	9C15      	ld         al, @0x629C <app_stream_state+0x2>
   51BC8:	0184      	cmp        al, #+0x1
   51BC9:	16F0      	bne        +0x16 <appDataServerHandler+0x27:0x51BDF[p]>
                /* The stream end flush could have been re-transmitted. 
                 * Ack the message. Move to a new stream only if the sn or the 
                 * rx.src_id does not match
                 */
                send_ack_msg = TRUE;
                if( app_stream_state.rx.nesn != sn ||
   51BCA:	6300      	**prefx    0x63
   51BCB:	9B15      	ld         al, @0x629B <app_stream_state+0x1>
   51BCC:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   51BCD:	06F0      	bne        +0x6 <appDataServerHandler+0x1B:0x51BD3[p]>
   51BCE:	6300      	**prefx    0x63
   51BCF:	9A15      	ld         al, @0x629A <app_stream_state>
   51BD0:	E019      	ld         x, @0xFFE0 <register ah>
   51BD1:	0386      	cmp        al, @(+0x3, x)
   51BD2:	1EF4      	beq        +0x1E <appDataServerHandler+0x38:0x51BF0[p]>
                    app_stream_state.rx.src_id != p_event->src_id)
                {
                    app_stream_state.rx.status = stream_start_flush_received;
   51BD3:	0214      	ld         al, #+0x2
   51BD4:	6300      	**prefx    0x63
   51BD5:	9C25      	st         al, @0x629C <app_stream_state+0x2>
                    app_stream_state.rx.src_id = p_event->src_id;
   51BD6:	E019      	ld         x, @0xFFE0 <register ah>
   51BD7:	0312      	ld         ah, @(+0x3, x)
   51BD8:	6300      	**prefx    0x63
   51BD9:	9A21      	st         ah, @0x629A <app_stream_state>
                    app_stream_state.rx.nesn = sn;
   51BDA:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   51BDB:	6300      	**prefx    0x63
   51BDC:	9B21      	st         ah, @0x629B <app_stream_state+0x1>
   51BDD:	0114      	ld         al, #+0x1
   51BDE:	13E0      	bra        +0x13 <appDataServerHandler+0x39:0x51BF1[p]>
                    b_use_msg = TRUE;
                }
            }
            else if(app_stream_state.rx.status == stream_start_flush_received)
   51BDF:	0284      	cmp        al, #+0x2
   51BE0:	10F4      	beq        +0x10 <appDataServerHandler+0x38:0x51BF0[p]>
                if( app_stream_state.rx.src_id == p_event->src_id)
                {
                    send_ack_msg = TRUE;
                }
            }
            else if(app_stream_state.rx.status == stream_receive_in_progress)
   51BE1:	0384      	cmp        al, #+0x3
   51BE2:	0EF0      	bne        +0xE <appDataServerHandler+0x38:0x51BF0[p]>
            {
                /* Data stream already in progress. Check if the sn is equal to
                 * nesn and the sender is rx.src_id. Otherwise ignore flush
                 */
                if(p_event->src_id == app_stream_state.rx.src_id &&
   51BE3:	E019      	ld         x, @0xFFE0 <register ah>
   51BE4:	0316      	ld         al, @(+0x3, x)
   51BE5:	6300      	**prefx    0x63
   51BE6:	9A85      	cmp        al, @0x629A <app_stream_state>
   51BE7:	09F0      	bne        +0x9 <appDataServerHandler+0x38:0x51BF0[p]>
   51BE8:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   51BE9:	6300      	**prefx    0x63
   51BEA:	9B81      	cmp        ah, @0x629B <app_stream_state+0x1>
   51BEB:	05F0      	bne        +0x5 <appDataServerHandler+0x38:0x51BF0[p]>
                   sn == app_stream_state.rx.nesn )
                {
                    /* End of stream */
                    send_ack_msg = TRUE;
                    b_use_msg = TRUE;
                    app_stream_state.rx.status = stream_receive_idle;
   51BEC:	0114      	ld         al, #+0x1
   51BED:	6300      	**prefx    0x63
   51BEE:	9C25      	st         al, @0x629C <app_stream_state+0x2>
   51BEF:	02E0      	bra        +0x2 <appDataServerHandler+0x39:0x51BF1[p]>
   51BF0:	0014      	ld         al, #+0x0

            *state_data = NULL;
            if(send_ack_msg == TRUE)
            {
                /* Acknowledge the sender */
                *state_data = &app_stream_state.rx.nesn;
   51BF1:	6300      	**prefx    0x63
   51BF2:	9B10      	ld         ah, #+0x629B
   51BF3:	091B      	ld         x, @(+0x9, y)
   51BF4:	0022      	st         ah, @(0x0, x)
            }
            
            if( b_use_msg == TRUE)
   51BF5:	0184      	cmp        al, #+0x1
   51BF6:	0100      	**prefx    0x1
   51BF7:	D9F0      	bne        +0xD9 <appDataServerHandler+0x118:0x51CD0[p]>
 *
 *----------------------------------------------------------------------------*/
static void handleCSRmeshDataStreamFlushInd(
                                        CSRMESH_DATA_STREAM_FLUSH_T *p_event)
{
    rx_stream_offset = 0;
   51BF8:	0014      	ld         al, #+0x0
   51BF9:	6200      	**prefx    0x62
   51BFA:	9725      	st         al, @0x6197 <rx_stream_offset>

    if( rx_stream_in_progress == FALSE )
   51BFB:	6200      	**prefx    0x62
   51BFC:	9899      	tst        @0x6198 <rx_stream_in_progress>
   51BFD:	19F0      	bne        +0x19 <appDataServerHandler+0x5E:0x51C16[p]>
    {
#ifdef ENABLE_WATCHDOG_MODEL
        /* Stop Watchdog */
        WatchdogPause();
   51BFE:	0100      	**prefx    0x1
   51BFF:	D39C      	bsr        +0xD3 <WatchdogPause:0x51CD2[p]>
#endif /* ENABLE_WATCHDOG_MODEL */
        /* Start the stream timeout timer */
        TimerDelete(rx_stream_timeout_tid);
   51C00:	6300      	**prefx    0x63
   51C01:	A115      	ld         al, @0x62A1 <rx_stream_timeout_tid>
   51C02:	FC00      	**prefx    0xFC
   51C03:	D000      	**prefx    0xD0
   51C04:	1F9C      	bsr        -0x42FE1 <TimerDelete:0xEC23[p]>
        rx_stream_timeout_tid = TimerCreate(RX_STREAM_TIMEOUT, TRUE,
   51C05:	0118      	ld         x, #+0x1
   51C06:	002B      	st         x, @(0x0, y)
   51C07:	1B00      	**prefx    0x1B
   51C08:	BB10      	ld         ah, #+0x1ABB
   51C09:	0223      	st         ah, @(+0x2, y)
   51C0A:	0514      	ld         al, #+0x5
   51C0B:	0127      	st         al, @(+0x1, y)
   51C0C:	4C10      	ld         ah, #+0x4C
   51C0D:	4B00      	**prefx    0x4B
   51C0E:	4014      	ld         al, #+0x4B40
   51C0F:	FC00      	**prefx    0xFC
   51C10:	D000      	**prefx    0xD0
   51C11:	1D9C      	bsr        -0x42FE3 <TimerCreate:0xEC2E[p]>
   51C12:	6300      	**prefx    0x63
   51C13:	A125      	st         al, @0x62A1 <rx_stream_timeout_tid>
   51C14:	0100      	**prefx    0x1
   51C15:	BBE0      	bra        +0xBB <appDataServerHandler+0x118:0x51CD0[p]>
                                                        rxStreamTimeoutHandler);
    }
    else
    {
        /* End of stream */
        rx_stream_in_progress = FALSE;
   51C16:	0018      	ld         x, #+0x0
   51C17:	6200      	**prefx    0x62
   51C18:	9829      	st         x, @0x6198 <rx_stream_in_progress>
        TimerDelete(rx_stream_timeout_tid);
   51C19:	6300      	**prefx    0x63
   51C1A:	A115      	ld         al, @0x62A1 <rx_stream_timeout_tid>
   51C1B:	FC00      	**prefx    0xFC
   51C1C:	D000      	**prefx    0xD0
   51C1D:	069C      	bsr        -0x42FFA <TimerDelete:0xEC23[p]>
        rx_stream_timeout_tid = TIMER_INVALID;
   51C1E:	0010      	ld         ah, #+0x0
   51C1F:	6300      	**prefx    0x63
   51C20:	A121      	st         ah, @0x62A1 <rx_stream_timeout_tid>
#ifdef ENABLE_WATCHDOG_MODEL
        WatchdogStart();
   51C21:	0100      	**prefx    0x1
   51C22:	D59C      	bsr        +0xD5 <WatchdogStart:0x51CF7[p]>
   51C23:	0100      	**prefx    0x1
   51C24:	ACE0      	bra        +0xAC <appDataServerHandler+0x118:0x51CD0[p]>
        break;

        case CSRMESH_DATA_STREAM_SEND:
        {
            CSRMESH_DATA_STREAM_SEND_T *p_stream_msg =
                                (CSRMESH_DATA_STREAM_SEND_T *)p_event->data;
   51C25:	E019      	ld         x, @0xFFE0 <register ah>
   51C26:	091A      	ld         x, @(+0x9, x)
   51C27:	052B      	st         x, @(+0x5, y)

            /* Accept only if a data stream is received for an on-going 
             * stream from rx.src_id
             */
            
            if(p_event->src_id == app_stream_state.rx.src_id )
   51C28:	E019      	ld         x, @0xFFE0 <register ah>
   51C29:	0312      	ld         ah, @(+0x3, x)
   51C2A:	0423      	st         ah, @(+0x4, y)
   51C2B:	6300      	**prefx    0x63
   51C2C:	9A81      	cmp        ah, @0x629A <app_stream_state>
   51C2D:	7AF0      	bne        +0x7A <appDataServerHandler+0xEF:0x51CA7[p]>
            {
                app_stream_state.rx.status = stream_receive_in_progress;
   51C2E:	0310      	ld         ah, #+0x3
   51C2F:	6300      	**prefx    0x63
   51C30:	9C21      	st         ah, @0x629C <app_stream_state+0x2>
                sn = p_stream_msg->streamsn;
   51C31:	051B      	ld         x, @(+0x5, y)
   51C32:	0012      	ld         ah, @(0x0, x)

                if( sn == app_stream_state.rx.nesn )
   51C33:	6300      	**prefx    0x63
   51C34:	9B81      	cmp        ah, @0x629B <app_stream_state+0x1>
   51C35:	6FF0      	bne        +0x6F <appDataServerHandler+0xEC:0x51CA4[p]>
                {
                    /* Update nesn */
                    app_stream_state.rx.nesn += p_stream_msg->streamoctets_len;
   51C36:	0916      	ld         al, @(+0x9, x)
   51C37:	E035      	add        al, @0xFFE0 <register ah>
   51C38:	6300      	**prefx    0x63
   51C39:	9B25      	st         al, @0x629B <app_stream_state+0x1>
 *----------------------------------------------------------------------------*/
static void handleCSRmeshDataStreamDataInd(uint16 src_id, 
                                            CSRMESH_DATA_STREAM_SEND_T *p_event)
{
    /* Restart the stream timeout timer */
    TimerDelete(rx_stream_timeout_tid);
   51C3A:	6300      	**prefx    0x63
   51C3B:	A115      	ld         al, @0x62A1 <rx_stream_timeout_tid>
   51C3C:	FC00      	**prefx    0xFC
   51C3D:	D000      	**prefx    0xD0
   51C3E:	E59C      	bsr        -0x4301B <TimerDelete:0xEC23[p]>
    rx_stream_timeout_tid = TimerCreate(RX_STREAM_TIMEOUT, TRUE,
   51C3F:	0110      	ld         ah, #+0x1
   51C40:	0023      	st         ah, @(0x0, y)
   51C41:	1B00      	**prefx    0x1B
   51C42:	BB14      	ld         al, #+0x1ABB
   51C43:	0227      	st         al, @(+0x2, y)
   51C44:	0518      	ld         x, #+0x5
   51C45:	012B      	st         x, @(+0x1, y)
   51C46:	4C10      	ld         ah, #+0x4C
   51C47:	4B00      	**prefx    0x4B
   51C48:	4014      	ld         al, #+0x4B40
   51C49:	FC00      	**prefx    0xFC
   51C4A:	D000      	**prefx    0xD0
   51C4B:	E39C      	bsr        -0x4301D <TimerCreate:0xEC2E[p]>
   51C4C:	6300      	**prefx    0x63
   51C4D:	A125      	st         al, @0x62A1 <rx_stream_timeout_tid>
                                                        rxStreamTimeoutHandler);

    /* Set stream_in_progress flag to TRUE */
    rx_stream_in_progress = TRUE;
   51C4E:	0110      	ld         ah, #+0x1
   51C4F:	6200      	**prefx    0x62
   51C50:	9821      	st         ah, @0x6198 <rx_stream_in_progress>

    if( rx_stream_offset == 0 )
   51C51:	6200      	**prefx    0x62
   51C52:	9711      	ld         ah, @0x6197 <rx_stream_offset>
   51C53:	39F0      	bne        +0x39 <appDataServerHandler+0xD4:0x51C8C[p]>
    {
        /* If the stream offset is 0. The data[0] will be the CODE */
        switch(p_event->streamoctets[0])
   51C54:	051B      	ld         x, @(+0x5, y)
   51C55:	0116      	ld         al, @(+0x1, x)
   51C56:	0384      	cmp        al, #+0x3
   51C57:	1FF4      	beq        +0x1F <appDataServerHandler+0xBE:0x51C76[p]>
   51C58:	0484      	cmp        al, #+0x4
   51C59:	0EF4      	beq        +0xE <appDataServerHandler+0xAF:0x51C67[p]>
   51C5A:	0184      	cmp        al, #+0x1
   51C5B:	49F0      	bne        +0x49 <appDataServerHandler+0xEC:0x51CA4[p]>
        {
            case CSR_DEVICE_INFO_REQ:
            {
#ifdef ENABLE_WATCHDOG_MODEL
                /* Stop Watchdog */
                WatchdogPause();
   51C5C:	769C      	bsr        +0x76 <WatchdogPause:0x51CD2[p]>
#endif /* ENABLE_WATCHDOG_MODEL */

                /* Set the source device ID as the stream target device */
                tx_stream_offset = 0;
   51C5D:	0010      	ld         ah, #+0x0
   51C5E:	6200      	**prefx    0x62
   51C5F:	9521      	st         ah, @0x6195 <tx_stream_offset>
                /* Set the stream code to CSR_DEVICE_INFO_RSP */
                device_info[0] = CSR_DEVICE_INFO_RSP;
   51C60:	0214      	ld         al, #+0x2
   51C61:	6200      	**prefx    0x62
   51C62:	9925      	st         al, @0x6199 <device_info>
                /* Start the stream */
                startStream(src_id);
   51C63:	0417      	ld         al, @(+0x4, y)
   51C64:	FF00      	**prefx    0xFF
   51C65:	3C9C      	bsr        -0xC4 <startStream:0x51BA1[p]>
   51C66:	3EE0      	bra        +0x3E <appDataServerHandler+0xEC:0x51CA4[p]>
            break;

            case CSR_DEVICE_INFO_RESET:
            {
                /* Reset the device info */
                device_info_length = sizeof(DEVICE_INFO_STRING);
   51C67:	7518      	ld         x, #+0x75
   51C68:	6300      	**prefx    0x63
   51C69:	9929      	st         x, @0x6299 <device_info_length>
                device_info[0] = CSR_DEVICE_INFO_RSP;
   51C6A:	0210      	ld         ah, #+0x2
   51C6B:	6200      	**prefx    0x62
   51C6C:	9921      	st         ah, @0x6199 <device_info>
                device_info[1] = device_info_length;
   51C6D:	6200      	**prefx    0x62
   51C6E:	9A29      	st         x, @0x619A <device_info+0x1>
                MemCopy(&device_info[2], DEVICE_INFO_STRING,
   51C6F:	7514      	ld         al, #+0x75
   51C70:	6200      	**prefx    0x62
   51C71:	9B10      	ld         ah, #+0x619B
   51C72:	A000      	**prefx    0xA0
   51C73:	4D18      	ld         x, #-0x5FB3
   51C74:	FD09      	bc2        
   51C75:	2FE0      	bra        +0x2F <appDataServerHandler+0xEC:0x51CA4[p]>
            case CSR_DEVICE_INFO_SET:
            {
                /* CSR_DEVICE_INFO_SET is received. Store the code, length and
                 * the data into the device_info array in the format received
                 */
                current_stream_code = CSR_DEVICE_INFO_SET;
   51C76:	0314      	ld         al, #+0x3
   51C77:	6300      	**prefx    0x63
   51C78:	A225      	st         al, @0x62A2 <current_stream_code>
                device_info_length = p_event->streamoctets[1];
   51C79:	051B      	ld         x, @(+0x5, y)
   51C7A:	021A      	ld         x, @(+0x2, x)
   51C7B:	6300      	**prefx    0x63
   51C7C:	9929      	st         x, @0x6299 <device_info_length>
                MemCopy(device_info, p_event->streamoctets,
   51C7D:	0513      	ld         ah, @(+0x5, y)
   51C7E:	0130      	add        ah, #+0x1
   51C7F:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   51C80:	051B      	ld         x, @(+0x5, y)
   51C81:	0916      	ld         al, @(+0x9, x)
   51C82:	6200      	**prefx    0x62
   51C83:	9910      	ld         ah, #+0x6199
   51C84:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   51C85:	FD09      	bc2        
                                                    p_event->streamoctets_len);
                rx_stream_offset = p_event->streamoctets_len;
   51C86:	051B      	ld         x, @(+0x5, y)
   51C87:	091A      	ld         x, @(+0x9, x)
   51C88:	6200      	**prefx    0x62
   51C89:	9729      	st         x, @0x6197 <rx_stream_offset>
#ifdef ENABLE_WATCHDOG_MODEL
                /* Stop Watchdog */
                WatchdogPause();
   51C8A:	489C      	bsr        +0x48 <WatchdogPause:0x51CD2[p]>
   51C8B:	19E0      	bra        +0x19 <appDataServerHandler+0xEC:0x51CA4[p]>
            break;
        }
    }
    else
    {
        if( current_stream_code == CSR_DEVICE_INFO_SET &&
   51C8C:	6300      	**prefx    0x63
   51C8D:	A215      	ld         al, @0x62A2 <current_stream_code>
   51C8E:	0384      	cmp        al, #+0x3
   51C8F:	15F0      	bne        +0x15 <appDataServerHandler+0xEC:0x51CA4[p]>
   51C90:	051B      	ld         x, @(+0x5, y)
   51C91:	091A      	ld         x, @(+0x9, x)
   51C92:	F829      	st         x, @0xFFF8 <(scratchpad)>
   51C93:	E315      	ld         al, @0xFFE3 <register uxl>
   51C94:	E035      	add        al, @0xFFE0 <register ah>
   51C95:	0100      	**prefx    0x1
   51C96:	0084      	cmp        al, #+0x100
   51C97:	0DF8      	bcc        +0xD <appDataServerHandler+0xEC:0x51CA4[p]>
            rx_stream_offset + p_event->streamoctets_len < sizeof(device_info))
        {
            MemCopy(&device_info[rx_stream_offset], p_event->streamoctets,
   51C98:	6200      	**prefx    0x62
   51C99:	9930      	add        ah, #+0x6199
   51C9A:	051B      	ld         x, @(+0x5, y)
   51C9B:	0138      	add        x, #+0x1
   51C9C:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   51C9D:	FD09      	bc2        
                                                    p_event->streamoctets_len);
            rx_stream_offset += p_event->streamoctets_len;
   51C9E:	6200      	**prefx    0x62
   51C9F:	9715      	ld         al, @0x6197 <rx_stream_offset>
   51CA0:	051B      	ld         x, @(+0x5, y)
   51CA1:	0936      	add        al, @(+0x9, x)
   51CA2:	6200      	**prefx    0x62
   51CA3:	9725      	st         al, @0x6197 <rx_stream_offset>
                    handleCSRmeshDataStreamDataInd(p_event->src_id,
                                                   p_stream_msg);
                }

                /* Acknowledge the sender */
                *state_data = &app_stream_state.rx.nesn;
   51CA4:	6300      	**prefx    0x63
   51CA5:	9B10      	ld         ah, #+0x629B
   51CA6:	02E0      	bra        +0x2 <appDataServerHandler+0xF0:0x51CA8[p]>
            {
                /* A stream transfer is ongoing with another device. Or 
                 * a Flush to start a stream was not received.
                 * Ignore the data stream send.
                 */
                *state_data = NULL;
   51CA7:	0010      	ld         ah, #+0x0
   51CA8:	091B      	ld         x, @(+0x9, y)
   51CA9:	0022      	st         ah, @(0x0, x)
   51CAA:	26E0      	bra        +0x26 <appDataServerHandler+0x118:0x51CD0[p]>
        /* Received a single block of data */
        case CSRMESH_DATA_BLOCK_SEND:
        {
            CSRMESH_DATA_BLOCK_SEND_T *p_block_send =
                (CSRMESH_DATA_BLOCK_SEND_T *)p_event->data;
            handleCSRmeshDataBlockInd(p_event->src_id, p_block_send);
   51CAB:	E019      	ld         x, @0xFFE0 <register ah>
   51CAC:	031A      	ld         x, @(+0x3, x)
   51CAD:	032B      	st         x, @(+0x3, y)
 *
 *----------------------------------------------------------------------------*/
static void handleCSRmeshDataBlockInd(uint16 src_id, 
                                            CSRMESH_DATA_BLOCK_SEND_T *p_event)
{
    switch(p_event->datagramoctets[0])
   51CAE:	E019      	ld         x, @0xFFE0 <register ah>
   51CAF:	0916      	ld         al, @(+0x9, x)
   51CB0:	E119      	ld         x, @0xFFE1 <register al>
   51CB1:	0012      	ld         ah, @(0x0, x)
   51CB2:	0180      	cmp        ah, #+0x1
   51CB3:	04F4      	beq        +0x4 <appDataServerHandler+0xFF:0x51CB7[p]>
   51CB4:	0480      	cmp        ah, #+0x4
   51CB5:	1BF0      	bne        +0x1B <appDataServerHandler+0x118:0x51CD0[p]>
   51CB6:	0CE0      	bra        +0xC <appDataServerHandler+0x10A:0x51CC2[p]>
    {
        case CSR_DEVICE_INFO_REQ:
        {
#ifdef ENABLE_WATCHDOG_MODEL
            /* Stop Watchdog */
            WatchdogPause();
   51CB7:	1B9C      	bsr        +0x1B <WatchdogPause:0x51CD2[p]>
#endif /* ENABLE_WATCHDOG_MODEL */

            /* Set the source device ID as the stream target device */
            tx_stream_offset = 0;
   51CB8:	0010      	ld         ah, #+0x0
   51CB9:	6200      	**prefx    0x62
   51CBA:	9521      	st         ah, @0x6195 <tx_stream_offset>
            /* Set the opcode to CSR_DEVICE_INFO_RSP */
            device_info[0] = CSR_DEVICE_INFO_RSP;
   51CBB:	0214      	ld         al, #+0x2
   51CBC:	6200      	**prefx    0x62
   51CBD:	9925      	st         al, @0x6199 <device_info>

            /* start sending the data */
            startStream(src_id);
   51CBE:	0317      	ld         al, @(+0x3, y)
   51CBF:	FF00      	**prefx    0xFF
   51CC0:	E19C      	bsr        -0x11F <startStream:0x51BA1[p]>
   51CC1:	0FE0      	bra        +0xF <appDataServerHandler+0x118:0x51CD0[p]>
        break;

        case CSR_DEVICE_INFO_RESET:
        {
            /* Reset the device info */
            device_info_length = sizeof(DEVICE_INFO_STRING);
   51CC2:	7518      	ld         x, #+0x75
   51CC3:	6300      	**prefx    0x63
   51CC4:	9929      	st         x, @0x6299 <device_info_length>
            device_info[0] = CSR_DEVICE_INFO_RSP;
   51CC5:	0210      	ld         ah, #+0x2
   51CC6:	6200      	**prefx    0x62
   51CC7:	9921      	st         ah, @0x6199 <device_info>
            device_info[1] = device_info_length;
   51CC8:	6200      	**prefx    0x62
   51CC9:	9A29      	st         x, @0x619A <device_info+0x1>
            MemCopy(&device_info[2], DEVICE_INFO_STRING,
   51CCA:	7514      	ld         al, #+0x75
   51CCB:	6200      	**prefx    0x62
   51CCC:	9B10      	ld         ah, #+0x619B
   51CCD:	A000      	**prefx    0xA0
   51CCE:	4D18      	ld         x, #-0x5FB3
   51CCF:	FD09      	bc2        

        default:
        break;
    }
    return CSR_MESH_RESULT_SUCCESS;
}
   51CD0:	0014      	ld         al, #+0x0
   51CD1:	F80F      	leave      #-0x8

0x00051CD2 <WatchdogPause>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void WatchdogPause(void)
{
   51CD2:	FE0B      	enter      #-0x2
    p_wdog_hdlr_data->wdog_state = app_wdog_paused;
   51CD3:	6300      	**prefx    0x63
   51CD4:	A319      	ld         x, @0x62A3 <p_wdog_hdlr_data>
   51CD5:	0114      	ld         al, #+0x1
   51CD6:	0726      	st         al, @(+0x7, x)
#ifdef ENABLE_DUTY_CYCLE_CHANGE_SUPPORT
    EnableHighDutyScanMode(TRUE);
#endif
    DEBUG_STR("WATCHDOG PAUSED : LISTENING in high scan duty mode\r\n");
}
   51CD7:	001B      	ld         x, @(0x0, y)
   51CD8:	023C      	add        y, #+0x2
 *---------------------------------------------------------------------------*/
extern void WatchdogPause(void)
{
    p_wdog_hdlr_data->wdog_state = app_wdog_paused;
#ifdef ENABLE_DUTY_CYCLE_CHANGE_SUPPORT
    EnableHighDutyScanMode(TRUE);
   51CD9:	1F00      	**prefx    0x1F
   51CDA:	E0E0      	bra        +0x1EE0 <EnableHighDutyScanMode:0x53BBA[p]>

0x00051CDB <WatchdogStop>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void WatchdogStop(void)
{
   51CDB:	FE0B      	enter      #-0x2
    TimerDelete(p_wdog_hdlr_data->second_tid);
   51CDC:	6300      	**prefx    0x63
   51CDD:	A319      	ld         x, @0x62A3 <p_wdog_hdlr_data>
   51CDE:	0016      	ld         al, @(0x0, x)
   51CDF:	FC00      	**prefx    0xFC
   51CE0:	CF00      	**prefx    0xCF
   51CE1:	429C      	bsr        -0x430BE <TimerDelete:0xEC23[p]>
    p_wdog_hdlr_data->second_tid   = TIMER_INVALID;
   51CE2:	6300      	**prefx    0x63
   51CE3:	A319      	ld         x, @0x62A3 <p_wdog_hdlr_data>
   51CE4:	0014      	ld         al, #+0x0
   51CE5:	0026      	st         al, @(0x0, x)
    p_wdog_hdlr_data->second_count = 0;
   51CE6:	0126      	st         al, @(+0x1, x)
   51CE7:	0226      	st         al, @(+0x2, x)
    p_wdog_hdlr_data->wdog_state = app_wdog_stopped;
   51CE8:	0726      	st         al, @(+0x7, x)
}
   51CE9:	FE0F      	leave      #-0x2

0x00051CEA <WatchdogModelDataInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void WatchdogModelDataInit(WATCHDOG_HANDLER_DATA_T* wdog_handler_data)
{
   51CEA:	FE0B      	enter      #-0x2
    if(wdog_handler_data != NULL)
   51CEB:	E199      	tst        @0xFFE1 <register al>
   51CEC:	03F4      	beq        +0x3 <WatchdogModelDataInit+0x5:0x51CEF[p]>
    {
        p_wdog_hdlr_data = wdog_handler_data;
   51CED:	6300      	**prefx    0x63
   51CEE:	A325      	st         al, @0x62A3 <p_wdog_hdlr_data>
    }

    WatchdogStop();
   51CEF:	EC9C      	bsr        -0x14 <WatchdogStop:0x51CDB[p]>

    p_wdog_hdlr_data->interval.activeaftertime = DEFAULT_WDOG_ACTIVE_AFTER;
   51CF0:	6300      	**prefx    0x63
   51CF1:	A319      	ld         x, @0x62A3 <p_wdog_hdlr_data>
   51CF2:	0114      	ld         al, #+0x1
   51CF3:	0426      	st         al, @(+0x4, x)
    p_wdog_hdlr_data->interval.interval     = DEFAULT_WDOG_INTERVAL;
   51CF4:	0514      	ld         al, #+0x5
   51CF5:	0326      	st         al, @(+0x3, x)
}
   51CF6:	FE0F      	leave      #-0x2

0x00051CF7 <WatchdogStart>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void WatchdogStart(void)
{
   51CF7:	FA0B      	enter      #-0x6
    if (app_wdog_stopped == p_wdog_hdlr_data->wdog_state)
   51CF8:	6300      	**prefx    0x63
   51CF9:	A319      	ld         x, @0x62A3 <p_wdog_hdlr_data>
   51CFA:	079A      	tst        @(+0x7, x)
   51CFB:	17F0      	bne        +0x17 <WatchdogStart+0x1B:0x51D12[p]>
    {
        /* Delete timer just to make sure things work properly
         * if start is called multiple times.
         */
        TimerDelete(p_wdog_hdlr_data->second_tid);
   51CFC:	0016      	ld         al, @(0x0, x)
   51CFD:	FC00      	**prefx    0xFC
   51CFE:	CF00      	**prefx    0xCF
   51CFF:	249C      	bsr        -0x430DC <TimerDelete:0xEC23[p]>

        /* Start the interval timer. */
        p_wdog_hdlr_data->second_tid = TimerCreate(SECOND, TRUE,
   51D00:	6300      	**prefx    0x63
   51D01:	A315      	ld         al, @0x62A3 <p_wdog_hdlr_data>
   51D02:	0327      	st         al, @(+0x3, y)
   51D03:	0118      	ld         x, #+0x1
   51D04:	002B      	st         x, @(0x0, y)
   51D05:	1D00      	**prefx    0x1D
   51D06:	1714      	ld         al, #+0x1D17
   51D07:	0227      	st         al, @(+0x2, y)
   51D08:	0518      	ld         x, #+0x5
   51D09:	012B      	st         x, @(+0x1, y)
   51D0A:	0F10      	ld         ah, #+0xF
   51D0B:	4200      	**prefx    0x42
   51D0C:	4014      	ld         al, #+0x4240
   51D0D:	FC00      	**prefx    0xFC
   51D0E:	CF00      	**prefx    0xCF
   51D0F:	1F9C      	bsr        -0x430E1 <TimerCreate:0xEC2E[p]>
   51D10:	031B      	ld         x, @(+0x3, y)
   51D11:	0026      	st         al, @(0x0, x)
                                               wdogIntervalTimeoutHandler);
    }

    /* Set State to Running. */
    p_wdog_hdlr_data->wdog_state = app_wdog_running;
   51D12:	6300      	**prefx    0x63
   51D13:	A319      	ld         x, @0x62A3 <p_wdog_hdlr_data>
   51D14:	0214      	ld         al, #+0x2
   51D15:	0726      	st         al, @(+0x7, x)
    DEBUG_STR("WATCHDOG : RUNNING STATE\r\n");
}
   51D16:	FA0F      	leave      #-0x6

0x00051D17 <wdogIntervalTimeoutHandler>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void wdogIntervalTimeoutHandler(timer_id tid)
{
   51D17:	ED0B      	enter      #-0x13
    CSRMESH_WATCHDOG_MESSAGE_T wdog_msg;

    if (tid == p_wdog_hdlr_data->second_tid)
   51D18:	6300      	**prefx    0x63
   51D19:	A311      	ld         ah, @0x62A3 <p_wdog_hdlr_data>
   51D1A:	1023      	st         ah, @(+0x10, y)
   51D1B:	E019      	ld         x, @0xFFE0 <register ah>
   51D1C:	0086      	cmp        al, @(0x0, x)
   51D1D:	63F0      	bne        +0x63 <wdogIntervalTimeoutHandler+0x69:0x51D80[p]>
    {
        /* Increment Seconds Counter. */
        p_wdog_hdlr_data->second_count++;
   51D1E:	0216      	ld         al, @(+0x2, x)
   51D1F:	0112      	ld         ah, @(+0x1, x)
   51D20:	0134      	add        al, #+0x1
   51D21:	0040      	addc       ah, #+0x0
   51D22:	0226      	st         al, @(+0x2, x)
   51D23:	0122      	st         ah, @(+0x1, x)

        /* Start timer for next second. */
        p_wdog_hdlr_data->second_tid = TimerCreate(SECOND, TRUE,
   51D24:	0110      	ld         ah, #+0x1
   51D25:	0023      	st         ah, @(0x0, y)
   51D26:	1D00      	**prefx    0x1D
   51D27:	1714      	ld         al, #+0x1D17
   51D28:	0227      	st         al, @(+0x2, y)
   51D29:	0518      	ld         x, #+0x5
   51D2A:	012B      	st         x, @(+0x1, y)
   51D2B:	0F10      	ld         ah, #+0xF
   51D2C:	4200      	**prefx    0x42
   51D2D:	4014      	ld         al, #+0x4240
   51D2E:	FC00      	**prefx    0xFC
   51D2F:	CF00      	**prefx    0xCF
   51D30:	FE9C      	bsr        -0x43102 <TimerCreate:0xEC2E[p]>
   51D31:	101B      	ld         x, @(+0x10, y)
   51D32:	0026      	st         al, @(0x0, x)
                                                 wdogIntervalTimeoutHandler);

        /* Check if the interval number of seconds elapsed. */
        if (p_wdog_hdlr_data->second_count
   51D33:	6300      	**prefx    0x63
   51D34:	A319      	ld         x, @0x62A3 <p_wdog_hdlr_data>
   51D35:	0112      	ld         ah, @(+0x1, x)
   51D36:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   51D37:	0216      	ld         al, @(+0x2, x)
   51D38:	F925      	st         al, @0xFFF9 <(scratchpad)>
   51D39:	0312      	ld         ah, @(+0x3, x)
   51D3A:	0014      	ld         al, #+0x0
   51D3B:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   51D3C:	04F0      	bne        +0x4 <wdogIntervalTimeoutHandler+0x29:0x51D40[p]>
   51D3D:	F981      	cmp        ah, @0xFFF9 <(scratchpad)>
   51D3E:	022C      	bcz        +0x2 <wdogIntervalTimeoutHandler+0x29:0x51D40[p]>
   51D3F:	34E0      	bra        +0x34 <wdogIntervalTimeoutHandler+0x5C:0x51D73[p]>
                                    >= p_wdog_hdlr_data->interval.interval)
        {
            /* Send Watch dog Message if wdog state is running. */
            if (app_wdog_running == p_wdog_hdlr_data->wdog_state)
   51D40:	0716      	ld         al, @(+0x7, x)
   51D41:	0284      	cmp        al, #+0x2
   51D42:	3EF0      	bne        +0x3E <wdogIntervalTimeoutHandler+0x69:0x51D80[p]>
            {
                uint8 idx;
                /* Generate random message and random length */
                wdog_msg.randomdata_len = 
   51D43:	FB00      	**prefx    0xFB
   51D44:	6600      	**prefx    0x66
   51D45:	259C      	bsr        -0x499DB <Random16:0x836A[p]>
   51D46:	0010      	ld         ah, #+0x0
   51D47:	0009      	**unsigned
   51D48:	0994      	udiv       #0x9
   51D49:	0D23      	st         ah, @(+0xD, y)
   51D4A:	0014      	ld         al, #+0x0
   51D4B:	0AE0      	bra        +0xA <wdogIntervalTimeoutHandler+0x3E:0x51D55[p]>
                               ((uint16)Random16())%sizeof(wdog_msg.randomdata);
                for (idx = 0; idx < wdog_msg.randomdata_len; idx++)
                {
                    wdog_msg.randomdata[idx] = (Random16()) & 0xFF;
   51D4C:	FB00      	**prefx    0xFB
   51D4D:	6600      	**prefx    0x66
   51D4E:	1C9C      	bsr        -0x499E4 <Random16:0x836A[p]>
   51D4F:	0E1B      	ld         x, @(+0xE, y)
   51D50:	E439      	add        x, @0xFFE4 <register uy>
   51D51:	0100      	**prefx    0x1
   51D52:	FFC4      	and        al, #0xFF
   51D53:	0326      	st         al, @(+0x3, x)
   51D54:	0E17      	ld         al, @(+0xE, y)
   51D55:	E119      	ld         x, @0xFFE1 <register al>
   51D56:	0138      	add        x, #+0x1
   51D57:	0E2B      	st         x, @(+0xE, y)
            {
                uint8 idx;
                /* Generate random message and random length */
                wdog_msg.randomdata_len = 
                               ((uint16)Random16())%sizeof(wdog_msg.randomdata);
                for (idx = 0; idx < wdog_msg.randomdata_len; idx++)
   51D58:	0D87      	cmp        al, @(+0xD, y)
   51D59:	F3FC      	bcs        -0xD <wdogIntervalTimeoutHandler+0x35:0x51D4C[p]>
                {
                    wdog_msg.randomdata[idx] = (Random16()) & 0xFF;
                }

                /* Reset the interval counter. */
                p_wdog_hdlr_data->second_count = 0;
   51D5A:	6300      	**prefx    0x63
   51D5B:	A319      	ld         x, @0x62A3 <p_wdog_hdlr_data>
   51D5C:	0010      	ld         ah, #+0x0
   51D5D:	0122      	st         ah, @(+0x1, x)
   51D5E:	0222      	st         ah, @(+0x2, x)

                /* Start Listening if the active after interval is non-zero. */
                if (p_wdog_hdlr_data->interval.activeaftertime)
   51D5F:	049A      	tst        @(+0x4, x)
   51D60:	04F4      	beq        +0x4 <wdogIntervalTimeoutHandler+0x4D:0x51D64[p]>
                {
#ifdef ENABLE_DUTY_CYCLE_CHANGE_SUPPORT
                    /* Start Listening to CSRmesh messages. */
                    EnableHighDutyScanMode(TRUE);
   51D61:	0114      	ld         al, #+0x1
   51D62:	1E00      	**prefx    0x1E
   51D63:	579C      	bsr        +0x1E57 <EnableHighDutyScanMode:0x53BBA[p]>
                    DEBUG_STR("WATCHDOG: LISTENING in high scan duty mode\r\n");
#endif
                }

                WatchdogMessage(CSR_MESH_DEFAULT_NETID, 
   51D64:	6300      	**prefx    0x63
   51D65:	A319      	ld         x, @0x62A3 <p_wdog_hdlr_data>
   51D66:	061A      	ld         x, @(+0x6, x)
   51D67:	0F2B      	st         x, @(+0xF, y)
   51D68:	FC00      	**prefx    0xFC
   51D69:	959C      	bsr        -0x46B <AppGetCurrentTTL:0x518FE[p]>
   51D6A:	0027      	st         al, @(0x0, y)
   51D6B:	E415      	ld         al, @0xFFE4 <register uy>
   51D6C:	0334      	add        al, #+0x3
   51D6D:	0127      	st         al, @(+0x1, y)
   51D6E:	0014      	ld         al, #+0x0
   51D6F:	0F13      	ld         ah, @(+0xF, y)
   51D70:	5700      	**prefx    0x57
   51D71:	FF9C      	bsr        +0x56FF <WatchdogMessage:0x57470[p]>
   51D72:	0EE0      	bra        +0xE <wdogIntervalTimeoutHandler+0x69:0x51D80[p]>
                                p_wdog_hdlr_data->groups[0], 
                                AppGetCurrentTTL(), 
                                &wdog_msg);
            }
        }
        else if (p_wdog_hdlr_data->second_count == 
   51D73:	0416      	ld         al, @(+0x4, x)
   51D74:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   51D75:	0080      	cmp        ah, #+0x0
   51D76:	0AF0      	bne        +0xA <wdogIntervalTimeoutHandler+0x69:0x51D80[p]>
   51D77:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   51D78:	E181      	cmp        ah, @0xFFE1 <register al>
   51D79:	07F0      	bne        +0x7 <wdogIntervalTimeoutHandler+0x69:0x51D80[p]>
                                    p_wdog_hdlr_data->interval.activeaftertime)
        {
            /* If active_after duration number of seconds elapsed
             * and watchdog is running.
             */
            if (app_wdog_running == p_wdog_hdlr_data->wdog_state)
   51D7A:	0716      	ld         al, @(+0x7, x)
   51D7B:	0284      	cmp        al, #+0x2
   51D7C:	04F0      	bne        +0x4 <wdogIntervalTimeoutHandler+0x69:0x51D80[p]>
            {
#ifdef ENABLE_DUTY_CYCLE_CHANGE_SUPPORT
                EnableHighDutyScanMode(FALSE); 
   51D7D:	0014      	ld         al, #+0x0
   51D7E:	1E00      	**prefx    0x1E
   51D7F:	3B9C      	bsr        +0x1E3B <EnableHighDutyScanMode:0x53BBA[p]>
#endif
                DEBUG_STR("WATCHDOG: LISTENING in low scan duty mode\r\n");
            }
        }
    }
}
   51D80:	ED0F      	leave      #-0x13

0x00051D81 <WriteWatchdogModelDataOntoNVM>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void WriteWatchdogModelDataOntoNVM(void)
{
   51D81:	FD0B      	enter      #-0x3
    Nvm_Write(&p_wdog_hdlr_data->interval.interval, 
   51D82:	6300      	**prefx    0x63
   51D83:	A315      	ld         al, @0x62A3 <p_wdog_hdlr_data>
   51D84:	0334      	add        al, #+0x3
   51D85:	0100      	**prefx    0x1
   51D86:	3E18      	ld         x, #+0x13E
   51D87:	002B      	st         x, @(0x0, y)
   51D88:	0110      	ld         ah, #+0x1
   51D89:	EB00      	**prefx    0xEB
   51D8A:	BB9C      	bsr        -0x1545 <Nvm_Write:0x50845[p]>
              sizeof(CsrUint16),
              NVM_WDOG_DATA_OFFSET + NVM_OFFSET_WDOG_INTERVAL);

    Nvm_Write(&p_wdog_hdlr_data->interval.activeaftertime,
   51D8B:	6300      	**prefx    0x63
   51D8C:	A315      	ld         al, @0x62A3 <p_wdog_hdlr_data>
   51D8D:	0434      	add        al, #+0x4
   51D8E:	0100      	**prefx    0x1
   51D8F:	3F18      	ld         x, #+0x13F
   51D90:	002B      	st         x, @(0x0, y)
   51D91:	0110      	ld         ah, #+0x1
   51D92:	EB00      	**prefx    0xEB
   51D93:	B29C      	bsr        -0x154E <Nvm_Write:0x50845[p]>
              sizeof(CsrUint16), 
              NVM_WDOG_DATA_OFFSET + NVM_OFFSET_WDOG_ACTIVE_AFTER);
}
   51D94:	FD0F      	leave      #-0x3

0x00051D95 <watchdogModelEventHandler>:
 *---------------------------------------------------------------------------*/
static CSRmeshResult watchdogModelEventHandler(CSRMESH_MODEL_EVENT_T event,
                                               CSRMESH_EVENT_DATA_T* msg,
                                               CsrUint16 len,
                                               void **state_data)
{
   51D95:	FD0B      	enter      #-0x3
   51D96:	E019      	ld         x, @0xFFE0 <register ah>
    bool update_lastetag = FALSE;
    switch (event)
   51D97:	E199      	tst        @0xFFE1 <register al>
   51D98:	1DF4      	beq        +0x1D <watchdogModelEventHandler+0x20:0x51DB5[p]>
   51D99:	0184      	cmp        al, #+0x1
   51D9A:	44F0      	bne        +0x44 <watchdogModelEventHandler+0x49:0x51DDE[p]>
    {
        case CSRMESH_WATCHDOG_SET_INTERVAL:
        {
            CSRMESH_WATCHDOG_SET_INTERVAL_T *p_msg = 
                                  (CSRMESH_WATCHDOG_SET_INTERVAL_T *)msg->data;
   51D9B:	0912      	ld         ah, @(+0x9, x)

            /* Check if interval is not zero and interval is greater
             * than active after duration.
             */
            if ((p_msg->interval > 0) && 
   51D9C:	E019      	ld         x, @0xFFE0 <register ah>
   51D9D:	0016      	ld         al, @(0x0, x)
   51D9E:	0EF4      	beq        +0xE <watchdogModelEventHandler+0x17:0x51DAC[p]>
   51D9F:	0186      	cmp        al, @(+0x1, x)
   51DA0:	0CFC      	bcs        +0xC <watchdogModelEventHandler+0x17:0x51DAC[p]>
                (p_msg->interval >= p_msg->activeaftertime))
            {
                p_wdog_hdlr_data->interval.interval = p_msg->interval;
   51DA1:	6300      	**prefx    0x63
   51DA2:	A319      	ld         x, @0x62A3 <p_wdog_hdlr_data>
   51DA3:	F829      	st         x, @0xFFF8 <(scratchpad)>
   51DA4:	0326      	st         al, @(+0x3, x)
                p_wdog_hdlr_data->interval.activeaftertime = 
   51DA5:	E019      	ld         x, @0xFFE0 <register ah>
   51DA6:	0112      	ld         ah, @(+0x1, x)
   51DA7:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   51DA8:	0422      	st         ah, @(+0x4, x)
                                                      p_msg->activeaftertime;

                WriteWatchdogModelDataOntoNVM();
   51DA9:	D89C      	bsr        -0x28 <WriteWatchdogModelDataOntoNVM:0x51D81[p]>
   51DAA:	0110      	ld         ah, #+0x1
   51DAB:	02E0      	bra        +0x2 <watchdogModelEventHandler+0x18:0x51DAD[p]>
   51DAC:	0010      	ld         ah, #+0x0

                update_lastetag = TRUE;
            }

            /* Check if state_data pointer is NULL. */
            if (state_data)
   51DAD:	049B      	tst        @(+0x4, y)
   51DAE:	31F4      	beq        +0x31 <watchdogModelEventHandler+0x4A:0x51DDF[p]>
            {
                *state_data = (void *)&p_wdog_hdlr_data->interval;
   51DAF:	6300      	**prefx    0x63
   51DB0:	A315      	ld         al, @0x62A3 <p_wdog_hdlr_data>
   51DB1:	0334      	add        al, #+0x3
   51DB2:	041B      	ld         x, @(+0x4, y)
   51DB3:	0026      	st         al, @(0x0, x)
   51DB4:	2BE0      	bra        +0x2B <watchdogModelEventHandler+0x4A:0x51DDF[p]>
        break;

        case CSRMESH_WATCHDOG_MESSAGE:
        {
            CSRMESH_WATCHDOG_MESSAGE_T *p_msg = 
                                  (CSRMESH_WATCHDOG_MESSAGE_T *)msg->data;
   51DB5:	091A      	ld         x, @(+0x9, x)

            if(p_msg->rspsize != 0 && p_msg->rspsize <= (MAX_WATCHDOG_RSP_SIZE + 1))
   51DB6:	0016      	ld         al, @(0x0, x)
   51DB7:	FF34      	add        al, #-0x1
   51DB8:	0A84      	cmp        al, #+0xA
   51DB9:	1FF8      	bcc        +0x1F <watchdogModelEventHandler+0x43:0x51DD8[p]>
            {
                uint16 idx;

                rsp_wdog_msg.rspsize = 0;
   51DBA:	0010      	ld         ah, #+0x0
   51DBB:	6300      	**prefx    0x63
   51DBC:	A421      	st         ah, @0x62A4 <rsp_wdog_msg>
                rsp_wdog_msg.randomdata_len = p_msg->rspsize-1;
   51DBD:	0016      	ld         al, @(0x0, x)
   51DBE:	FF34      	add        al, #-0x1
   51DBF:	6300      	**prefx    0x63
   51DC0:	AE25      	st         al, @0x62AE <rsp_wdog_msg+0xA>
   51DC1:	0023      	st         ah, @(0x0, y)
   51DC2:	0BE0      	bra        +0xB <watchdogModelEventHandler+0x38:0x51DCD[p]>

                for (idx = 0; idx < rsp_wdog_msg.randomdata_len; idx++)
                {
                    rsp_wdog_msg.randomdata[idx] = (Random16()) & 0xFF;
   51DC3:	FB00      	**prefx    0xFB
   51DC4:	6600      	**prefx    0x66
   51DC5:	A59C      	bsr        -0x49A5B <Random16:0x836A[p]>
   51DC6:	0100      	**prefx    0x1
   51DC7:	FFC4      	and        al, #0xFF
   51DC8:	001B      	ld         x, @(0x0, y)
   51DC9:	6300      	**prefx    0x63
   51DCA:	A526      	st         al, @(+0x62A5, x)
                uint16 idx;

                rsp_wdog_msg.rspsize = 0;
                rsp_wdog_msg.randomdata_len = p_msg->rspsize-1;

                for (idx = 0; idx < rsp_wdog_msg.randomdata_len; idx++)
   51DCB:	0138      	add        x, #+0x1
   51DCC:	002B      	st         x, @(0x0, y)
   51DCD:	0013      	ld         ah, @(0x0, y)
   51DCE:	6300      	**prefx    0x63
   51DCF:	AE81      	cmp        ah, @0x62AE <rsp_wdog_msg+0xA>
   51DD0:	F3FC      	bcs        -0xD <watchdogModelEventHandler+0x2E:0x51DC3[p]>
                {
                    rsp_wdog_msg.randomdata[idx] = (Random16()) & 0xFF;
                }

                /* Check if state_data pointer is NULL. */
                if (state_data)
   51DD1:	049B      	tst        @(+0x4, y)
   51DD2:	0CF4      	beq        +0xC <watchdogModelEventHandler+0x49:0x51DDE[p]>
                {
                    *state_data = (void *)&rsp_wdog_msg;
   51DD3:	6300      	**prefx    0x63
   51DD4:	A410      	ld         ah, #+0x62A4
   51DD5:	041B      	ld         x, @(+0x4, y)
   51DD6:	0022      	st         ah, @(0x0, x)
   51DD7:	07E0      	bra        +0x7 <watchdogModelEventHandler+0x49:0x51DDE[p]>
                }
            }
            else
            {
                if (state_data)
   51DD8:	049B      	tst        @(+0x4, y)
   51DD9:	05F4      	beq        +0x5 <watchdogModelEventHandler+0x49:0x51DDE[p]>
                {
                    *state_data = NULL;
   51DDA:	0010      	ld         ah, #+0x0
   51DDB:	041B      	ld         x, @(+0x4, y)
   51DDC:	0022      	st         ah, @(0x0, x)
   51DDD:	02E0      	bra        +0x2 <watchdogModelEventHandler+0x4A:0x51DDF[p]>
   51DDE:	0010      	ld         ah, #+0x0
        default:
        break;
    }

    return update_lastetag;
}
   51DDF:	E015      	ld         al, @0xFFE0 <register ah>
   51DE0:	FD0F      	leave      #-0x3

0x00051DE1 <ReadWatchdogModelDataFromNVM>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void ReadWatchdogModelDataFromNVM(void)
{
   51DE1:	FD0B      	enter      #-0x3
    Nvm_Read(&p_wdog_hdlr_data->interval.interval, sizeof(CsrUint16),
   51DE2:	6300      	**prefx    0x63
   51DE3:	A315      	ld         al, @0x62A3 <p_wdog_hdlr_data>
   51DE4:	0334      	add        al, #+0x3
   51DE5:	0100      	**prefx    0x1
   51DE6:	3E18      	ld         x, #+0x13E
   51DE7:	002B      	st         x, @(0x0, y)
   51DE8:	0110      	ld         ah, #+0x1
   51DE9:	EA00      	**prefx    0xEA
   51DEA:	729C      	bsr        -0x158E <Nvm_Read:0x5085C[p]>
                NVM_WDOG_DATA_OFFSET + NVM_OFFSET_WDOG_INTERVAL);

    Nvm_Read(&p_wdog_hdlr_data->interval.activeaftertime, sizeof(CsrUint16), 
   51DEB:	6300      	**prefx    0x63
   51DEC:	A315      	ld         al, @0x62A3 <p_wdog_hdlr_data>
   51DED:	0434      	add        al, #+0x4
   51DEE:	0100      	**prefx    0x1
   51DEF:	3F18      	ld         x, #+0x13F
   51DF0:	002B      	st         x, @(0x0, y)
   51DF1:	0110      	ld         ah, #+0x1
   51DF2:	EA00      	**prefx    0xEA
   51DF3:	699C      	bsr        -0x1597 <Nvm_Read:0x5085C[p]>
                NVM_WDOG_DATA_OFFSET + NVM_OFFSET_WDOG_ACTIVE_AFTER);
}
   51DF4:	FD0F      	leave      #-0x3

0x00051DF5 <WatchdogModelHandlerInit>:
 *
 *---------------------------------------------------------------------------*/
extern void WatchdogModelHandlerInit(CsrUint8 nw_id, 
                                     uint16 *groups,
                                     uint16 num_groups)
{
   51DF5:	FA0B      	enter      #-0x6
   51DF6:	0323      	st         ah, @(+0x3, y)
    uint16 index;

    WatchdogModelInit(nw_id, groups, num_groups, watchdogModelEventHandler);
   51DF7:	0613      	ld         ah, @(+0x6, y)
   51DF8:	0023      	st         ah, @(0x0, y)
   51DF9:	1E00      	**prefx    0x1E
   51DFA:	9518      	ld         x, #+0x1D95
   51DFB:	022B      	st         x, @(+0x2, y)
   51DFC:	0510      	ld         ah, #+0x5
   51DFD:	0123      	st         ah, @(+0x1, y)
   51DFE:	0313      	ld         ah, @(+0x3, y)
   51DFF:	5700      	**prefx    0x57
   51E00:	9F9C      	bsr        +0x569F <WatchdogModelInit:0x5749F[p]>
   51E01:	6300      	**prefx    0x63
   51E02:	A315      	ld         al, @0x62A3 <p_wdog_hdlr_data>
   51E03:	F925      	st         al, @0xFFF9 <(scratchpad)>
   51E04:	0014      	ld         al, #+0x0
   51E05:	07E0      	bra        +0x7 <WatchdogModelHandlerInit+0x17:0x51E0C[p]>

    for(index = 0; index < num_groups; index ++)
    {
        p_wdog_hdlr_data->groups[index] = groups[index];
   51E06:	031B      	ld         x, @(+0x3, y)
   51E07:	E139      	add        x, @0xFFE1 <register al>
   51E08:	0012      	ld         ah, @(0x0, x)
   51E09:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   51E0A:	0522      	st         ah, @(+0x5, x)
{
    uint16 index;

    WatchdogModelInit(nw_id, groups, num_groups, watchdogModelEventHandler);

    for(index = 0; index < num_groups; index ++)
   51E0B:	0134      	add        al, #+0x1
   51E0C:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   51E0D:	0138      	add        x, #+0x1
   51E0E:	F929      	st         x, @0xFFF9 <(scratchpad)>
   51E0F:	0687      	cmp        al, @(+0x6, y)
   51E10:	F6FC      	bcs        -0xA <WatchdogModelHandlerInit+0x11:0x51E06[p]>
    {
        p_wdog_hdlr_data->groups[index] = groups[index];
    }
    WatchdogModelDataInit(NULL);
   51E11:	0014      	ld         al, #+0x0
   51E12:	FF00      	**prefx    0xFF
   51E13:	D79C      	bsr        -0x129 <WatchdogModelDataInit:0x51CEA[p]>
}
   51E14:	FA0F      	leave      #-0x6

0x00051E15 <ReportPanic>:
 *
 *---------------------------------------------------------------------------*/
extern void ReportPanic(app_panic_code panic_code)
{
    /* Raise panic */
    Panic(panic_code);
   51E15:	FC00      	**prefx    0xFC
   51E16:	9E00      	**prefx    0x9E
   51E17:	45E0      	bra        -0x461BB <Panic:0xBC5C[p]>

0x00051E18 <InitialiseGattData>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void InitialiseGattData(void)
{
   51E18:	FE0B      	enter      #-0x2
    /* Reset the device id and bond id */
    gatt_data.device_id = CM_INVALID_DEVICE_ID;
   51E19:	6300      	**prefx    0x63
   51E1A:	1D18      	ld         x, #+0x631D
   51E1B:	FF14      	ld         al, #-0x1
   51E1C:	0026      	st         al, @(0x0, x)

    /* Reset the connection parameter variables. */
    gatt_data.conn_interval = 0;
   51E1D:	0014      	ld         al, #+0x0
   51E1E:	0226      	st         al, @(+0x2, x)
    gatt_data.conn_latency = 0;
   51E1F:	0326      	st         al, @(+0x3, x)
    gatt_data.conn_timeout = 0;
   51E20:	0426      	st         al, @(+0x4, x)

    gatt_data.paired = FALSE;
   51E21:	0126      	st         al, @(+0x1, x)
    
     /* Clear upgrade data */
#ifdef GAIA_OTAU_SUPPORT
    gatt_data.otau_in_progress = FALSE;
   51E22:	0626      	st         al, @(+0x6, x)
    gatt_data.conn_timeout_tid = TIMER_INVALID; 
#endif
#if defined(CSR101x_A05) && defined(OTAU_BOOTLOADER)
    gatt_data.ota_reset_required = FALSE;
#endif
}
   51E23:	FE0F      	leave      #-0x2

0x00051E24 <GetConnectedDeviceId>:
 *      Nothing
 *----------------------------------------------------------------------------*/
extern uint16 GetConnectedDeviceId(void)
{
    return gatt_data.device_id;
}
   51E24:	6300      	**prefx    0x63
   51E25:	1D15      	ld         al, @0x631D <gatt_data>
   51E26:	00E2      	bra        0x0, x

0x00051E27 <IsGaiaOtauInProgress>:
 *      True/False
 *----------------------------------------------------------------------------*/
extern bool IsGaiaOtauInProgress(void)
{
   return gatt_data.otau_in_progress;
}
   51E27:	6300      	**prefx    0x63
   51E28:	2315      	ld         al, @0x6323 <gatt_data+0x6>
   51E29:	00E2      	bra        0x0, x

0x00051E2A <GaiaOtauUpgradedApplication>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void GaiaOtauUpgradedApplication(bool upgraded_application)
{
   gatt_data.otau_upgraded_application = upgraded_application;
   51E2A:	6300      	**prefx    0x63
   51E2B:	2225      	st         al, @0x6322 <gatt_data+0x5>
}
   51E2C:	00E2      	bra        0x0, x

0x00051E2D <IsGaiaOtauUpgradedApplication>:
 *      True/False
 *----------------------------------------------------------------------------*/
extern bool IsGaiaOtauUpgradedApplication(void)
{
   return gatt_data.otau_upgraded_application;
}
   51E2D:	6300      	**prefx    0x63
   51E2E:	2215      	ld         al, @0x6322 <gatt_data+0x5>
   51E2F:	00E2      	bra        0x0, x

0x00051E30 <GetConnInterval>:
 *
 *---------------------------------------------------------------------------*/
extern uint16 GetConnInterval(void)
{
    return gatt_data.conn_interval;
}
   51E30:	6300      	**prefx    0x63
   51E31:	1F15      	ld         al, @0x631F <gatt_data+0x2>
   51E32:	00E2      	bra        0x0, x

0x00051E33 <GaiaOtauInProgress>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void GaiaOtauInProgress(bool in_progress)
{
   51E33:	FB0B      	enter      #-0x5
   51E34:	0227      	st         al, @(+0x2, y)
    if(in_progress)
   51E35:	12F4      	beq        +0x12 <GaiaOtauInProgress+0x14:0x51E47[p]>
    {
        CM_REQ_RADIO_EVENT_T cm_radio_event;
        CSRmeshStop(); 
   51E36:	2300      	**prefx    0x23
   51E37:	5E9C      	bsr        +0x235E <CSRmeshStop:0x54195[p]>
        CSRSchedEnableListening(FALSE);
   51E38:	0014      	ld         al, #+0x0
   51E39:	3A00      	**prefx    0x3A
   51E3A:	249C      	bsr        +0x3A24 <CSRSchedEnableListening:0x5585E[p]>
#ifndef CSR101x_A05
        /* Disable Early Wakeup events */
        CMEnableEarlyWakeup(GetConnectedDeviceId(), 0);
   51E3B:	E99C      	bsr        -0x17 <GetConnectedDeviceId:0x51E24[p]>
   51E3C:	0010      	ld         ah, #+0x0
   51E3D:	EB00      	**prefx    0xEB
   51E3E:	4C9C      	bsr        -0x14B4 <CMEnableEarlyWakeup:0x5098A[p]>
#endif
        /* Disable radio event notifications */
        cm_radio_event.device_id = GetConnectedDeviceId();
   51E3F:	E59C      	bsr        -0x1B <GetConnectedDeviceId:0x51E24[p]>
   51E40:	0027      	st         al, @(0x0, y)
        cm_radio_event.event_type = radio_event_none;
   51E41:	0014      	ld         al, #+0x0
   51E42:	0127      	st         al, @(+0x1, y)
        CMConfigureRadioEvent(&cm_radio_event);
   51E43:	E415      	ld         al, @0xFFE4 <register uy>
   51E44:	EB00      	**prefx    0xEB
   51E45:	569C      	bsr        -0x14AA <CMConfigureRadioEvent:0x5099B[p]>
   51E46:	06E0      	bra        +0x6 <GaiaOtauInProgress+0x19:0x51E4C[p]>
    }
    else
    {
        CSRmeshStart();
   51E47:	2300      	**prefx    0x23
   51E48:	659C      	bsr        +0x2365 <CSRmeshStart:0x541AD[p]>
        CSRSchedEnableListening(TRUE);
   51E49:	0114      	ld         al, #+0x1
   51E4A:	3A00      	**prefx    0x3A
   51E4B:	139C      	bsr        +0x3A13 <CSRSchedEnableListening:0x5585E[p]>
    }
   gatt_data.otau_in_progress = in_progress;
   51E4C:	0217      	ld         al, @(+0x2, y)
   51E4D:	6300      	**prefx    0x63
   51E4E:	2325      	st         al, @0x6323 <gatt_data+0x6>
}
   51E4F:	FB0F      	leave      #-0x5

0x00051E50 <AppRequestConnParamUpdate>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void AppRequestConnParamUpdate(device_handle_id device_id)
{
   51E50:	F40B      	enter      #-0xC
   51E51:	0927      	st         al, @(+0x9, y)
    ble_con_params new_params, new_params1;

#ifdef GAIA_OTAU_SUPPORT
    /* Stop connection parameter update if there was one pending */
    StopConnParamsUpdate();
   51E52:	E900      	**prefx    0xE9
   51E53:	269C      	bsr        -0x16DA <StopConnParamsUpdate:0x50779[p]>
    
    if (gatt_data.otau_in_progress && !gatt_data.otau_upgraded_application)
   51E54:	6300      	**prefx    0x63
   51E55:	2399      	tst        @0x6323 <gatt_data+0x6>
   51E56:	1DF4      	beq        +0x1D <AppRequestConnParamUpdate+0x23:0x51E73[p]>
   51E57:	6300      	**prefx    0x63
   51E58:	2299      	tst        @0x6322 <gatt_data+0x5>
   51E59:	1AF0      	bne        +0x1A <AppRequestConnParamUpdate+0x23:0x51E73[p]>
    {
        new_params.con_min_interval = OTAU_MIN_CON_INTERVAL;
   51E5A:	0614      	ld         al, #+0x6
   51E5B:	0127      	st         al, @(+0x1, y)
        new_params.con_max_interval = OTAU_MAX_CON_INTERVAL;
   51E5C:	0814      	ld         al, #+0x8
   51E5D:	0227      	st         al, @(+0x2, y)
        new_params.con_slave_latency = OTAU_SLAVE_LATENCY;
   51E5E:	0014      	ld         al, #+0x0
   51E5F:	0327      	st         al, @(+0x3, y)
        new_params.con_super_timeout = OTAU_SUPERVISION_TIMEOUT;
   51E60:	6414      	ld         al, #+0x64
   51E61:	0427      	st         al, @(+0x4, y)
        
        new_params1.con_min_interval = OTAU_APPLE_MIN_CON_INTERVAL;
   51E62:	1014      	ld         al, #+0x10
   51E63:	0527      	st         al, @(+0x5, y)
        new_params1.con_max_interval = OTAU_APPLE_MAX_CON_INTERVAL;
   51E64:	2014      	ld         al, #+0x20
   51E65:	0627      	st         al, @(+0x6, y)
        new_params1.con_slave_latency = OTAU_APPLE_SLAVE_LATENCY;
   51E66:	0014      	ld         al, #+0x0
   51E67:	0727      	st         al, @(+0x7, y)
        new_params1.con_super_timeout = OTAU_APPLE_SUPERVISION_TIMEOUT;
   51E68:	6414      	ld         al, #+0x64
   51E69:	0827      	st         al, @(+0x8, y)
        
        /* Request the new parameters */
        RequestConnParamsUpdateOnce(device_id, &new_params, &new_params1);
   51E6A:	E415      	ld         al, @0xFFE4 <register uy>
   51E6B:	0534      	add        al, #+0x5
   51E6C:	0027      	st         al, @(0x0, y)
   51E6D:	0917      	ld         al, @(+0x9, y)
   51E6E:	E411      	ld         ah, @0xFFE4 <register uy>
   51E6F:	0130      	add        ah, #+0x1
   51E70:	E900      	**prefx    0xE9
   51E71:	609C      	bsr        -0x16A0 <RequestConnParamsUpdateOnce:0x507D1[p]>
   51E72:	1BE0      	bra        +0x1B <AppRequestConnParamUpdate+0x3D:0x51E8D[p]>
    }
    else
#endif
    {
        new_params.con_min_interval = PREFERRED_MIN_CON_INTERVAL;
   51E73:	4814      	ld         al, #+0x48
   51E74:	0127      	st         al, @(+0x1, y)
        new_params.con_max_interval = PREFERRED_MAX_CON_INTERVAL;
   51E75:	6014      	ld         al, #+0x60
   51E76:	0227      	st         al, @(+0x2, y)
        new_params.con_slave_latency = PREFERRED_SLAVE_LATENCY;
   51E77:	0014      	ld         al, #+0x0
   51E78:	0327      	st         al, @(+0x3, y)
        new_params.con_super_timeout = PREFERRED_SUPERVISION_TIMEOUT;
   51E79:	0200      	**prefx    0x2
   51E7A:	5814      	ld         al, #+0x258
   51E7B:	0427      	st         al, @(+0x4, y)
        
        new_params1.con_min_interval = APPLE_MIN_CON_INTERVAL;
   51E7C:	4814      	ld         al, #+0x48
   51E7D:	0527      	st         al, @(+0x5, y)
        new_params1.con_max_interval = APPLE_MAX_CON_INTERVAL;
   51E7E:	6014      	ld         al, #+0x60
   51E7F:	0627      	st         al, @(+0x6, y)
        new_params1.con_slave_latency = APPLE_SLAVE_LATENCY;
   51E80:	0014      	ld         al, #+0x0
   51E81:	0727      	st         al, @(+0x7, y)
        new_params1.con_super_timeout = APPLE_SUPERVISION_TIMEOUT;
   51E82:	0200      	**prefx    0x2
   51E83:	5814      	ld         al, #+0x258
   51E84:	0827      	st         al, @(+0x8, y)
        
        RequestConnParamsUpdate(device_id, &new_params, &new_params1); 
   51E85:	E415      	ld         al, @0xFFE4 <register uy>
   51E86:	0534      	add        al, #+0x5
   51E87:	0027      	st         al, @(0x0, y)
   51E88:	0917      	ld         al, @(+0x9, y)
   51E89:	E411      	ld         ah, @0xFFE4 <register uy>
   51E8A:	0130      	add        ah, #+0x1
   51E8B:	E900      	**prefx    0xE9
   51E8C:	6C9C      	bsr        -0x1694 <RequestConnParamsUpdate:0x507F8[p]>
    }
}
   51E8D:	F40F      	leave      #-0xC

0x00051E8E <AppSetState>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void AppSetState(app_state new_state)
{
   51E8E:	FD0B      	enter      #-0x3
   51E8F:	0027      	st         al, @(0x0, y)
    /* Check if the new state to be set is not the same as the present state
     * of the application.
     */
    app_state old_state = state;
   51E90:	6300      	**prefx    0x63
   51E91:	2815      	ld         al, @0x6328 <state>

    if (old_state != new_state)
   51E92:	0087      	cmp        al, @(0x0, y)
   51E93:	1AF4      	beq        +0x1A <AppSetState+0x1F:0x51EAD[p]>
    {
        /* Handle exiting old state */
        switch (old_state)
   51E94:	0184      	cmp        al, #+0x1
   51E95:	06F4      	beq        +0x6 <AppSetState+0xD:0x51E9B[p]>
   51E96:	0384      	cmp        al, #+0x3
   51E97:	06F0      	bne        +0x6 <AppSetState+0xF:0x51E9D[p]>
                 */

                /* Initialise the application data and services
                 * data structure while exiting Disconnecting state.
                 */
                AppDataInit();
   51E98:	1C00      	**prefx    0x1C
   51E99:	009C      	bsr        +0x1C00 <AppDataInit:0x53A99[p]>
   51E9A:	03E0      	bra        +0x3 <AppSetState+0xF:0x51E9D[p]>
            case app_state_advertising:
                /* Common things to do whenever application exits
                 * APP_*_ADVERTISING state.
                 */
                /* Stop on-going advertisements */
                GattStopAdverts();
   51E9B:	0200      	**prefx    0x2
   51E9C:	809C      	bsr        +0x180 <GattStopAdverts:0x5201C[p]>
                /* Nothing to do */
            break;
        }

        /* Set new state */
        state = new_state;
   51E9D:	0017      	ld         al, @(0x0, y)
   51E9E:	6300      	**prefx    0x63
   51E9F:	2825      	st         al, @0x6328 <state>

        /* Handle entering new state */
        switch (new_state)
   51EA0:	0184      	cmp        al, #+0x1
   51EA1:	04F4      	beq        +0x4 <AppSetState+0x17:0x51EA5[p]>
   51EA2:	0384      	cmp        al, #+0x3
   51EA3:	0AF0      	bne        +0xA <AppSetState+0x1F:0x51EAD[p]>
   51EA4:	05E0      	bra        +0x5 <AppSetState+0x1B:0x51EA9[p]>
        {
            case app_state_advertising:
            {
                GattTriggerConnectableAdverts(NULL);
   51EA5:	0014      	ld         al, #+0x0
   51EA6:	0200      	**prefx    0x2
   51EA7:	4E9C      	bsr        +0x24E <GattTriggerConnectableAdverts:0x520F5[p]>
   51EA8:	05E0      	bra        +0x5 <AppSetState+0x1F:0x51EAD[p]>
                DEBUG_STR("\r\nConnected");
            }
            break;

            case app_state_disconnecting:
                CMDisconnect(GetConnectedDeviceId());
   51EA9:	FF00      	**prefx    0xFF
   51EAA:	7A9C      	bsr        -0x86 <GetConnectedDeviceId:0x51E24[p]>
   51EAB:	EB00      	**prefx    0xEB
   51EAC:	679C      	bsr        -0x1499 <CMDisconnect:0x50A13[p]>

            default:
            break;
        }
    }
}
   51EAD:	FD0F      	leave      #-0x3

0x00051EAE <AppCMInit>:
 *
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
extern void AppCMInit(bool nvm_fresh, uint16* nvm_offset)
{
   51EAE:	F00B      	enter      #-0x10
 *----------------------------------------------------------------------------*/
static void getCmInitParams(CM_INIT_PARAMS_T *init_params, bool nvm_fresh,
                                uint16 *nvm_offset)
{
    /* Application Callback pointer */
    init_params->cm_app_handler        = &g_cm_app_handler;
   51EAF:	6100      	**prefx    0x61
   51EB0:	B918      	ld         x, #+0x60B9
   51EB1:	002B      	st         x, @(0x0, y)

    /* Connection Information */
    init_params->conn_info              = g_conn_info;
   51EB2:	6300      	**prefx    0x63
   51EB3:	CF18      	ld         x, #+0x62CF
   51EB4:	012B      	st         x, @(+0x1, y)
    init_params->max_connections        = MAX_CONNECTIONS;
   51EB5:	0118      	ld         x, #+0x1
   51EB6:	022B      	st         x, @(+0x2, y)

    /* Bonded Device List */
    init_params->bonded_devices         = g_bonded_devices;
   51EB7:	6300      	**prefx    0x63
   51EB8:	DF18      	ld         x, #+0x62DF
   51EB9:	032B      	st         x, @(+0x3, y)
    init_params->max_bonded_devices     = MAX_PAIRED_DEVICES;
   51EBA:	0118      	ld         x, #+0x1
   51EBB:	042B      	st         x, @(+0x4, y)
    init_params->diversifier            = DIVERSIFIER;    
   51EBC:	0018      	ld         x, #+0x0
   51EBD:	092B      	st         x, @(+0x9, y)
    /* Client Handlers and Service list */
#ifdef GAIA_OTAU_RELAY_SUPPORT
    init_params->client_info            = g_client_info;
    init_params->max_client_services    = MAX_CLIENT_SERVICES;
#else
    init_params->client_info            = NULL;
   51EBE:	052B      	st         x, @(+0x5, y)
    init_params->max_client_services    = 0;
   51EBF:	062B      	st         x, @(+0x6, y)
#endif
    
    /* Server Handlers and Service */
    init_params->server_info            = &g_server_info[0];
   51EC0:	6300      	**prefx    0x63
   51EC1:	0D18      	ld         x, #+0x630D
   51EC2:	072B      	st         x, @(+0x7, y)
    init_params->max_server_services    = MAX_SERVER_SERVICES;
   51EC3:	0418      	ld         x, #+0x4
   51EC4:	082B      	st         x, @(+0x8, y)

    /* NVM start offset */
    init_params->nvm_start_fresh        = nvm_fresh;
   51EC5:	0C27      	st         al, @(+0xC, y)
    init_params->nvm_offset             = nvm_offset;
   51EC6:	0D23      	st         ah, @(+0xD, y)

    /* Get the gatt database */
    init_params->gatt_db = GattGetDatabase(&init_params->db_length);
   51EC7:	E415      	ld         al, @0xFFE4 <register uy>
   51EC8:	0B34      	add        al, #+0xB
   51EC9:	E800      	**prefx    0xE8
   51ECA:	AC9C      	bsr        -0x1854 <GattGetDatabase:0x50676[p]>
   51ECB:	0A27      	st         al, @(+0xA, y)
    getCmInitParams(&init_params, nvm_fresh, nvm_offset);
    
    /* Initialize the connection manager. Wait for the event CM_INIT_CFM before 
     * accessing the CM procedures.
     */
    CMInit(&init_params);
   51ECC:	E415      	ld         al, @0xFFE4 <register uy>
   51ECD:	EB00      	**prefx    0xEB
   51ECE:	539C      	bsr        -0x14AD <CMInit:0x50A21[p]>
}
   51ECF:	F00F      	leave      #-0x10

0x00051ED0 <handleConnNotify>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleConnNotify(CM_CONNECTION_NOTIFY_T *cm_event_data)
{
   51ED0:	EA0B      	enter      #-0x16
   51ED1:	1327      	st         al, @(+0x13, y)
    CM_REQ_RADIO_EVENT_T cm_radio_event;
#ifndef DISABLE_BEARER_SETTINGS
    CSR_MESH_TRANSMIT_STATE_T bearer_tx_state;
#endif /* DISABLE_BEARER_SETTINGS */

    if(cm_event_data->result == cm_conn_res_success)
   51ED2:	E119      	ld         x, @0xFFE1 <register al>
   51ED3:	0116      	ld         al, @(+0x1, x)
   51ED4:	52F0      	bne        +0x52 <handleConnNotify+0x56:0x51F26[p]>
    {
        CM_DEV_CONN_PARAM_T conn_params;

        gatt_data.device_id = cm_event_data->device_id;
   51ED5:	0016      	ld         al, @(0x0, x)
   51ED6:	6300      	**prefx    0x63
   51ED7:	1D25      	st         al, @0x631D <gatt_data>
#ifdef GAIA_OTAU_RELAY_SUPPORT
        StopScanning(TRUE);
#endif

        /* Get the connection parameters */
        CMGetDevConnParam(cm_event_data->device_id, &conn_params);
   51ED8:	E411      	ld         ah, @0xFFE4 <register uy>
   51ED9:	0430      	add        ah, #+0x4
   51EDA:	EB00      	**prefx    0xEB
   51EDB:	CC9C      	bsr        -0x1534 <CMGetDevConnParam:0x509A7[p]>

        gatt_data.conn_interval =   conn_params.conn_interval;
   51EDC:	0417      	ld         al, @(+0x4, y)
   51EDD:	6300      	**prefx    0x63
   51EDE:	1F25      	st         al, @0x631F <gatt_data+0x2>
        gatt_data.conn_latency  =   conn_params.conn_latency;
   51EDF:	051B      	ld         x, @(+0x5, y)
   51EE0:	6300      	**prefx    0x63
   51EE1:	2029      	st         x, @0x6320 <gatt_data+0x3>
        gatt_data.conn_timeout  =   conn_params.supervision_timeout;
   51EE2:	061B      	ld         x, @(+0x6, y)
   51EE3:	6300      	**prefx    0x63
   51EE4:	2129      	st         x, @0x6321 <gatt_data+0x4>

        /* Inform CSRmesh that we are connected now */
        gatt_event_data.conn_interval = conn_params.conn_interval;
   51EE5:	6300      	**prefx    0x63
   51EE6:	2625      	st         al, @0x6326 <gatt_event_data+0x2>
        gatt_event_data.is_gatt_bearer_ready = TRUE;
   51EE7:	0114      	ld         al, #+0x1
   51EE8:	6300      	**prefx    0x63
   51EE9:	2525      	st         al, @0x6325 <gatt_event_data+0x1>
        gatt_event_data.cid = CMGetConnId(cm_event_data->device_id);
   51EEA:	131B      	ld         x, @(+0x13, y)
   51EEB:	0016      	ld         al, @(0x0, x)
   51EEC:	EE00      	**prefx    0xEE
   51EED:	1E9C      	bsr        -0x11E2 <CMGetConnId:0x50D0B[p]>
   51EEE:	6300      	**prefx    0x63
   51EEF:	2425      	st         al, @0x6324 <gatt_event_data>

        CSRSchedNotifyGattEvent(CSR_SCHED_GATT_STATE_CHANGE_EVENT, 
   51EF0:	0014      	ld         al, #+0x0
   51EF1:	0027      	st         al, @(0x0, y)
   51EF2:	0127      	st         al, @(+0x1, y)
   51EF3:	0114      	ld         al, #+0x1
   51EF4:	6300      	**prefx    0x63
   51EF5:	2410      	ld         ah, #+0x6324
   51EF6:	3D00      	**prefx    0x3D
   51EF7:	879C      	bsr        +0x3C87 <CSRSchedNotifyGattEvent:0x55B7E[p]>

#ifndef CSR101x_A05
        /* The scheduler requires an early wake up event before the connection
         * event to stop advertise and scan. the event is configured 7.5ms 
         * before each connection event */
        CMEnableEarlyWakeup(cm_event_data->device_id, 7500);
   51EF8:	131B      	ld         x, @(+0x13, y)
   51EF9:	0016      	ld         al, @(0x0, x)
   51EFA:	1D00      	**prefx    0x1D
   51EFB:	4C10      	ld         ah, #+0x1D4C
   51EFC:	EB00      	**prefx    0xEB
   51EFD:	8D9C      	bsr        -0x1573 <CMEnableEarlyWakeup:0x5098A[p]>
#endif

        /* Enable the radio event that indicates the beginning of a 
         * connection packet transmit during connection event.
         */
        cm_radio_event.device_id = cm_event_data->device_id;
   51EFE:	131B      	ld         x, @(+0x13, y)
   51EFF:	001A      	ld         x, @(0x0, x)
   51F00:	022B      	st         x, @(+0x2, y)
        cm_radio_event.event_type = radio_event_connection_event;
   51F01:	0214      	ld         al, #+0x2
   51F02:	0327      	st         al, @(+0x3, y)
        CMConfigureRadioEvent(&cm_radio_event);
   51F03:	E415      	ld         al, @0xFFE4 <register uy>
   51F04:	0234      	add        al, #+0x2
   51F05:	EB00      	**prefx    0xEB
   51F06:	959C      	bsr        -0x156B <CMConfigureRadioEvent:0x5099B[p]>
        /* The device may not have the network key used by the host when 
         * connected as a bridge. If so data received on the mesh control 
         * service.will not be forwarded on mesh.Enable promiscuous mode on both
         * bearers temporarily till the connection exists.
         */
        bearer_tx_state = AppGetStoredBearerState();
   51F07:	E419      	ld         x, @0xFFE4 <register uy>
   51F08:	0D38      	add        x, #+0xD
   51F09:	F829      	st         x, @0xFFF8 <(scratchpad)>
   51F0A:	FA00      	**prefx    0xFA
   51F0B:	E89C      	bsr        -0x618 <AppGetStoredBearerState:0x518F3[p]>
   51F0C:	0614      	ld         al, #+0x6
   51F0D:	E411      	ld         ah, @0xFFE4 <register uy>
   51F0E:	0730      	add        ah, #+0x7
   51F0F:	E419      	ld         x, @0xFFE4 <register uy>
   51F10:	0D38      	add        x, #+0xD
   51F11:	FD09      	bc2        
        bearer_tx_state.bearerPromiscuous = 
   51F12:	0314      	ld         al, #+0x3
   51F13:	0927      	st         al, @(+0x9, y)
                           LE_BEARER_ACTIVE | GATT_SERVER_BEARER_ACTIVE;

        AppUpdateBearerState(&bearer_tx_state);
   51F14:	E415      	ld         al, @0xFFE4 <register uy>
   51F15:	0734      	add        al, #+0x7
   51F16:	FA00      	**prefx    0xFA
   51F17:	379C      	bsr        -0x5C9 <AppUpdateBearerState:0x5194E[p]>
#endif /* DISABLE_BEARER_SETTINGS */

        /* Enter connected state */
        AppSetState(app_state_connected);
   51F18:	0214      	ld         al, #+0x2
   51F19:	FF00      	**prefx    0xFF
   51F1A:	749C      	bsr        -0x8C <AppSetState:0x51E8E[p]>
        
            /* Start the GATT discovery */
            startGattDiscovery(cm_event_data->device_id);
        }
#endif
        if(CMGetPeerDeviceRole(cm_event_data->device_id) == con_role_central)
   51F1B:	131B      	ld         x, @(+0x13, y)
   51F1C:	0016      	ld         al, @(0x0, x)
   51F1D:	EB00      	**prefx    0xEB
   51F1E:	A09C      	bsr        -0x1560 <CMGetPeerDeviceRole:0x509BE[p]>
   51F1F:	0184      	cmp        al, #+0x1
   51F20:	3EF0      	bne        +0x3E <handleConnNotify+0x8E:0x51F5E[p]>
        {
            /* Request the connection parameter update */
            AppRequestConnParamUpdate(cm_event_data->device_id);
   51F21:	131B      	ld         x, @(+0x13, y)
   51F22:	0016      	ld         al, @(0x0, x)
   51F23:	FF00      	**prefx    0xFF
   51F24:	2C9C      	bsr        -0xD4 <AppRequestConnParamUpdate:0x51E50[p]>
   51F25:	39E0      	bra        +0x39 <handleConnNotify+0x8E:0x51F5E[p]>
        }

    }
    else if(cm_event_data->result == cm_disconn_res_success)
   51F26:	0384      	cmp        al, #+0x3
   51F27:	37F0      	bne        +0x37 <handleConnNotify+0x8E:0x51F5E[p]>
            OtaReset();
            /* The OtaReset function does not return */
        }
#endif
        /* Reset the connection parameter variables. */
        gatt_data.conn_interval = 0;
   51F28:	0014      	ld         al, #+0x0
   51F29:	6300      	**prefx    0x63
   51F2A:	1F25      	st         al, @0x631F <gatt_data+0x2>
        gatt_data.conn_latency = 0;
   51F2B:	6300      	**prefx    0x63
   51F2C:	2025      	st         al, @0x6320 <gatt_data+0x3>
        gatt_data.conn_timeout = 0;
   51F2D:	6300      	**prefx    0x63
   51F2E:	2125      	st         al, @0x6321 <gatt_data+0x4>

        CSRSchedNotifyGattEvent(CSR_SCHED_GATT_STATE_CHANGE_EVENT, NULL, NULL);
   51F2F:	0027      	st         al, @(0x0, y)
   51F30:	0127      	st         al, @(+0x1, y)
   51F31:	0114      	ld         al, #+0x1
   51F32:	0010      	ld         ah, #+0x0
   51F33:	3C00      	**prefx    0x3C
   51F34:	4A9C      	bsr        +0x3C4A <CSRSchedNotifyGattEvent:0x55B7E[p]>

        /* Disable radio event notifications */
        cm_radio_event.device_id = cm_event_data->device_id;
   51F35:	131B      	ld         x, @(+0x13, y)
   51F36:	001A      	ld         x, @(0x0, x)
   51F37:	022B      	st         x, @(+0x2, y)
        cm_radio_event.event_type = radio_event_none;
   51F38:	0014      	ld         al, #+0x0
   51F39:	0327      	st         al, @(+0x3, y)
        CMConfigureRadioEvent(&cm_radio_event);
   51F3A:	E415      	ld         al, @0xFFE4 <register uy>
   51F3B:	0234      	add        al, #+0x2
   51F3C:	EA00      	**prefx    0xEA
   51F3D:	5E9C      	bsr        -0x15A2 <CMConfigureRadioEvent:0x5099B[p]>

#ifndef DISABLE_BEARER_SETTINGS
        /* Restore bearer promiscuous state */
        bearer_tx_state = AppGetStoredBearerState();
   51F3E:	E419      	ld         x, @0xFFE4 <register uy>
   51F3F:	0D38      	add        x, #+0xD
   51F40:	F829      	st         x, @0xFFF8 <(scratchpad)>
   51F41:	FA00      	**prefx    0xFA
   51F42:	B19C      	bsr        -0x64F <AppGetStoredBearerState:0x518F3[p]>
   51F43:	0614      	ld         al, #+0x6
   51F44:	E411      	ld         ah, @0xFFE4 <register uy>
   51F45:	0730      	add        ah, #+0x7
   51F46:	E419      	ld         x, @0xFFE4 <register uy>
   51F47:	0D38      	add        x, #+0xD
   51F48:	FD09      	bc2        
        AppUpdateBearerState(&bearer_tx_state);
   51F49:	E415      	ld         al, @0xFFE4 <register uy>
   51F4A:	0734      	add        al, #+0x7
   51F4B:	FA00      	**prefx    0xFA
   51F4C:	029C      	bsr        -0x5FE <AppUpdateBearerState:0x5194E[p]>
#ifdef GAIA_OTAU_SUPPORT
#ifdef GAIA_OTAU_RELAY_SUPPORT 
          if(GaiaOtauClientGetState() != STATE_VM_UPGRADE_WAIT_POST_TRANSFER_RECONNECTION)
#endif 
        {
            GaiaOtauInProgress(FALSE);
   51F4D:	0014      	ld         al, #+0x0
   51F4E:	FF00      	**prefx    0xFF
   51F4F:	E49C      	bsr        -0x11C <GaiaOtauInProgress:0x51E33[p]>
            scanning_ongoing = FALSE;
#endif
        }
#endif
        /*Handling signal as per current state */
        switch(state)
   51F50:	6300      	**prefx    0x63
   51F51:	2815      	ld         al, @0x6328 <state>
   51F52:	FE34      	add        al, #-0x2
   51F53:	0284      	cmp        al, #+0x2
   51F54:	07F8      	bcc        +0x7 <handleConnNotify+0x8B:0x51F5B[p]>
            {
                /* Connection is terminated either due to Link Loss or
                 * the local host terminated connection. In either case
                 * Initialise the app data and go to fast advertising.
                 */
                AppDataInit();
   51F55:	1B00      	**prefx    0x1B
   51F56:	439C      	bsr        +0x1B43 <AppDataInit:0x53A99[p]>
                    SendConnectRequest();  
                }
               /* Send LOT Announce Message */
               SendLOTAnnouncePacket();
#endif
                AppSetState(app_state_advertising);
   51F57:	0114      	ld         al, #+0x1
   51F58:	FF00      	**prefx    0xFF
   51F59:	359C      	bsr        -0xCB <AppSetState:0x51E8E[p]>
   51F5A:	04E0      	bra        +0x4 <handleConnNotify+0x8E:0x51F5E[p]>
            }
            break;

            default:
                /* Control should never come here */
                ReportPanic(app_panic_invalid_state);
   51F5B:	0C14      	ld         al, #+0xC
   51F5C:	FF00      	**prefx    0xFF
   51F5D:	B89C      	bsr        -0x148 <ReportPanic:0x51E15[p]>
            gatt_data.conn_timeout_tid = TIMER_INVALID; 
            GaiaOtauClientResetTransferState();
        }
    }
#endif
}
   51F5E:	EA0F      	leave      #-0x16

0x00051F5F <appHandleConnMgrProcEvent>:
 *  RETURNS
 *      Nothing
 *----------------------------------------------------------------------------*/
static void appHandleConnMgrProcEvent(cm_event event_type,
                                           CM_EVENT_T *cm_event_data)
{
   51F5F:	F60B      	enter      #-0xA
   51F60:	0623      	st         ah, @(+0x6, y)
    switch(event_type)
   51F61:	1C84      	cmp        al, #+0x1C
   51F62:	0100      	**prefx    0x1
   51F63:	B8F8      	bcc        +0xB8 <.JTBASE51+0xB2:0x5201B[p]>
   51F64:	E119      	ld         x, @0xFFE1 <register al>
   51F65:	A100      	**prefx    0xA1
   51F66:	C212      	ld         ah, @(-0x5F3E, x)
   51F67:	E019      	ld         x, @0xFFE0 <register ah>
   51F68:	FE09      	brxl       

0x00051F69 <.JTBASE51>:
 *
 *---------------------------------------------------------------------------*/
static void handleCmInitCfm(CM_INIT_CFM_T *cm_event_data)
{
    /* Set the CM API to send raw advertising reports to the application*/
    CMObserverEnableRawReports(TRUE);
   51F69:	0114      	ld         al, #+0x1
   51F6A:	F400      	**prefx    0xF4
   51F6B:	1F9C      	bsr        -0xBE1 <CMObserverEnableRawReports:0x5138A[p]>

    /* Initialise the services supported by the application */
    InitAppSupportedServices();
   51F6C:	1B00      	**prefx    0x1B
   51F6D:	349C      	bsr        +0x1B34 <InitAppSupportedServices:0x53AA1[p]>

    /* Initialize the application data structure */
    AppDataInit();
   51F6E:	1B00      	**prefx    0x1B
   51F6F:	2A9C      	bsr        +0x1B2A <AppDataInit:0x53A99[p]>
#ifdef USE_STATIC_RANDOM_ADDRESS
    GattSetRandomAddress();
#endif /* USE_STATIC_RANDOM_ADDRESS */

    /* Initialize Mesh */
    AppMeshInit();
   51F70:	1E00      	**prefx    0x1E
   51F71:	D49C      	bsr        +0x1DD4 <AppMeshInit:0x53D45[p]>
    /* Send LOT Announce Message */
    SendLOTAnnouncePacket();
#endif

    /* Start advertising */
    AppSetState(app_state_advertising);
   51F72:	0114      	ld         al, #+0x1
   51F73:	54E0      	bra        +0x54 <.JTBASE51+0x5E:0x51FC7[p]>
    HCI_EV_DATA_ULP_ADVERTISING_REPORT_T *data = &(report->report.hdr);
#else
    HCI_EV_DATA_ULP_ADVERTISING_REPORT_T *data = &(report->report.data);
#endif
    /* handle non connectable adv */
    if( data->event_type == ls_advert_non_connectable )
   51F74:	061B      	ld         x, @(+0x6, y)
   51F75:	0116      	ld         al, @(+0x1, x)
   51F76:	0384      	cmp        al, #+0x3
   51F77:	0100      	**prefx    0x1
   51F78:	A3F0      	bne        +0xA3 <.JTBASE51+0xB2:0x5201B[p]>
         */
        advertData = (uint16*) data +
                     sizeof(HCI_EV_DATA_ULP_ADVERTISING_REPORT_T) +
                     sizeof(uint8);

        MemCopyUnPack(unpackedData, advertData, data->length_data);
   51F79:	E311      	ld         ah, @0xFFE3 <register uxl>
   51F7A:	0930      	add        ah, #+0x9
   51F7B:	0716      	ld         al, @(+0x7, x)
   51F7C:	0027      	st         al, @(0x0, y)
   51F7D:	6300      	**prefx    0x63
   51F7E:	AF14      	ld         al, #+0x62AF
   51F7F:	FB00      	**prefx    0xFB
   51F80:	0B00      	**prefx    0xB
   51F81:	559C      	bsr        -0x4F4AB <MemCopyUnPack:0x2AD6[p]>
   51F82:	0018      	ld         x, #+0x0
   51F83:	052B      	st         x, @(+0x5, y)

        /* Loop until we find a block with manufacturer specific data */
        do
        {
            if(index + 4 < data->length_data)
   51F84:	0517      	ld         al, @(+0x5, y)
   51F85:	0434      	add        al, #+0x4
   51F86:	0727      	st         al, @(+0x7, y)
   51F87:	061B      	ld         x, @(+0x6, y)
   51F88:	0786      	cmp        al, @(+0x7, x)
   51F89:	0100      	**prefx    0x1
   51F8A:	91F8      	bcc        +0x91 <.JTBASE51+0xB2:0x5201B[p]>
                 *  D - Data    L minus 1 octets
                 *  For mesh packets, data will be 16 bits UUID followed by mesh
                 *  payload
                 *  Mesh payload size = L minus 3 .
                 */
                if (!MemCmp(&unpackedData[index + 1], mesh_ad_data, 3))
   51F8B:	0517      	ld         al, @(+0x5, y)
   51F8C:	0134      	add        al, #+0x1
   51F8D:	0427      	st         al, @(+0x4, y)
   51F8E:	6300      	**prefx    0x63
   51F8F:	AF34      	add        al, #+0x62AF
   51F90:	0318      	ld         x, #+0x3
   51F91:	002B      	st         x, @(0x0, y)
   51F92:	6100      	**prefx    0x61
   51F93:	BB10      	ld         ah, #+0x60BB
   51F94:	FC00      	**prefx    0xFC
   51F95:	4000      	**prefx    0x40
   51F96:	9B9C      	bsr        -0x3C065 <MemCmp:0x15F31[p]>
   51F97:	E199      	tst        @0xFFE1 <register al>
   51F98:	1DF0      	bne        +0x1D <.JTBASE51+0x4C:0x51FB5[p]>
                {
                    /* derive length first */
                    length = unpackedData[index];
   51F99:	051B      	ld         x, @(+0x5, y)
   51F9A:	6300      	**prefx    0x63
   51F9B:	AF12      	ld         ah, @(+0x62AF, x)

                    if(length > MAX_ADV_DATA_LEN || length == 0)
   51F9C:	E015      	ld         al, @0xFFE0 <register ah>
   51F9D:	FF34      	add        al, #-0x1
   51F9E:	1F84      	cmp        al, #+0x1F
   51F9F:	7CF8      	bcc        +0x7C <.JTBASE51+0xB2:0x5201B[p]>
                        /* We don't have enough data to process */
                        break;
                    }

                    /* Fill in TTL variables */
                    rx_ttl  = unpackedData[index + length];
   51FA0:	E019      	ld         x, @0xFFE0 <register ah>
   51FA1:	6300      	**prefx    0x63
   51FA2:	AF38      	add        x, #+0x62AF
   51FA3:	053B      	add        x, @(+0x5, y)
   51FA4:	001A      	ld         x, @(0x0, x)
   51FA5:	6300      	**prefx    0x63
   51FA6:	CE29      	st         x, @0x62CE <rx_ttl>

                    /* Update Bearer Event Data structure with incoming Mesh 
                     * Data.
                     */
                    CSRSchedHandleIncomingData(
   51FA7:	0717      	ld         al, @(+0x7, y)
   51FA8:	6300      	**prefx    0x63
   51FA9:	AF34      	add        al, #+0x62AF
   51FAA:	0727      	st         al, @(+0x7, y)
   51FAB:	FD30      	add        ah, #-0x3
   51FAC:	0023      	st         ah, @(0x0, y)
   51FAD:	061B      	ld         x, @(+0x6, y)
   51FAE:	081A      	ld         x, @(+0x8, x)
   51FAF:	012B      	st         x, @(+0x1, y)
   51FB0:	0114      	ld         al, #+0x1
   51FB1:	0713      	ld         ah, @(+0x7, y)
   51FB2:	3A00      	**prefx    0x3A
   51FB3:	869C      	bsr        +0x3986 <CSRSchedHandleIncomingData:0x55939[p]>
   51FB4:	67E0      	bra        +0x67 <.JTBASE51+0xB2:0x5201B[p]>
            else
            {
                /* We don't have enough data to process */
                break;
            }
        }while(index < data->length_data);
   51FB5:	0417      	ld         al, @(+0x4, y)
   51FB6:	061B      	ld         x, @(+0x6, y)
   51FB7:	0786      	cmp        al, @(+0x7, x)
   51FB8:	63F8      	bcc        +0x63 <.JTBASE51+0xB2:0x5201B[p]>
   51FB9:	0527      	st         al, @(+0x5, y)
   51FBA:	CAE0      	bra        -0x36 <.JTBASE51+0x1B:0x51F84[p]>
        case CM_RAW_ADV_REPORT_IND:
            handleCmRawAdvReportInd((CM_RAW_ADV_REPORT_IND_T*)cm_event_data);
        break;

        case CM_CONNECTION_NOTIFY:
            handleConnNotify((CM_CONNECTION_NOTIFY_T *)cm_event_data);
   51FBB:	0617      	ld         al, @(+0x6, y)
   51FBC:	FF00      	**prefx    0xFF
   51FBD:	139C      	bsr        -0xED <handleConnNotify:0x51ED0[p]>
   51FBE:	5DE0      	bra        +0x5D <.JTBASE51+0xB2:0x5201B[p]>
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleBondNotify(CM_BONDING_NOTIFY_T *cm_event_data)
{
    if(cm_event_data->result == cm_bond_res_success)
   51FBF:	061B      	ld         x, @(+0x6, y)
   51FC0:	079A      	tst        @(+0x7, x)
   51FC1:	05F0      	bne        +0x5 <.JTBASE51+0x5D:0x51FC6[p]>
    {
       gatt_data.paired = TRUE;
   51FC2:	0114      	ld         al, #+0x1
   51FC3:	6300      	**prefx    0x63
   51FC4:	1E25      	st         al, @0x631E <gatt_data+0x1>
   51FC5:	56E0      	bra        +0x56 <.JTBASE51+0xB2:0x5201B[p]>
    }
    else
    {
        /* Pairing has failed.disconnect the link.*/
        AppSetState(app_state_disconnecting);
   51FC6:	0314      	ld         al, #+0x3
   51FC7:	FF00      	**prefx    0xFF
   51FC8:	C69C      	bsr        -0x13A <AppSetState:0x51E8E[p]>
   51FC9:	52E0      	bra        +0x52 <.JTBASE51+0xB2:0x5201B[p]>
 *
 
*----------------------------------------------------------------------------*/
static void handleEncryptionChangeNotify(CM_ENCRYPTION_NOTIFY_T *cm_event_data)
{
    if(!cm_event_data->status)
   51FCA:	061B      	ld         x, @(+0x6, y)
   51FCB:	019A      	tst        @(+0x1, x)
   51FCC:	4FF0      	bne        +0x4F <.JTBASE51+0xB2:0x5201B[p]>
    {
        /* Disconnect the link. */
        CMDisconnect(cm_event_data->device_id);
   51FCD:	0016      	ld         al, @(0x0, x)
   51FCE:	EA00      	**prefx    0xEA
   51FCF:	449C      	bsr        -0x15BC <CMDisconnect:0x50A13[p]>
   51FD0:	4BE0      	bra        +0x4B <.JTBASE51+0xB2:0x5201B[p]>
 *
 *---------------------------------------------------------------------------*/
static void handleCmConnectionUpdated(CM_CONNECTION_UPDATED_T* p_event_data)

{
    switch(state)
   51FD1:	6300      	**prefx    0x63
   51FD2:	2815      	ld         al, @0x6328 <state>
   51FD3:	FE34      	add        al, #-0x2
   51FD4:	0284      	cmp        al, #+0x2
   51FD5:	31F8      	bcc        +0x31 <.JTBASE51+0x9D:0x52006[p]>
        case app_state_disconnecting:
        {
            CM_REQ_RADIO_EVENT_T cm_radio_event;

            /* Store the new connection parameters. */
            gatt_data.conn_interval = p_event_data->conn_interval;
   51FD6:	061B      	ld         x, @(+0x6, y)
   51FD7:	0116      	ld         al, @(+0x1, x)
   51FD8:	6300      	**prefx    0x63
   51FD9:	1F25      	st         al, @0x631F <gatt_data+0x2>
            gatt_data.conn_latency = p_event_data->conn_latency;
   51FDA:	021A      	ld         x, @(+0x2, x)
   51FDB:	6300      	**prefx    0x63
   51FDC:	2029      	st         x, @0x6320 <gatt_data+0x3>
            gatt_data.conn_timeout = p_event_data->supervision_timeout;
   51FDD:	061B      	ld         x, @(+0x6, y)
   51FDE:	031A      	ld         x, @(+0x3, x)
   51FDF:	6300      	**prefx    0x63
   51FE0:	2129      	st         x, @0x6321 <gatt_data+0x4>
            gatt_data.device_id = p_event_data->device_id;
   51FE1:	061B      	ld         x, @(+0x6, y)
   51FE2:	001A      	ld         x, @(0x0, x)
   51FE3:	6300      	**prefx    0x63
   51FE4:	1D29      	st         x, @0x631D <gatt_data>
            gatt_event_data.conn_interval = p_event_data->conn_interval;
   51FE5:	6300      	**prefx    0x63
   51FE6:	2625      	st         al, @0x6326 <gatt_event_data+0x2>
            gatt_event_data.is_gatt_bearer_ready = TRUE;
   51FE7:	0114      	ld         al, #+0x1
   51FE8:	6300      	**prefx    0x63
   51FE9:	2525      	st         al, @0x6325 <gatt_event_data+0x1>
            gatt_event_data.cid = CMGetConnId(p_event_data->device_id);
   51FEA:	061B      	ld         x, @(+0x6, y)
   51FEB:	0016      	ld         al, @(0x0, x)
   51FEC:	ED00      	**prefx    0xED
   51FED:	1E9C      	bsr        -0x12E2 <CMGetConnId:0x50D0B[p]>
   51FEE:	6300      	**prefx    0x63
   51FEF:	2425      	st         al, @0x6324 <gatt_event_data>
            CSRSchedNotifyGattEvent(CSR_SCHED_GATT_STATE_CHANGE_EVENT,
   51FF0:	0014      	ld         al, #+0x0
   51FF1:	0027      	st         al, @(0x0, y)
   51FF2:	0127      	st         al, @(+0x1, y)
   51FF3:	0114      	ld         al, #+0x1
   51FF4:	6300      	**prefx    0x63
   51FF5:	2410      	ld         ah, #+0x6324
   51FF6:	3C00      	**prefx    0x3C
   51FF7:	879C      	bsr        +0x3B87 <CSRSchedNotifyGattEvent:0x55B7E[p]>

            /* Enable the radio event that indicates the beginning of a 
             * connection packet transmit during connection event.
             */
#if defined(GAIA_OTAU_SUPPORT) || defined(GAIA_OTAU_RELAY_SUPPORT)            
            if(!IsGaiaOtauInProgress())
   51FF8:	FE00      	**prefx    0xFE
   51FF9:	2E9C      	bsr        -0x1D2 <IsGaiaOtauInProgress:0x51E27[p]>
   51FFA:	E199      	tst        @0xFFE1 <register al>
   51FFB:	0EF0      	bne        +0xE <.JTBASE51+0xA0:0x52009[p]>
#endif
            {
                cm_radio_event.device_id = gatt_data.device_id;
   51FFC:	6300      	**prefx    0x63
   51FFD:	1D19      	ld         x, @0x631D <gatt_data>
   51FFE:	022B      	st         x, @(+0x2, y)
                cm_radio_event.event_type = radio_event_connection_event;
   51FFF:	0214      	ld         al, #+0x2
   52000:	0327      	st         al, @(+0x3, y)
                CMConfigureRadioEvent(&cm_radio_event);
   52001:	E415      	ld         al, @0xFFE4 <register uy>
   52002:	0234      	add        al, #+0x2
   52003:	EA00      	**prefx    0xEA
   52004:	979C      	bsr        -0x1669 <CMConfigureRadioEvent:0x5099B[p]>
   52005:	04E0      	bra        +0x4 <.JTBASE51+0xA0:0x52009[p]>

        default:
            /* Connection parameter update indication received in unexpected
             * application state.
             */
            ReportPanic(app_panic_invalid_state);
   52006:	0C14      	ld         al, #+0xC
   52007:	FE00      	**prefx    0xFE
   52008:	0D9C      	bsr        -0x1F3 <ReportPanic:0x51E15[p]>
            handleEncryptionChangeNotify((CM_ENCRYPTION_NOTIFY_T*)cm_event_data);
        break;

        case CM_CONNECTION_UPDATED:
            handleCmConnectionUpdated((CM_CONNECTION_UPDATED_T*)cm_event_data);
            ConnectionParamUpdateEvent(event_type, cm_event_data);
   52009:	1B14      	ld         al, #+0x1B
   5200A:	06E0      	bra        +0x6 <.JTBASE51+0xA7:0x52010[p]>
        break;
        
        case CM_RADIO_EVENT_IND:
             CSRSchedNotifyGattEvent(CSR_SCHED_GATT_CONNECTION_EVENT,NULL,NULL);
   5200B:	0018      	ld         x, #+0x0
   5200C:	002B      	st         x, @(0x0, y)
   5200D:	012B      	st         x, @(+0x1, y)
   5200E:	0014      	ld         al, #+0x0
   5200F:	09E0      	bra        +0x9 <.JTBASE51+0xAF:0x52018[p]>
        case CM_CONNECTION_UPDATE_SIGNALLING_IND:   /* FALLTHROUGH */
        case CM_CONNECTION_PARAM_UPDATE_CFM:        /* FALLTHROUGH */
        case CM_CONNECTION_PARAM_UPDATE_IND:        /* FALLTHROUGH */
        case CM_SERVER_ACCESSED:                    /* FALLTHROUGH */
        {
            ConnectionParamUpdateEvent(event_type, cm_event_data);
   52010:	0613      	ld         ah, @(+0x6, y)
   52011:	E700      	**prefx    0xE7
   52012:	D39C      	bsr        -0x192D <ConnectionParamUpdateEvent:0x506E5[p]>
   52013:	08E0      	bra        +0x8 <.JTBASE51+0xB2:0x5201B[p]>
            /* Hanlde the gatt discovery complete indication */
            handleDiscoveryComplete((CM_DISCOVERY_COMPLETE_T*)cm_event_data);
            break;
#endif
        case CM_EARLY_WAKEUP_IND:
            CSRSchedNotifyGattEvent(CSR_SCHED_GATT_EARLY_WAKEUP_EVENT, NULL, NULL);
   52014:	0014      	ld         al, #+0x0
   52015:	0027      	st         al, @(0x0, y)
   52016:	0127      	st         al, @(+0x1, y)
   52017:	0314      	ld         al, #+0x3
   52018:	0010      	ld         ah, #+0x0
   52019:	3B00      	**prefx    0x3B
   5201A:	649C      	bsr        +0x3B64 <CSRSchedNotifyGattEvent:0x55B7E[p]>
#endif

        default:
        break;
    }
}
   5201B:	F60F      	leave      #-0xA

0x0005201C <GattStopAdverts>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void GattStopAdverts(void)
{
   5201C:	FE0B      	enter      #-0x2
    TimerDelete(gatt_advert_tid);
   5201D:	6B00      	**prefx    0x6B
   5201E:	9615      	ld         al, @0x6A96 <GattAddDatabaseReq>
   5201F:	FC00      	**prefx    0xFC
   52020:	CC00      	**prefx    0xCC
   52021:	029C      	bsr        -0x433FE <TimerDelete:0xEC23[p]>
    gatt_advert_tid = TIMER_INVALID;
   52022:	0014      	ld         al, #+0x0
   52023:	6B00      	**prefx    0x6B
   52024:	9625      	st         al, @0x6A96 <GattAddDatabaseReq>
   
#ifdef ENABLE_LOT_MODEL
    /* Initialise LOT advert count */
    g_lot_advert_count = 0;
   52025:	6300      	**prefx    0x63
   52026:	2925      	st         al, @0x6329 <g_lot_advert_count>
#endif /* ENABLE_LOT_MODEL */
}
   52027:	FE0F      	leave      #-0x2

0x00052028 <GattTriggerLOTAdverts>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void GattTriggerLOTAdverts(uint8* lot_interest_service_id)
{
   52028:	FE0B      	enter      #-0x2
   52029:	E119      	ld         x, @0xFFE1 <register al>
    MemCopy(g_lot_service_id,lot_interest_service_id,16);
   5202A:	1014      	ld         al, #+0x10
   5202B:	6A00      	**prefx    0x6A
   5202C:	6510      	ld         ah, #+0x6A65
   5202D:	FD09      	bc2        
    g_lot_advert_count = LOT_INTEREST_ADVERT_COUNT;    
   5202E:	6414      	ld         al, #+0x64
   5202F:	6300      	**prefx    0x63
   52030:	2925      	st         al, @0x6329 <g_lot_advert_count>
}
   52031:	FE0F      	leave      #-0x2

0x00052032 <csrStoreUserAdvData>:
 *  RETURNS/MODIFIES
 *      TRUE if data was stored successfully
 *
 *----------------------------------------------------------------------------*/
static bool csrStoreUserAdvData(uint16 len, uint8 *data, ad_src const src)
{
   52032:	FD0B      	enter      #-0x3
   52033:	F925      	st         al, @0xFFF9 <(scratchpad)>
   52034:	FA21      	st         ah, @0xFFFA <(scratchpad)>
    uint8 offset;
    uint8 *p_data;

    /* Move to the end of the already stored data */
    if(src == ad_src_advertise)
   52035:	039B      	tst        @(+0x3, y)
   52036:	04F4      	beq        +0x4 <csrStoreUserAdvData+0x8:0x5203A[p]>
   52037:	6A00      	**prefx    0x6A
   52038:	7714      	ld         al, #+0x6A77
   52039:	03E0      	bra        +0x3 <csrStoreUserAdvData+0xA:0x5203C[p]>
   5203A:	6A00      	**prefx    0x6A
   5203B:	4614      	ld         al, #+0x6A46
   5203C:	F825      	st         al, @0xFFF8 <(scratchpad)>
    else
    {
        p_data = scan_rsp_data;
    }

    if(data == NULL)
   5203D:	FA99      	tst        @0xFFFA <(scratchpad)>
   5203E:	09F0      	bne        +0x9 <csrStoreUserAdvData+0x15:0x52047[p]>
    {
        /* Data is NULL clear the data */
        MemSet(p_data, 0, MAX_USER_ADV_DATA_LEN);
   5203F:	1F14      	ld         al, #+0x1F
   52040:	0027      	st         al, @(0x0, y)
   52041:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   52042:	0010      	ld         ah, #+0x0
   52043:	FB00      	**prefx    0xFB
   52044:	0B00      	**prefx    0xB
   52045:	0B9C      	bsr        -0x4F4F5 <MemSet:0x2B50[p]>
   52046:	18E0      	bra        +0x18 <csrStoreUserAdvData+0x2C:0x5205E[p]>
        return TRUE;
   52047:	0010      	ld         ah, #+0x0
    }

    offset = 0;
    while( offset < MAX_USER_ADV_DATA_LEN)
    {
        if(p_data[offset] == 0)
   52048:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52049:	E039      	add        x, @0xFFE0 <register ah>
   5204A:	0016      	ld         al, @(0x0, x)
   5204B:	05F4      	beq        +0x5 <csrStoreUserAdvData+0x1E:0x52050[p]>
        {
            break;
        }
        offset += p_data[offset] + 1;
   5204C:	0134      	add        al, #+0x1
   5204D:	E131      	add        ah, @0xFFE1 <register al>
        MemSet(p_data, 0, MAX_USER_ADV_DATA_LEN);
        return TRUE;
    }

    offset = 0;
    while( offset < MAX_USER_ADV_DATA_LEN)
   5204E:	1E80      	cmp        ah, #+0x1E
   5204F:	F92C      	bcz        -0x7 <csrStoreUserAdvData+0x16:0x52048[p]>
        {
            break;
        }
        offset += p_data[offset] + 1;
    }
    if( (offset + len) < MAX_USER_ADV_DATA_LEN )
   52050:	E015      	ld         al, @0xFFE0 <register ah>
   52051:	F935      	add        al, @0xFFF9 <(scratchpad)>
   52052:	1E84      	cmp        al, #+0x1E
   52053:	032C      	bcz        +0x3 <csrStoreUserAdvData+0x24:0x52056[p]>
   52054:	0014      	ld         al, #+0x0
   52055:	0AE0      	bra        +0xA <csrStoreUserAdvData+0x2D:0x5205F[p]>
    {
        p_data[offset] = (uint8)len;
   52056:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52057:	E039      	add        x, @0xFFE0 <register ah>
   52058:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   52059:	0026      	st         al, @(0x0, x)
        MemCopy(p_data + offset + 1, data, len);
   5205A:	0130      	add        ah, #+0x1
   5205B:	F831      	add        ah, @0xFFF8 <(scratchpad)>
   5205C:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5205D:	FD09      	bc2        
   5205E:	0114      	ld         al, #+0x1
    else
    {
        return FALSE;
    }
    return TRUE;
}
   5205F:	FD0F      	leave      #-0x3

0x00052060 <gattSetAdvertData>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void gattSetAdvertData(uint8* lot_interest_service_id)
{
   52060:	D60B      	enter      #-0x2A
   52061:	F825      	st         al, @0xFFF8 <(scratchpad)>
    uint8 advert_data[MAX_ADV_DATA_LEN];
    uint16 length;

    int8 tx_power_level = 0xff; /* Signed value */
   52062:	0100      	**prefx    0x1
   52063:	FF10      	ld         ah, #+0xFF
   52064:	0123      	st         ah, @(+0x1, y)

    /* Tx power level value prefixed with 'Tx Power' AD Type */
    uint8 device_tx_power[TX_POWER_VALUE_LENGTH] = {
                AD_TYPE_TX_POWER
                };
   52065:	A000      	**prefx    0xA0
   52066:	1115      	ld         al, @0xA011 <D_APPCONST_START+0x1>
   52067:	0427      	st         al, @(+0x4, y)
   52068:	0A10      	ld         ah, #+0xA
   52069:	0323      	st         ah, @(+0x3, y)

    uint8 device_appearance[DEVICE_APPEARANCE_LENGTH + 1] = {
                AD_TYPE_APPEARANCE,
                LE8_L(APPEARANCE_UNKNOWN_VALUE),
                LE8_H(APPEARANCE_UNKNOWN_VALUE)
                };
   5206A:	0314      	ld         al, #+0x3
   5206B:	E411      	ld         ah, @0xFFE4 <register uy>
   5206C:	0530      	add        ah, #+0x5
   5206D:	A100      	**prefx    0xA1
   5206E:	DE18      	ld         x, #-0x5F22
   5206F:	FD09      	bc2        
     */
    uint16 length_added_to_adv = 3;

#ifdef ENABLE_LOT_MODEL
    uint16 i;
    if(lot_interest_service_id != NULL)
   52070:	F899      	tst        @0xFFF8 <(scratchpad)>
   52071:	15F4      	beq        +0x15 <gattSetAdvertData+0x26:0x52086[p]>
    {
        advert_data[0] = AD_TYPE_SERVICE_UUID_128BIT;
   52072:	0614      	ld         al, #+0x6
   52073:	0827      	st         al, @(+0x8, y)
   52074:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   52075:	E419      	ld         x, @0xFFE4 <register uy>
   52076:	0938      	add        x, #+0x9
   52077:	F829      	st         x, @0xFFF8 <(scratchpad)>
        for( i = 0 ; i < 16; i++)
        {
            advert_data[1+i] = lot_interest_service_id[i];
   52078:	E019      	ld         x, @0xFFE0 <register ah>
   52079:	0016      	ld         al, @(0x0, x)
   5207A:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5207B:	0026      	st         al, @(0x0, x)
   5207C:	0130      	add        ah, #+0x1
   5207D:	0138      	add        x, #+0x1
   5207E:	F829      	st         x, @0xFFF8 <(scratchpad)>
#ifdef ENABLE_LOT_MODEL
    uint16 i;
    if(lot_interest_service_id != NULL)
    {
        advert_data[0] = AD_TYPE_SERVICE_UUID_128BIT;
        for( i = 0 ; i < 16; i++)
   5207F:	E415      	ld         al, @0xFFE4 <register uy>
   52080:	1934      	add        al, #+0x19
   52081:	E189      	cmp        x, @0xFFE1 <register al>
   52082:	F6F0      	bne        -0xA <gattSetAdvertData+0x18:0x52078[p]>
   52083:	1118      	ld         x, #+0x11
   52084:	272B      	st         x, @(+0x27, y)
   52085:	0AE0      	bra        +0xA <gattSetAdvertData+0x2F:0x5208F[p]>
static uint16 getSupported16BitUUIDServiceList(uint8 *p_service_uuid_ad)
{
    uint8 i = 0;

    /* Add 16-bit UUID for supported main service  */
    p_service_uuid_ad[i++] = AD_TYPE_SERVICE_UUID_16BIT_LIST;
   52086:	0310      	ld         ah, #+0x3
   52087:	0823      	st         ah, @(+0x8, y)

    p_service_uuid_ad[i++] = LE8_L(MESH_CONTROL_SERVICE_UUID);
   52088:	0100      	**prefx    0x1
   52089:	F114      	ld         al, #+0xF1
   5208A:	0927      	st         al, @(+0x9, y)
    p_service_uuid_ad[i++] = LE8_H(MESH_CONTROL_SERVICE_UUID);
   5208B:	0100      	**prefx    0x1
   5208C:	FE18      	ld         x, #+0xFE
   5208D:	0A2B      	st         x, @(+0xA, y)
   5208E:	2723      	st         ah, @(+0x27, y)
    /* One added for Length field, which will be added to Adv Data by GAP 
     * layer 
     */
    length_added_to_adv += (length + 1);

    if (csrStoreUserAdvData(length, advert_data, 
   5208F:	0010      	ld         ah, #+0x0
   52090:	0023      	st         ah, @(0x0, y)
   52091:	2717      	ld         al, @(+0x27, y)
   52092:	E411      	ld         ah, @0xFFE4 <register uy>
   52093:	0830      	add        ah, #+0x8
   52094:	9E9C      	bsr        -0x62 <csrStoreUserAdvData:0x52032[p]>
   52095:	0184      	cmp        al, #+0x1
   52096:	04F4      	beq        +0x4 <gattSetAdvertData+0x3A:0x5209A[p]>
                                       ad_src_advertise) != TRUE)
    {
        ReportPanic(app_panic_set_advert_data);
   52097:	0214      	ld         al, #+0x2
   52098:	FD00      	**prefx    0xFD
   52099:	7C9C      	bsr        -0x284 <ReportPanic:0x51E15[p]>
     * layer 
     */
    length_added_to_adv += (sizeof(device_appearance) + 1);

    /* Add device appearance to the advertisements */
    if (csrStoreUserAdvData(ATTR_LEN_DEVICE_APPEARANCE + 1, 
   5209A:	0014      	ld         al, #+0x0
   5209B:	0027      	st         al, @(0x0, y)
   5209C:	0214      	ld         al, #+0x2
   5209D:	E411      	ld         ah, @0xFFE4 <register uy>
   5209E:	0530      	add        ah, #+0x5
   5209F:	939C      	bsr        -0x6D <csrStoreUserAdvData:0x52032[p]>
   520A0:	0184      	cmp        al, #+0x1
   520A1:	04F4      	beq        +0x4 <gattSetAdvertData+0x45:0x520A5[p]>
        device_appearance, ad_src_advertise) != TRUE)
    {
        ReportPanic(app_panic_set_advert_data);
   520A2:	0214      	ld         al, #+0x2
   520A3:	FD00      	**prefx    0xFD
   520A4:	719C      	bsr        -0x28F <ReportPanic:0x51E15[p]>
    }

    /* Read tx power of the chip */
    if(LsReadTransmitPowerLevel(&tx_power_level) != ls_err_none)
   520A5:	E415      	ld         al, @0xFFE4 <register uy>
   520A6:	0134      	add        al, #+0x1
   520A7:	FB00      	**prefx    0xFB
   520A8:	1A00      	**prefx    0x1A
   520A9:	F69C      	bsr        -0x4E60A <LsReadTransmitPowerLevel:0x3A9F[p]>
   520AA:	E199      	tst        @0xFFE1 <register al>
   520AB:	04F4      	beq        +0x4 <gattSetAdvertData+0x4F:0x520AF[p]>
    {
        /* Reading tx power failed */
        ReportPanic(app_panic_read_tx_pwr_level);
   520AC:	0814      	ld         al, #+0x8
   520AD:	FD00      	**prefx    0xFD
   520AE:	679C      	bsr        -0x299 <ReportPanic:0x51E15[p]>
    }

    /* Add the read tx power level to device_tx_power 
      * Tx power level value is of 1 byte 
      */
    device_tx_power[TX_POWER_VALUE_LENGTH - 1] = (uint8 )tx_power_level;
   520AF:	011B      	ld         x, @(+0x1, y)
   520B0:	042B      	st         x, @(+0x4, y)
     * layer 
     */
    length_added_to_adv += (TX_POWER_VALUE_LENGTH + 1);

    /* Add tx power value of device to the advertising data */
    if (csrStoreUserAdvData(TX_POWER_VALUE_LENGTH, device_tx_power, 
   520B1:	0010      	ld         ah, #+0x0
   520B2:	0023      	st         ah, @(0x0, y)
   520B3:	0214      	ld         al, #+0x2
   520B4:	E411      	ld         ah, @0xFFE4 <register uy>
   520B5:	0330      	add        ah, #+0x3
   520B6:	FF00      	**prefx    0xFF
   520B7:	7B9C      	bsr        -0x85 <csrStoreUserAdvData:0x52032[p]>
   520B8:	0184      	cmp        al, #+0x1
   520B9:	04F4      	beq        +0x4 <gattSetAdvertData+0x5D:0x520BD[p]>
                          ad_src_advertise) != TRUE)
    {
        ReportPanic(app_panic_set_advert_data);
   520BA:	0214      	ld         al, #+0x2
   520BB:	FD00      	**prefx    0xFD
   520BC:	599C      	bsr        -0x2A7 <ReportPanic:0x51E15[p]>

    uint8 *p_device_name = NULL;
    uint16 device_name_adtype_len;

    /* Read device name along with AD Type and its length */
    p_device_name = GapGetNameAndLength(&device_name_adtype_len);
   520BD:	E415      	ld         al, @0xFFE4 <register uy>
   520BE:	0234      	add        al, #+0x2
   520BF:	0E00      	**prefx    0xE
   520C0:	9C9C      	bsr        +0xD9C <GapGetNameAndLength:0x52E5C[p]>
   520C1:	E119      	ld         x, @0xFFE1 <register al>

    /* Add complete device name to Advertisement data */
    p_device_name[0] = AD_TYPE_LOCAL_NAME_COMPLETE;
   520C2:	0914      	ld         al, #+0x9
   520C3:	0026      	st         al, @(0x0, x)
     */

    /* Check if Complete Device Name can fit in remaining advertisement 
     * data space 
     */
    if((device_name_adtype_len + 1) <= (MAX_ADV_DATA_LEN - adv_data_len))
   520C4:	0217      	ld         al, @(+0x2, y)
   520C5:	E111      	ld         ah, @0xFFE1 <register al>
   520C6:	0130      	add        ah, #+0x1
   520C7:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   520C8:	1410      	ld         ah, #+0x14
   520C9:	2753      	sub        ah, @(+0x27, y)
   520CA:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   520CB:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   520CC:	F881      	cmp        ah, @0xFFF8 <(scratchpad)>
   520CD:	022C      	bcz        +0x2 <gattSetAdvertData+0x6F:0x520CF[p]>
   520CE:	04E0      	bra        +0x4 <gattSetAdvertData+0x72:0x520D2[p]>
    {
        /* Add Complete Device Name to Advertisement Data */
        if (csrStoreUserAdvData(device_name_adtype_len , p_device_name, 
   520CF:	0010      	ld         ah, #+0x0
   520D0:	0023      	st         ah, @(0x0, y)
   520D1:	0FE0      	bra        +0xF <gattSetAdvertData+0x80:0x520E0[p]>
            ReportPanic(app_panic_set_advert_data);
        }

    }
    /* Check if Complete Device Name can fit in Scan response message */
    else if((device_name_adtype_len + 1) <= (MAX_ADV_DATA_LEN - scan_data_len)) 
   520D2:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   520D3:	2080      	cmp        ah, #+0x20
   520D4:	04F8      	bcc        +0x4 <gattSetAdvertData+0x78:0x520D8[p]>
    {
        /* Add Complete Device Name to Scan Response Data */
        if (csrStoreUserAdvData(device_name_adtype_len , p_device_name, 
   520D5:	0110      	ld         ah, #+0x1
   520D6:	0023      	st         ah, @(0x0, y)
   520D7:	15E0      	bra        +0x15 <gattSetAdvertData+0x8C:0x520EC[p]>

    }
    /* Check if Shortened Device Name can fit in remaining advertisement 
     * data space 
     */
    else if((MAX_ADV_DATA_LEN - adv_data_len) >=
   520D8:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   520D9:	0984      	cmp        al, #+0x9
   520DA:	0D2C      	bcz        +0xD <gattSetAdvertData+0x87:0x520E7[p]>
            (SHORTENED_DEV_NAME_LEN + 2)) /* Added 2 for Length and AD type 
                                           * added by GAP layer
                                           */
    {
        /* Add shortened device name to Advertisement data */
        p_device_name[0] = AD_TYPE_LOCAL_NAME_SHORT;
   520DB:	0810      	ld         ah, #+0x8
   520DC:	0022      	st         ah, @(0x0, x)

       if (csrStoreUserAdvData(SHORTENED_DEV_NAME_LEN , p_device_name, 
   520DD:	0014      	ld         al, #+0x0
   520DE:	0027      	st         al, @(0x0, y)
   520DF:	0814      	ld         al, #+0x8
   520E0:	E311      	ld         ah, @0xFFE3 <register uxl>
   520E1:	FF00      	**prefx    0xFF
   520E2:	509C      	bsr        -0xB0 <csrStoreUserAdvData:0x52032[p]>
   520E3:	0184      	cmp        al, #+0x1
   520E4:	10F4      	beq        +0x10 <gattSetAdvertData+0x94:0x520F4[p]>
                      ad_src_advertise) != TRUE)
        {
            ReportPanic(app_panic_set_advert_data);
   520E5:	0214      	ld         al, #+0x2
   520E6:	0CE0      	bra        +0xC <gattSetAdvertData+0x92:0x520F2[p]>

    }
    else /* Add device name to remaining Scan reponse data space */
    {
        /* Add as much as can be stored in Scan Response data */
        p_device_name[0] = AD_TYPE_LOCAL_NAME_SHORT;
   520E7:	0810      	ld         ah, #+0x8
   520E8:	0022      	st         ah, @(0x0, x)

       if (csrStoreUserAdvData(MAX_ADV_DATA_LEN - scan_data_len, 
   520E9:	0114      	ld         al, #+0x1
   520EA:	0027      	st         al, @(0x0, y)
   520EB:	1F14      	ld         al, #+0x1F
   520EC:	E311      	ld         ah, @0xFFE3 <register uxl>
   520ED:	FF00      	**prefx    0xFF
   520EE:	449C      	bsr        -0xBC <csrStoreUserAdvData:0x52032[p]>
   520EF:	0184      	cmp        al, #+0x1
   520F0:	04F4      	beq        +0x4 <gattSetAdvertData+0x94:0x520F4[p]>
                                    p_device_name, 
                                    ad_src_scan_rsp) != TRUE)
        {
            ReportPanic(app_panic_set_scan_rsp_data);
   520F1:	0314      	ld         al, #+0x3
   520F2:	FD00      	**prefx    0xFD
   520F3:	229C      	bsr        -0x2DE <ReportPanic:0x51E15[p]>
        ReportPanic(app_panic_set_advert_data);
    }

    addDeviceNameToAdvData(length_added_to_adv, 0);

}
   520F4:	D60F      	leave      #-0x2A

0x000520F5 <GattTriggerConnectableAdverts>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
extern void GattTriggerConnectableAdverts(uint8* lot_interest_service_id)
{
   520F5:	B00B      	enter      #-0x50
    CSRSchedResult result = CSR_SCHED_RESULT_FAILURE;
    CSR_SCHED_ADV_DATA_T gatt_adv_data;
    
#ifndef DISABLE_BEARER_SETTINGS
    /* Bridge is disabled do not send user adverts */
    if(!IsGattBearerEnabled())
   520F6:	F800      	**prefx    0xF8
   520F7:	F69C      	bsr        -0x80A <IsGattBearerEnabled:0x518ED[p]>
   520F8:	E199      	tst        @0xFFE1 <register al>
   520F9:	04F0      	bne        +0x4 <GattTriggerConnectableAdverts+0x8:0x520FD[p]>
    {
        AppSetState(app_state_idle);
   520FA:	FE00      	**prefx    0xFE
   520FB:	939C      	bsr        -0x26D <AppSetState:0x51E8E[p]>
   520FC:	58E0      	bra        +0x58 <GattTriggerConnectableAdverts+0x5F:0x52154[p]>
        return;
    }
#endif /* DISABLE_BEARER_SETTINGS */

    /* Reset existing advertising data */
    csrStoreUserAdvData(0, NULL, ad_src_advertise);
   520FD:	0014      	ld         al, #+0x0
   520FE:	0027      	st         al, @(0x0, y)
   520FF:	0010      	ld         ah, #+0x0
   52100:	FF00      	**prefx    0xFF
   52101:	319C      	bsr        -0xCF <csrStoreUserAdvData:0x52032[p]>
    csrStoreUserAdvData(0, NULL, ad_src_scan_rsp);
   52102:	0114      	ld         al, #+0x1
   52103:	0027      	st         al, @(0x0, y)
   52104:	0014      	ld         al, #+0x0
   52105:	0010      	ld         ah, #+0x0
   52106:	FF00      	**prefx    0xFF
   52107:	2B9C      	bsr        -0xD5 <csrStoreUserAdvData:0x52032[p]>
    MemCopy(&gatt_adv_data.adv_params.bd_addr.addr, 
            &random_bd_addr, 
            sizeof(BD_ADDR_T));
    gatt_adv_data.adv_params.bd_addr.type = L2CA_RANDOM_ADDR_TYPE;
#else
    gatt_adv_data.adv_params.bd_addr.type = L2CA_PUBLIC_ADDR_TYPE;
   52108:	0014      	ld         al, #+0x0
   52109:	0327      	st         al, @(+0x3, y)
#endif /* USE_STATIC_RANDOM_ADDRESS */


    /* Set GAP peripheral params */
    gatt_adv_data.adv_params.role = gap_role_peripheral;
   5210A:	0314      	ld         al, #+0x3
   5210B:	0927      	st         al, @(+0x9, y)
    gatt_adv_data.adv_params.bond = gap_mode_bond_no;
   5210C:	0114      	ld         al, #+0x1
   5210D:	0C27      	st         al, @(+0xC, y)
    gatt_adv_data.adv_params.connect_mode = gap_mode_connect_undirected;
   5210E:	0314      	ld         al, #+0x3
   5210F:	0A27      	st         al, @(+0xA, y)
    gatt_adv_data.adv_params.discover_mode = gap_mode_discover_general;
   52110:	0B27      	st         al, @(+0xB, y)
    gatt_adv_data.adv_params.security_mode = gap_mode_security_unauthenticate;
   52111:	0114      	ld         al, #+0x1
   52112:	0D27      	st         al, @(+0xD, y)

#ifdef ENABLE_LOT_MODEL
    if(g_lot_advert_count > 0)
   52113:	6300      	**prefx    0x63
   52114:	2999      	tst        @0x6329 <g_lot_advert_count>
   52115:	0BF4      	beq        +0xB <GattTriggerConnectableAdverts+0x2B:0x52120[p]>
    {
        /* Form the ad type data */
        gattSetAdvertData(g_lot_service_id);
   52116:	6A00      	**prefx    0x6A
   52117:	6514      	ld         al, #+0x6A65
   52118:	FF00      	**prefx    0xFF
   52119:	479C      	bsr        -0xB9 <gattSetAdvertData:0x52060[p]>
        g_lot_advert_count--;
   5211A:	6300      	**prefx    0x63
   5211B:	2915      	ld         al, @0x6329 <g_lot_advert_count>
   5211C:	FF34      	add        al, #-0x1
   5211D:	6300      	**prefx    0x63
   5211E:	2925      	st         al, @0x6329 <g_lot_advert_count>
   5211F:	04E0      	bra        +0x4 <GattTriggerConnectableAdverts+0x2E:0x52123[p]>
    }
    else
#endif /* ENABLE_LOT_MODEL */
    {
        /* Form the ad type data */
        gattSetAdvertData(NULL);
   52120:	0014      	ld         al, #+0x0
   52121:	FF00      	**prefx    0xFF
   52122:	3E9C      	bsr        -0xC2 <gattSetAdvertData:0x52060[p]>
    }

    MemCopy(gatt_adv_data.ad_data, ad_data, MAX_USER_ADV_DATA_LEN);
   52123:	1F14      	ld         al, #+0x1F
   52124:	E411      	ld         ah, @0xFFE4 <register uy>
   52125:	0E30      	add        ah, #+0xE
   52126:	6A00      	**prefx    0x6A
   52127:	4618      	ld         x, #+0x6A46
   52128:	FD09      	bc2        
    gatt_adv_data.ad_data_length = MAX_USER_ADV_DATA_LEN;
   52129:	1F14      	ld         al, #+0x1F
   5212A:	2D27      	st         al, @(+0x2D, y)
    MemCopy(gatt_adv_data.scan_rsp_data, scan_rsp_data, MAX_USER_ADV_DATA_LEN);
   5212B:	0130      	add        ah, #+0x1
   5212C:	6A00      	**prefx    0x6A
   5212D:	7718      	ld         x, #+0x6A77
   5212E:	FD09      	bc2        
    gatt_adv_data.scan_rsp_data_length= MAX_USER_ADV_DATA_LEN;
   5212F:	1F14      	ld         al, #+0x1F
   52130:	4D27      	st         al, @(+0x4D, y)

    
    result = CSRSchedSendUserAdv(&gatt_adv_data, NULL);
   52131:	0014      	ld         al, #+0x0
   52132:	0027      	st         al, @(0x0, y)
   52133:	0010      	ld         ah, #+0x0
   52134:	E415      	ld         al, @0xFFE4 <register uy>
   52135:	0334      	add        al, #+0x3
   52136:	3B00      	**prefx    0x3B
   52137:	259C      	bsr        +0x3B25 <CSRSchedSendUserAdv:0x55C5C[p]>
   }
 
    
    advert_timer_value = ADVERT_INTERVAL;
   52138:	1214      	ld         al, #+0x12
   52139:	6A00      	**prefx    0x6A
   5213A:	7525      	st         al, @0x6A75 <advert_timer_value>
   5213B:	EC00      	**prefx    0xEC
   5213C:	C014      	ld         al, #-0x1440
   5213D:	6A00      	**prefx    0x6A
   5213E:	7625      	st         al, @0x6A76 <advert_timer_value+0x1>

    /* Restart the advertising timer */
    TimerDelete(gatt_advert_tid);        
   5213F:	6B00      	**prefx    0x6B
   52140:	9615      	ld         al, @0x6A96 <GattAddDatabaseReq>
   52141:	FC00      	**prefx    0xFC
   52142:	CB00      	**prefx    0xCB
   52143:	E09C      	bsr        -0x43520 <TimerDelete:0xEC23[p]>
    gatt_advert_tid = TimerCreate(advert_timer_value, TRUE, 
   52144:	0114      	ld         al, #+0x1
   52145:	0027      	st         al, @(0x0, y)
   52146:	2100      	**prefx    0x21
   52147:	5514      	ld         al, #+0x2155
   52148:	0227      	st         al, @(+0x2, y)
   52149:	0514      	ld         al, #+0x5
   5214A:	0127      	st         al, @(+0x1, y)
   5214B:	6A00      	**prefx    0x6A
   5214C:	7615      	ld         al, @0x6A76 <advert_timer_value+0x1>
   5214D:	6A00      	**prefx    0x6A
   5214E:	7511      	ld         ah, @0x6A75 <advert_timer_value>
   5214F:	FC00      	**prefx    0xFC
   52150:	CB00      	**prefx    0xCB
   52151:	DD9C      	bsr        -0x43523 <TimerCreate:0xEC2E[p]>
   52152:	6B00      	**prefx    0x6B
   52153:	9625      	st         al, @0x6A96 <GattAddDatabaseReq>
                                                gattAdvertTimerHandler);
}
   52154:	B00F      	leave      #-0x50

0x00052155 <gattAdvertTimerHandler>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void gattAdvertTimerHandler(timer_id tid)
{
    if (gatt_advert_tid == tid)
   52155:	6B00      	**prefx    0x6B
   52156:	9611      	ld         ah, @0x6A96 <GattAddDatabaseReq>
   52157:	E181      	cmp        ah, @0xFFE1 <register al>
   52158:	05F0      	bne        +0x5 <gattAdvertTimerHandler+0x8:0x5215D[p]>
    {
        gatt_advert_tid = TIMER_INVALID;
   52159:	0014      	ld         al, #+0x0
   5215A:	6B00      	**prefx    0x6B
   5215B:	9625      	st         al, @0x6A96 <GattAddDatabaseReq>

            /* After the timer expiry switch to fast advertising if device is
             * not connected.
             */
        GattTriggerConnectableAdverts(NULL);
   5215C:	99E0      	bra        -0x67 <GattTriggerConnectableAdverts:0x520F5[p]>
   5215D:	00E2      	bra        0x0, x

0x0005215E <TimeModelDataInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void TimeModelDataInit(TIME_HANDLER_DATA_T* time_handler_data)
{
   5215E:	FE0B      	enter      #-0x2
    if(time_handler_data != NULL)
   5215F:	E199      	tst        @0xFFE1 <register al>
   52160:	03F4      	beq        +0x3 <TimeModelDataInit+0x5:0x52163[p]>
    {
        p_time_model_hdlr_data = time_handler_data;
   52161:	6300      	**prefx    0x63
   52162:	2B25      	st         al, @0x632B <p_time_model_hdlr_data>
    }

    p_time_model_hdlr_data->time_model.interval = 60;
   52163:	6300      	**prefx    0x63
   52164:	2B19      	ld         x, @0x632B <p_time_model_hdlr_data>
   52165:	3C10      	ld         ah, #+0x3C
   52166:	0022      	st         ah, @(0x0, x)
    p_time_model_hdlr_data->timezone = 0;
   52167:	0014      	ld         al, #+0x0
   52168:	0526      	st         al, @(+0x5, x)
    MemSet(&p_time_model_hdlr_data->currenttime, 0, 
   52169:	E315      	ld         al, @0xFFE3 <register uxl>
   5216A:	0234      	add        al, #+0x2
   5216B:	0010      	ld         ah, #+0x0
   5216C:	0222      	st         ah, @(+0x2, x)
   5216D:	E119      	ld         x, @0xFFE1 <register al>
   5216E:	0122      	st         ah, @(+0x1, x)
   5216F:	0222      	st         ah, @(+0x2, x)
            sizeof(p_time_model_hdlr_data->currenttime));

    last_updated_tstamp = 0;
   52170:	6300      	**prefx    0x63
   52171:	2C21      	st         ah, @0x632C <last_updated_tstamp>
   52172:	6300      	**prefx    0x63
   52173:	2D21      	st         ah, @0x632D <last_updated_tstamp+0x1>
    g_time_state = time_state_init;
   52174:	0110      	ld         ah, #+0x1
   52175:	6300      	**prefx    0x63
   52176:	2E21      	st         ah, @0x632E <g_time_state>
    elapsed_ms = 0;
   52177:	0014      	ld         al, #+0x0
   52178:	6300      	**prefx    0x63
   52179:	2F25      	st         al, @0x632F <elapsed_ms>
   5217A:	6300      	**prefx    0x63
   5217B:	3025      	st         al, @0x6330 <elapsed_ms+0x1>
    broadcast_repeats = 0;
   5217C:	6300      	**prefx    0x63
   5217D:	3125      	st         al, @0x6331 <broadcast_repeats>

    TimerDelete(tick_timer_tid);
   5217E:	6300      	**prefx    0x63
   5217F:	2A15      	ld         al, @0x632A <tick_timer_tid>
   52180:	FC00      	**prefx    0xFC
   52181:	CB00      	**prefx    0xCB
   52182:	A19C      	bsr        -0x4355F <TimerDelete:0xEC23[p]>
    tick_timer_tid = TIMER_INVALID;
   52183:	0018      	ld         x, #+0x0
   52184:	6300      	**prefx    0x63
   52185:	2A29      	st         x, @0x632A <tick_timer_tid>
}
   52186:	FE0F      	leave      #-0x2

0x00052187 <TimeModelHandlerInit>:
 *
 *---------------------------------------------------------------------------*/
extern void TimeModelHandlerInit(uint8 nw_id,
                                 uint16 model_groups[],
                                 CsrUint16 num_groups)
{
   52187:	FB0B      	enter      #-0x5
    /* Initialize Time Model */
    TimeModelInit(nw_id, 
   52188:	051B      	ld         x, @(+0x5, y)
   52189:	002B      	st         x, @(0x0, y)
   5218A:	2300      	**prefx    0x23
   5218B:	DE18      	ld         x, #+0x22DE
   5218C:	022B      	st         x, @(+0x2, y)
   5218D:	0518      	ld         x, #+0x5
   5218E:	012B      	st         x, @(+0x1, y)
   5218F:	4F00      	**prefx    0x4F
   52190:	DA9C      	bsr        +0x4EDA <TimeModelInit:0x5706A[p]>
                  model_groups,
                  num_groups,
                  timeModelEventHandler);

    TimeModelClientInit(timeModelEventHandler);
   52191:	2300      	**prefx    0x23
   52192:	DE14      	ld         al, #+0x22DE
   52193:	0510      	ld         ah, #+0x5
   52194:	4F00      	**prefx    0x4F
   52195:	C29C      	bsr        +0x4EC2 <TimeModelClientInit:0x57057[p]>
}
   52196:	FB0F      	leave      #-0x5

0x00052197 <compTime48ForSkewDrift>:
 *      returns TRUE if time1 and time2 array would differ by more than 250ms.
 *      returns FALSE if time1 and time2 array would not differ by 250ms.
 *
 *----------------------------------------------------------------------------*/
static bool compTime48ForSkewDrift(uint8 time1[], uint8 time2[])
{
   52197:	F30B      	enter      #-0xD
   52198:	E119      	ld         x, @0xFFE1 <register al>
   52199:	0A23      	st         ah, @(+0xA, y)
    uint16 t1[3], t2[3], t3[3];

    MemCopyPack(t1, time1, TIME_LEN_IN_BYTES);
   5219A:	0614      	ld         al, #+0x6
   5219B:	0027      	st         al, @(0x0, y)
   5219C:	E415      	ld         al, @0xFFE4 <register uy>
   5219D:	0134      	add        al, #+0x1
   5219E:	E311      	ld         ah, @0xFFE3 <register uxl>
   5219F:	FB00      	**prefx    0xFB
   521A0:	0900      	**prefx    0x9
   521A1:	0B9C      	bsr        -0x4F6F5 <MemCopyPack:0x2AAC[p]>
    MemCopyPack(t2, time2, TIME_LEN_IN_BYTES);
   521A2:	0614      	ld         al, #+0x6
   521A3:	0027      	st         al, @(0x0, y)
   521A4:	E415      	ld         al, @0xFFE4 <register uy>
   521A5:	0434      	add        al, #+0x4
   521A6:	0A13      	ld         ah, @(+0xA, y)
   521A7:	FB00      	**prefx    0xFB
   521A8:	0900      	**prefx    0x9
   521A9:	039C      	bsr        -0x4F6FD <MemCopyPack:0x2AAC[p]>

    if(TimeCmp48LT(t2, t1))
   521AA:	E415      	ld         al, @0xFFE4 <register uy>
   521AB:	0434      	add        al, #+0x4
   521AC:	E411      	ld         ah, @0xFFE4 <register uy>
   521AD:	0130      	add        ah, #+0x1
   521AE:	FC00      	**prefx    0xFC
   521AF:	3F00      	**prefx    0x3F
   521B0:	629C      	bsr        -0x3C09E <TimeCmp48LT:0x16112[p]>
   521B1:	E411      	ld         ah, @0xFFE4 <register uy>
   521B2:	0730      	add        ah, #+0x7
   521B3:	E199      	tst        @0xFFE1 <register al>
   521B4:	07F4      	beq        +0x7 <compTime48ForSkewDrift+0x24:0x521BB[p]>
    {
       TimeSub48(t3, t1, t2);
   521B5:	E415      	ld         al, @0xFFE4 <register uy>
   521B6:	0434      	add        al, #+0x4
   521B7:	0027      	st         al, @(0x0, y)
   521B8:	E015      	ld         al, @0xFFE0 <register ah>
   521B9:	FA30      	add        ah, #-0x6
   521BA:	07E0      	bra        +0x7 <compTime48ForSkewDrift+0x2A:0x521C1[p]>
    }
    else
    {
       TimeSub48(t3, t2, t1);
   521BB:	E415      	ld         al, @0xFFE4 <register uy>
   521BC:	0134      	add        al, #+0x1
   521BD:	0027      	st         al, @(0x0, y)
   521BE:	E015      	ld         al, @0xFFE0 <register ah>
   521BF:	E411      	ld         ah, @0xFFE4 <register uy>
   521C0:	0430      	add        ah, #+0x4
   521C1:	FB00      	**prefx    0xFB
   521C2:	0A00      	**prefx    0xA
   521C3:	DA9C      	bsr        -0x4F626 <TimeSub48:0x2B9D[p]>
    }

    if(t3[0] > 250 || t3[1] > 0 || t3[2] > 0)
   521C4:	0717      	ld         al, @(+0x7, y)
   521C5:	0100      	**prefx    0x1
   521C6:	FB84      	cmp        al, #+0xFB
   521C7:	05F8      	bcc        +0x5 <compTime48ForSkewDrift+0x35:0x521CC[p]>
   521C8:	089B      	tst        @(+0x8, y)
   521C9:	03F0      	bne        +0x3 <compTime48ForSkewDrift+0x35:0x521CC[p]>
   521CA:	0917      	ld         al, @(+0x9, y)
   521CB:	02F4      	beq        +0x2 <compTime48ForSkewDrift+0x36:0x521CD[p]>
   521CC:	0114      	ld         al, #+0x1
    {
        return TRUE;
    }
    return FALSE;
}
   521CD:	F30F      	leave      #-0xD

0x000521CE <sendTimeBroadcast>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void sendTimeBroadcast(bool new_update)
{
   521CE:	F30B      	enter      #-0xD
   521CF:	0A27      	st         al, @(+0xA, y)
    CSRMESH_TIME_BROADCAST_T time_bcast;

    MemCopyUnPack(time_bcast.currenttime,  p_time_model_hdlr_data->currenttime,
   521D0:	6300      	**prefx    0x63
   521D1:	2B11      	ld         ah, @0x632B <p_time_model_hdlr_data>
   521D2:	0230      	add        ah, #+0x2
   521D3:	0614      	ld         al, #+0x6
   521D4:	0027      	st         al, @(0x0, y)
   521D5:	E415      	ld         al, @0xFFE4 <register uy>
   521D6:	0234      	add        al, #+0x2
   521D7:	FB00      	**prefx    0xFB
   521D8:	0900      	**prefx    0x9
   521D9:	FD9C      	bsr        -0x4F703 <MemCopyUnPack:0x2AD6[p]>
                  TIME_LEN_IN_BYTES);

    time_bcast.masterclock = (g_time_state == time_state_master);
   521DA:	0014      	ld         al, #+0x0
   521DB:	0927      	st         al, @(+0x9, y)
   521DC:	6300      	**prefx    0x63
   521DD:	2E99      	tst        @0x632E <g_time_state>
   521DE:	03F0      	bne        +0x3 <sendTimeBroadcast+0x13:0x521E1[p]>
   521DF:	0114      	ld         al, #+0x1
   521E0:	0927      	st         al, @(+0x9, y)
    time_bcast.timezone = p_time_model_hdlr_data->timezone;
   521E1:	6300      	**prefx    0x63
   521E2:	2B19      	ld         x, @0x632B <p_time_model_hdlr_data>
   521E3:	051A      	ld         x, @(+0x5, x)
   521E4:	082B      	st         x, @(+0x8, y)

    /* Send the Time Broadcast message */
    TimeBroadcast(DEFAULT_NW_ID, MESH_BROADCAST_ID, TIME_BROADCAST_TTL, 
   521E5:	0014      	ld         al, #+0x0
   521E6:	0027      	st         al, @(0x0, y)
   521E7:	E415      	ld         al, @0xFFE4 <register uy>
   521E8:	0234      	add        al, #+0x2
   521E9:	0127      	st         al, @(+0x1, y)
   521EA:	0014      	ld         al, #+0x0
   521EB:	0010      	ld         ah, #+0x0
   521EC:	4F00      	**prefx    0x4F
   521ED:	3E9C      	bsr        +0x4F3E <TimeBroadcast:0x5712B[p]>
                  &time_bcast);

    /* As the time has changed send an update to the application */
    if(new_update == TRUE)
   521EE:	0A17      	ld         al, @(+0xA, y)
   521EF:	0184      	cmp        al, #+0x1
   521F0:	05F0      	bne        +0x5 <sendTimeBroadcast+0x27:0x521F5[p]>
    {
        AppHandleCurrentTimeUpdate(time_bcast.currenttime);
   521F1:	E415      	ld         al, @0xFFE4 <register uy>
   521F2:	0234      	add        al, #+0x2
   521F3:	1900      	**prefx    0x19
   521F4:	709C      	bsr        +0x1970 <AppHandleCurrentTimeUpdate:0x53B64[p]>
    }
}
   521F5:	F30F      	leave      #-0xD

0x000521F6 <tickTimerHandler>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void tickTimerHandler(timer_id tid)
{
   521F6:	FA0B      	enter      #-0x6
    if (tick_timer_tid == tid)
   521F7:	6300      	**prefx    0x63
   521F8:	2A11      	ld         ah, @0x632A <tick_timer_tid>
   521F9:	E181      	cmp        ah, @0xFFE1 <register al>
   521FA:	7FF0      	bne        +0x7F <tickTimerHandler+0x83:0x52279[p]>
    {
        /* start a new timer for the next update */
        tick_timer_tid =  TimerCreate(TICK_INTERVAL_MS * MILLISECOND, 
   521FB:	0110      	ld         ah, #+0x1
   521FC:	0023      	st         ah, @(0x0, y)
   521FD:	2200      	**prefx    0x22
   521FE:	F614      	ld         al, #+0x21F6
   521FF:	0227      	st         al, @(+0x2, y)
   52200:	0510      	ld         ah, #+0x5
   52201:	0123      	st         ah, @(+0x1, y)
   52202:	0010      	ld         ah, #+0x0
   52203:	C300      	**prefx    0xC3
   52204:	5014      	ld         al, #-0x3CB0
   52205:	FC00      	**prefx    0xFC
   52206:	CA00      	**prefx    0xCA
   52207:	279C      	bsr        -0x435D9 <TimerCreate:0xEC2E[p]>
   52208:	6300      	**prefx    0x63
   52209:	2A25      	st         al, @0x632A <tick_timer_tid>
                                      TRUE, tickTimerHandler);

        /* Update the current time by adding the elapsed time */
        TimeIncrement48(p_time_model_hdlr_data->currenttime, TICK_INTERVAL_MS);
   5220A:	6300      	**prefx    0x63
   5220B:	2B15      	ld         al, @0x632B <p_time_model_hdlr_data>
   5220C:	0234      	add        al, #+0x2
   5220D:	3210      	ld         ah, #+0x32
   5220E:	FB00      	**prefx    0xFB
   5220F:	0A00      	**prefx    0xA
   52210:	819C      	bsr        -0x4F67F <TimeIncrement48:0x2B91[p]>

        /* Elapsed MS is used to drive all the slower timers */
        elapsed_ms += TICK_INTERVAL_MS;
   52211:	6300      	**prefx    0x63
   52212:	3015      	ld         al, @0x6330 <elapsed_ms+0x1>
   52213:	6300      	**prefx    0x63
   52214:	2F11      	ld         ah, @0x632F <elapsed_ms>
   52215:	3234      	add        al, #+0x32
   52216:	0040      	addc       ah, #+0x0
   52217:	6300      	**prefx    0x63
   52218:	3025      	st         al, @0x6330 <elapsed_ms+0x1>
   52219:	6300      	**prefx    0x63
   5221A:	2F21      	st         ah, @0x632F <elapsed_ms>

        /* update the last updated time stamp */
        last_updated_tstamp = TimeGet32();
   5221B:	FB00      	**prefx    0xFB
   5221C:	0900      	**prefx    0x9
   5221D:	499C      	bsr        -0x4F6B7 <TimeGet32:0x2B66[p]>
   5221E:	6300      	**prefx    0x63
   5221F:	2D25      	st         al, @0x632D <last_updated_tstamp+0x1>
   52220:	6300      	**prefx    0x63
   52221:	2C21      	st         ah, @0x632C <last_updated_tstamp>
        
        /* start broadcasting at the broadcast interval if you are a master */
        if(g_time_state == time_state_master)
   52222:	6300      	**prefx    0x63
   52223:	2E15      	ld         al, @0x632E <g_time_state>
   52224:	1DF0      	bne        +0x1D <tickTimerHandler+0x4B:0x52241[p]>
        {
            if(elapsed_ms >= 
   52225:	6300      	**prefx    0x63
   52226:	2B19      	ld         x, @0x632B <p_time_model_hdlr_data>
   52227:	001A      	ld         x, @(0x0, x)
   52228:	E315      	ld         al, @0xFFE3 <register uxl>
   52229:	0009      	**unsigned
   5222A:	0400      	**prefx    0x4
   5222B:	E890      	umult      #0x3E8
   5222C:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5222D:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5222E:	6300      	**prefx    0x63
   5222F:	2F15      	ld         al, @0x632F <elapsed_ms>
   52230:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   52231:	30FC      	bcs        +0x30 <tickTimerHandler+0x6B:0x52261[p]>
   52232:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   52233:	05F0      	bne        +0x5 <tickTimerHandler+0x42:0x52238[p]>
   52234:	6300      	**prefx    0x63
   52235:	3015      	ld         al, @0x6330 <elapsed_ms+0x1>
   52236:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   52237:	2AFC      	bcs        +0x2A <tickTimerHandler+0x6B:0x52261[p]>
                (p_time_model_hdlr_data->time_model.interval*1000UL))
            {
                broadcast_repeats = MASTER_REPEATS;
   52238:	0510      	ld         ah, #+0x5
   52239:	6300      	**prefx    0x63
   5223A:	3121      	st         ah, @0x6331 <broadcast_repeats>
                elapsed_ms = 0;
   5223B:	0014      	ld         al, #+0x0
   5223C:	6300      	**prefx    0x63
   5223D:	2F25      	st         al, @0x632F <elapsed_ms>
   5223E:	6300      	**prefx    0x63
   5223F:	3025      	st         al, @0x6330 <elapsed_ms+0x1>
   52240:	21E0      	bra        +0x21 <tickTimerHandler+0x6B:0x52261[p]>
            }
        }
        else
        {
            /* Check for relay timer */
            if (g_time_state == time_state_no_relay || 
   52241:	FD34      	add        al, #-0x3
   52242:	0284      	cmp        al, #+0x2
   52243:	1EF8      	bcc        +0x1E <tickTimerHandler+0x6B:0x52261[p]>
                g_time_state == time_state_relay_master)
            {
                if(elapsed_ms >= 
   52244:	6300      	**prefx    0x63
   52245:	2B19      	ld         x, @0x632B <p_time_model_hdlr_data>
   52246:	001A      	ld         x, @(0x0, x)
   52247:	E315      	ld         al, @0xFFE3 <register uxl>
   52248:	0009      	**unsigned
   52249:	0400      	**prefx    0x4
   5224A:	E890      	umult      #0x3E8
   5224B:	0009      	**unsigned
   5224C:	02A4      	lsr        #0x2
   5224D:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5224E:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5224F:	6300      	**prefx    0x63
   52250:	2F15      	ld         al, @0x632F <elapsed_ms>
   52251:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   52252:	0FFC      	bcs        +0xF <tickTimerHandler+0x6B:0x52261[p]>
   52253:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   52254:	05F0      	bne        +0x5 <tickTimerHandler+0x63:0x52259[p]>
   52255:	6300      	**prefx    0x63
   52256:	3015      	ld         al, @0x6330 <elapsed_ms+0x1>
   52257:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   52258:	09FC      	bcs        +0x9 <tickTimerHandler+0x6B:0x52261[p]>
                  ((p_time_model_hdlr_data->time_model.interval*1000UL)/4))
                {
                    /* We relay received broadcasts again */
                    g_time_state = time_state_relay;
   52259:	0214      	ld         al, #+0x2
   5225A:	6300      	**prefx    0x63
   5225B:	2E25      	st         al, @0x632E <g_time_state>
                    elapsed_ms = 0;
   5225C:	0010      	ld         ah, #+0x0
   5225D:	6300      	**prefx    0x63
   5225E:	2F21      	st         ah, @0x632F <elapsed_ms>
   5225F:	6300      	**prefx    0x63
   52260:	3021      	st         ah, @0x6330 <elapsed_ms+0x1>
                }
            }
        }

        /* Check for broadcast repeats */
        if (broadcast_repeats)
   52261:	6300      	**prefx    0x63
   52262:	3115      	ld         al, @0x6331 <broadcast_repeats>
   52263:	0327      	st         al, @(+0x3, y)
   52264:	15F4      	beq        +0x15 <tickTimerHandler+0x83:0x52279[p]>
        { 
            if (elapsed_ms % REPEAT_DELAY_MS == 0) 
   52265:	0010      	ld         ah, #+0x0
   52266:	0023      	st         ah, @(0x0, y)
   52267:	3214      	ld         al, #+0x32
   52268:	0127      	st         al, @(+0x1, y)
   52269:	6300      	**prefx    0x63
   5226A:	3015      	ld         al, @0x6330 <elapsed_ms+0x1>
   5226B:	6300      	**prefx    0x63
   5226C:	2F11      	ld         ah, @0x632F <elapsed_ms>
   5226D:	FC00      	**prefx    0xFC
   5226E:	4C00      	**prefx    0x4C
   5226F:	C49C      	bsr        -0x3B43C <__umodhi3:0x16E33[p]>
   52270:	E1B1      	or         ah, @0xFFE1 <register al>
   52271:	08F0      	bne        +0x8 <tickTimerHandler+0x83:0x52279[p]>
            {
                /* It's time for a repeat */
                -- broadcast_repeats;
   52272:	0313      	ld         ah, @(+0x3, y)
   52273:	FF30      	add        ah, #-0x1
   52274:	6300      	**prefx    0x63
   52275:	3121      	st         ah, @0x6331 <broadcast_repeats>
                sendTimeBroadcast(FALSE);
   52276:	0014      	ld         al, #+0x0
   52277:	FF00      	**prefx    0xFF
   52278:	569C      	bsr        -0xAA <sendTimeBroadcast:0x521CE[p]>
            }
        }
    }
}
   52279:	FA0F      	leave      #-0x6

0x0005227A <TimeModelGetUTC>:
 *      returns TRUE if the time is synchronized with UTC time otherwise returns
 *      FALSE.
 *
 *----------------------------------------------------------------------------*/
extern bool TimeModelGetUTC(uint8 current_time[], CsrInt8 *timezone)
{
   5227A:	F60B      	enter      #-0xA
   5227B:	0627      	st         al, @(+0x6, y)
   5227C:	0723      	st         ah, @(+0x7, y)
    uint32 curr_tstamp, elapsed_time_ms;

    if(g_time_state != time_state_init)
   5227D:	6300      	**prefx    0x63
   5227E:	2E15      	ld         al, @0x632E <g_time_state>
   5227F:	0184      	cmp        al, #+0x1
   52280:	03F0      	bne        +0x3 <TimeModelGetUTC+0x9:0x52283[p]>
   52281:	0014      	ld         al, #+0x0
   52282:	53E0      	bra        +0x53 <TimeModelGetUTC+0x5B:0x522D5[p]>
    {
        curr_tstamp = TimeGet32();
   52283:	FB00      	**prefx    0xFB
   52284:	0900      	**prefx    0x9
   52285:	E19C      	bsr        -0x4F71F <TimeGet32:0x2B66[p]>
   52286:	0327      	st         al, @(+0x3, y)
   52287:	0223      	st         ah, @(+0x2, y)

        /* Check for roundoff */
        if(curr_tstamp > last_updated_tstamp)
   52288:	6300      	**prefx    0x63
   52289:	2D11      	ld         ah, @0x632D <last_updated_tstamp+0x1>
   5228A:	0523      	st         ah, @(+0x5, y)
   5228B:	6300      	**prefx    0x63
   5228C:	2C15      	ld         al, @0x632C <last_updated_tstamp>
   5228D:	0427      	st         al, @(+0x4, y)
   5228E:	021B      	ld         x, @(+0x2, y)
   5228F:	E189      	cmp        x, @0xFFE1 <register al>
   52290:	022C      	bcz        +0x2 <TimeModelGetUTC+0x18:0x52292[p]>
   52291:	09E0      	bra        +0x9 <TimeModelGetUTC+0x20:0x5229A[p]>
   52292:	0217      	ld         al, @(+0x2, y)
   52293:	041B      	ld         x, @(+0x4, y)
   52294:	E385      	cmp        al, @0xFFE3 <register uxl>
   52295:	15F0      	bne        +0x15 <TimeModelGetUTC+0x30:0x522AA[p]>
   52296:	0313      	ld         ah, @(+0x3, y)
   52297:	0517      	ld         al, @(+0x5, y)
   52298:	E181      	cmp        ah, @0xFFE1 <register al>
   52299:	112C      	bcz        +0x11 <TimeModelGetUTC+0x30:0x522AA[p]>
        {
            elapsed_time_ms = (curr_tstamp - last_updated_tstamp)/1000;
   5229A:	0317      	ld         al, @(+0x3, y)
   5229B:	0213      	ld         ah, @(+0x2, y)
   5229C:	0557      	sub        al, @(+0x5, y)
   5229D:	0463      	subc       ah, @(+0x4, y)
   5229E:	0327      	st         al, @(+0x3, y)
   5229F:	0223      	st         ah, @(+0x2, y)
   522A0:	0014      	ld         al, #+0x0
   522A1:	0027      	st         al, @(0x0, y)
   522A2:	0400      	**prefx    0x4
   522A3:	E818      	ld         x, #+0x3E8
   522A4:	012B      	st         x, @(+0x1, y)
   522A5:	0313      	ld         ah, @(+0x3, y)
   522A6:	E015      	ld         al, @0xFFE0 <register ah>
   522A7:	021B      	ld         x, @(+0x2, y)
   522A8:	E311      	ld         ah, @0xFFE3 <register uxl>
   522A9:	12E0      	bra        +0x12 <TimeModelGetUTC+0x41:0x522BB[p]>
        }
        else
        {
            elapsed_time_ms = (curr_tstamp + 
   522AA:	0413      	ld         ah, @(+0x4, y)
   522AB:	FFD0      	xor        ah, #0xFFFF
   522AC:	0517      	ld         al, @(+0x5, y)
   522AD:	FFD4      	xor        al, #0xFFFF
   522AE:	F925      	st         al, @0xFFF9 <(scratchpad)>
   522AF:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   522B0:	031B      	ld         x, @(+0x3, y)
   522B1:	E315      	ld         al, @0xFFE3 <register uxl>
   522B2:	021B      	ld         x, @(+0x2, y)
   522B3:	E311      	ld         ah, @0xFFE3 <register uxl>
   522B4:	F935      	add        al, @0xFFF9 <(scratchpad)>
   522B5:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
   522B6:	0018      	ld         x, #+0x0
   522B7:	002B      	st         x, @(0x0, y)
   522B8:	0400      	**prefx    0x4
   522B9:	E818      	ld         x, #+0x3E8
   522BA:	012B      	st         x, @(+0x1, y)
   522BB:	FC00      	**prefx    0xFC
   522BC:	4A00      	**prefx    0x4A
   522BD:	479C      	bsr        -0x3B5B9 <__udivhi3:0x16D04[p]>
   522BE:	E111      	ld         ah, @0xFFE1 <register al>
                           (MAX_32_BIT_VALUE - last_updated_tstamp))/1000;
        }

        /* Send the updated current time by adding the elapsed time */
        TimeIncrement48(p_time_model_hdlr_data->currenttime, elapsed_time_ms);
   522BF:	6300      	**prefx    0x63
   522C0:	2B15      	ld         al, @0x632B <p_time_model_hdlr_data>
   522C1:	0234      	add        al, #+0x2
   522C2:	FB00      	**prefx    0xFB
   522C3:	0900      	**prefx    0x9
   522C4:	CD9C      	bsr        -0x4F733 <TimeIncrement48:0x2B91[p]>
        MemCopyUnPack(current_time, p_time_model_hdlr_data->currenttime,
   522C5:	6300      	**prefx    0x63
   522C6:	2B11      	ld         ah, @0x632B <p_time_model_hdlr_data>
   522C7:	0230      	add        ah, #+0x2
   522C8:	0614      	ld         al, #+0x6
   522C9:	0027      	st         al, @(0x0, y)
   522CA:	0617      	ld         al, @(+0x6, y)
   522CB:	FB00      	**prefx    0xFB
   522CC:	0800      	**prefx    0x8
   522CD:	099C      	bsr        -0x4F7F7 <MemCopyUnPack:0x2AD6[p]>
                      TIME_LEN_IN_BYTES);

        *timezone = p_time_model_hdlr_data->timezone;
   522CE:	6300      	**prefx    0x63
   522CF:	2B15      	ld         al, @0x632B <p_time_model_hdlr_data>
   522D0:	E119      	ld         x, @0xFFE1 <register al>
   522D1:	0516      	ld         al, @(+0x5, x)
   522D2:	071B      	ld         x, @(+0x7, y)
   522D3:	0026      	st         al, @(0x0, x)
   522D4:	0114      	ld         al, #+0x1
        return TRUE;
    }
    return FALSE;
}
   522D5:	F60F      	leave      #-0xA

0x000522D6 <WriteTimeModelDataOntoNVM>:
 *      Nothing.
 *
 
*----------------------------------------------------------------------------*/
extern void WriteTimeModelDataOntoNVM(uint16 offset)
{
   522D6:	FD0B      	enter      #-0x3
    Nvm_Write((uint16*)(&p_time_model_hdlr_data->time_model.interval), 
   522D7:	0027      	st         al, @(0x0, y)
   522D8:	6300      	**prefx    0x63
   522D9:	2B15      	ld         al, @0x632B <p_time_model_hdlr_data>
   522DA:	0110      	ld         ah, #+0x1
   522DB:	E500      	**prefx    0xE5
   522DC:	699C      	bsr        -0x1A97 <Nvm_Write:0x50845[p]>
              sizeof(uint16),
              offset);
}
   522DD:	FD0F      	leave      #-0x3

0x000522DE <timeModelEventHandler>:
 *---------------------------------------------------------------------------*/
static CSRmeshResult timeModelEventHandler(CSRMESH_MODEL_EVENT_T event_code,
                                           CSRMESH_EVENT_DATA_T* data,
                                           CsrUint16 length,
                                           void **state_data)
{
   522DE:	F20B      	enter      #-0xE
   522DF:	F821      	st         ah, @0xFFF8 <(scratchpad)>
    switch(event_code)
   522E0:	7684      	cmp        al, #+0x76
   522E1:	1EF4      	beq        +0x1E <timeModelEventHandler+0x21:0x522FF[p]>
   522E2:	7F84      	cmp        al, #+0x7F
   522E3:	29F4      	beq        +0x29 <timeModelEventHandler+0x2E:0x5230C[p]>
   522E4:	7584      	cmp        al, #+0x75
   522E5:	0100      	**prefx    0x1
   522E6:	9DF0      	bne        +0x9D <timeModelEventHandler+0xA5:0x52383[p]>
    {
        case CSRMESH_TIME_SET_STATE:
        {
            CSRMESH_TIME_SET_STATE_T *p_event = 
                                    (CSRMESH_TIME_SET_STATE_T *)data->data;
   522E7:	E019      	ld         x, @0xFFE0 <register ah>
   522E8:	091A      	ld         x, @(+0x9, x)
   522E9:	F829      	st         x, @0xFFF8 <(scratchpad)>

            p_time_model_hdlr_data->time_model.interval = p_event->interval;
   522EA:	6300      	**prefx    0x63
   522EB:	2B11      	ld         ah, @0x632B <p_time_model_hdlr_data>
   522EC:	0016      	ld         al, @(0x0, x)
   522ED:	E019      	ld         x, @0xFFE0 <register ah>
   522EE:	0026      	st         al, @(0x0, x)
            p_time_model_hdlr_data->time_model.tid = p_event->tid;
   522EF:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   522F0:	0116      	ld         al, @(+0x1, x)
   522F1:	E019      	ld         x, @0xFFE0 <register ah>
   522F2:	0126      	st         al, @(+0x1, x)
            WriteTimeModelDataOntoNVM(NVM_OFFSET_TIME_INTERVAL);
   522F3:	0100      	**prefx    0x1
   522F4:	4014      	ld         al, #+0x140
   522F5:	E19C      	bsr        -0x1F <WriteTimeModelDataOntoNVM:0x522D6[p]>

            /* Send response data to model */
            if (state_data != NULL)
   522F6:	0F9B      	tst        @(+0xF, y)
   522F7:	0100      	**prefx    0x1
   522F8:	8BF4      	beq        +0x8B <timeModelEventHandler+0xA5:0x52383[p]>
            {
                *state_data = (void *)&p_time_model_hdlr_data->time_model;
   522F9:	6300      	**prefx    0x63
   522FA:	2B11      	ld         ah, @0x632B <p_time_model_hdlr_data>
   522FB:	0F1B      	ld         x, @(+0xF, y)
   522FC:	0022      	st         ah, @(0x0, x)
   522FD:	0100      	**prefx    0x1
   522FE:	85E0      	bra        +0x85 <timeModelEventHandler+0xA5:0x52383[p]>
        case CSRMESH_TIME_GET_STATE:
        {
            CSRMESH_TIME_GET_STATE_T *p_event = 
                                    (CSRMESH_TIME_GET_STATE_T *)data->data;

            p_time_model_hdlr_data->time_model.tid = p_event->tid;
   522FF:	6300      	**prefx    0x63
   52300:	2B15      	ld         al, @0x632B <p_time_model_hdlr_data>
   52301:	E019      	ld         x, @0xFFE0 <register ah>
   52302:	0912      	ld         ah, @(+0x9, x)
   52303:	E019      	ld         x, @0xFFE0 <register ah>
   52304:	0012      	ld         ah, @(0x0, x)
   52305:	E119      	ld         x, @0xFFE1 <register al>
   52306:	0122      	st         ah, @(+0x1, x)
            /* Send response data to model */
            if (state_data != NULL)
   52307:	0F9B      	tst        @(+0xF, y)
   52308:	7BF4      	beq        +0x7B <timeModelEventHandler+0xA5:0x52383[p]>
            {
                *state_data = (void *)&p_time_model_hdlr_data->time_model;
   52309:	0F1B      	ld         x, @(+0xF, y)
   5230A:	0026      	st         al, @(0x0, x)
   5230B:	78E0      	bra        +0x78 <timeModelEventHandler+0xA5:0x52383[p]>
        break;

        case CSRMESH_TIME_BROADCAST:
        {
            CSRMESH_TIME_BROADCAST_T *p_event = 
                                    (CSRMESH_TIME_BROADCAST_T *)data->data;
   5230C:	E019      	ld         x, @0xFFE0 <register ah>
   5230D:	091A      	ld         x, @(+0x9, x)
   5230E:	0B2B      	st         x, @(+0xB, y)
            bool update_n_relay = FALSE;
            int8 broadcast_timezone = 0;
            
            /* Take care of sign extension */
            broadcast_timezone = p_event->timezone;
   5230F:	0612      	ld         ah, @(+0x6, x)
   52310:	0A23      	st         ah, @(+0xA, y)
            if (broadcast_timezone & 0x80)
   52311:	E015      	ld         al, @0xFFE0 <register ah>
   52312:	0100      	**prefx    0x1
   52313:	80C4      	and        al, #0x80
   52314:	04F4      	beq        +0x4 <timeModelEventHandler+0x3A:0x52318[p]>
            {
                broadcast_timezone |= 0xFF00;
   52315:	FF00      	**prefx    0xFF
   52316:	00B0      	or         ah, #-0x100
   52317:	0A23      	st         ah, @(+0xA, y)
            }

            if(g_time_state != time_state_master && 
   52318:	6300      	**prefx    0x63
   52319:	2E15      	ld         al, @0x632E <g_time_state>
   5231A:	69F4      	beq        +0x69 <timeModelEventHandler+0xA5:0x52383[p]>
   5231B:	0384      	cmp        al, #+0x3
   5231C:	67F4      	beq        +0x67 <timeModelEventHandler+0xA5:0x52383[p]>
   5231D:	0A1B      	ld         x, @(+0xA, y)
   5231E:	3088      	cmp        x, #+0x30
   5231F:	6420      	bgt        +0x64 <timeModelEventHandler+0xA5:0x52383[p]>
   52320:	D088      	cmp        x, #-0x30
   52321:	62E4      	blt        +0x62 <timeModelEventHandler+0xA5:0x52383[p]>
   52322:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52323:	059A      	tst        @(+0x5, x)
   52324:	5FF0      	bne        +0x5F <timeModelEventHandler+0xA5:0x52383[p]>
               g_time_state != time_state_no_relay &&
               broadcast_timezone <= MAX_TIME_ZONE_VALUE &&
               broadcast_timezone >= MIN_TIME_ZONE_VALUE &&
               data->rx_ttl == 0)
            {
                if(g_time_state == time_state_init)
   52325:	0184      	cmp        al, #+0x1
   52326:	21F0      	bne        +0x21 <timeModelEventHandler+0x69:0x52347[p]>
                    update_n_relay = TRUE;

                    /* Update the state based on the msg received from master
                     * clock.
                     */
                    if(p_event->masterclock == 1)
   52327:	0B1B      	ld         x, @(+0xB, y)
   52328:	0716      	ld         al, @(+0x7, x)
   52329:	0184      	cmp        al, #+0x1
   5232A:	05F0      	bne        +0x5 <timeModelEventHandler+0x51:0x5232F[p]>
                    {
                        g_time_state = time_state_no_relay;
   5232B:	0310      	ld         ah, #+0x3
   5232C:	6300      	**prefx    0x63
   5232D:	2E21      	st         ah, @0x632E <g_time_state>
   5232E:	04E0      	bra        +0x4 <timeModelEventHandler+0x54:0x52332[p]>
                    }
                    else
                    {
                        g_time_state = time_state_relay_master;
   5232F:	0414      	ld         al, #+0x4
   52330:	6300      	**prefx    0x63
   52331:	2E25      	st         al, @0x632E <g_time_state>
                    }

                    /* Start the tick timer */
                    TimerDelete(tick_timer_tid);
   52332:	6300      	**prefx    0x63
   52333:	2A15      	ld         al, @0x632A <tick_timer_tid>
   52334:	FC00      	**prefx    0xFC
   52335:	C900      	**prefx    0xC9
   52336:	ED9C      	bsr        -0x43713 <TimerDelete:0xEC23[p]>
                    tick_timer_tid = 
   52337:	0118      	ld         x, #+0x1
   52338:	002B      	st         x, @(0x0, y)
   52339:	2200      	**prefx    0x22
   5233A:	F610      	ld         ah, #+0x21F6
   5233B:	0223      	st         ah, @(+0x2, y)
   5233C:	0514      	ld         al, #+0x5
   5233D:	0127      	st         al, @(+0x1, y)
   5233E:	0010      	ld         ah, #+0x0
   5233F:	C300      	**prefx    0xC3
   52340:	5014      	ld         al, #-0x3CB0
   52341:	FC00      	**prefx    0xFC
   52342:	C900      	**prefx    0xC9
   52343:	EB9C      	bsr        -0x43715 <TimerCreate:0xEC2E[p]>
   52344:	6300      	**prefx    0x63
   52345:	2A25      	st         al, @0x632A <tick_timer_tid>
   52346:	25E0      	bra        +0x25 <timeModelEventHandler+0x8D:0x5236B[p]>
                        TimerCreate(TICK_INTERVAL_MS * MILLISECOND,
                                    TRUE, tickTimerHandler);
                }
                else if(g_time_state == time_state_relay)
   52347:	0284      	cmp        al, #+0x2
   52348:	1AF0      	bne        +0x1A <timeModelEventHandler+0x84:0x52362[p]>
                {
                    /* Update the state based on the msg received from master
                     * clock.
                     */
                    if(p_event->masterclock == 0)
   52349:	0B1B      	ld         x, @(+0xB, y)
   5234A:	079A      	tst        @(+0x7, x)
   5234B:	03F0      	bne        +0x3 <timeModelEventHandler+0x70:0x5234E[p]>
                    {
                        update_n_relay = TRUE;
                        g_time_state = time_state_relay_master;
   5234C:	0410      	ld         ah, #+0x4
   5234D:	1CE0      	bra        +0x1C <timeModelEventHandler+0x8B:0x52369[p]>
static bool checkForClockCorrection(uint8 recvd_curr_time[])
{
    uint8 current_time[TIME_LEN_IN_BYTES];
    CsrInt8 timezone;

    TimeModelGetUTC(current_time, &timezone);
   5234E:	E415      	ld         al, @0xFFE4 <register uy>
   5234F:	0434      	add        al, #+0x4
   52350:	E411      	ld         ah, @0xFFE4 <register uy>
   52351:	0330      	add        ah, #+0x3
   52352:	FF00      	**prefx    0xFF
   52353:	279C      	bsr        -0xD9 <TimeModelGetUTC:0x5227A[p]>

    if(compTime48ForSkewDrift(current_time, recvd_curr_time))
   52354:	E415      	ld         al, @0xFFE4 <register uy>
   52355:	0434      	add        al, #+0x4
   52356:	0B13      	ld         ah, @(+0xB, y)
   52357:	FE00      	**prefx    0xFE
   52358:	3F9C      	bsr        -0x1C1 <compTime48ForSkewDrift:0x52197[p]>
   52359:	E199      	tst        @0xFFE1 <register al>
   5235A:	2BF4      	beq        +0x2B <timeModelEventHandler+0xA7:0x52385[p]>
   5235B:	0114      	ld         al, #+0x1
                            /* Dont Update just relay this message */
                            sendTimeBroadcast(TRUE);
                            elapsed_ms = 0;
                            broadcast_repeats = RELAY_REPEATS;
                        }
                        g_time_state = time_state_no_relay;
   5235C:	0318      	ld         x, #+0x3
   5235D:	6300      	**prefx    0x63
   5235E:	2E29      	st         x, @0x632E <g_time_state>
                        update_n_relay = TRUE;
                        g_time_state = time_state_no_relay;
                    }
                }

                if(update_n_relay == TRUE)
   5235F:	0184      	cmp        al, #+0x1
   52360:	23F0      	bne        +0x23 <timeModelEventHandler+0xA5:0x52383[p]>
   52361:	0AE0      	bra        +0xA <timeModelEventHandler+0x8D:0x5236B[p]>
                            broadcast_repeats = RELAY_REPEATS;
                        }
                        g_time_state = time_state_no_relay;
                    }
                }
                else if(g_time_state == time_state_relay_master)
   52362:	0484      	cmp        al, #+0x4
   52363:	20F0      	bne        +0x20 <timeModelEventHandler+0xA5:0x52383[p]>
                {
                    if(p_event->masterclock == 1)
   52364:	0B1B      	ld         x, @(+0xB, y)
   52365:	0716      	ld         al, @(+0x7, x)
   52366:	0184      	cmp        al, #+0x1
   52367:	1CF0      	bne        +0x1C <timeModelEventHandler+0xA5:0x52383[p]>
                    {
                        /* update the new time in globals and then relay the 
                         * msg
                         */
                        update_n_relay = TRUE;
                        g_time_state = time_state_no_relay;
   52368:	0310      	ld         ah, #+0x3
   52369:	6300      	**prefx    0x63
   5236A:	2E21      	st         ah, @0x632E <g_time_state>
                }

                if(update_n_relay == TRUE)
                {
                    /* update the new time in globals and then relay the msg */
                    MemCopyPack(p_time_model_hdlr_data->currenttime, 
   5236B:	6300      	**prefx    0x63
   5236C:	2B15      	ld         al, @0x632B <p_time_model_hdlr_data>
   5236D:	0234      	add        al, #+0x2
   5236E:	0618      	ld         x, #+0x6
   5236F:	002B      	st         x, @(0x0, y)
   52370:	0B13      	ld         ah, @(+0xB, y)
   52371:	FB00      	**prefx    0xFB
   52372:	0700      	**prefx    0x7
   52373:	399C      	bsr        -0x4F8C7 <MemCopyPack:0x2AAC[p]>
                                p_event->currenttime,
                                TIME_LEN_IN_BYTES);
                    p_time_model_hdlr_data->timezone = broadcast_timezone;
   52374:	6300      	**prefx    0x63
   52375:	2B19      	ld         x, @0x632B <p_time_model_hdlr_data>
   52376:	0A13      	ld         ah, @(+0xA, y)
   52377:	0522      	st         ah, @(+0x5, x)
                    sendTimeBroadcast(TRUE);
   52378:	0114      	ld         al, #+0x1
   52379:	FE00      	**prefx    0xFE
   5237A:	549C      	bsr        -0x1AC <sendTimeBroadcast:0x521CE[p]>
                    elapsed_ms = 0;
   5237B:	0014      	ld         al, #+0x0
   5237C:	6300      	**prefx    0x63
   5237D:	2F25      	st         al, @0x632F <elapsed_ms>
   5237E:	6300      	**prefx    0x63
   5237F:	3025      	st         al, @0x6330 <elapsed_ms+0x1>
                    broadcast_repeats = RELAY_REPEATS;
   52380:	0318      	ld         x, #+0x3
   52381:	6300      	**prefx    0x63
   52382:	3129      	st         x, @0x6331 <broadcast_repeats>
        default:
        break;
    }

    return CSR_MESH_RESULT_SUCCESS;
}
   52383:	0014      	ld         al, #+0x0
   52384:	F20F      	leave      #-0xE
                            update_n_relay = TRUE;
                        }
                        else
                        {
                            /* Dont Update just relay this message */
                            sendTimeBroadcast(TRUE);
   52385:	0114      	ld         al, #+0x1
   52386:	FE00      	**prefx    0xFE
   52387:	479C      	bsr        -0x1B9 <sendTimeBroadcast:0x521CE[p]>
                            elapsed_ms = 0;
   52388:	0010      	ld         ah, #+0x0
   52389:	6300      	**prefx    0x63
   5238A:	2F21      	st         ah, @0x632F <elapsed_ms>
   5238B:	6300      	**prefx    0x63
   5238C:	3021      	st         ah, @0x6330 <elapsed_ms+0x1>
                            broadcast_repeats = RELAY_REPEATS;
   5238D:	0314      	ld         al, #+0x3
   5238E:	6300      	**prefx    0x63
   5238F:	3125      	st         al, @0x6331 <broadcast_repeats>
   52390:	0014      	ld         al, #+0x0
   52391:	CBE0      	bra        -0x35 <timeModelEventHandler+0x7E:0x5235C[p]>

0x00052392 <ReadTimeModelDataFromNVM>:
 *      Nothing.
 *
 
*----------------------------------------------------------------------------*/
extern void ReadTimeModelDataFromNVM(uint16 offset)
{
   52392:	FD0B      	enter      #-0x3
    Nvm_Read((uint16*)(&p_time_model_hdlr_data->time_model.interval), 
   52393:	0027      	st         al, @(0x0, y)
   52394:	6300      	**prefx    0x63
   52395:	2B15      	ld         al, @0x632B <p_time_model_hdlr_data>
   52396:	0110      	ld         ah, #+0x1
   52397:	E500      	**prefx    0xE5
   52398:	C49C      	bsr        -0x1B3C <Nvm_Read:0x5085C[p]>
             sizeof(uint16),
             offset);
}
   52399:	FD0F      	leave      #-0x3

0x0005239A <getDiffTimeInSeconds>:
 *  RETURNS/MODIFIES
 *      returns the difference time in seconds
 *
 *----------------------------------------------------------------------------*/
static uint32 getDiffTimeInSeconds(uint8 time1[], uint8 time2[])
{
   5239A:	F10B      	enter      #-0xF
   5239B:	FB25      	st         al, @0xFFFB <(scratchpad)>
   5239C:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   5239D:	0010      	ld         ah, #+0x0
   5239E:	F921      	st         ah, @0xFFF9 <(scratchpad)>
     * the time3 array.
     */
    for(index = 0; index < 6; index ++)
    {
        /* Get the first byte of time1 onto temp */
        temp1 = time1[index];
   5239F:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   523A0:	E039      	add        x, @0xFFE0 <register ah>
   523A1:	001A      	ld         x, @(0x0, x)
   523A2:	F829      	st         x, @0xFFF8 <(scratchpad)>

        /* If a carry is present and the byte value is greater than zero, then
         * subtract the value and assign the carry to FALSE.
         */
        if(carry == TRUE && temp1 > 0)
   523A3:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   523A4:	0184      	cmp        al, #+0x1
   523A5:	07F0      	bne        +0x7 <getDiffTimeInSeconds+0x12:0x523AC[p]>
   523A6:	E399      	tst        @0xFFE3 <register uxl>
   523A7:	05F4      	beq        +0x5 <getDiffTimeInSeconds+0x12:0x523AC[p]>
        {
            temp1--;
   523A8:	FF38      	add        x, #-0x1
   523A9:	F829      	st         x, @0xFFF8 <(scratchpad)>
   523AA:	0014      	ld         al, #+0x0
   523AB:	F925      	st         al, @0xFFF9 <(scratchpad)>
        }
        /* If the byte in array1 is more than or equal to the byte in array2 
         * then just subtract the value otherwise add the max byte value + 1 
         * and subtract the array2 value and set the carry bit.
         */
        if(temp1 >= time2[index])
   523AC:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   523AD:	E039      	add        x, @0xFFE0 <register ah>
   523AE:	001A      	ld         x, @(0x0, x)
   523AF:	FF2B      	st         x, @(-0x1, y)
   523B0:	E419      	ld         x, @0xFFE4 <register uy>
   523B1:	0238      	add        x, #+0x2
   523B2:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   523B3:	FF87      	cmp        al, @(-0x1, y)
   523B4:	05FC      	bcs        +0x5 <getDiffTimeInSeconds+0x1F:0x523B9[p]>
        {
            time3[index] = temp1 - time2[index];
   523B5:	E039      	add        x, @0xFFE0 <register ah>
   523B6:	FF57      	sub        al, @(-0x1, y)
   523B7:	0026      	st         al, @(0x0, x)
   523B8:	09E0      	bra        +0x9 <getDiffTimeInSeconds+0x27:0x523C1[p]>
        }
        else
        {
            temp_sum = 0x0100 + temp1;
            time3[index] = temp_sum - time2[index];
   523B9:	E039      	add        x, @0xFFE0 <register ah>
   523BA:	0100      	**prefx    0x1
   523BB:	0014      	ld         al, #+0x100
   523BC:	FF57      	sub        al, @(-0x1, y)
   523BD:	F835      	add        al, @0xFFF8 <(scratchpad)>
   523BE:	0026      	st         al, @(0x0, x)
   523BF:	0118      	ld         x, #+0x1
   523C0:	F929      	st         x, @0xFFF9 <(scratchpad)>
    uint32 quotient=0, dividend=0;

    /* The below loop subtracts the time1 from time2 and puts the value onto
     * the time3 array.
     */
    for(index = 0; index < 6; index ++)
   523C1:	0130      	add        ah, #+0x1
   523C2:	0680      	cmp        ah, #+0x6
   523C3:	DCF0      	bne        -0x24 <getDiffTimeInSeconds+0x5:0x5239F[p]>
   523C4:	E415      	ld         al, @0xFFE4 <register uy>
   523C5:	0734      	add        al, #+0x7
   523C6:	0827      	st         al, @(+0x8, y)
   523C7:	0018      	ld         x, #+0x0
   523C8:	092B      	st         x, @(+0x9, y)
   523C9:	0A2B      	st         x, @(+0xA, y)
   523CA:	0010      	ld         ah, #+0x0
   523CB:	0014      	ld         al, #+0x0
   523CC:	0FE0      	bra        +0xF <getDiffTimeInSeconds+0x41:0x523DB[p]>
     * value in uint32 format.
     */
    for(index = 6; index >0; index=index-2)
    {
        /* Left shift the val in the loop once the quotient value is assigned */
        if(quotient > 0)
   523CD:	0917      	ld         al, @(+0x9, y)
   523CE:	0AB7      	or         al, @(+0xA, y)
   523CF:	06F4      	beq        +0x6 <getDiffTimeInSeconds+0x3B:0x523D5[p]>
        {
            quotient <<=16;
   523D0:	0913      	ld         ah, @(+0x9, y)
   523D1:	0A17      	ld         al, @(+0xA, y)
   523D2:	10A0      	asl        #0x10
   523D3:	0923      	st         ah, @(+0x9, y)
   523D4:	0A27      	st         al, @(+0xA, y)
        if(dividend > divisor)
        {
            quotient |= dividend/divisor;
            dividend %= divisor;
        }
        dividend <<= 8;
   523D5:	0C17      	ld         al, @(+0xC, y)
   523D6:	0B13      	ld         ah, @(+0xB, y)
   523D7:	08A0      	asl        #0x8
   523D8:	081B      	ld         x, @(+0x8, y)
   523D9:	FE38      	add        x, #-0x2
   523DA:	082B      	st         x, @(+0x8, y)
        /* Get the two byte values from the array and assign it as the new 
         * dividend. Make sure you append the same as there could be a remainder
         * from the previous part division.
         */
        temp1 = index-1;
        dividend |= time3[temp1--];
   523DB:	081B      	ld         x, @(+0x8, y)
   523DC:	00B6      	or         al, @(0x0, x)
        dividend <<= 8;
   523DD:	08A0      	asl        #0x8
        dividend |= time3[temp1];
   523DE:	FFB6      	or         al, @(-0x1, x)
   523DF:	0C27      	st         al, @(+0xC, y)
   523E0:	0B23      	st         ah, @(+0xB, y)

        /* If the dividend is greater than the divisor then divide the same and 
         * assign the remainder back to dividend. Left shift the dividend by one
         * byte for the next byte.
         */
        if(dividend > divisor)
   523E1:	04F0      	bne        +0x4 <getDiffTimeInSeconds+0x4B:0x523E5[p]>
   523E2:	0400      	**prefx    0x4
   523E3:	E984      	cmp        al, #+0x3E9
   523E4:	1BFC      	bcs        +0x1B <getDiffTimeInSeconds+0x65:0x523FF[p]>
        {
            quotient |= dividend/divisor;
   523E5:	0014      	ld         al, #+0x0
   523E6:	0027      	st         al, @(0x0, y)
   523E7:	0400      	**prefx    0x4
   523E8:	E818      	ld         x, #+0x3E8
   523E9:	012B      	st         x, @(+0x1, y)
   523EA:	0C17      	ld         al, @(+0xC, y)
   523EB:	0B13      	ld         ah, @(+0xB, y)
   523EC:	FC00      	**prefx    0xFC
   523ED:	4900      	**prefx    0x49
   523EE:	169C      	bsr        -0x3B6EA <__udivhi3:0x16D04[p]>
   523EF:	0AB7      	or         al, @(+0xA, y)
   523F0:	09B3      	or         ah, @(+0x9, y)
   523F1:	0A27      	st         al, @(+0xA, y)
   523F2:	0923      	st         ah, @(+0x9, y)
            dividend %= divisor;
   523F3:	0014      	ld         al, #+0x0
   523F4:	0027      	st         al, @(0x0, y)
   523F5:	0400      	**prefx    0x4
   523F6:	E818      	ld         x, #+0x3E8
   523F7:	012B      	st         x, @(+0x1, y)
   523F8:	0C17      	ld         al, @(+0xC, y)
   523F9:	0B13      	ld         ah, @(+0xB, y)
   523FA:	FC00      	**prefx    0xFC
   523FB:	4A00      	**prefx    0x4A
   523FC:	379C      	bsr        -0x3B5C9 <__umodhi3:0x16E33[p]>
   523FD:	0C27      	st         al, @(+0xC, y)
   523FE:	0B23      	st         ah, @(+0xB, y)
    }

    /* The below loop divides the time3 value by divisor and gives the quotient
     * value in uint32 format.
     */
    for(index = 6; index >0; index=index-2)
   523FF:	E415      	ld         al, @0xFFE4 <register uy>
   52400:	0334      	add        al, #+0x3
   52401:	081B      	ld         x, @(+0x8, y)
   52402:	E189      	cmp        x, @0xFFE1 <register al>
   52403:	CAF0      	bne        -0x36 <getDiffTimeInSeconds+0x33:0x523CD[p]>
            dividend %= divisor;
        }
        dividend <<= 8;
    }
    return quotient;
}
   52404:	0913      	ld         ah, @(+0x9, y)
   52405:	0A17      	ld         al, @(+0xA, y)
   52406:	F10F      	leave      #-0xF

0x00052407 <getActionIdIndex>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static uint8 getActionIdIndex(uint8 action_id)
{
   52407:	FE0B      	enter      #-0x2
   52408:	F825      	st         al, @0xFFF8 <(scratchpad)>
   52409:	0014      	ld         al, #+0x0
   5240A:	F925      	st         al, @0xFFF9 <(scratchpad)>
    /* check whether the action is already present if present then send the 
     * same index.
     */
    for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
    {
        if(action_id == action_hdlr_priv_data.actions[index].action_id)
   5240B:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5240C:	1790      	smult      #+0x17
   5240D:	FA25      	st         al, @0xFFFA <(scratchpad)>
   5240E:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5240F:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   52410:	6300      	**prefx    0x63
   52411:	3286      	cmp        al, @(+0x6332, x)
   52412:	17F4      	beq        +0x17 <getActionIdIndex+0x22:0x52429[p]>
    uint8 index;

    /* check whether the action is already present if present then send the 
     * same index.
     */
    for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
   52413:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   52414:	0138      	add        x, #+0x1
   52415:	F929      	st         x, @0xFFF9 <(scratchpad)>
   52416:	0688      	cmp        x, #+0x6
   52417:	F4F0      	bne        -0xC <getActionIdIndex+0x4:0x5240B[p]>
   52418:	0014      	ld         al, #+0x0
   52419:	F925      	st         al, @0xFFF9 <(scratchpad)>
    /* Check for an empty slot and send the lowest available action info which
     * is free.
     */
    for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
    {
        if(action_hdlr_priv_data.actions[index].action_id > ACTION_ID_MAX)
   5241A:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5241B:	1790      	smult      #+0x17
   5241C:	E119      	ld         x, @0xFFE1 <register al>
   5241D:	6300      	**prefx    0x63
   5241E:	3216      	ld         al, @(+0x6332, x)
   5241F:	2184      	cmp        al, #+0x21
   52420:	09F8      	bcc        +0x9 <getActionIdIndex+0x22:0x52429[p]>
    }

    /* Check for an empty slot and send the lowest available action info which
     * is free.
     */
    for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
   52421:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   52422:	0134      	add        al, #+0x1
   52423:	F925      	st         al, @0xFFF9 <(scratchpad)>
   52424:	0684      	cmp        al, #+0x6
   52425:	F5F0      	bne        -0xB <getActionIdIndex+0x13:0x5241A[p]>
   52426:	0100      	**prefx    0x1
   52427:	FF18      	ld         x, #+0xFF
   52428:	F929      	st         x, @0xFFF9 <(scratchpad)>
            return index;
        }
    }

    return ACTION_INDEX_INVALID;
}
   52429:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5242A:	FE0F      	leave      #-0x2

0x0005242B <getCurrentRefTime>:
 *  RETURNS/MODIFIES
 *      returns the current reference time.
 *
 *----------------------------------------------------------------------------*/
static uint32 getCurrentRefTime(uint8 current_utc_time[])
{
   5242B:	F80B      	enter      #-0x8
   5242C:	F825      	st         al, @0xFFF8 <(scratchpad)>
    /* Reference time 1st jan 2015 in UTC */
    uint8 ref_time[] = {0x40, 0x90, 0x9C, 0xA1, 0x4A, 0x01};
   5242D:	0614      	ld         al, #+0x6
   5242E:	E411      	ld         ah, @0xFFE4 <register uy>
   5242F:	A100      	**prefx    0xA1
   52430:	E118      	ld         x, #-0x5F1F
   52431:	FD09      	bc2        

    /* When the current utc team is updated then the new curr reference time is
     * caleculated.
     */
    return getDiffTimeInSeconds(current_utc_time, ref_time);
   52432:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   52433:	E411      	ld         ah, @0xFFE4 <register uy>
   52434:	FF00      	**prefx    0xFF
   52435:	659C      	bsr        -0x9B <getDiffTimeInSeconds:0x5239A[p]>
}
   52436:	F80F      	leave      #-0x8

0x00052437 <ActionModelDataInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void ActionModelDataInit(void)
{
   52437:	FD0B      	enter      #-0x3
    uint8 index;

    MemSet(&action_hdlr_priv_data, 0, 
   52438:	0100      	**prefx    0x1
   52439:	B314      	ld         al, #+0xB3
   5243A:	0027      	st         al, @(0x0, y)
   5243B:	6300      	**prefx    0x63
   5243C:	3214      	ld         al, #+0x6332
   5243D:	0010      	ld         ah, #+0x0
   5243E:	FB00      	**prefx    0xFB
   5243F:	0700      	**prefx    0x7
   52440:	109C      	bsr        -0x4F8F0 <MemSet:0x2B50[p]>
            sizeof(action_hdlr_priv_data));

    TimerDelete(action_hdlr_priv_data.pkt_assembly_tid);
   52441:	6400      	**prefx    0x64
   52442:	DC18      	ld         x, #+0x63DC
   52443:	0016      	ld         al, @(0x0, x)
   52444:	FC00      	**prefx    0xFC
   52445:	C800      	**prefx    0xC8
   52446:	DD9C      	bsr        -0x43823 <TimerDelete:0xEC23[p]>
    action_hdlr_priv_data.pkt_assembly_tid = TIMER_INVALID;
   52447:	0014      	ld         al, #+0x0
   52448:	6400      	**prefx    0x64
   52449:	DC18      	ld         x, #+0x63DC
   5244A:	0026      	st         al, @(0x0, x)

    TimerDelete(action_hdlr_priv_data.next_action_tid);
   5244B:	6400      	**prefx    0x64
   5244C:	E118      	ld         x, #+0x63E1
   5244D:	0016      	ld         al, @(0x0, x)
   5244E:	FC00      	**prefx    0xFC
   5244F:	C800      	**prefx    0xC8
   52450:	D39C      	bsr        -0x4382D <TimerDelete:0xEC23[p]>
    action_hdlr_priv_data.next_action_tid = TIMER_INVALID;
   52451:	0014      	ld         al, #+0x0
   52452:	6400      	**prefx    0x64
   52453:	E118      	ld         x, #+0x63E1
   52454:	0026      	st         al, @(0x0, x)

    for(index=0; index < MAX_ACTIONS_SUPPORTED; index++)
    {
        action_hdlr_priv_data.actions[index].action_id = ACTION_ID_INVALID;
   52455:	0100      	**prefx    0x1
   52456:	FF14      	ld         al, #+0xFF
   52457:	6300      	**prefx    0x63
   52458:	3218      	ld         x, #+0x6332
   52459:	0026      	st         al, @(0x0, x)
   5245A:	6300      	**prefx    0x63
   5245B:	4925      	st         al, @0x6349 <action_hdlr_priv_data+0x17>
   5245C:	6300      	**prefx    0x63
   5245D:	6025      	st         al, @0x6360 <___libgatt_lib_db_631+0x2>
   5245E:	6300      	**prefx    0x63
   5245F:	7725      	st         al, @0x6377 <___libgatt_lib_db_631+0x19>
   52460:	6400      	**prefx    0x64
   52461:	8E25      	st         al, @0x638E <___libgatt_lib_db_634+0x13>
   52462:	6400      	**prefx    0x64
   52463:	A525      	st         al, @0x63A5 <___libgatt_lib_db_635+0x13>
    }
}
   52464:	FD0F      	leave      #-0x3

0x00052465 <resetPktAssemblyInfo>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void resetPktAssemblyInfo(void)
{
   52465:	FD0B      	enter      #-0x3
    MemSet(&action_hdlr_priv_data.pkt_assembly, 0,
   52466:	2014      	ld         al, #+0x20
   52467:	0027      	st         al, @(0x0, y)
   52468:	6400      	**prefx    0x64
   52469:	BC14      	ld         al, #+0x63BC
   5246A:	0010      	ld         ah, #+0x0
   5246B:	FB00      	**prefx    0xFB
   5246C:	0700      	**prefx    0x7
   5246D:	E39C      	bsr        -0x4F91D <MemSet:0x2B50[p]>
           sizeof(action_hdlr_priv_data.pkt_assembly));
    TimerDelete(action_hdlr_priv_data.pkt_assembly_tid);
   5246E:	6400      	**prefx    0x64
   5246F:	DC15      	ld         al, @0x63DC <___libgatt_lib_db_639+0x9>
   52470:	FC00      	**prefx    0xFC
   52471:	C800      	**prefx    0xC8
   52472:	B19C      	bsr        -0x4384F <TimerDelete:0xEC23[p]>
    action_hdlr_priv_data.pkt_assembly_tid = TIMER_INVALID;
   52473:	0014      	ld         al, #+0x0
   52474:	6400      	**prefx    0x64
   52475:	DC25      	st         al, @0x63DC <___libgatt_lib_db_639+0x9>
    action_hdlr_priv_data.assembly_action_id = ACTION_ID_INVALID;
   52476:	0100      	**prefx    0x1
   52477:	FF14      	ld         al, #+0xFF
   52478:	6400      	**prefx    0x64
   52479:	DD25      	st         al, @0x63DD <___libgatt_lib_db_639+0xA>
    action_hdlr_priv_data.recvd_msg_bitmask = 0;
   5247A:	0014      	ld         al, #+0x0
   5247B:	6400      	**prefx    0x64
   5247C:	DE25      	st         al, @0x63DE <___libgatt_lib_db_639+0xB>
    action_hdlr_priv_data.last_part_recvd = FALSE;
   5247D:	6400      	**prefx    0x64
   5247E:	DF25      	st         al, @0x63DF <___libgatt_lib_db_639+0xC>
    action_hdlr_priv_data.full_msg_bitmask = 0;
   5247F:	6400      	**prefx    0x64
   52480:	E025      	st         al, @0x63E0 <___libgatt_lib_db_639+0xD>
}
   52481:	FD0F      	leave      #-0x3

0x00052482 <pktAssemblyTimeoutHandler>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void pktAssemblyTimeoutHandler(timer_id tid)
{
    if (action_hdlr_priv_data.pkt_assembly_tid == tid)
   52482:	6400      	**prefx    0x64
   52483:	DC11      	ld         ah, @0x63DC <___libgatt_lib_db_639+0x9>
   52484:	E181      	cmp        ah, @0xFFE1 <register al>
   52485:	02F0      	bne        +0x2 <pktAssemblyTimeoutHandler+0x5:0x52487[p]>
    {
        resetPktAssemblyInfo();
   52486:	DFE0      	bra        -0x21 <resetPktAssemblyInfo:0x52465[p]>
   52487:	00E2      	bra        0x0, x

0x00052488 <ActionModelHandlerInit>:
 *
 *---------------------------------------------------------------------------*/
extern void ActionModelHandlerInit(uint8 nw_id,
                                   uint16 model_groups[],
                                   CsrUint16 num_groups)
{
   52488:	FB0B      	enter      #-0x5
    /* Initialize Action Model */
    ActionModelInit(nw_id, 
   52489:	051B      	ld         x, @(+0x5, y)
   5248A:	002B      	st         x, @(0x0, y)
   5248B:	2600      	**prefx    0x26
   5248C:	E618      	ld         x, #+0x25E6
   5248D:	022B      	st         x, @(+0x2, y)
   5248E:	0518      	ld         x, #+0x5
   5248F:	012B      	st         x, @(+0x1, y)
   52490:	4D00      	**prefx    0x4D
   52491:	C79C      	bsr        +0x4CC7 <ActionModelInit:0x57158[p]>
                    model_groups,
                    num_groups,
                    actionModelEventHandler);
}
   52492:	FB0F      	leave      #-0x5

0x00052493 <setTimerForNextAction>:
 *  RETURNS/MODIFIES
 *      returns the current reference time.
 *
 *----------------------------------------------------------------------------*/
static void setTimerForNextAction(uint8 current_utc_time[])
{
   52493:	EF0B      	enter      #-0x11
    uint32 timer_time, curr_ref_time;
    uint8 action_index=0;

    /* Get the current reference time based on UTC */
    curr_ref_time = getCurrentRefTime(current_utc_time);
   52494:	979C      	bsr        -0x69 <getCurrentRefTime:0x5242B[p]>
   52495:	0827      	st         al, @(+0x8, y)
   52496:	0723      	st         ah, @(+0x7, y)
   52497:	0010      	ld         ah, #+0x0
   52498:	0623      	st         ah, @(+0x6, y)
   52499:	FF14      	ld         al, #-0x1
   5249A:	0B27      	st         al, @(+0xB, y)
   5249B:	0C27      	st         al, @(+0xC, y)
   5249C:	0323      	st         ah, @(+0x3, y)
 *  RETURNS/MODIFIES
 *      returns the current reference time.
 *
 *----------------------------------------------------------------------------*/
static void setTimerForNextAction(uint8 current_utc_time[])
{
   5249D:	0617      	ld         al, @(+0x6, y)
   5249E:	1790      	smult      #+0x17
   5249F:	E119      	ld         x, @0xFFE1 <register al>
    uint8 index;
    uint32 next_exp_time = 0xFFFFFFFF;

    for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
    {
        if(action_hdlr_priv_data.actions[index].action_id < ACTION_ID_MAX)
   524A0:	6300      	**prefx    0x63
   524A1:	3216      	ld         al, @(+0x6332, x)
   524A2:	2084      	cmp        al, #+0x20
   524A3:	61F8      	bcc        +0x61 <setTimerForNextAction+0x71:0x52504[p]>
        {
            /* The start time of the action has not been elapsed yet.*/
            if(action_hdlr_priv_data.actions[index].start_time > cur_ref_time)
   524A4:	6300      	**prefx    0x63
   524A5:	3512      	ld         ah, @(+0x6335, x)
   524A6:	0523      	st         ah, @(+0x5, y)
   524A7:	6300      	**prefx    0x63
   524A8:	3416      	ld         al, @(+0x6334, x)
   524A9:	0427      	st         al, @(+0x4, y)
   524AA:	E111      	ld         ah, @0xFFE1 <register al>
   524AB:	0717      	ld         al, @(+0x7, y)
   524AC:	E181      	cmp        ah, @0xFFE1 <register al>
   524AD:	022C      	bcz        +0x2 <setTimerForNextAction+0x1C:0x524AF[p]>
   524AE:	09E0      	bra        +0x9 <setTimerForNextAction+0x24:0x524B7[p]>
   524AF:	0413      	ld         ah, @(+0x4, y)
   524B0:	0717      	ld         al, @(+0x7, y)
   524B1:	E181      	cmp        ah, @0xFFE1 <register al>
   524B2:	13F0      	bne        +0x13 <setTimerForNextAction+0x32:0x524C5[p]>
   524B3:	0513      	ld         ah, @(+0x5, y)
   524B4:	0817      	ld         al, @(+0x8, y)
   524B5:	E181      	cmp        ah, @0xFFE1 <register al>
   524B6:	0F2C      	bcz        +0xF <setTimerForNextAction+0x32:0x524C5[p]>
            {
                /* If the start time is less than the next expected time assign
                 * next expiring time to the start time.
                 */
                if(action_hdlr_priv_data.actions[index].start_time < 
   524B7:	0B1B      	ld         x, @(+0xB, y)
   524B8:	0413      	ld         ah, @(+0x4, y)
   524B9:	E089      	cmp        x, @0xFFE0 <register ah>
   524BA:	022C      	bcz        +0x2 <setTimerForNextAction+0x29:0x524BC[p]>
   524BB:	4EE0      	bra        +0x4E <setTimerForNextAction+0x76:0x52509[p]>
   524BC:	0B17      	ld         al, @(+0xB, y)
   524BD:	041B      	ld         x, @(+0x4, y)
   524BE:	E385      	cmp        al, @0xFFE3 <register uxl>
   524BF:	45F0      	bne        +0x45 <setTimerForNextAction+0x71:0x52504[p]>
   524C0:	0C13      	ld         ah, @(+0xC, y)
   524C1:	0517      	ld         al, @(+0x5, y)
   524C2:	E181      	cmp        ah, @0xFFE1 <register al>
   524C3:	412C      	bcz        +0x41 <setTimerForNextAction+0x71:0x52504[p]>
   524C4:	45E0      	bra        +0x45 <setTimerForNextAction+0x76:0x52509[p]>
                uint32 diff_time=0, diff_slots=0, next_repeat_time=0;

                /* Caleculate the next repeat time and compare with the expiring
                 * time.
                 */
                if(action_hdlr_priv_data.actions[index].repeat_time != 0)
   524C5:	6300      	**prefx    0x63
   524C6:	3712      	ld         ah, @(+0x6337, x)
   524C7:	0E23      	st         ah, @(+0xE, y)
   524C8:	6300      	**prefx    0x63
   524C9:	361A      	ld         x, @(+0x6336, x)
   524CA:	0D2B      	st         x, @(+0xD, y)
   524CB:	E315      	ld         al, @0xFFE3 <register uxl>
   524CC:	E0B5      	or         al, @0xFFE0 <register ah>
   524CD:	37F4      	beq        +0x37 <setTimerForNextAction+0x71:0x52504[p]>
                {
                    diff_time = cur_ref_time - 
                            action_hdlr_priv_data.actions[index].start_time;

                    diff_slots = diff_time / 
   524CE:	0817      	ld         al, @(+0x8, y)
   524CF:	0713      	ld         ah, @(+0x7, y)
   524D0:	0557      	sub        al, @(+0x5, y)
   524D1:	0463      	subc       ah, @(+0x4, y)
   524D2:	F925      	st         al, @0xFFF9 <(scratchpad)>
   524D3:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   524D4:	0E17      	ld         al, @(+0xE, y)
   524D5:	0127      	st         al, @(+0x1, y)
   524D6:	002B      	st         x, @(0x0, y)
   524D7:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   524D8:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   524D9:	FC00      	**prefx    0xFC
   524DA:	4800      	**prefx    0x48
   524DB:	299C      	bsr        -0x3B7D7 <__udivhi3:0x16D04[p]>
                            action_hdlr_priv_data.actions[index].repeat_time;

                    diff_slots++;

                    next_repeat_time = 
   524DC:	0134      	add        al, #+0x1
   524DD:	0040      	addc       ah, #+0x0
   524DE:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   524DF:	F925      	st         al, @0xFFF9 <(scratchpad)>
   524E0:	0E17      	ld         al, @(+0xE, y)
   524E1:	F891      	smult      @0xFFF8 <(scratchpad)>
   524E2:	FA25      	st         al, @0xFFFA <(scratchpad)>
   524E3:	0D17      	ld         al, @(+0xD, y)
   524E4:	F991      	smult      @0xFFF9 <(scratchpad)>
   524E5:	E119      	ld         x, @0xFFE1 <register al>
   524E6:	FA39      	add        x, @0xFFFA <(scratchpad)>
   524E7:	0E17      	ld         al, @(+0xE, y)
   524E8:	0009      	**unsigned
   524E9:	F991      	umult      @0xFFF9 <(scratchpad)>
   524EA:	F925      	st         al, @0xFFF9 <(scratchpad)>
   524EB:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   524EC:	F839      	add        x, @0xFFF8 <(scratchpad)>
   524ED:	F829      	st         x, @0xFFF8 <(scratchpad)>
   524EE:	051B      	ld         x, @(+0x5, y)
   524EF:	E315      	ld         al, @0xFFE3 <register uxl>
   524F0:	041B      	ld         x, @(+0x4, y)
   524F1:	E311      	ld         ah, @0xFFE3 <register uxl>
   524F2:	F935      	add        al, @0xFFF9 <(scratchpad)>
   524F3:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
   524F4:	0527      	st         al, @(+0x5, y)
   524F5:	0423      	st         ah, @(+0x4, y)
                  (diff_slots)*action_hdlr_priv_data.actions[index].repeat_time;

                    /* If the repeat time is less than the next exp repeat time, 
                     * then store this value as the next exp time.
                     */
                    if(next_repeat_time < next_exp_time)
   524F6:	0B13      	ld         ah, @(+0xB, y)
   524F7:	0417      	ld         al, @(+0x4, y)
   524F8:	E181      	cmp        ah, @0xFFE1 <register al>
   524F9:	022C      	bcz        +0x2 <setTimerForNextAction+0x68:0x524FB[p]>
   524FA:	0FE0      	bra        +0xF <setTimerForNextAction+0x76:0x52509[p]>
   524FB:	0B1B      	ld         x, @(+0xB, y)
   524FC:	0413      	ld         ah, @(+0x4, y)
   524FD:	E089      	cmp        x, @0xFFE0 <register ah>
   524FE:	06F0      	bne        +0x6 <setTimerForNextAction+0x71:0x52504[p]>
   524FF:	0C17      	ld         al, @(+0xC, y)
   52500:	051B      	ld         x, @(+0x5, y)
   52501:	E385      	cmp        al, @0xFFE3 <register uxl>
   52502:	022C      	bcz        +0x2 <setTimerForNextAction+0x71:0x52504[p]>
   52503:	06E0      	bra        +0x6 <setTimerForNextAction+0x76:0x52509[p]>
   52504:	0B13      	ld         ah, @(+0xB, y)
   52505:	0C17      	ld         al, @(+0xC, y)
   52506:	0527      	st         al, @(+0x5, y)
   52507:	0423      	st         ah, @(+0x4, y)
   52508:	03E0      	bra        +0x3 <setTimerForNextAction+0x78:0x5250B[p]>
   52509:	0613      	ld         ah, @(+0x6, y)
   5250A:	0323      	st         ah, @(+0x3, y)
static uint32 getNextExpiringAction(uint32 cur_ref_time, uint8 *action_index)
{
    uint8 index;
    uint32 next_exp_time = 0xFFFFFFFF;

    for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
   5250B:	0617      	ld         al, @(+0x6, y)
   5250C:	0134      	add        al, #+0x1
   5250D:	0627      	st         al, @(+0x6, y)
   5250E:	0684      	cmp        al, #+0x6
   5250F:	06F4      	beq        +0x6 <setTimerForNextAction+0x82:0x52515[p]>
   52510:	041B      	ld         x, @(+0x4, y)
   52511:	0B2B      	st         x, @(+0xB, y)
   52512:	0513      	ld         ah, @(+0x5, y)
   52513:	0C23      	st         ah, @(+0xC, y)
   52514:	89E0      	bra        -0x77 <setTimerForNextAction+0xA:0x5249D[p]>
    curr_ref_time = getCurrentRefTime(current_utc_time);

    /* As the UTC time has changed recaleculate the timer for the next action
     * to be sent across.
     */
    action_hdlr_priv_data.next_action_exp_time = 
   52515:	0517      	ld         al, @(+0x5, y)
   52516:	6400      	**prefx    0x64
   52517:	E425      	st         al, @0x63E4 <___libgatt_lib_db_639+0x11>
   52518:	041B      	ld         x, @(+0x4, y)
   52519:	6400      	**prefx    0x64
   5251A:	E329      	st         x, @0x63E3 <___libgatt_lib_db_639+0x10>
        getNextExpiringAction(curr_ref_time, &action_index);

    /* Delete the timers as there are no more valid actions */
    TimerDelete(action_hdlr_priv_data.next_action_tid);
   5251B:	6400      	**prefx    0x64
   5251C:	E115      	ld         al, @0x63E1 <___libgatt_lib_db_639+0xE>
   5251D:	FC00      	**prefx    0xFC
   5251E:	C700      	**prefx    0xC7
   5251F:	049C      	bsr        -0x438FC <TimerDelete:0xEC23[p]>
    action_hdlr_priv_data.next_action_tid = TIMER_INVALID;
   52520:	0010      	ld         ah, #+0x0
   52521:	6400      	**prefx    0x64
   52522:	E121      	st         ah, @0x63E1 <___libgatt_lib_db_639+0xE>

    if(action_hdlr_priv_data.next_action_exp_time != 0xFFFFFFFF)
   52523:	6400      	**prefx    0x64
   52524:	E415      	ld         al, @0x63E4 <___libgatt_lib_db_639+0x11>
   52525:	0A27      	st         al, @(+0xA, y)
   52526:	6400      	**prefx    0x64
   52527:	E319      	ld         x, @0x63E3 <___libgatt_lib_db_639+0x10>
   52528:	092B      	st         x, @(+0x9, y)
   52529:	FF88      	cmp        x, #-0x1
   5252A:	03F0      	bne        +0x3 <setTimerForNextAction+0x9A:0x5252D[p]>
   5252B:	FF84      	cmp        al, #-0x1
   5252C:	32F4      	beq        +0x32 <setTimerForNextAction+0xCB:0x5255E[p]>
    {
        uint32 diff_time = 
            action_hdlr_priv_data.next_action_exp_time - curr_ref_time;
   5252D:	0A17      	ld         al, @(+0xA, y)
   5252E:	0913      	ld         ah, @(+0x9, y)
   5252F:	0857      	sub        al, @(+0x8, y)
   52530:	0763      	subc       ah, @(+0x7, y)
   52531:	F925      	st         al, @0xFFF9 <(scratchpad)>
   52532:	F821      	st         ah, @0xFFF8 <(scratchpad)>

        /* As the time is more than 30 minutes we start a timer for 30 minutes
         * and take the next action.
         */
        if(diff_time > (30 * MINUTE_IN_SECONDS))
   52533:	04F0      	bne        +0x4 <setTimerForNextAction+0xA4:0x52537[p]>
   52534:	0700      	**prefx    0x7
   52535:	0984      	cmp        al, #+0x709
   52536:	0CFC      	bcs        +0xC <setTimerForNextAction+0xAF:0x52542[p]>
        {
            timer_time = 30 * MINUTE;
            action_hdlr_priv_data.next_action_index = 0xFF;
   52537:	0100      	**prefx    0x1
   52538:	FF14      	ld         al, #+0xFF
   52539:	6400      	**prefx    0x64
   5253A:	E225      	st         al, @0x63E2 <___libgatt_lib_db_639+0xF>
   5253B:	6B00      	**prefx    0x6B
   5253C:	4910      	ld         ah, #+0x6B49
   5253D:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5253E:	D200      	**prefx    0xD2
   5253F:	0014      	ld         al, #-0x2E00
   52540:	F925      	st         al, @0xFFF9 <(scratchpad)>
   52541:	0EE0      	bra        +0xE <setTimerForNextAction+0xBC:0x5254F[p]>
        }
        else
        {
            timer_time = diff_time * SECOND;
   52542:	0F90      	smult      #+0xF
   52543:	E119      	ld         x, @0xFFE1 <register al>
   52544:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   52545:	0009      	**unsigned
   52546:	4200      	**prefx    0x42
   52547:	4090      	umult      #0x4240
   52548:	F925      	st         al, @0xFFF9 <(scratchpad)>
   52549:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5254A:	F839      	add        x, @0xFFF8 <(scratchpad)>
   5254B:	F829      	st         x, @0xFFF8 <(scratchpad)>
            action_hdlr_priv_data.next_action_index = action_index;
   5254C:	031B      	ld         x, @(+0x3, y)
   5254D:	6400      	**prefx    0x64
   5254E:	E229      	st         x, @0x63E2 <___libgatt_lib_db_639+0xF>
        }
        action_hdlr_priv_data.next_action_tid = 
   5254F:	0110      	ld         ah, #+0x1
   52550:	0023      	st         ah, @(0x0, y)
   52551:	2800      	**prefx    0x28
   52552:	5414      	ld         al, #+0x2854
   52553:	0227      	st         al, @(+0x2, y)
   52554:	0518      	ld         x, #+0x5
   52555:	012B      	st         x, @(+0x1, y)
   52556:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   52557:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   52558:	FC00      	**prefx    0xFC
   52559:	C700      	**prefx    0xC7
   5255A:	D49C      	bsr        -0x4392C <TimerCreate:0xEC2E[p]>
   5255B:	6400      	**prefx    0x64
   5255C:	E125      	st         al, @0x63E1 <___libgatt_lib_db_639+0xE>
   5255D:	05E0      	bra        +0x5 <setTimerForNextAction+0xCF:0x52562[p]>
                        TimerCreate(timer_time, TRUE, nextActionTimerHandler);
    }
    else
    {
        action_hdlr_priv_data.next_action_index = 0xFF;
   5255E:	0100      	**prefx    0x1
   5255F:	FF10      	ld         ah, #+0xFF
   52560:	6400      	**prefx    0x64
   52561:	E221      	st         ah, @0x63E2 <___libgatt_lib_db_639+0xF>
    }
}
   52562:	EF0F      	leave      #-0x11

0x00052563 <writeActionDataOnIndex>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
static void writeActionDataOnIndex(uint8 index)
{
   52563:	F70B      	enter      #-0x9
   52564:	0527      	st         al, @(+0x5, y)
    uint16 index1, temp;
    uint16 nvm_act_index = GET_ACTION_NVM_OFFSET(index);
   52565:	04A0      	asl        #0x4
   52566:	0100      	**prefx    0x1
   52567:	4134      	add        al, #+0x141
   52568:	0327      	st         al, @(+0x3, y)

    /* Pack the mcp packet len and action id onto word to reduce space.*/
    temp = 
   52569:	0517      	ld         al, @(+0x5, y)
   5256A:	1790      	smult      #+0x17
   5256B:	0627      	st         al, @(+0x6, y)
   5256C:	E119      	ld         x, @0xFFE1 <register al>
   5256D:	6300      	**prefx    0x63
   5256E:	3316      	ld         al, @(+0x6333, x)
   5256F:	08A0      	asl        #0x8
   52570:	6300      	**prefx    0x63
   52571:	32B6      	or         al, @(+0x6332, x)
   52572:	0127      	st         al, @(+0x1, y)
        action_hdlr_priv_data.actions[index].mcp_pkt_len << 8 |
        action_hdlr_priv_data.actions[index].action_id;

    Nvm_Write((uint16*) (&temp), 
   52573:	0317      	ld         al, @(+0x3, y)
   52574:	0027      	st         al, @(0x0, y)
   52575:	E415      	ld         al, @0xFFE4 <register uy>
   52576:	0134      	add        al, #+0x1
   52577:	0110      	ld         ah, #+0x1
   52578:	E300      	**prefx    0xE3
   52579:	CC9C      	bsr        -0x1D34 <Nvm_Write:0x50845[p]>
              sizeof(uint16),
              nvm_act_index + NVM_OFFSET_ACTION_ID);

    Nvm_Write((uint16*) (&action_hdlr_priv_data.actions[index].start_time),
   5257A:	0617      	ld         al, @(+0x6, y)
   5257B:	6300      	**prefx    0x63
   5257C:	3434      	add        al, #+0x6334
   5257D:	031B      	ld         x, @(+0x3, y)
   5257E:	0138      	add        x, #+0x1
   5257F:	002B      	st         x, @(0x0, y)
   52580:	0210      	ld         ah, #+0x2
   52581:	E300      	**prefx    0xE3
   52582:	C39C      	bsr        -0x1D3D <Nvm_Write:0x50845[p]>
              sizeof(uint32),
              nvm_act_index + NVM_OFFSET_ACTION_START_TIME);

    Nvm_Write((uint16*) (&action_hdlr_priv_data.actions[index].repeat_time),
   52583:	0617      	ld         al, @(+0x6, y)
   52584:	6300      	**prefx    0x63
   52585:	3634      	add        al, #+0x6336
   52586:	031B      	ld         x, @(+0x3, y)
   52587:	0338      	add        x, #+0x3
   52588:	002B      	st         x, @(0x0, y)
   52589:	0210      	ld         ah, #+0x2
   5258A:	E300      	**prefx    0xE3
   5258B:	BA9C      	bsr        -0x1D46 <Nvm_Write:0x50845[p]>
              sizeof(uint32),
              nvm_act_index + NVM_OFFSET_ACTION_REPEAT_TIME);

    Nvm_Write((uint16*) (&action_hdlr_priv_data.actions[index].num_repeats),
   5258C:	0617      	ld         al, @(+0x6, y)
   5258D:	6300      	**prefx    0x63
   5258E:	3934      	add        al, #+0x6339
   5258F:	031B      	ld         x, @(+0x3, y)
   52590:	0538      	add        x, #+0x5
   52591:	002B      	st         x, @(0x0, y)
   52592:	0110      	ld         ah, #+0x1
   52593:	E300      	**prefx    0xE3
   52594:	B19C      	bsr        -0x1D4F <Nvm_Write:0x50845[p]>
              sizeof(uint16),
              nvm_act_index + NVM_OFFSET_ACTION_NUM_REPEAT);

    Nvm_Write((uint16*) (&action_hdlr_priv_data.actions[index].mcp_target_id),
   52595:	0617      	ld         al, @(+0x6, y)
   52596:	6300      	**prefx    0x63
   52597:	3A34      	add        al, #+0x633A
   52598:	031B      	ld         x, @(+0x3, y)
   52599:	0638      	add        x, #+0x6
   5259A:	002B      	st         x, @(0x0, y)
   5259B:	0110      	ld         ah, #+0x1
   5259C:	E300      	**prefx    0xE3
   5259D:	A89C      	bsr        -0x1D58 <Nvm_Write:0x50845[p]>
              sizeof(uint16),
              nvm_act_index + NVM_OFFSET_ACTION_MCP_TARGET_ID);

    Nvm_Write((uint16*) (&action_hdlr_priv_data.actions[index].time_type),
   5259E:	0617      	ld         al, @(+0x6, y)
   5259F:	6300      	**prefx    0x63
   525A0:	3B34      	add        al, #+0x633B
   525A1:	031B      	ld         x, @(+0x3, y)
   525A2:	0738      	add        x, #+0x7
   525A3:	002B      	st         x, @(0x0, y)
   525A4:	0110      	ld         ah, #+0x1
   525A5:	E300      	**prefx    0xE3
   525A6:	9F9C      	bsr        -0x1D61 <Nvm_Write:0x50845[p]>
              sizeof(uint16),
              nvm_act_index + NVM_OFFSET_ACTION_TIME_TYPE);

    Nvm_Write((uint16*) (&action_hdlr_priv_data.actions[index].start_time_recvd),
   525A7:	0617      	ld         al, @(+0x6, y)
   525A8:	6300      	**prefx    0x63
   525A9:	3C34      	add        al, #+0x633C
   525AA:	031B      	ld         x, @(+0x3, y)
   525AB:	0838      	add        x, #+0x8
   525AC:	002B      	st         x, @(0x0, y)
   525AD:	0210      	ld         ah, #+0x2
   525AE:	E300      	**prefx    0xE3
   525AF:	969C      	bsr        -0x1D6A <Nvm_Write:0x50845[p]>
   525B0:	0617      	ld         al, @(+0x6, y)
   525B1:	6300      	**prefx    0x63
   525B2:	3F34      	add        al, #+0x633F
   525B3:	0227      	st         al, @(+0x2, y)
   525B4:	0018      	ld         x, #+0x0
   525B5:	042B      	st         x, @(+0x4, y)
   525B6:	1CE0      	bra        +0x1C <writeActionDataOnIndex+0x6F:0x525D2[p]>

    for(index1 = 0; 
        index1 <= action_hdlr_priv_data.actions[index].mcp_pkt_len;
        index1= index1 + 2)
    {
        temp = action_hdlr_priv_data.actions[index].mcp_pkt[index1 + 1] << 8 |
   525B7:	021B      	ld         x, @(+0x2, y)
   525B8:	0016      	ld         al, @(0x0, x)
   525B9:	08A0      	asl        #0x8
   525BA:	FFB6      	or         al, @(-0x1, x)
   525BB:	0127      	st         al, @(+0x1, y)
               action_hdlr_priv_data.actions[index].mcp_pkt[index1];

        Nvm_Write((uint16*) (&temp),
   525BC:	0317      	ld         al, @(+0x3, y)
   525BD:	0A34      	add        al, #+0xA
   525BE:	0327      	st         al, @(+0x3, y)
   525BF:	0413      	ld         ah, @(+0x4, y)
   525C0:	0009      	**unsigned
   525C1:	01A4      	lsr        #0x1
   525C2:	0333      	add        ah, @(+0x3, y)
   525C3:	0023      	st         ah, @(0x0, y)
   525C4:	031B      	ld         x, @(+0x3, y)
   525C5:	F638      	add        x, #-0xA
   525C6:	032B      	st         x, @(+0x3, y)
   525C7:	E415      	ld         al, @0xFFE4 <register uy>
   525C8:	0134      	add        al, #+0x1
   525C9:	0110      	ld         ah, #+0x1
   525CA:	E200      	**prefx    0xE2
   525CB:	7A9C      	bsr        -0x1D86 <Nvm_Write:0x50845[p]>
              sizeof(uint32),
              nvm_act_index + NVM_OFFSET_ACTION_START_TIME_RECVD);

    for(index1 = 0; 
        index1 <= action_hdlr_priv_data.actions[index].mcp_pkt_len;
        index1= index1 + 2)
   525CC:	0417      	ld         al, @(+0x4, y)
   525CD:	0234      	add        al, #+0x2
   525CE:	0427      	st         al, @(+0x4, y)
   525CF:	021B      	ld         x, @(+0x2, y)
   525D0:	0238      	add        x, #+0x2
   525D1:	022B      	st         x, @(+0x2, y)
    Nvm_Write((uint16*) (&action_hdlr_priv_data.actions[index].start_time_recvd),
              sizeof(uint32),
              nvm_act_index + NVM_OFFSET_ACTION_START_TIME_RECVD);

    for(index1 = 0; 
        index1 <= action_hdlr_priv_data.actions[index].mcp_pkt_len;
   525D2:	0517      	ld         al, @(+0x5, y)
   525D3:	1790      	smult      #+0x17
   525D4:	F825      	st         al, @0xFFF8 <(scratchpad)>
   525D5:	0417      	ld         al, @(+0x4, y)
   525D6:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   525D7:	6300      	**prefx    0x63
   525D8:	3386      	cmp        al, @(+0x6333, x)
   525D9:	DE2C      	bcz        -0x22 <writeActionDataOnIndex+0x54:0x525B7[p]>

        Nvm_Write((uint16*) (&temp),
                  sizeof(uint16),
                  nvm_act_index + NVM_OFFSET_ACTION_MCP_PKT + (index1/2));
    }
}
   525DA:	F70F      	leave      #-0x9

0x000525DB <WriteActionModelDataOntoNVM>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void WriteActionModelDataOntoNVM(uint16 offset)
{
   525DB:	FD0B      	enter      #-0x3
   525DC:	0014      	ld         al, #+0x0
   525DD:	0027      	st         al, @(0x0, y)
    uint8 index;
    for(index=0; index < MAX_ACTIONS_SUPPORTED; index++)
    {
        writeActionDataOnIndex(index);
   525DE:	0017      	ld         al, @(0x0, y)
   525DF:	849C      	bsr        -0x7C <writeActionDataOnIndex:0x52563[p]>
 *
 *----------------------------------------------------------------------------*/
extern void WriteActionModelDataOntoNVM(uint16 offset)
{
    uint8 index;
    for(index=0; index < MAX_ACTIONS_SUPPORTED; index++)
   525E0:	0017      	ld         al, @(0x0, y)
   525E1:	0134      	add        al, #+0x1
   525E2:	0027      	st         al, @(0x0, y)
   525E3:	0684      	cmp        al, #+0x6
   525E4:	FAF0      	bne        -0x6 <WriteActionModelDataOntoNVM+0x3:0x525DE[p]>
    {
        writeActionDataOnIndex(index);
    }
}
   525E5:	FD0F      	leave      #-0x3

0x000525E6 <actionModelEventHandler>:
 *---------------------------------------------------------------------------*/
static CSRmeshResult actionModelEventHandler(CSRMESH_MODEL_EVENT_T event_code,
                                             CSRMESH_EVENT_DATA_T* data,
                                             CsrUint16 length,
                                             void **state_data)
{
   525E6:	E20B      	enter      #-0x1E
   525E7:	1427      	st         al, @(+0x14, y)
   525E8:	1523      	st         ah, @(+0x15, y)
    MemSet(&action_model_rsp_data, 0x0000, sizeof(action_model_rsp_data));
   525E9:	1610      	ld         ah, #+0x16
   525EA:	0023      	st         ah, @(0x0, y)
   525EB:	6400      	**prefx    0x64
   525EC:	E514      	ld         al, #+0x63E5
   525ED:	0010      	ld         ah, #+0x0
   525EE:	FB00      	**prefx    0xFB
   525EF:	0500      	**prefx    0x5
   525F0:	609C      	bsr        -0x4FAA0 <MemSet:0x2B50[p]>

    switch(event_code)
   525F1:	1417      	ld         al, @(+0x14, y)
   525F2:	5284      	cmp        al, #+0x52
   525F3:	0100      	**prefx    0x1
   525F4:	4EF4      	beq        +0x14E <actionModelEventHandler+0x15C:0x52742[p]>
   525F5:	5384      	cmp        al, #+0x53
   525F6:	05F8      	bcc        +0x5 <actionModelEventHandler+0x15:0x525FB[p]>
   525F7:	5084      	cmp        al, #+0x50
   525F8:	0200      	**prefx    0x2
   525F9:	1CF0      	bne        +0x21C <actionModelEventHandler+0x22F:0x52815[p]>
   525FA:	0AE0      	bra        +0xA <actionModelEventHandler+0x1E:0x52604[p]>
   525FB:	141B      	ld         x, @(+0x14, y)
   525FC:	5488      	cmp        x, #+0x54
   525FD:	0100      	**prefx    0x1
   525FE:	70F4      	beq        +0x170 <actionModelEventHandler+0x188:0x5276E[p]>
   525FF:	5688      	cmp        x, #+0x56
   52600:	0200      	**prefx    0x2
   52601:	14F0      	bne        +0x214 <actionModelEventHandler+0x22F:0x52815[p]>
   52602:	0200      	**prefx    0x2
   52603:	BEE0      	bra        +0x1BE <actionModelEventHandler+0x1DB:0x527C1[p]>
    {
        case CSRMESH_ACTION_SET_ACTION:
        {
            CSRMESH_ACTION_SET_ACTION_T *p_event = 
                                    (CSRMESH_ACTION_SET_ACTION_T *)data->data;
   52604:	151B      	ld         x, @(+0x15, y)
   52605:	091A      	ld         x, @(+0x9, x)
   52606:	112B      	st         x, @(+0x11, y)
            uint8 action_id, part_num, last_part;

            action_model_rsp_data.set_action_ack.actionid = p_event->actionid;
   52607:	0012      	ld         ah, @(0x0, x)
   52608:	6400      	**prefx    0x64
   52609:	E521      	st         ah, @0x63E5 <action_model_rsp_data>
            action_id = p_event->actionid & ACTION_ID_OFFSET;
   5260A:	0012      	ld         ah, @(0x0, x)
   5260B:	E015      	ld         al, @0xFFE0 <register ah>
   5260C:	1FC4      	and        al, #0x1F
   5260D:	1027      	st         al, @(+0x10, y)
            p_event->actionid >>= 5;
   5260E:	0009      	**unsigned
   5260F:	05A4      	lsr        #0x5
   52610:	1323      	st         ah, @(+0x13, y)
            last_part = p_event->actionid & 0x01;
            p_event->actionid >>= 1;
   52611:	0009      	**unsigned
   52612:	01A4      	lsr        #0x1
   52613:	1223      	st         ah, @(+0x12, y)
   52614:	0022      	st         ah, @(0x0, x)

            /* Start assembling only if there is space to store the actions 
             * otherwise ignore assembling until an action is deleted and rhe
             * space is available for the device.
             */
            if(getActionIdIndex(action_id) != ACTION_INDEX_INVALID)
   52615:	1017      	ld         al, @(+0x10, y)
   52616:	FE00      	**prefx    0xFE
   52617:	F09C      	bsr        -0x210 <getActionIdIndex:0x52407[p]>
   52618:	0100      	**prefx    0x1
   52619:	FF84      	cmp        al, #+0xFF
   5261A:	0200      	**prefx    0x2
   5261B:	F4F4      	beq        +0x1F4 <actionModelEventHandler+0x229:0x5280F[p]>
            {
                /* check whether an action assembly is in progress or not if not 
                 * start a new assembly.
                 */
                if(action_hdlr_priv_data.pkt_assembly_tid == TIMER_INVALID)
   5261C:	6400      	**prefx    0x64
   5261D:	DC99      	tst        @0x63DC <___libgatt_lib_db_639+0x9>
   5261E:	13F0      	bne        +0x13 <actionModelEventHandler+0x4B:0x52631[p]>
                {
                    /* store the action id and start assembly timeout timer.*/
                    action_hdlr_priv_data.assembly_action_id = action_id;
   5261F:	101B      	ld         x, @(+0x10, y)
   52620:	6400      	**prefx    0x64
   52621:	DD29      	st         x, @0x63DD <___libgatt_lib_db_639+0xA>

                    action_hdlr_priv_data.pkt_assembly_tid  = 
   52622:	0110      	ld         ah, #+0x1
   52623:	0023      	st         ah, @(0x0, y)
   52624:	2500      	**prefx    0x25
   52625:	8214      	ld         al, #+0x2482
   52626:	0227      	st         al, @(+0x2, y)
   52627:	0518      	ld         x, #+0x5
   52628:	012B      	st         x, @(+0x1, y)
   52629:	4C10      	ld         ah, #+0x4C
   5262A:	4B00      	**prefx    0x4B
   5262B:	4014      	ld         al, #+0x4B40
   5262C:	FC00      	**prefx    0xFC
   5262D:	C600      	**prefx    0xC6
   5262E:	009C      	bsr        -0x43A00 <TimerCreate:0xEC2E[p]>
   5262F:	6400      	**prefx    0x64
   52630:	DC25      	st         al, @0x63DC <___libgatt_lib_db_639+0x9>
                        TimerCreate(PKT_ASSEMBLY_TIMER_VAL, TRUE, 
                                    pktAssemblyTimeoutHandler);
                }

                if(action_id == action_hdlr_priv_data.assembly_action_id)
   52631:	6400      	**prefx    0x64
   52632:	DD11      	ld         ah, @0x63DD <___libgatt_lib_db_639+0xA>
   52633:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   52634:	1017      	ld         al, @(+0x10, y)
   52635:	E085      	cmp        al, @0xFFE0 <register ah>
   52636:	0200      	**prefx    0x2
   52637:	D8F0      	bne        +0x1D8 <actionModelEventHandler+0x229:0x5280F[p]>
                {
                    if(p_event->payload_len > ACTION_PAYLOAD_SIZE)
   52638:	111B      	ld         x, @(+0x11, y)
   52639:	0916      	ld         al, @(+0x9, x)
   5263A:	0884      	cmp        al, #+0x8
   5263B:	032C      	bcz        +0x3 <actionModelEventHandler+0x58:0x5263E[p]>
                        p_event->payload_len = ACTION_PAYLOAD_SIZE;
   5263C:	0810      	ld         ah, #+0x8
   5263D:	0922      	st         ah, @(+0x9, x)
            action_model_rsp_data.set_action_ack.actionid = p_event->actionid;
            action_id = p_event->actionid & ACTION_ID_OFFSET;
            p_event->actionid >>= 5;
            last_part = p_event->actionid & 0x01;
            p_event->actionid >>= 1;
            part_num = p_event->actionid & 0x03;
   5263E:	1217      	ld         al, @(+0x12, y)
   5263F:	E119      	ld         x, @0xFFE1 <register al>
   52640:	03C8      	and        x, #0x3
   52641:	F829      	st         x, @0xFFF8 <(scratchpad)>
                {
                    if(p_event->payload_len > ACTION_PAYLOAD_SIZE)
                        p_event->payload_len = ACTION_PAYLOAD_SIZE;

                    /* copy the part and start the action pkt decode */
                    MemCopy(&action_hdlr_priv_data.pkt_assembly[part_num * 8],
   52642:	E315      	ld         al, @0xFFE3 <register uxl>
   52643:	03A0      	asl        #0x3
   52644:	E111      	ld         ah, @0xFFE1 <register al>
   52645:	6400      	**prefx    0x64
   52646:	BC30      	add        ah, #+0x63BC
   52647:	111B      	ld         x, @(+0x11, y)
   52648:	0916      	ld         al, @(+0x9, x)
   52649:	0138      	add        x, #+0x1
   5264A:	112B      	st         x, @(+0x11, y)
   5264B:	FD09      	bc2        
                            p_event->payload,
                            p_event->payload_len);

                    /* Set the received part bitmask */
                    action_hdlr_priv_data.recvd_msg_bitmask |= (1 << part_num);
   5264C:	0114      	ld         al, #+0x1
   5264D:	F8A1      	asl        @0xFFF8 <(scratchpad)>
   5264E:	E119      	ld         x, @0xFFE1 <register al>
   5264F:	6400      	**prefx    0x64
   52650:	DEB9      	or         x, @0x63DE <___libgatt_lib_db_639+0xB>
   52651:	6400      	**prefx    0x64
   52652:	DE29      	st         x, @0x63DE <___libgatt_lib_db_639+0xB>

                    /* Set the last part received flag if its the last part */
                    if(last_part == 0x01)
   52653:	1317      	ld         al, @(+0x13, y)
   52654:	01C4      	and        al, #0x1
   52655:	0184      	cmp        al, #+0x1
   52656:	0CF0      	bne        +0xC <actionModelEventHandler+0x7C:0x52662[p]>
                    {
                        action_hdlr_priv_data.last_part_recvd = TRUE;
   52657:	0110      	ld         ah, #+0x1
   52658:	6400      	**prefx    0x64
   52659:	DF21      	st         ah, @0x63DF <___libgatt_lib_db_639+0xC>
                        part_num++;
                        action_hdlr_priv_data.full_msg_bitmask = 
   5265A:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5265B:	0134      	add        al, #+0x1
   5265C:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5265D:	0114      	ld         al, #+0x1
   5265E:	F8A1      	asl        @0xFFF8 <(scratchpad)>
   5265F:	FF34      	add        al, #-0x1
   52660:	6400      	**prefx    0x64
   52661:	E025      	st         al, @0x63E0 <___libgatt_lib_db_639+0xD>
                    }

                    /* If the received msg bitmask is same as the total msg 
                     * bitmask, then full packet is received to decode 
                     */
                    if(action_hdlr_priv_data.last_part_recvd == TRUE &&
   52662:	6400      	**prefx    0x64
   52663:	DF15      	ld         al, @0x63DF <___libgatt_lib_db_639+0xC>
   52664:	0184      	cmp        al, #+0x1
   52665:	0200      	**prefx    0x2
   52666:	A9F0      	bne        +0x1A9 <actionModelEventHandler+0x229:0x5280F[p]>
   52667:	6400      	**prefx    0x64
   52668:	E015      	ld         al, @0x63E0 <___libgatt_lib_db_639+0xD>
   52669:	E1C9      	and        x, @0xFFE1 <register al>
   5266A:	E189      	cmp        x, @0xFFE1 <register al>
   5266B:	0200      	**prefx    0x2
   5266C:	A3F0      	bne        +0x1A3 <actionModelEventHandler+0x229:0x5280F[p]>
    uint8* pkt_assembly_ptr;
    uint32 cur_ref_time=0;
    uint8 current_time[6];
    int8   timezone;

    pkt_assembly_ptr = &action_hdlr_priv_data.pkt_assembly[0];
   5266D:	6400      	**prefx    0x64
   5266E:	BC18      	ld         x, #+0x63BC
   5266F:	032B      	st         x, @(+0x3, y)
    /* Get the index where the action info recvd needs to be stored */
    index = getActionIdIndex(action_id);
   52670:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   52671:	FE00      	**prefx    0xFE
   52672:	959C      	bsr        -0x26B <getActionIdIndex:0x52407[p]>
   52673:	0D27      	st         al, @(+0xD, y)
    if(index != ACTION_INDEX_INVALID)
   52674:	0100      	**prefx    0x1
   52675:	FF84      	cmp        al, #+0xFF
   52676:	0100      	**prefx    0x1
   52677:	C7F4      	beq        +0xC7 <actionModelEventHandler+0x158:0x5273E[p]>
    {
        action_type = BufReadUint8(&pkt_assembly_ptr);
   52678:	E415      	ld         al, @0xFFE4 <register uy>
   52679:	0334      	add        al, #+0x3
   5267A:	FC00      	**prefx    0xFC
   5267B:	3900      	**prefx    0x39
   5267C:	399C      	bsr        -0x3C6C7 <BufReadUint8:0x15FB5[p]>

        /* Decode the packet and store it onto the action structure if the 
         * action type is mcp.
         */
        if(action_type == ACTION_TYPE_MCP)
   5267D:	E199      	tst        @0xFFE1 <register al>
   5267E:	0100      	**prefx    0x1
   5267F:	BFF0      	bne        +0xBF <actionModelEventHandler+0x158:0x5273E[p]>
        {
            action_hdlr_priv_data.actions[index].mcp_pkt_len = 
   52680:	E415      	ld         al, @0xFFE4 <register uy>
   52681:	0334      	add        al, #+0x3
   52682:	FC00      	**prefx    0xFC
   52683:	3900      	**prefx    0x39
   52684:	319C      	bsr        -0x3C6CF <BufReadUint8:0x15FB5[p]>
   52685:	F825      	st         al, @0xFFF8 <(scratchpad)>
   52686:	0D17      	ld         al, @(+0xD, y)
   52687:	1790      	smult      #+0x17
   52688:	1627      	st         al, @(+0x16, y)
   52689:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5268A:	E119      	ld         x, @0xFFE1 <register al>
   5268B:	6300      	**prefx    0x63
   5268C:	3322      	st         ah, @(+0x6333, x)
                                            BufReadUint8(&pkt_assembly_ptr);

            action_hdlr_priv_data.actions[index].mcp_target_id = 
   5268D:	E415      	ld         al, @0xFFE4 <register uy>
   5268E:	0334      	add        al, #+0x3
   5268F:	FC00      	**prefx    0xFC
   52690:	3900      	**prefx    0x39
   52691:	309C      	bsr        -0x3C6D0 <BufReadUint16:0x15FC1[p]>
   52692:	161B      	ld         x, @(+0x16, y)
   52693:	6300      	**prefx    0x63
   52694:	3A26      	st         al, @(+0x633A, x)
                                            BufReadUint16(&pkt_assembly_ptr);

            if(action_hdlr_priv_data.actions[index].mcp_pkt_len > MAX_MCP_PKT_LEN)
   52695:	6300      	**prefx    0x63
   52696:	3316      	ld         al, @(+0x6333, x)
   52697:	0B84      	cmp        al, #+0xB
   52698:	042C      	bcz        +0x4 <actionModelEventHandler+0xB6:0x5269C[p]>
                action_hdlr_priv_data.actions[index].mcp_pkt_len = MAX_MCP_PKT_LEN;
   52699:	0B10      	ld         ah, #+0xB
   5269A:	6300      	**prefx    0x63
   5269B:	3322      	st         ah, @(+0x6333, x)

            MemCopy(&action_hdlr_priv_data.actions[index].mcp_pkt[0],
   5269C:	0D17      	ld         al, @(+0xD, y)
   5269D:	1790      	smult      #+0x17
   5269E:	1727      	st         al, @(+0x17, y)
   5269F:	E111      	ld         ah, @0xFFE1 <register al>
   526A0:	6300      	**prefx    0x63
   526A1:	3E30      	add        ah, #+0x633E
   526A2:	031B      	ld         x, @(+0x3, y)
   526A3:	F829      	st         x, @0xFFF8 <(scratchpad)>
   526A4:	E119      	ld         x, @0xFFE1 <register al>
   526A5:	6300      	**prefx    0x63
   526A6:	3316      	ld         al, @(+0x6333, x)
   526A7:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   526A8:	FD09      	bc2        
                    pkt_assembly_ptr,
                    action_hdlr_priv_data.actions[index].mcp_pkt_len);

            pkt_assembly_ptr +=
   526A9:	0317      	ld         al, @(+0x3, y)
   526AA:	171B      	ld         x, @(+0x17, y)
   526AB:	6300      	**prefx    0x63
   526AC:	3336      	add        al, @(+0x6333, x)
   526AD:	0327      	st         al, @(+0x3, y)
                        action_hdlr_priv_data.actions[index].mcp_pkt_len;

            time_type = BufReadUint8(&pkt_assembly_ptr);
   526AE:	E415      	ld         al, @0xFFE4 <register uy>
   526AF:	0334      	add        al, #+0x3
   526B0:	FC00      	**prefx    0xFC
   526B1:	3900      	**prefx    0x39
   526B2:	039C      	bsr        -0x3C6FD <BufReadUint8:0x15FB5[p]>
   526B3:	0E27      	st         al, @(+0xE, y)
            action_hdlr_priv_data.actions[index].time_type = time_type;
   526B4:	171B      	ld         x, @(+0x17, y)
   526B5:	6300      	**prefx    0x63
   526B6:	3B26      	st         al, @(+0x633B, x)

            /* we need to add the current time to the start time */
            action_hdlr_priv_data.actions[index].start_time = 
   526B7:	E415      	ld         al, @0xFFE4 <register uy>
   526B8:	0334      	add        al, #+0x3
   526B9:	FC00      	**prefx    0xFC
   526BA:	3900      	**prefx    0x39
   526BB:	0F9C      	bsr        -0x3C6F1 <BufReadUint32:0x15FCA[p]>
   526BC:	171B      	ld         x, @(+0x17, y)
   526BD:	6300      	**prefx    0x63
   526BE:	3526      	st         al, @(+0x6335, x)
   526BF:	6300      	**prefx    0x63
   526C0:	3422      	st         ah, @(+0x6334, x)
                                            BufReadUint32(&pkt_assembly_ptr);

            action_hdlr_priv_data.actions[index].start_time_recvd = 
   526C1:	6300      	**prefx    0x63
   526C2:	3D26      	st         al, @(+0x633D, x)
   526C3:	6300      	**prefx    0x63
   526C4:	3C22      	st         ah, @(+0x633C, x)
                                action_hdlr_priv_data.actions[index].start_time;
            /* In the case of time type 4 or 5, add the current time onto the 
             * start time and store the same.
             */
            if(time_type == 0x04 || time_type == 0x05)
   526C5:	0E17      	ld         al, @(+0xE, y)
   526C6:	FC34      	add        al, #-0x4
   526C7:	0284      	cmp        al, #+0x2
   526C8:	1BF8      	bcc        +0x1B <actionModelEventHandler+0xFD:0x526E3[p]>
            {
                if(TimeModelGetUTC(current_time, &timezone) == TRUE)
   526C9:	E415      	ld         al, @0xFFE4 <register uy>
   526CA:	0534      	add        al, #+0x5
   526CB:	E411      	ld         ah, @0xFFE4 <register uy>
   526CC:	0430      	add        ah, #+0x4
   526CD:	FC00      	**prefx    0xFC
   526CE:	AC9C      	bsr        -0x454 <TimeModelGetUTC:0x5227A[p]>
   526CF:	0184      	cmp        al, #+0x1
   526D0:	0FF0      	bne        +0xF <actionModelEventHandler+0xF9:0x526DF[p]>
                {
                    cur_ref_time = getCurrentRefTime(current_time);
   526D1:	E415      	ld         al, @0xFFE4 <register uy>
   526D2:	0534      	add        al, #+0x5
   526D3:	FD00      	**prefx    0xFD
   526D4:	579C      	bsr        -0x2A9 <getCurrentRefTime:0x5242B[p]>
                    action_hdlr_priv_data.actions[index].start_time += cur_ref_time;
   526D5:	171B      	ld         x, @(+0x17, y)
   526D6:	6300      	**prefx    0x63
   526D7:	3536      	add        al, @(+0x6335, x)
   526D8:	6300      	**prefx    0x63
   526D9:	3442      	addc       ah, @(+0x6334, x)
   526DA:	6300      	**prefx    0x63
   526DB:	3526      	st         al, @(+0x6335, x)
   526DC:	6300      	**prefx    0x63
   526DD:	3422      	st         ah, @(+0x6334, x)
   526DE:	05E0      	bra        +0x5 <actionModelEventHandler+0xFD:0x526E3[p]>
                else
                {
                    /* If the current time is not present in the device the this
                     * relative action is not valid.
                     */
                    action_hdlr_priv_data.assembly_action_id = ACTION_ID_INVALID;
   526DF:	0100      	**prefx    0x1
   526E0:	FF10      	ld         ah, #+0xFF
   526E1:	6400      	**prefx    0x64
   526E2:	DD21      	st         ah, @0x63DD <___libgatt_lib_db_639+0xA>
                }
            }

            if(action_hdlr_priv_data.assembly_action_id != ACTION_ID_INVALID)
   526E3:	6400      	**prefx    0x64
   526E4:	DD15      	ld         al, @0x63DD <___libgatt_lib_db_639+0xA>
   526E5:	0100      	**prefx    0x1
   526E6:	FF84      	cmp        al, #+0xFF
   526E7:	57F4      	beq        +0x57 <actionModelEventHandler+0x158:0x5273E[p]>
            {
                action_hdlr_priv_data.actions[index].curr_repeat_cnt = 0;
   526E8:	0D17      	ld         al, @(+0xD, y)
   526E9:	1790      	smult      #+0x17
   526EA:	F825      	st         al, @0xFFF8 <(scratchpad)>
   526EB:	6300      	**prefx    0x63
   526EC:	3234      	add        al, #+0x6332
   526ED:	0010      	ld         ah, #+0x0
   526EE:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   526EF:	6300      	**prefx    0x63
   526F0:	3822      	st         ah, @(+0x6338, x)

                /* The repeat time is present only in the case of type 3 and 5 */
                if(time_type == 0x03 || time_type == 0x05)
   526F1:	0E1B      	ld         x, @(+0xE, y)
   526F2:	0388      	cmp        x, #+0x3
   526F3:	03F4      	beq        +0x3 <actionModelEventHandler+0x110:0x526F6[p]>
   526F4:	0588      	cmp        x, #+0x5
   526F5:	2AF0      	bne        +0x2A <actionModelEventHandler+0x139:0x5271F[p]>
                {
                    action_hdlr_priv_data.actions[index].repeat_time = BufReadUint16(&pkt_assembly_ptr);
   526F6:	E415      	ld         al, @0xFFE4 <register uy>
   526F7:	0334      	add        al, #+0x3
   526F8:	FC00      	**prefx    0xFC
   526F9:	3900      	**prefx    0x39
   526FA:	C79C      	bsr        -0x3C739 <BufReadUint16:0x15FC1[p]>
   526FB:	0C27      	st         al, @(+0xC, y)
   526FC:	0D17      	ld         al, @(+0xD, y)
   526FD:	1790      	smult      #+0x17
   526FE:	1827      	st         al, @(+0x18, y)
   526FF:	6300      	**prefx    0x63
   52700:	3634      	add        al, #+0x6336
   52701:	1927      	st         al, @(+0x19, y)
   52702:	0010      	ld         ah, #+0x0
   52703:	181B      	ld         x, @(+0x18, y)
   52704:	6300      	**prefx    0x63
   52705:	3622      	st         ah, @(+0x6336, x)
   52706:	0C13      	ld         ah, @(+0xC, y)
   52707:	E119      	ld         x, @0xFFE1 <register al>
   52708:	0122      	st         ah, @(+0x1, x)
                    action_hdlr_priv_data.actions[index].repeat_time |= (((uint32)BufReadUint8(&pkt_assembly_ptr)) << 16);
   52709:	E415      	ld         al, @0xFFE4 <register uy>
   5270A:	0334      	add        al, #+0x3
   5270B:	FC00      	**prefx    0xFC
   5270C:	3900      	**prefx    0x39
   5270D:	A89C      	bsr        -0x3C758 <BufReadUint8:0x15FB5[p]>
   5270E:	0010      	ld         ah, #+0x0
   5270F:	10A0      	asl        #0x10
   52710:	0CB7      	or         al, @(+0xC, y)
   52711:	191B      	ld         x, @(+0x19, y)
   52712:	0126      	st         al, @(+0x1, x)
   52713:	181B      	ld         x, @(+0x18, y)
   52714:	6300      	**prefx    0x63
   52715:	3622      	st         ah, @(+0x6336, x)
                    action_hdlr_priv_data.actions[index].num_repeats = BufReadUint16(&pkt_assembly_ptr);
   52716:	E415      	ld         al, @0xFFE4 <register uy>
   52717:	0334      	add        al, #+0x3
   52718:	FC00      	**prefx    0xFC
   52719:	3900      	**prefx    0x39
   5271A:	A79C      	bsr        -0x3C759 <BufReadUint16:0x15FC1[p]>
   5271B:	181B      	ld         x, @(+0x18, y)
   5271C:	6300      	**prefx    0x63
   5271D:	3926      	st         al, @(+0x6339, x)
   5271E:	0AE0      	bra        +0xA <actionModelEventHandler+0x142:0x52728[p]>
                else
                {
                    /* Make sure you reset this to 0 if the new action is being over
                     * written.
                     */
                    action_hdlr_priv_data.actions[index].repeat_time = 0;
   5271F:	0010      	ld         ah, #+0x0
   52720:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52721:	6300      	**prefx    0x63
   52722:	3622      	st         ah, @(+0x6336, x)
   52723:	E119      	ld         x, @0xFFE1 <register al>
   52724:	0522      	st         ah, @(+0x5, x)
                    action_hdlr_priv_data.actions[index].num_repeats = 0;
   52725:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52726:	6300      	**prefx    0x63
   52727:	3922      	st         ah, @(+0x6339, x)
                }
                action_hdlr_priv_data.actions[index].action_id = 
   52728:	0D17      	ld         al, @(+0xD, y)
   52729:	1790      	smult      #+0x17
   5272A:	6400      	**prefx    0x64
   5272B:	DD11      	ld         ah, @0x63DD <___libgatt_lib_db_639+0xA>
   5272C:	E119      	ld         x, @0xFFE1 <register al>
   5272D:	6300      	**prefx    0x63
   5272E:	3222      	st         ah, @(+0x6332, x)
                                        action_hdlr_priv_data.assembly_action_id;

                /* Copy the action information onto NVM */
                writeActionDataOnIndex(index);
   5272F:	0D17      	ld         al, @(+0xD, y)
   52730:	FE00      	**prefx    0xFE
   52731:	329C      	bsr        -0x1CE <writeActionDataOnIndex:0x52563[p]>

                /* Set timer for next action as a new action msg is added */
                if(TimeModelGetUTC(current_time, &timezone) == TRUE)
   52732:	E415      	ld         al, @0xFFE4 <register uy>
   52733:	0534      	add        al, #+0x5
   52734:	E411      	ld         ah, @0xFFE4 <register uy>
   52735:	0430      	add        ah, #+0x4
   52736:	FB00      	**prefx    0xFB
   52737:	439C      	bsr        -0x4BD <TimeModelGetUTC:0x5227A[p]>
   52738:	0184      	cmp        al, #+0x1
   52739:	05F0      	bne        +0x5 <actionModelEventHandler+0x158:0x5273E[p]>
                {
                    setTimerForNextAction(current_time);
   5273A:	E415      	ld         al, @0xFFE4 <register uy>
   5273B:	0534      	add        al, #+0x5
   5273C:	FD00      	**prefx    0xFD
   5273D:	569C      	bsr        -0x2AA <setTimerForNextAction:0x52493[p]>
            }
        }
    }

    /* Delete the timer for action msg assembly and reset the data strctures */
    resetPktAssemblyInfo();
   5273E:	FD00      	**prefx    0xFD
   5273F:	269C      	bsr        -0x2DA <resetPktAssemblyInfo:0x52465[p]>
   52740:	0100      	**prefx    0x1
   52741:	CEE0      	bra        +0xCE <actionModelEventHandler+0x229:0x5280F[p]>
            }

            /* Send response data to model */
            if (state_data != NULL)
            {
                *state_data = (void *)&action_model_rsp_data.set_action_ack;
   52742:	6300      	**prefx    0x63
   52743:	3214      	ld         al, #+0x6332
   52744:	FA25      	st         al, @0xFFFA <(scratchpad)>
   52745:	0018      	ld         x, #+0x0
   52746:	FB29      	st         x, @0xFFFB <(scratchpad)>
   52747:	FF2B      	st         x, @(-0x1, y)
    uint8 index;
    uint32 supp_actions_bitmask = 0;

    for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
    {
        if(action_hdlr_priv_data.actions[index].action_id < ACTION_ID_MAX)
   52748:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   52749:	001A      	ld         x, @(0x0, x)
   5274A:	2088      	cmp        x, #+0x20
   5274B:	0DF8      	bcc        +0xD <actionModelEventHandler+0x172:0x52758[p]>
        {
            supp_actions_bitmask |= 1 << 
   5274C:	0114      	ld         al, #+0x1
   5274D:	E3A1      	asl        @0xFFE3 <register uxl>
   5274E:	E111      	ld         ah, @0xFFE1 <register al>
   5274F:	10A4      	asr        #0x10
   52750:	F925      	st         al, @0xFFF9 <(scratchpad)>
   52751:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   52752:	FF17      	ld         al, @(-0x1, y)
   52753:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   52754:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   52755:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   52756:	FF27      	st         al, @(-0x1, y)
   52757:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   52758:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   52759:	1734      	add        al, #+0x17
   5275A:	FA25      	st         al, @0xFFFA <(scratchpad)>
static uint32 getSupportedActions(void)
{
    uint8 index;
    uint32 supp_actions_bitmask = 0;

    for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
   5275B:	6400      	**prefx    0x64
   5275C:	BC84      	cmp        al, #+0x63BC
   5275D:	EBF0      	bne        -0x15 <actionModelEventHandler+0x162:0x52748[p]>
        break;

        case CSRMESH_ACTION_GET_ACTION_STATUS:
        {
            /* Updates the bitmask for the current supported actions */
            action_model_rsp_data.action_status.actionids = getSupportedActions();
   5275E:	6400      	**prefx    0x64
   5275F:	E510      	ld         ah, #+0x63E5
   52760:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   52761:	6400      	**prefx    0x64
   52762:	E529      	st         x, @0x63E5 <action_model_rsp_data>
   52763:	FF17      	ld         al, @(-0x1, y)
   52764:	E019      	ld         x, @0xFFE0 <register ah>
   52765:	0126      	st         al, @(+0x1, x)
            action_model_rsp_data.action_status.maxactionssupported = MAX_ACTIONS_SUPPORTED;
   52766:	0618      	ld         x, #+0x6
   52767:	6400      	**prefx    0x64
   52768:	E729      	st         x, @0x63E7 <action_model_rsp_data+0x2>

            /* Send response data to model */
            if (state_data != NULL)
   52769:	1F9B      	tst        @(+0x1F, y)
   5276A:	0100      	**prefx    0x1
   5276B:	A8F0      	bne        +0xA8 <actionModelEventHandler+0x22D:0x52813[p]>
   5276C:	0100      	**prefx    0x1
   5276D:	A8E0      	bra        +0xA8 <actionModelEventHandler+0x22F:0x52815[p]>
        break;

        case CSRMESH_ACTION_DELETE:
        {
            CSRMESH_ACTION_DELETE_T *p_event = 
                            (CSRMESH_ACTION_DELETE_T *)data->data;
   5276E:	151B      	ld         x, @(+0x15, y)
   5276F:	091A      	ld         x, @(+0x9, x)
   52770:	0F2B      	st         x, @(+0xF, y)

            /* Deletes the respective actions defined in the bitmask */
            deleteActions(p_event->actionids);
   52771:	0012      	ld         ah, @(0x0, x)
   52772:	1A23      	st         ah, @(+0x1A, y)
   52773:	0116      	ld         al, @(+0x1, x)
   52774:	1B27      	st         al, @(+0x1B, y)
   52775:	0118      	ld         x, #+0x1
   52776:	0B2B      	st         x, @(+0xB, y)
   52777:	0B13      	ld         ah, @(+0xB, y)
   52778:	FF30      	add        ah, #-0x1
   52779:	FB21      	st         ah, @0xFFFB <(scratchpad)>
 *---------------------------------------------------------------------------*/
static CSRmeshResult actionModelEventHandler(CSRMESH_MODEL_EVENT_T event_code,
                                             CSRMESH_EVENT_DATA_T* data,
                                             CsrUint16 length,
                                             void **state_data)
{
   5277A:	0B17      	ld         al, @(+0xB, y)
   5277B:	1790      	smult      #+0x17
   5277C:	FA25      	st         al, @0xFFFA <(scratchpad)>
    uint8 current_time[6];
    int8   timezone;

    for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
    {
        if(action_hdlr_priv_data.actions[index].action_id < ACTION_ID_MAX)
   5277D:	E119      	ld         x, @0xFFE1 <register al>
   5277E:	6300      	**prefx    0x63
   5277F:	1B1A      	ld         x, @(+0x631B, x)
   52780:	2088      	cmp        x, #+0x20
   52781:	21F8      	bcc        +0x21 <actionModelEventHandler+0x1BC:0x527A2[p]>
        {
            action_id_bitmask = 1 << 
   52782:	0114      	ld         al, #+0x1
   52783:	E3A1      	asl        @0xFFE3 <register uxl>
   52784:	E111      	ld         ah, @0xFFE1 <register al>
   52785:	10A4      	asr        #0x10
   52786:	F925      	st         al, @0xFFF9 <(scratchpad)>
   52787:	F821      	st         ah, @0xFFF8 <(scratchpad)>
                            action_hdlr_priv_data.actions[index].action_id;
            if((action_id_bitmask & actions_bitmask) == action_id_bitmask)
   52788:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   52789:	1BC7      	and        al, @(+0x1B, y)
   5278A:	1AC3      	and        ah, @(+0x1A, y)
   5278B:	F881      	cmp        ah, @0xFFF8 <(scratchpad)>
   5278C:	16F0      	bne        +0x16 <actionModelEventHandler+0x1BC:0x527A2[p]>
   5278D:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   5278E:	14F0      	bne        +0x14 <actionModelEventHandler+0x1BC:0x527A2[p]>
            {
                action_hdlr_priv_data.actions[index].action_id = 
   5278F:	0100      	**prefx    0x1
   52790:	FF10      	ld         ah, #+0xFF
   52791:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   52792:	6300      	**prefx    0x63
   52793:	1B22      	st         ah, @(+0x631B, x)
                                                            ACTION_ID_INVALID;

                /* Action id needs to be made invalid in NVM */
                Nvm_Write(
   52794:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   52795:	1790      	smult      #+0x17
   52796:	E119      	ld         x, @0xFFE1 <register al>
   52797:	6300      	**prefx    0x63
   52798:	3238      	add        x, #+0x6332
   52799:	0B17      	ld         al, @(+0xB, y)
   5279A:	04A0      	asl        #0x4
   5279B:	0100      	**prefx    0x1
   5279C:	3134      	add        al, #+0x131
   5279D:	0027      	st         al, @(0x0, y)
   5279E:	E315      	ld         al, @0xFFE3 <register uxl>
   5279F:	0110      	ld         ah, #+0x1
   527A0:	E100      	**prefx    0xE1
   527A1:	A49C      	bsr        -0x1F5C <Nvm_Write:0x50845[p]>
   527A2:	0B1B      	ld         x, @(+0xB, y)
   527A3:	0138      	add        x, #+0x1
   527A4:	0B2B      	st         x, @(+0xB, y)
    uint8 index;
    uint32 action_id_bitmask;
    uint8 current_time[6];
    int8   timezone;

    for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
   527A5:	0788      	cmp        x, #+0x7
   527A6:	D1F0      	bne        -0x2F <actionModelEventHandler+0x191:0x52777[p]>
                     GET_ACTION_NVM_OFFSET(index) + NVM_OFFSET_ACTION_ID);
            }
        }
    }

    if(TimeModelGetUTC(current_time, &timezone) == TRUE)
   527A7:	E415      	ld         al, @0xFFE4 <register uy>
   527A8:	0534      	add        al, #+0x5
   527A9:	E411      	ld         ah, @0xFFE4 <register uy>
   527AA:	0430      	add        ah, #+0x4
   527AB:	FB00      	**prefx    0xFB
   527AC:	CE9C      	bsr        -0x532 <TimeModelGetUTC:0x5227A[p]>
   527AD:	0184      	cmp        al, #+0x1
   527AE:	05F0      	bne        +0x5 <actionModelEventHandler+0x1CD:0x527B3[p]>
    {
        setTimerForNextAction(current_time);
   527AF:	E415      	ld         al, @0xFFE4 <register uy>
   527B0:	0534      	add        al, #+0x5
   527B1:	FD00      	**prefx    0xFD
   527B2:	E19C      	bsr        -0x31F <setTimerForNextAction:0x52493[p]>
                            (CSRMESH_ACTION_DELETE_T *)data->data;

            /* Deletes the respective actions defined in the bitmask */
            deleteActions(p_event->actionids);

            action_model_rsp_data.action_del_ack.actionids 
   527B3:	6400      	**prefx    0x64
   527B4:	E510      	ld         ah, #+0x63E5
   527B5:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   527B6:	0F1B      	ld         x, @(+0xF, y)
   527B7:	0012      	ld         ah, @(0x0, x)
   527B8:	0116      	ld         al, @(+0x1, x)
   527B9:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   527BA:	0126      	st         al, @(+0x1, x)
   527BB:	6400      	**prefx    0x64
   527BC:	E521      	st         ah, @0x63E5 <action_model_rsp_data>
                                                    = p_event->actionids;

            /* Send response data to model */
            if (state_data != NULL)
   527BD:	1F9B      	tst        @(+0x1F, y)
   527BE:	57F4      	beq        +0x57 <actionModelEventHandler+0x22F:0x52815[p]>
            {
                *state_data = (void *)&action_model_rsp_data.action_del_ack;
   527BF:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   527C0:	53E0      	bra        +0x53 <actionModelEventHandler+0x22D:0x52813[p]>
            bool action_found = FALSE;

            /* check whether the action is valid and not expired */
            for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
            {
                if(p_event->actionid == 
   527C1:	151B      	ld         x, @(+0x15, y)
   527C2:	0916      	ld         al, @(+0x9, x)
   527C3:	E119      	ld         x, @0xFFE1 <register al>
   527C4:	0016      	ld         al, @(0x0, x)
   527C5:	FA25      	st         al, @0xFFFA <(scratchpad)>
   527C6:	0010      	ld         ah, #+0x0
   527C7:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   527C8:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   527C9:	1790      	smult      #+0x17
   527CA:	F925      	st         al, @0xFFF9 <(scratchpad)>
   527CB:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   527CC:	E119      	ld         x, @0xFFE1 <register al>
   527CD:	6300      	**prefx    0x63
   527CE:	3282      	cmp        ah, @(+0x6332, x)
   527CF:	07F4      	beq        +0x7 <actionModelEventHandler+0x1F0:0x527D6[p]>
                            (CSRMESH_ACTION_GET_T *)data->data;
            uint8 index;
            bool action_found = FALSE;

            /* check whether the action is valid and not expired */
            for(index = 0; index < MAX_ACTIONS_SUPPORTED; index++)
   527D0:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   527D1:	0134      	add        al, #+0x1
   527D2:	F825      	st         al, @0xFFF8 <(scratchpad)>
   527D3:	0684      	cmp        al, #+0x6
   527D4:	F4F0      	bne        -0xC <actionModelEventHandler+0x1E2:0x527C8[p]>
   527D5:	40E0      	bra        +0x40 <actionModelEventHandler+0x22F:0x52815[p]>
            /* Form and send the action with the action information if the 
             * action is valid and not expired.
             */
            if(action_found == TRUE)
            {
                action_model_rsp_data.set_action_ext.set_action.actionid = 
   527D6:	E119      	ld         x, @0xFFE1 <register al>
   527D7:	6300      	**prefx    0x63
   527D8:	3238      	add        x, #+0x6332
   527D9:	FA29      	st         x, @0xFFFA <(scratchpad)>
   527DA:	0012      	ld         ah, @(0x0, x)
   527DB:	6400      	**prefx    0x64
   527DC:	E521      	st         ah, @0x63E5 <action_model_rsp_data>
                    action_hdlr_priv_data.actions[index].action_id;

                /* MCP type says its a response for Action Get */
                action_model_rsp_data.set_action_ext.set_action.mcp_type= 
   527DD:	0100      	**prefx    0x1
   527DE:	8014      	ld         al, #+0x80
   527DF:	6400      	**prefx    0x64
   527E0:	E625      	st         al, @0x63E6 <action_model_rsp_data+0x1>
                    ACTION_TYPE_MCP_ACTION_GET_RSP;

                action_model_rsp_data.set_action_ext.set_action.actiondestid= 
   527E1:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   527E2:	6300      	**prefx    0x63
   527E3:	3A1A      	ld         x, @(+0x633A, x)
   527E4:	6400      	**prefx    0x64
   527E5:	E729      	st         x, @0x63E7 <action_model_rsp_data+0x2>
                    action_hdlr_priv_data.actions[index].mcp_target_id;

                action_model_rsp_data.set_action_ext.set_action.timetype= 
   527E6:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   527E7:	6300      	**prefx    0x63
   527E8:	3B1A      	ld         x, @(+0x633B, x)
   527E9:	6400      	**prefx    0x64
   527EA:	E829      	st         x, @0x63E8 <action_model_rsp_data+0x3>
                    action_hdlr_priv_data.actions[index].time_type;

                action_model_rsp_data.set_action_ext.set_action.starttime= 
   527EB:	6400      	**prefx    0x64
   527EC:	E910      	ld         ah, #+0x63E9
   527ED:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   527EE:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   527EF:	6300      	**prefx    0x63
   527F0:	3C12      	ld         ah, @(+0x633C, x)
   527F1:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   527F2:	0B16      	ld         al, @(+0xB, x)
   527F3:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   527F4:	0126      	st         al, @(+0x1, x)
   527F5:	6400      	**prefx    0x64
   527F6:	E921      	st         ah, @0x63E9 <action_model_rsp_data+0x4>
                    action_hdlr_priv_data.actions[index].start_time_recvd;

                action_model_rsp_data.set_action_ext.set_action.repeattime= 
   527F7:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   527F8:	6300      	**prefx    0x63
   527F9:	3612      	ld         ah, @(+0x6336, x)
   527FA:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   527FB:	0516      	ld         al, @(+0x5, x)
   527FC:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   527FD:	0326      	st         al, @(+0x3, x)
   527FE:	6400      	**prefx    0x64
   527FF:	EB21      	st         ah, @0x63EB <action_model_rsp_data+0x6>
                    action_hdlr_priv_data.actions[index].repeat_time;

                action_model_rsp_data.set_action_ext.set_action.noofrepeat= 
   52800:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   52801:	6300      	**prefx    0x63
   52802:	391A      	ld         x, @(+0x6339, x)
   52803:	6400      	**prefx    0x64
   52804:	ED29      	st         x, @0x63ED <action_model_rsp_data+0x8>
                    action_hdlr_priv_data.actions[index].num_repeats;

                action_model_rsp_data.set_action_ext.buf_size= 
   52805:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   52806:	6300      	**prefx    0x63
   52807:	3316      	ld         al, @(+0x6333, x)
   52808:	6400      	**prefx    0x64
   52809:	FA25      	st         al, @0x63FA <action_model_rsp_data+0x15>
                    action_hdlr_priv_data.actions[index].mcp_pkt_len;

                MemCopy(&action_model_rsp_data.set_action_ext.buf[0],
   5280A:	6300      	**prefx    0x63
   5280B:	3E38      	add        x, #+0x633E
   5280C:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5280D:	0630      	add        ah, #+0x6
   5280E:	FD09      	bc2        
                state_data = NULL;
            }


            /* Send response data to model */
            if (state_data != NULL)
   5280F:	1F9B      	tst        @(+0x1F, y)
   52810:	05F4      	beq        +0x5 <actionModelEventHandler+0x22F:0x52815[p]>
            {
                *state_data = (void *)&action_model_rsp_data.set_action_ext;
   52811:	6400      	**prefx    0x64
   52812:	E510      	ld         ah, #+0x63E5
   52813:	1F1B      	ld         x, @(+0x1F, y)
   52814:	0022      	st         ah, @(0x0, x)
        default:
        break;
    }

    return CSR_MESH_RESULT_SUCCESS;
}
   52815:	0014      	ld         al, #+0x0
   52816:	E20F      	leave      #-0x1E

0x00052817 <ActionModelSyncCurrentTime>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void ActionModelSyncCurrentTime(uint8 current_time[])
{
   52817:	F90B      	enter      #-0x7
   52818:	0227      	st         al, @(+0x2, y)
    uint8 index;
    uint32 curr_ref_time;

    /* Get the current reference time based on UTC */
    curr_ref_time = getCurrentRefTime(current_time);
   52819:	FC00      	**prefx    0xFC
   5281A:	119C      	bsr        -0x3EF <getCurrentRefTime:0x5242B[p]>
   5281B:	0323      	st         ah, @(+0x3, y)
   5281C:	0427      	st         al, @(+0x4, y)
   5281D:	0614      	ld         al, #+0x6
   5281E:	0127      	st         al, @(+0x1, y)
   5281F:	0614      	ld         al, #+0x6
   52820:	0157      	sub        al, @(+0x1, y)
   52821:	F825      	st         al, @0xFFF8 <(scratchpad)>
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void ActionModelSyncCurrentTime(uint8 current_time[])
{
   52822:	0117      	ld         al, @(+0x1, y)
   52823:	E990      	smult      #-0x17
   52824:	E119      	ld         x, @0xFFE1 <register al>
    curr_ref_time = getCurrentRefTime(current_time);

    /* Delete all the actions which have been elapsed */
    for(index=0; index < MAX_ACTIONS_SUPPORTED; index++)
    {
        if(action_hdlr_priv_data.actions[index].action_id != ACTION_ID_INVALID
   52825:	6400      	**prefx    0x64
   52826:	BC16      	ld         al, @(+0x63BC, x)
   52827:	0100      	**prefx    0x1
   52828:	FF84      	cmp        al, #+0xFF
   52829:	23F4      	beq        +0x23 <ActionModelSyncCurrentTime+0x35:0x5284C[p]>
   5282A:	6400      	**prefx    0x64
   5282B:	C016      	ld         al, @(+0x63C0, x)
   5282C:	6400      	**prefx    0x64
   5282D:	C1B6      	or         al, @(+0x63C1, x)
   5282E:	1EF0      	bne        +0x1E <ActionModelSyncCurrentTime+0x35:0x5284C[p]>
   5282F:	6400      	**prefx    0x64
   52830:	BE16      	ld         al, @(+0x63BE, x)
   52831:	0387      	cmp        al, @(+0x3, y)
   52832:	07FC      	bcs        +0x7 <ActionModelSyncCurrentTime+0x22:0x52839[p]>
   52833:	0387      	cmp        al, @(+0x3, y)
   52834:	18F0      	bne        +0x18 <ActionModelSyncCurrentTime+0x35:0x5284C[p]>
   52835:	6400      	**prefx    0x64
   52836:	BF16      	ld         al, @(+0x63BF, x)
   52837:	0487      	cmp        al, @(+0x4, y)
   52838:	14F8      	bcc        +0x14 <ActionModelSyncCurrentTime+0x35:0x5284C[p]>
           && action_hdlr_priv_data.actions[index].repeat_time == 0 
           && curr_ref_time > action_hdlr_priv_data.actions[index].start_time)
        {
            action_hdlr_priv_data.actions[index].action_id = 
   52839:	0100      	**prefx    0x1
   5283A:	FF14      	ld         al, #+0xFF
   5283B:	6400      	**prefx    0x64
   5283C:	BC26      	st         al, @(+0x63BC, x)
                                                        ACTION_ID_INVALID;

            /* Action id needs to be made invalid in NVM */
            Nvm_Write(
   5283D:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5283E:	1790      	smult      #+0x17
   5283F:	6300      	**prefx    0x63
   52840:	3234      	add        al, #+0x6332
   52841:	F825      	st         al, @0xFFF8 <(scratchpad)>
   52842:	0117      	ld         al, @(+0x1, y)
   52843:	F090      	smult      #-0x10
   52844:	E119      	ld         x, @0xFFE1 <register al>
   52845:	0200      	**prefx    0x2
   52846:	A138      	add        x, #+0x1A1
   52847:	002B      	st         x, @(0x0, y)
   52848:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   52849:	0110      	ld         ah, #+0x1
   5284A:	E000      	**prefx    0xE0
   5284B:	FA9C      	bsr        -0x2006 <Nvm_Write:0x50845[p]>
   5284C:	0117      	ld         al, @(+0x1, y)
   5284D:	FF34      	add        al, #-0x1
   5284E:	0127      	st         al, @(+0x1, y)

    /* Get the current reference time based on UTC */
    curr_ref_time = getCurrentRefTime(current_time);

    /* Delete all the actions which have been elapsed */
    for(index=0; index < MAX_ACTIONS_SUPPORTED; index++)
   5284F:	D0F0      	bne        -0x30 <ActionModelSyncCurrentTime+0x8:0x5281F[p]>
                sizeof(uint16),
                GET_ACTION_NVM_OFFSET(index) + NVM_OFFSET_ACTION_ID);
        }
    }

    setTimerForNextAction(current_time);
   52850:	0217      	ld         al, @(+0x2, y)
   52851:	FC00      	**prefx    0xFC
   52852:	419C      	bsr        -0x3BF <setTimerForNextAction:0x52493[p]>
}
   52853:	F90F      	leave      #-0x7

0x00052854 <nextActionTimerHandler>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void nextActionTimerHandler(timer_id tid)
{
   52854:	EE0B      	enter      #-0x12
    uint8 current_time[6];
    int8  timezone;
    uint8 index = action_hdlr_priv_data.next_action_index;
   52855:	6400      	**prefx    0x64
   52856:	E211      	ld         ah, @0x63E2 <___libgatt_lib_db_639+0xF>
   52857:	0D23      	st         ah, @(+0xD, y)
    bool is_time_valid = FALSE;
    uint32 curr_ref_time = 0;

    if (action_hdlr_priv_data.next_action_tid == tid)
   52858:	6400      	**prefx    0x64
   52859:	E111      	ld         ah, @0x63E1 <___libgatt_lib_db_639+0xE>
   5285A:	E181      	cmp        ah, @0xFFE1 <register al>
   5285B:	0100      	**prefx    0x1
   5285C:	8CF0      	bne        +0x8C <nextActionTimerHandler+0x94:0x528E8[p]>
    {
        action_hdlr_priv_data.next_action_tid = TIMER_INVALID;
   5285D:	0014      	ld         al, #+0x0
   5285E:	6400      	**prefx    0x64
   5285F:	E125      	st         al, @0x63E1 <___libgatt_lib_db_639+0xE>
        is_time_valid = TimeModelGetUTC(current_time, &timezone);
   52860:	E415      	ld         al, @0xFFE4 <register uy>
   52861:	0434      	add        al, #+0x4
   52862:	E411      	ld         ah, @0xFFE4 <register uy>
   52863:	0330      	add        ah, #+0x3
   52864:	FA00      	**prefx    0xFA
   52865:	159C      	bsr        -0x5EB <TimeModelGetUTC:0x5227A[p]>
   52866:	0C27      	st         al, @(+0xC, y)
        if(is_time_valid)
   52867:	05F0      	bne        +0x5 <nextActionTimerHandler+0x18:0x5286C[p]>
   52868:	0018      	ld         x, #+0x0
   52869:	0A2B      	st         x, @(+0xA, y)
   5286A:	0B2B      	st         x, @(+0xB, y)
   5286B:	07E0      	bra        +0x7 <nextActionTimerHandler+0x1E:0x52872[p]>
        {
            curr_ref_time = getCurrentRefTime(current_time);
   5286C:	E415      	ld         al, @0xFFE4 <register uy>
   5286D:	0434      	add        al, #+0x4
   5286E:	FC00      	**prefx    0xFC
   5286F:	BC9C      	bsr        -0x444 <getCurrentRefTime:0x5242B[p]>
   52870:	0B27      	st         al, @(+0xB, y)
   52871:	0A23      	st         ah, @(+0xA, y)
        }

        if((index != 0xFF) && (is_time_valid) &&
   52872:	0D13      	ld         ah, @(+0xD, y)
   52873:	0100      	**prefx    0x1
   52874:	FF80      	cmp        ah, #+0xFF
   52875:	6DF4      	beq        +0x6D <nextActionTimerHandler+0x8E:0x528E2[p]>
   52876:	0C9B      	tst        @(+0xC, y)
   52877:	71F4      	beq        +0x71 <nextActionTimerHandler+0x94:0x528E8[p]>
   52878:	6400      	**prefx    0x64
   52879:	E315      	ld         al, @0x63E3 <___libgatt_lib_db_639+0x10>
   5287A:	0A1B      	ld         x, @(+0xA, y)
   5287B:	E385      	cmp        al, @0xFFE3 <register uxl>
   5287C:	022C      	bcz        +0x2 <nextActionTimerHandler+0x2A:0x5287E[p]>
   5287D:	67E0      	bra        +0x67 <nextActionTimerHandler+0x90:0x528E4[p]>
   5287E:	0A13      	ld         ah, @(+0xA, y)
   5287F:	E085      	cmp        al, @0xFFE0 <register ah>
   52880:	07F0      	bne        +0x7 <nextActionTimerHandler+0x33:0x52887[p]>
   52881:	6400      	**prefx    0x64
   52882:	E415      	ld         al, @0x63E4 <___libgatt_lib_db_639+0x11>
   52883:	0B1B      	ld         x, @(+0xB, y)
   52884:	E385      	cmp        al, @0xFFE3 <register uxl>
   52885:	022C      	bcz        +0x2 <nextActionTimerHandler+0x33:0x52887[p]>
   52886:	5EE0      	bra        +0x5E <nextActionTimerHandler+0x90:0x528E4[p]>
          (curr_ref_time >= action_hdlr_priv_data.next_action_exp_time))
        {
            /* Time has expired send the action here */
            ActionSendMessage(DEFAULT_NW_ID,
   52887:	0D17      	ld         al, @(+0xD, y)
   52888:	1790      	smult      #+0x17
   52889:	0F27      	st         al, @(+0xF, y)
   5288A:	E119      	ld         x, @0xFFE1 <register al>
   5288B:	6300      	**prefx    0x63
   5288C:	3A1A      	ld         x, @(+0x633A, x)
   5288D:	0E2B      	st         x, @(+0xE, y)
   5288E:	F000      	**prefx    0xF0
   5288F:	6F9C      	bsr        -0xF91 <AppGetCurrentTTL:0x518FE[p]>
   52890:	0027      	st         al, @(0x0, y)
   52891:	0F13      	ld         ah, @(+0xF, y)
   52892:	6300      	**prefx    0x63
   52893:	3E30      	add        ah, #+0x633E
   52894:	0123      	st         ah, @(+0x1, y)
   52895:	0F1B      	ld         x, @(+0xF, y)
   52896:	6300      	**prefx    0x63
   52897:	331A      	ld         x, @(+0x6333, x)
   52898:	022B      	st         x, @(+0x2, y)
   52899:	0014      	ld         al, #+0x0
   5289A:	0E13      	ld         ah, @(+0xE, y)
   5289B:	4C00      	**prefx    0x4C
   5289C:	C29C      	bsr        +0x4BC2 <ActionSendMessage:0x5745E[p]>
                action_hdlr_priv_data.actions[index].mcp_pkt_len);

            /* If an action has limited number of repeats, then increment
             * the repeat count every time a message is sent.
             */
            if ((ACTION_REPEAT_FOREVER != action_hdlr_priv_data.actions[index].num_repeats) &&
   5289D:	0F1B      	ld         x, @(+0xF, y)
   5289E:	6300      	**prefx    0x63
   5289F:	3916      	ld         al, @(+0x6339, x)
   528A0:	FF84      	cmp        al, #-0x1
   528A1:	1FF4      	beq        +0x1F <nextActionTimerHandler+0x6C:0x528C0[p]>
   528A2:	6300      	**prefx    0x63
   528A3:	3712      	ld         ah, @(+0x6337, x)
   528A4:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   528A5:	6300      	**prefx    0x63
   528A6:	3616      	ld         al, @(+0x6336, x)
   528A7:	F825      	st         al, @0xFFF8 <(scratchpad)>
   528A8:	E0B5      	or         al, @0xFFE0 <register ah>
   528A9:	17F4      	beq        +0x17 <nextActionTimerHandler+0x6C:0x528C0[p]>
                (0UL != action_hdlr_priv_data.actions[index].repeat_time))
            {
                action_hdlr_priv_data.actions[index].curr_repeat_cnt =
   528AA:	0B17      	ld         al, @(+0xB, y)
   528AB:	0A13      	ld         ah, @(+0xA, y)
   528AC:	6300      	**prefx    0x63
   528AD:	3556      	sub        al, @(+0x6335, x)
   528AE:	6300      	**prefx    0x63
   528AF:	3462      	subc       ah, @(+0x6334, x)
   528B0:	0B27      	st         al, @(+0xB, y)
   528B1:	0A23      	st         ah, @(+0xA, y)
   528B2:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   528B3:	0127      	st         al, @(+0x1, y)
   528B4:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   528B5:	002B      	st         x, @(0x0, y)
   528B6:	0B13      	ld         ah, @(+0xB, y)
   528B7:	E015      	ld         al, @0xFFE0 <register ah>
   528B8:	0A1B      	ld         x, @(+0xA, y)
   528B9:	E311      	ld         ah, @0xFFE3 <register uxl>
   528BA:	FC00      	**prefx    0xFC
   528BB:	4400      	**prefx    0x44
   528BC:	489C      	bsr        -0x3BBB8 <__udivhi3:0x16D04[p]>
   528BD:	0F1B      	ld         x, @(+0xF, y)
   528BE:	6300      	**prefx    0x63
   528BF:	3826      	st         al, @(+0x6338, x)
            /* If the action is only one type then after the completion of the
             * action delete the same. If the action shouldn't be repeated 
             * forever, remove the action when it is repeated for required 
             * number of times.
             */
            if ((action_hdlr_priv_data.actions[index].repeat_time == 0) ||
   528C0:	0D17      	ld         al, @(+0xD, y)
   528C1:	1790      	smult      #+0x17
   528C2:	E119      	ld         x, @0xFFE1 <register al>
   528C3:	6300      	**prefx    0x63
   528C4:	3616      	ld         al, @(+0x6336, x)
   528C5:	6300      	**prefx    0x63
   528C6:	37B6      	or         al, @(+0x6337, x)
   528C7:	09F4      	beq        +0x9 <nextActionTimerHandler+0x7C:0x528D0[p]>
   528C8:	6300      	**prefx    0x63
   528C9:	3912      	ld         ah, @(+0x6339, x)
   528CA:	FF80      	cmp        ah, #-0x1
   528CB:	19F4      	beq        +0x19 <nextActionTimerHandler+0x90:0x528E4[p]>
   528CC:	6300      	**prefx    0x63
   528CD:	3816      	ld         al, @(+0x6338, x)
   528CE:	E085      	cmp        al, @0xFFE0 <register ah>
   528CF:	152C      	bcz        +0x15 <nextActionTimerHandler+0x90:0x528E4[p]>
                ((ACTION_REPEAT_FOREVER != action_hdlr_priv_data.actions[index].num_repeats) &&
                 (action_hdlr_priv_data.actions[index].curr_repeat_cnt > action_hdlr_priv_data.actions[index].num_repeats)))
            {
                action_hdlr_priv_data.actions[index].action_id = ACTION_ID_INVALID;
   528D0:	0D17      	ld         al, @(+0xD, y)
   528D1:	1790      	smult      #+0x17
   528D2:	E119      	ld         x, @0xFFE1 <register al>
   528D3:	6300      	**prefx    0x63
   528D4:	3238      	add        x, #+0x6332
   528D5:	0100      	**prefx    0x1
   528D6:	FF10      	ld         ah, #+0xFF
   528D7:	0022      	st         ah, @(0x0, x)

                /* Action id needs to be made invalid in NVM */
                Nvm_Write((uint16*) (&action_hdlr_priv_data.actions[index].action_id),
   528D8:	0D17      	ld         al, @(+0xD, y)
   528D9:	04A0      	asl        #0x4
   528DA:	0100      	**prefx    0x1
   528DB:	4134      	add        al, #+0x141
   528DC:	0027      	st         al, @(0x0, y)
   528DD:	E315      	ld         al, @0xFFE3 <register uxl>
   528DE:	0110      	ld         ah, #+0x1
   528DF:	DF00      	**prefx    0xDF
   528E0:	659C      	bsr        -0x209B <Nvm_Write:0x50845[p]>
   528E1:	03E0      	bra        +0x3 <nextActionTimerHandler+0x90:0x528E4[p]>
                          sizeof(uint16), GET_ACTION_NVM_OFFSET(index) + NVM_OFFSET_ACTION_ID);
            }
        }

        if(is_time_valid)
   528E2:	0C9B      	tst        @(+0xC, y)
   528E3:	05F4      	beq        +0x5 <nextActionTimerHandler+0x94:0x528E8[p]>
        {
            setTimerForNextAction(current_time);
   528E4:	E415      	ld         al, @0xFFE4 <register uy>
   528E5:	0434      	add        al, #+0x4
   528E6:	FC00      	**prefx    0xFC
   528E7:	AC9C      	bsr        -0x454 <setTimerForNextAction:0x52493[p]>
        }
    }
}
   528E8:	EE0F      	leave      #-0x12

0x000528E9 <ReadActionModelDataFromNVM>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void ReadActionModelDataFromNVM(uint16 offset)
{
   528E9:	F70B      	enter      #-0x9
   528EA:	0014      	ld         al, #+0x0
   528EB:	0627      	st         al, @(+0x6, y)
   528EC:	0617      	ld         al, @(+0x6, y)
   528ED:	04A0      	asl        #0x4
   528EE:	0327      	st         al, @(+0x3, y)
    for(index=0; index < MAX_ACTIONS_SUPPORTED; index++)
    {
        uint16 nvm_act_index = GET_ACTION_NVM_OFFSET(index);

        /* Read action id and mcp packet len from NVM */
        Nvm_Read((uint16 *)&temp, sizeof(uint16), 
   528EF:	0100      	**prefx    0x1
   528F0:	4134      	add        al, #+0x141
   528F1:	0027      	st         al, @(0x0, y)
   528F2:	E415      	ld         al, @0xFFE4 <register uy>
   528F3:	0134      	add        al, #+0x1
   528F4:	0110      	ld         ah, #+0x1
   528F5:	DF00      	**prefx    0xDF
   528F6:	669C      	bsr        -0x209A <Nvm_Read:0x5085C[p]>
                 nvm_act_index + NVM_OFFSET_ACTION_ID);

        action_hdlr_priv_data.actions[index].action_id = temp & 0xFF;
   528F7:	011B      	ld         x, @(+0x1, y)
   528F8:	F929      	st         x, @0xFFF9 <(scratchpad)>
   528F9:	E315      	ld         al, @0xFFE3 <register uxl>
   528FA:	0100      	**prefx    0x1
   528FB:	FFC4      	and        al, #0xFF
   528FC:	F825      	st         al, @0xFFF8 <(scratchpad)>
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void ReadActionModelDataFromNVM(uint16 offset)
{
   528FD:	0617      	ld         al, @(+0x6, y)
   528FE:	1790      	smult      #+0x17
   528FF:	0227      	st         al, @(+0x2, y)

        /* Read action id and mcp packet len from NVM */
        Nvm_Read((uint16 *)&temp, sizeof(uint16), 
                 nvm_act_index + NVM_OFFSET_ACTION_ID);

        action_hdlr_priv_data.actions[index].action_id = temp & 0xFF;
   52900:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   52901:	021B      	ld         x, @(+0x2, y)
   52902:	6300      	**prefx    0x63
   52903:	3226      	st         al, @(+0x6332, x)
        temp >>= 8;
   52904:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   52905:	0009      	**unsigned
   52906:	08A4      	lsr        #0x8
   52907:	0123      	st         ah, @(+0x1, y)

        if(action_hdlr_priv_data.actions[index].action_id < ACTION_ID_MAX)
   52908:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52909:	2088      	cmp        x, #+0x20
   5290A:	6DF8      	bcc        +0x6D <ReadActionModelDataFromNVM+0x8E:0x52977[p]>
        {
            action_hdlr_priv_data.actions[index].mcp_pkt_len = temp & 0xFF;
   5290B:	0100      	**prefx    0x1
   5290C:	FFC0      	and        ah, #0xFF
   5290D:	021B      	ld         x, @(+0x2, y)
   5290E:	6300      	**prefx    0x63
   5290F:	3322      	st         ah, @(+0x6333, x)
            Nvm_Read(
   52910:	E315      	ld         al, @0xFFE3 <register uxl>
   52911:	6300      	**prefx    0x63
   52912:	3434      	add        al, #+0x6334
   52913:	031B      	ld         x, @(+0x3, y)
   52914:	0100      	**prefx    0x1
   52915:	4238      	add        x, #+0x142
   52916:	002B      	st         x, @(0x0, y)
   52917:	0210      	ld         ah, #+0x2
   52918:	DF00      	**prefx    0xDF
   52919:	439C      	bsr        -0x20BD <Nvm_Read:0x5085C[p]>
                (uint16 *)&action_hdlr_priv_data.actions[index].start_time,
                      sizeof(uint32),
                      nvm_act_index + NVM_OFFSET_ACTION_START_TIME);

            Nvm_Read(
   5291A:	0217      	ld         al, @(+0x2, y)
   5291B:	6300      	**prefx    0x63
   5291C:	3634      	add        al, #+0x6336
   5291D:	031B      	ld         x, @(+0x3, y)
   5291E:	0100      	**prefx    0x1
   5291F:	4438      	add        x, #+0x144
   52920:	002B      	st         x, @(0x0, y)
   52921:	0210      	ld         ah, #+0x2
   52922:	DF00      	**prefx    0xDF
   52923:	399C      	bsr        -0x20C7 <Nvm_Read:0x5085C[p]>
                (uint16 *)&action_hdlr_priv_data.actions[index].repeat_time,
                      sizeof(uint32),
                      nvm_act_index + NVM_OFFSET_ACTION_REPEAT_TIME);

            Nvm_Read(
   52924:	0217      	ld         al, @(+0x2, y)
   52925:	6300      	**prefx    0x63
   52926:	3934      	add        al, #+0x6339
   52927:	031B      	ld         x, @(+0x3, y)
   52928:	0100      	**prefx    0x1
   52929:	4638      	add        x, #+0x146
   5292A:	002B      	st         x, @(0x0, y)
   5292B:	0110      	ld         ah, #+0x1
   5292C:	DF00      	**prefx    0xDF
   5292D:	2F9C      	bsr        -0x20D1 <Nvm_Read:0x5085C[p]>
                (uint16 *)&action_hdlr_priv_data.actions[index].num_repeats,
                      sizeof(uint16),
                      nvm_act_index + NVM_OFFSET_ACTION_NUM_REPEAT);

            Nvm_Read(
   5292E:	0217      	ld         al, @(+0x2, y)
   5292F:	6300      	**prefx    0x63
   52930:	3A34      	add        al, #+0x633A
   52931:	031B      	ld         x, @(+0x3, y)
   52932:	0100      	**prefx    0x1
   52933:	4738      	add        x, #+0x147
   52934:	002B      	st         x, @(0x0, y)
   52935:	0110      	ld         ah, #+0x1
   52936:	DF00      	**prefx    0xDF
   52937:	259C      	bsr        -0x20DB <Nvm_Read:0x5085C[p]>
                (uint16 *)&action_hdlr_priv_data.actions[index].mcp_target_id,
                     sizeof(uint16), 
                     nvm_act_index + NVM_OFFSET_ACTION_MCP_TARGET_ID);

            Nvm_Read(
   52938:	0217      	ld         al, @(+0x2, y)
   52939:	6300      	**prefx    0x63
   5293A:	3B34      	add        al, #+0x633B
   5293B:	031B      	ld         x, @(+0x3, y)
   5293C:	0100      	**prefx    0x1
   5293D:	4838      	add        x, #+0x148
   5293E:	002B      	st         x, @(0x0, y)
   5293F:	0110      	ld         ah, #+0x1
   52940:	DF00      	**prefx    0xDF
   52941:	1B9C      	bsr        -0x20E5 <Nvm_Read:0x5085C[p]>
                (uint16 *)&action_hdlr_priv_data.actions[index].time_type,
                     sizeof(uint16), 
                     nvm_act_index + NVM_OFFSET_ACTION_TIME_TYPE);

            Nvm_Read(
   52942:	0217      	ld         al, @(+0x2, y)
   52943:	6300      	**prefx    0x63
   52944:	3C34      	add        al, #+0x633C
   52945:	031B      	ld         x, @(+0x3, y)
   52946:	0100      	**prefx    0x1
   52947:	4938      	add        x, #+0x149
   52948:	002B      	st         x, @(0x0, y)
   52949:	0210      	ld         ah, #+0x2
   5294A:	DF00      	**prefx    0xDF
   5294B:	119C      	bsr        -0x20EF <Nvm_Read:0x5085C[p]>
   5294C:	0217      	ld         al, @(+0x2, y)
   5294D:	6300      	**prefx    0x63
   5294E:	3E34      	add        al, #+0x633E
   5294F:	0427      	st         al, @(+0x4, y)
   52950:	0018      	ld         x, #+0x0
   52951:	052B      	st         x, @(+0x5, y)
   52952:	20E0      	bra        +0x20 <ReadActionModelDataFromNVM+0x89:0x52972[p]>
            for(index1=0; 
                index1 < action_hdlr_priv_data.actions[index].mcp_pkt_len;
                index1 = index1+2)
            {
                /* Read action id and mcp packet len from NVM */
                Nvm_Read((uint16 *)&temp,
   52953:	0513      	ld         ah, @(+0x5, y)
   52954:	0009      	**unsigned
   52955:	01A4      	lsr        #0x1
   52956:	0317      	ld         al, @(+0x3, y)
   52957:	0100      	**prefx    0x1
   52958:	4B34      	add        al, #+0x14B
   52959:	E131      	add        ah, @0xFFE1 <register al>
   5295A:	0023      	st         ah, @(0x0, y)
   5295B:	E415      	ld         al, @0xFFE4 <register uy>
   5295C:	0134      	add        al, #+0x1
   5295D:	0110      	ld         ah, #+0x1
   5295E:	DF00      	**prefx    0xDF
   5295F:	FD9C      	bsr        -0x2103 <Nvm_Read:0x5085C[p]>
                        sizeof(uint16), 
                        nvm_act_index + NVM_OFFSET_ACTION_MCP_PKT + (index1/2));
                action_hdlr_priv_data.actions[index].mcp_pkt[index1] = 
   52960:	0113      	ld         ah, @(+0x1, y)
   52961:	E015      	ld         al, @0xFFE0 <register ah>
   52962:	0100      	**prefx    0x1
   52963:	FFC4      	and        al, #0xFF
   52964:	041B      	ld         x, @(+0x4, y)
   52965:	0026      	st         al, @(0x0, x)
                                                                temp & 0xFF;
                temp >>=8;
   52966:	0009      	**unsigned
   52967:	08A4      	lsr        #0x8
   52968:	0123      	st         ah, @(+0x1, y)
                action_hdlr_priv_data.actions[index].mcp_pkt[index1+1] = 
   52969:	0100      	**prefx    0x1
   5296A:	FFC0      	and        ah, #0xFF
   5296B:	0122      	st         ah, @(+0x1, x)
                      nvm_act_index + NVM_OFFSET_ACTION_START_TIME_RECVD);


            for(index1=0; 
                index1 < action_hdlr_priv_data.actions[index].mcp_pkt_len;
                index1 = index1+2)
   5296C:	051B      	ld         x, @(+0x5, y)
   5296D:	0238      	add        x, #+0x2
   5296E:	052B      	st         x, @(+0x5, y)
   5296F:	0417      	ld         al, @(+0x4, y)
   52970:	0234      	add        al, #+0x2
   52971:	0427      	st         al, @(+0x4, y)
                      sizeof(uint32),
                      nvm_act_index + NVM_OFFSET_ACTION_START_TIME_RECVD);


            for(index1=0; 
                index1 < action_hdlr_priv_data.actions[index].mcp_pkt_len;
   52972:	0517      	ld         al, @(+0x5, y)
   52973:	021B      	ld         x, @(+0x2, y)
   52974:	6300      	**prefx    0x63
   52975:	3386      	cmp        al, @(+0x6333, x)
   52976:	DDFC      	bcs        -0x23 <ReadActionModelDataFromNVM+0x6A:0x52953[p]>
 *----------------------------------------------------------------------------*/
extern void ReadActionModelDataFromNVM(uint16 offset)
{
    uint8 index, index1;
    uint16 temp;
    for(index=0; index < MAX_ACTIONS_SUPPORTED; index++)
   52977:	061B      	ld         x, @(+0x6, y)
   52978:	0138      	add        x, #+0x1
   52979:	062B      	st         x, @(+0x6, y)
   5297A:	0688      	cmp        x, #+0x6
   5297B:	FF00      	**prefx    0xFF
   5297C:	70F0      	bne        -0x90 <ReadActionModelDataFromNVM+0x3:0x528EC[p]>
                action_hdlr_priv_data.actions[index].mcp_pkt[index1+1] = 
                                                                temp & 0xFF;
            }
        }
    }
}
   5297D:	F70F      	leave      #-0x9

0x0005297E <ExtensionModelDataInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void ExtensionModelDataInit(void)
{
   5297E:	FD0B      	enter      #-0x3
    MemSet(&ext_hdlr_data, 0, sizeof(ext_hdlr_data));
   5297F:	1014      	ld         al, #+0x10
   52980:	0027      	st         al, @(0x0, y)
   52981:	6400      	**prefx    0x64
   52982:	FB14      	ld         al, #+0x63FB
   52983:	0010      	ld         ah, #+0x0
   52984:	FB00      	**prefx    0xFB
   52985:	0200      	**prefx    0x2
   52986:	CA9C      	bsr        -0x4FE36 <MemSet:0x2B50[p]>

    /* Hash calculated for the manufacturer string value Qualcomm-Inc in 
     * little endian format 
     */
    ext_hdlr_data.prop_opcode[0].manuf_hash_string[5] = 0xD0;
   52987:	0100      	**prefx    0x1
   52988:	D014      	ld         al, #+0xD0
   52989:	6400      	**prefx    0x64
   5298A:	0225      	st         al, @0x6402 <ext_hdlr_data+0x7>
    ext_hdlr_data.prop_opcode[0].manuf_hash_string[4] = 0x2E;
   5298B:	2E14      	ld         al, #+0x2E
   5298C:	6400      	**prefx    0x64
   5298D:	0125      	st         al, @0x6401 <ext_hdlr_data+0x6>
    ext_hdlr_data.prop_opcode[0].manuf_hash_string[3] = 0xBA;
   5298E:	0100      	**prefx    0x1
   5298F:	BA14      	ld         al, #+0xBA
   52990:	6400      	**prefx    0x64
   52991:	0025      	st         al, @0x6400 <ext_hdlr_data+0x5>
    ext_hdlr_data.prop_opcode[0].manuf_hash_string[2] = 0xD3;
   52992:	1934      	add        al, #+0x19
   52993:	6400      	**prefx    0x64
   52994:	FF25      	st         al, @0x63FF <ext_hdlr_data+0x4>
    ext_hdlr_data.prop_opcode[0].manuf_hash_string[1] = 0xA8;
   52995:	D534      	add        al, #-0x2B
   52996:	6400      	**prefx    0x64
   52997:	FE25      	st         al, @0x63FE <ext_hdlr_data+0x3>
    ext_hdlr_data.prop_opcode[0].manuf_hash_string[0] = 0x16;
   52998:	1614      	ld         al, #+0x16
   52999:	6400      	**prefx    0x64
   5299A:	FD25      	st         al, @0x63FD <ext_hdlr_data+0x2>

    /* Hash calculated for the manufacturer string value Qualcomm-CSR in 
     * little endian format. 
     */
    ext_hdlr_data.prop_opcode[1].manuf_hash_string[5] = 0x3C;
   5299B:	3C14      	ld         al, #+0x3C
   5299C:	6400      	**prefx    0x64
   5299D:	0A25      	st         al, @0x640A <ext_hdlr_data+0xF>
    ext_hdlr_data.prop_opcode[1].manuf_hash_string[4] = 0xE5;
   5299E:	0100      	**prefx    0x1
   5299F:	E514      	ld         al, #+0xE5
   529A0:	6400      	**prefx    0x64
   529A1:	0925      	st         al, @0x6409 <ext_hdlr_data+0xE>
    ext_hdlr_data.prop_opcode[1].manuf_hash_string[3] = 0x08;
   529A2:	0814      	ld         al, #+0x8
   529A3:	6400      	**prefx    0x64
   529A4:	0825      	st         al, @0x6408 <ext_hdlr_data+0xD>
    ext_hdlr_data.prop_opcode[1].manuf_hash_string[2] = 0x0D;
   529A5:	0D14      	ld         al, #+0xD
   529A6:	6400      	**prefx    0x64
   529A7:	0725      	st         al, @0x6407 <ext_hdlr_data+0xC>
    ext_hdlr_data.prop_opcode[1].manuf_hash_string[1] = 0xA5;
   529A8:	0100      	**prefx    0x1
   529A9:	A514      	ld         al, #+0xA5
   529AA:	6400      	**prefx    0x64
   529AB:	0625      	st         al, @0x6406 <ext_hdlr_data+0xB>
    ext_hdlr_data.prop_opcode[1].manuf_hash_string[0] = 0x40;
   529AC:	4014      	ld         al, #+0x40
   529AD:	6400      	**prefx    0x64
   529AE:	0525      	st         al, @0x6405 <ext_hdlr_data+0xA>
}
   529AF:	FD0F      	leave      #-0x3

0x000529B0 <ExtensionModelHandlerInit>:
 *
 *---------------------------------------------------------------------------*/
extern void ExtensionModelHandlerInit(CsrUint8 nw_id,
                                     CsrUint16 model_grps[],
                                     CsrUint16 num_groups)
{
   529B0:	FB0B      	enter      #-0x5
    /* Initialize extension Model */
    ExtensionModelInit(nw_id, 
   529B1:	051B      	ld         x, @(+0x5, y)
   529B2:	002B      	st         x, @(0x0, y)
   529B3:	2B00      	**prefx    0x2B
   529B4:	8218      	ld         x, #+0x2A82
   529B5:	022B      	st         x, @(+0x2, y)
   529B6:	0518      	ld         x, #+0x5
   529B7:	012B      	st         x, @(+0x1, y)
   529B8:	4400      	**prefx    0x44
   529B9:	3D9C      	bsr        +0x443D <ExtensionModelInit:0x56DF6[p]>
                       model_grps,
                       num_groups,
                       extensionModelEventHandler);

    /* Initialize extension Client to receive the conflict messages */
    ExtensionModelClientInit(extensionClientEventHandler);
   529BA:	2A00      	**prefx    0x2A
   529BB:	E514      	ld         al, #+0x29E5
   529BC:	0510      	ld         ah, #+0x5
   529BD:	4600      	**prefx    0x46
   529BE:	BC9C      	bsr        +0x45BC <ExtensionModelClientInit:0x56F7A[p]>

    /* Initialize the extension opcode range structure with the server */
    ExtensionServerSetupOpcodeList((uint16*) ext_hdlr_data.prop_opcode, 
   529BF:	6400      	**prefx    0x64
   529C0:	FB14      	ld         al, #+0x63FB
   529C1:	0210      	ld         ah, #+0x2
   529C2:	4500      	**prefx    0x45
   529C3:	F79C      	bsr        +0x44F7 <ExtensionServerSetupOpcodeList:0x56EBA[p]>
                                    MAX_EXT_OPCODE_RANGE_SUPPORTED);

    /* Initialize the extension opcode range structure with the client */
    ExtensionClientSetupOpcodeList((uint16*) ext_hdlr_data.prop_opcode, 
   529C4:	6400      	**prefx    0x64
   529C5:	FB14      	ld         al, #+0x63FB
   529C6:	0210      	ld         ah, #+0x2
   529C7:	4600      	**prefx    0x46
   529C8:	C59C      	bsr        +0x45C5 <ExtensionClientSetupOpcodeList:0x56F8D[p]>
                                    MAX_EXT_OPCODE_RANGE_SUPPORTED);
}
   529C9:	FB0F      	leave      #-0x5

0x000529CA <writeExtensionDataOnIndex>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
static void writeExtensionDataOnIndex(uint8 index)
{
   529CA:	FB0B      	enter      #-0x5
   529CB:	E119      	ld         x, @0xFFE1 <register al>
    CsrUint16 nvm_ext_index = GET_EXTENSION_NVM_OFFSET(index);
   529CC:	01A0      	asl        #0x1
   529CD:	0200      	**prefx    0x2
   529CE:	A134      	add        al, #+0x1A1
   529CF:	0127      	st         al, @(+0x1, y)

    Nvm_Write((CsrUint16*) (&ext_hdlr_data.prop_opcode[index].opcode),
   529D0:	E315      	ld         al, @0xFFE3 <register uxl>
   529D1:	03A0      	asl        #0x3
   529D2:	0227      	st         al, @(+0x2, y)
   529D3:	6400      	**prefx    0x64
   529D4:	FB34      	add        al, #+0x63FB
   529D5:	011B      	ld         x, @(+0x1, y)
   529D6:	002B      	st         x, @(0x0, y)
   529D7:	0110      	ld         ah, #+0x1
   529D8:	DE00      	**prefx    0xDE
   529D9:	6C9C      	bsr        -0x2194 <Nvm_Write:0x50845[p]>
              sizeof(CsrUint16),
              nvm_ext_index + NVM_OFFSET_EXTENSION_OPCODE);

    Nvm_Write((CsrUint16*) (&ext_hdlr_data.prop_opcode[index].range),
   529DA:	0217      	ld         al, @(+0x2, y)
   529DB:	6400      	**prefx    0x64
   529DC:	FC34      	add        al, #+0x63FC
   529DD:	0227      	st         al, @(+0x2, y)
   529DE:	011B      	ld         x, @(+0x1, y)
   529DF:	0138      	add        x, #+0x1
   529E0:	002B      	st         x, @(0x0, y)
   529E1:	0110      	ld         ah, #+0x1
   529E2:	DE00      	**prefx    0xDE
   529E3:	629C      	bsr        -0x219E <Nvm_Write:0x50845[p]>
              sizeof(CsrUint16),
              nvm_ext_index + NVM_OFFSET_EXTENSION_RANGE);
}
   529E4:	FB0F      	leave      #-0x5

0x000529E5 <extensionClientEventHandler>:
 *---------------------------------------------------------------------------*/
static CSRmeshResult extensionClientEventHandler(CSRMESH_MODEL_EVENT_T event_code,
                                                CSRMESH_EVENT_DATA_T* data,
                                                CsrUint16 length,
                                                void **state_data)
{
   529E5:	FC0B      	enter      #-0x4
   529E6:	E019      	ld         x, @0xFFE0 <register ah>
    switch(event_code)
   529E7:	EF00      	**prefx    0xEF
   529E8:	1184      	cmp        al, #-0x10EF
   529E9:	3DF0      	bne        +0x3D <extensionClientEventHandler+0x41:0x52A26[p]>
    {
       case CSRMESH_EXTENSION_CONFLICT:
       {
            CSRMESH_EXTENSION_CONFLICT_T *p_event = 
                                    (CSRMESH_EXTENSION_CONFLICT_T *)data->data;
   529EA:	091A      	ld         x, @(+0x9, x)
   529EB:	012B      	st         x, @(+0x1, y)
            CsrUint16 index, opcode_idx = 0xFF;

            /* Check whether the received hash is of any interest */
            for(index = 0; index < MAX_EXT_OPCODE_RANGE_SUPPORTED; index++)
            {
                if(!MemCmp(&ext_hdlr_data.prop_opcode[index]
   529EC:	0614      	ld         al, #+0x6
   529ED:	0027      	st         al, @(0x0, y)
   529EE:	6400      	**prefx    0x64
   529EF:	FD14      	ld         al, #+0x63FD
   529F0:	E311      	ld         ah, @0xFFE3 <register uxl>
   529F1:	FC00      	**prefx    0xFC
   529F2:	3500      	**prefx    0x35
   529F3:	3E9C      	bsr        -0x3CAC2 <MemCmp:0x15F31[p]>
   529F4:	E199      	tst        @0xFFE1 <register al>
   529F5:	03F0      	bne        +0x3 <extensionClientEventHandler+0x13:0x529F8[p]>
   529F6:	0018      	ld         x, #+0x0
   529F7:	0CE0      	bra        +0xC <extensionClientEventHandler+0x1E:0x52A03[p]>
   529F8:	0614      	ld         al, #+0x6
   529F9:	0027      	st         al, @(0x0, y)
   529FA:	6400      	**prefx    0x64
   529FB:	0514      	ld         al, #+0x6405
   529FC:	0113      	ld         ah, @(+0x1, y)
   529FD:	FC00      	**prefx    0xFC
   529FE:	3500      	**prefx    0x35
   529FF:	329C      	bsr        -0x3CACE <MemCmp:0x15F31[p]>
   52A00:	E199      	tst        @0xFFE1 <register al>
   52A01:	25F0      	bne        +0x25 <extensionClientEventHandler+0x41:0x52A26[p]>
   52A02:	0118      	ld         x, #+0x1
   52A03:	F829      	st         x, @0xFFF8 <(scratchpad)>
            if(opcode_idx != 0xFF)
            {
                /* It looks like there is a conflict in the storerd proposed
                 * opcode range, so delete the same.
                 */
                if(ext_hdlr_data.prop_opcode[opcode_idx].opcode != 0)
   52A04:	E315      	ld         al, @0xFFE3 <register uxl>
   52A05:	03A0      	asl        #0x3
   52A06:	E111      	ld         ah, @0xFFE1 <register al>
   52A07:	6400      	**prefx    0x64
   52A08:	FB34      	add        al, #+0x63FB
   52A09:	F925      	st         al, @0xFFF9 <(scratchpad)>
   52A0A:	E119      	ld         x, @0xFFE1 <register al>
   52A0B:	009A      	tst        @(0x0, x)
   52A0C:	1AF4      	beq        +0x1A <extensionClientEventHandler+0x41:0x52A26[p]>
                {
                    if(p_event->reason == 0x01)
   52A0D:	011B      	ld         x, @(+0x1, y)
   52A0E:	0716      	ld         al, @(+0x7, x)
   52A0F:	0184      	cmp        al, #+0x1
   52A10:	05F0      	bne        +0x5 <extensionClientEventHandler+0x30:0x52A15[p]>
                    {
                        /* Add opcode range and proposed opcode value here */
                        ext_hdlr_data.prop_opcode[opcode_idx].opcode = 0;
   52A11:	0014      	ld         al, #+0x0
   52A12:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   52A13:	0026      	st         al, @(0x0, x)
   52A14:	0DE0      	bra        +0xD <extensionClientEventHandler+0x3C:0x52A21[p]>
                        ext_hdlr_data.prop_opcode[opcode_idx].range = 0;
                        writeExtensionDataOnIndex(opcode_idx);
                    }
                    else if((p_event->reason & 0xF0) == 0x80)
   52A15:	0100      	**prefx    0x1
   52A16:	F0C4      	and        al, #0xF0
   52A17:	0100      	**prefx    0x1
   52A18:	8084      	cmp        al, #+0x80
   52A19:	0DF0      	bne        +0xD <extensionClientEventHandler+0x41:0x52A26[p]>
                    {
                        /* Modify the opcode range and proposed opcode value */
                        ext_hdlr_data.prop_opcode[opcode_idx].opcode = 
   52A1A:	011B      	ld         x, @(+0x1, y)
   52A1B:	0616      	ld         al, @(+0x6, x)
   52A1C:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   52A1D:	0026      	st         al, @(0x0, x)
                                                    p_event->proposedopcode;
                        ext_hdlr_data.prop_opcode[opcode_idx].range = 
   52A1E:	011B      	ld         x, @(+0x1, y)
   52A1F:	0716      	ld         al, @(+0x7, x)
   52A20:	0FC4      	and        al, #0xF
   52A21:	E019      	ld         x, @0xFFE0 <register ah>
   52A22:	6400      	**prefx    0x64
   52A23:	FC26      	st         al, @(+0x63FC, x)
                                                    p_event->reason & 0x0F;
                        writeExtensionDataOnIndex(opcode_idx);
   52A24:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   52A25:	A59C      	bsr        -0x5B <writeExtensionDataOnIndex:0x529CA[p]>
        
        default:
        break;
    }  
    return CSR_MESH_RESULT_SUCCESS;
}
   52A26:	0014      	ld         al, #+0x0
   52A27:	FC0F      	leave      #-0x4

0x00052A28 <WriteExtensionModelDataOntoNVM>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void WriteExtensionModelDataOntoNVM(CsrUint16 offset)
{
   52A28:	FE0B      	enter      #-0x2
    uint8 index;
    for(index=0; index < MAX_EXT_OPCODE_RANGE_SUPPORTED; index++)
    {
        writeExtensionDataOnIndex(index);
   52A29:	0014      	ld         al, #+0x0
   52A2A:	A09C      	bsr        -0x60 <writeExtensionDataOnIndex:0x529CA[p]>
   52A2B:	0114      	ld         al, #+0x1
    }
}
   52A2C:	001B      	ld         x, @(0x0, y)
   52A2D:	010E      	ld         xh, @(+0x1, y)
   52A2E:	023C      	add        y, #+0x2
extern void WriteExtensionModelDataOntoNVM(CsrUint16 offset)
{
    uint8 index;
    for(index=0; index < MAX_EXT_OPCODE_RANGE_SUPPORTED; index++)
    {
        writeExtensionDataOnIndex(index);
   52A2F:	9BE0      	bra        -0x65 <writeExtensionDataOnIndex:0x529CA[p]>

0x00052A30 <extendedMsgHandler>:
 *---------------------------------------------------------------------------*/
static void extendedMsgHandler(CSRMESH_MODEL_EVENT_T event_code,
                               CSRMESH_EVENT_DATA_T* data,
                               CsrUint16 length,
                               void **state_data)
{
   52A30:	EC0B      	enter      #-0x14
   52A31:	1027      	st         al, @(+0x10, y)
   52A32:	1123      	st         ah, @(+0x11, y)
    /* Handling the proposed opcode range of first manufacturer hash string */
    if(ext_hdlr_data.prop_opcode[0].opcode != 0 && 
   52A33:	6400      	**prefx    0x64
   52A34:	FB15      	ld         al, @0x63FB <ext_hdlr_data>
   52A35:	25F4      	beq        +0x25 <extendedMsgHandler+0x2A:0x52A5A[p]>
   52A36:	6400      	**prefx    0x64
   52A37:	FC99      	tst        @0x63FC <ext_hdlr_data+0x1>
   52A38:	22F4      	beq        +0x22 <extendedMsgHandler+0x2A:0x52A5A[p]>
       ext_hdlr_data.prop_opcode[0].range != 0)
    {
        /* User Defined opcode is received, hence process the data received */
        if(event_code == ext_hdlr_data.prop_opcode[0].opcode)
   52A39:	101B      	ld         x, @(+0x10, y)
   52A3A:	E189      	cmp        x, @0xFFE1 <register al>
   52A3B:	1FF0      	bne        +0x1F <extendedMsgHandler+0x2A:0x52A5A[p]>
             * back to the sender
             */
            uint8 cmd[11], offset;

            /* Form the command packet */
            COPY_OPCODE_2BYTE(cmd, (ext_hdlr_data.prop_opcode[0].opcode + 1));
   52A3C:	0138      	add        x, #+0x1
   52A3D:	E311      	ld         ah, @0xFFE3 <register uxl>
   52A3E:	0009      	**unsigned
   52A3F:	08A4      	lsr        #0x8
   52A40:	0323      	st         ah, @(+0x3, y)
   52A41:	0100      	**prefx    0x1
   52A42:	FFC8      	and        x, #0xFF
   52A43:	042B      	st         x, @(+0x4, y)
            offset = 2;

            WRITE_CsrUint16(cmd, APP_MAJOR_VERSION, offset, 2);
   52A44:	0214      	ld         al, #+0x2
   52A45:	0527      	st         al, @(+0x5, y)
   52A46:	0018      	ld         x, #+0x0
   52A47:	062B      	st         x, @(+0x6, y)
            WRITE_CsrUint16(cmd, APP_MINOR_VERSION, offset, 2);
   52A48:	0114      	ld         al, #+0x1
   52A49:	0727      	st         al, @(+0x7, y)
   52A4A:	082B      	st         x, @(+0x8, y)

            ExtensionSendMessage(DEFAULT_NW_ID, data->src_id,
   52A4B:	111B      	ld         x, @(+0x11, y)
   52A4C:	031A      	ld         x, @(+0x3, x)
   52A4D:	0F2B      	st         x, @(+0xF, y)
   52A4E:	EF00      	**prefx    0xEF
   52A4F:	AF9C      	bsr        -0x1151 <AppGetCurrentTTL:0x518FE[p]>
   52A50:	0027      	st         al, @(0x0, y)
   52A51:	E415      	ld         al, @0xFFE4 <register uy>
   52A52:	0334      	add        al, #+0x3
   52A53:	0127      	st         al, @(+0x1, y)
   52A54:	0618      	ld         x, #+0x6
   52A55:	022B      	st         x, @(+0x2, y)
   52A56:	0014      	ld         al, #+0x0
   52A57:	0F13      	ld         ah, @(+0xF, y)
   52A58:	4500      	**prefx    0x45
   52A59:	3B9C      	bsr        +0x453B <ExtensionSendMessage:0x56F94[p]>
                                 AppGetCurrentTTL(), cmd, offset);
        }
    }

    /* Handling the proposed opcode range of second manufacturer hash string */
    if(ext_hdlr_data.prop_opcode[1].opcode != 0 && 
   52A5A:	6400      	**prefx    0x64
   52A5B:	0315      	ld         al, @0x6403 <ext_hdlr_data+0x8>
   52A5C:	25F4      	beq        +0x25 <extendedMsgHandler+0x51:0x52A81[p]>
   52A5D:	6400      	**prefx    0x64
   52A5E:	0499      	tst        @0x6404 <ext_hdlr_data+0x9>
   52A5F:	22F4      	beq        +0x22 <extendedMsgHandler+0x51:0x52A81[p]>
            ext_hdlr_data.prop_opcode[1].range != 0)
    {
        /* User Defined opcode is received, hence process the data received */
        if(event_code == ext_hdlr_data.prop_opcode[1].opcode)
   52A60:	101B      	ld         x, @(+0x10, y)
   52A61:	E189      	cmp        x, @0xFFE1 <register al>
   52A62:	1FF0      	bne        +0x1F <extendedMsgHandler+0x51:0x52A81[p]>
             * back to the sender
             */
            uint8 cmd[11], offset;

            /* Form the command packet */
            COPY_OPCODE_2BYTE(cmd, (ext_hdlr_data.prop_opcode[1].opcode + 1));
   52A63:	0138      	add        x, #+0x1
   52A64:	E311      	ld         ah, @0xFFE3 <register uxl>
   52A65:	0009      	**unsigned
   52A66:	08A4      	lsr        #0x8
   52A67:	0323      	st         ah, @(+0x3, y)
   52A68:	0100      	**prefx    0x1
   52A69:	FFC8      	and        x, #0xFF
   52A6A:	042B      	st         x, @(+0x4, y)
            offset = 2;

            WRITE_CsrUint16(cmd, APP_MAJOR_VERSION, offset, 2);
   52A6B:	0214      	ld         al, #+0x2
   52A6C:	0527      	st         al, @(+0x5, y)
   52A6D:	0018      	ld         x, #+0x0
   52A6E:	062B      	st         x, @(+0x6, y)
            WRITE_CsrUint16(cmd, APP_MINOR_VERSION, offset, 2);
   52A6F:	0114      	ld         al, #+0x1
   52A70:	0727      	st         al, @(+0x7, y)
   52A71:	082B      	st         x, @(+0x8, y)

            ExtensionSendMessage(DEFAULT_NW_ID, data->src_id,
   52A72:	111B      	ld         x, @(+0x11, y)
   52A73:	031A      	ld         x, @(+0x3, x)
   52A74:	0E2B      	st         x, @(+0xE, y)
   52A75:	EF00      	**prefx    0xEF
   52A76:	889C      	bsr        -0x1178 <AppGetCurrentTTL:0x518FE[p]>
   52A77:	0027      	st         al, @(0x0, y)
   52A78:	E415      	ld         al, @0xFFE4 <register uy>
   52A79:	0334      	add        al, #+0x3
   52A7A:	0127      	st         al, @(+0x1, y)
   52A7B:	0618      	ld         x, #+0x6
   52A7C:	022B      	st         x, @(+0x2, y)
   52A7D:	0014      	ld         al, #+0x0
   52A7E:	0E13      	ld         ah, @(+0xE, y)
   52A7F:	4500      	**prefx    0x45
   52A80:	149C      	bsr        +0x4514 <ExtensionSendMessage:0x56F94[p]>
                                 AppGetCurrentTTL(), cmd, offset);
        }
    }
}
   52A81:	EC0F      	leave      #-0x14

0x00052A82 <extensionModelEventHandler>:
 *---------------------------------------------------------------------------*/
static CSRmeshResult extensionModelEventHandler(CSRMESH_MODEL_EVENT_T event_code,
                                                CSRMESH_EVENT_DATA_T* data,
                                                CsrUint16 length,
                                                void **state_data)
{
   52A82:	F60B      	enter      #-0xA
   52A83:	0627      	st         al, @(+0x6, y)
   52A84:	0723      	st         ah, @(+0x7, y)
    MemSet(&ext_model_rsp_data,
   52A85:	0814      	ld         al, #+0x8
   52A86:	0027      	st         al, @(0x0, y)
   52A87:	6400      	**prefx    0x64
   52A88:	0B14      	ld         al, #+0x640B
   52A89:	0010      	ld         ah, #+0x0
   52A8A:	FB00      	**prefx    0xFB
   52A8B:	0100      	**prefx    0x1
   52A8C:	C49C      	bsr        -0x4FF3C <MemSet:0x2B50[p]>
           0x0000,
           sizeof(ext_model_rsp_data));

    switch(event_code)
   52A8D:	061B      	ld         x, @(+0x6, y)
   52A8E:	EF00      	**prefx    0xEF
   52A8F:	1088      	cmp        x, #-0x10F0
   52A90:	0100      	**prefx    0x1
   52A91:	9FF0      	bne        +0x9F <extensionModelEventHandler+0xAE:0x52B30[p]>
    {
        /* Do not add any other message handling in the below switch case */
        case CSRMESH_EXTENSION_REQUEST:
        {
            CSRMESH_EXTENSION_REQUEST_T *p_event = 
                                    (CSRMESH_EXTENSION_REQUEST_T *)data->data;
   52A92:	071B      	ld         x, @(+0x7, y)
   52A93:	091A      	ld         x, @(+0x9, x)
   52A94:	052B      	st         x, @(+0x5, y)
            CsrUint16 index, opcode_idx = 0xFF;

            /* Check whether the received hash is of any interest */
            for(index = 0; index < MAX_EXT_OPCODE_RANGE_SUPPORTED; index++)
            {
                if(!MemCmp(&ext_hdlr_data.prop_opcode[index]
   52A95:	0614      	ld         al, #+0x6
   52A96:	0027      	st         al, @(0x0, y)
   52A97:	6400      	**prefx    0x64
   52A98:	FD14      	ld         al, #+0x63FD
   52A99:	E311      	ld         ah, @0xFFE3 <register uxl>
   52A9A:	FC00      	**prefx    0xFC
   52A9B:	3500      	**prefx    0x35
   52A9C:	959C      	bsr        -0x3CB6B <MemCmp:0x15F31[p]>
   52A9D:	E199      	tst        @0xFFE1 <register al>
   52A9E:	0FF4      	beq        +0xF <extensionModelEventHandler+0x2B:0x52AAD[p]>
   52A9F:	0618      	ld         x, #+0x6
   52AA0:	002B      	st         x, @(0x0, y)
   52AA1:	6400      	**prefx    0x64
   52AA2:	0514      	ld         al, #+0x6405
   52AA3:	0513      	ld         ah, @(+0x5, y)
   52AA4:	FC00      	**prefx    0xFC
   52AA5:	3500      	**prefx    0x35
   52AA6:	8B9C      	bsr        -0x3CB75 <MemCmp:0x15F31[p]>
   52AA7:	E199      	tst        @0xFFE1 <register al>
   52AA8:	04F4      	beq        +0x4 <extensionModelEventHandler+0x2A:0x52AAC[p]>
   52AA9:	0100      	**prefx    0x1
   52AAA:	FF14      	ld         al, #+0xFF
   52AAB:	02E0      	bra        +0x2 <extensionModelEventHandler+0x2B:0x52AAD[p]>
   52AAC:	0114      	ld         al, #+0x1
   52AAD:	0427      	st         al, @(+0x4, y)
            }

            /* Check whether the received opcodes are of conflict and if so 
             * send an extension conflict message onto n/w.
             */
            is_conflict = verifyConflictingOpcodes(p_event->proposedopcode,
   52AAE:	051B      	ld         x, @(+0x5, y)
   52AAF:	0616      	ld         al, @(+0x6, x)
   52AB0:	E111      	ld         ah, @0xFFE1 <register al>
   52AB1:	0732      	add        ah, @(+0x7, x)
 *---------------------------------------------------------------------------*/
static bool verifyConflictingOpcodes(CsrUint16 opcode_start,
                                     CsrUint16 opcode_end)
{
    bool is_conflict = FALSE;
    CsrUint16 op_strt_msb = opcode_start & 0xFF00;
   52AB2:	E119      	ld         x, @0xFFE1 <register al>
   52AB3:	FF00      	**prefx    0xFF
   52AB4:	00C8      	and        x, #0xFF00
   52AB5:	022B      	st         x, @(+0x2, y)
    CsrUint16 op_end_msb = opcode_end & 0xFF00;
   52AB6:	E019      	ld         x, @0xFFE0 <register ah>
   52AB7:	FF00      	**prefx    0xFF
   52AB8:	00C8      	and        x, #0xFF00
   52AB9:	032B      	st         x, @(+0x3, y)
    CsrUint16 index;

    /* If the proposed opcode received is in the range of model opcodes defined
     * in mesh then make the opcodes as conflicting.
     */
    is_conflict = ExtensionVerifyOpcodeConflictWithMesh(opcode_start, opcode_end);
   52ABA:	4400      	**prefx    0x44
   52ABB:	069C      	bsr        +0x4406 <ExtensionVerifyOpcodeConflictWithMesh:0x56EC1[p]>

    if(!is_conflict)
   52ABC:	E199      	tst        @0xFFE1 <register al>
   52ABD:	13F0      	bne        +0x13 <extensionModelEventHandler+0x4E:0x52AD0[p]>
        /* Check whether the same opcode might have already assigned onto an 
         * a range already set by the user.
         */
        for(index = 0; index < MAX_EXT_OPCODE_RANGE_SUPPORTED; index++)
        {
            if(((ext_hdlr_data.prop_opcode[index].opcode & 0xFF00)==op_strt_msb)
   52ABE:	6400      	**prefx    0x64
   52ABF:	FB11      	ld         ah, @0x63FB <ext_hdlr_data>
   52AC0:	FF00      	**prefx    0xFF
   52AC1:	00C0      	and        ah, #0xFF00
   52AC2:	0283      	cmp        ah, @(+0x2, y)
   52AC3:	03F4      	beq        +0x3 <extensionModelEventHandler+0x44:0x52AC6[p]>
   52AC4:	0383      	cmp        ah, @(+0x3, y)
   52AC5:	02F0      	bne        +0x2 <extensionModelEventHandler+0x45:0x52AC7[p]>
   52AC6:	0114      	ld         al, #+0x1
   52AC7:	6400      	**prefx    0x64
   52AC8:	0311      	ld         ah, @0x6403 <ext_hdlr_data+0x8>
   52AC9:	FF00      	**prefx    0xFF
   52ACA:	00C0      	and        ah, #0xFF00
   52ACB:	0283      	cmp        ah, @(+0x2, y)
   52ACC:	03F4      	beq        +0x3 <extensionModelEventHandler+0x4D:0x52ACF[p]>
   52ACD:	0383      	cmp        ah, @(+0x3, y)
   52ACE:	02F0      	bne        +0x2 <extensionModelEventHandler+0x4E:0x52AD0[p]>
   52ACF:	0114      	ld         al, #+0x1
             */
            is_conflict = verifyConflictingOpcodes(p_event->proposedopcode,
                                p_event->proposedopcode + p_event->range);

            /* The hash string has matched, hence this is for our device */
            if(opcode_idx != 0xFF)
   52AD0:	041B      	ld         x, @(+0x4, y)
   52AD1:	0100      	**prefx    0x1
   52AD2:	FF88      	cmp        x, #+0xFF
   52AD3:	43F4      	beq        +0x43 <extensionModelEventHandler+0x94:0x52B16[p]>
            {
                /* If not conflicting check whether there is an already opcode
                 * set for this string and if so send the old proposed opcode
                 * here otherwise add it to the db.
                 */
                if(!is_conflict)
   52AD4:	E199      	tst        @0xFFE1 <register al>
   52AD5:	21F0      	bne        +0x21 <extensionModelEventHandler+0x74:0x52AF6[p]>
                {
                    if(ext_hdlr_data.prop_opcode[opcode_idx].opcode != 0)
   52AD6:	E315      	ld         al, @0xFFE3 <register uxl>
   52AD7:	03A0      	asl        #0x3
   52AD8:	F825      	st         al, @0xFFF8 <(scratchpad)>
   52AD9:	E111      	ld         ah, @0xFFE1 <register al>
   52ADA:	6400      	**prefx    0x64
   52ADB:	FB30      	add        ah, #+0x63FB
   52ADC:	E019      	ld         x, @0xFFE0 <register ah>
   52ADD:	0016      	ld         al, @(0x0, x)
   52ADE:	0BF4      	beq        +0xB <extensionModelEventHandler+0x67:0x52AE9[p]>
                    {
                        /* Add opcode range and proposed opcode value here */
                        ext_model_rsp_data.ext_conflict.proposedopcode = 
   52ADF:	6400      	**prefx    0x64
   52AE0:	1125      	st         al, @0x6411 <___libgatt_lib_db_638+0x6>
                            ext_hdlr_data.prop_opcode[opcode_idx].opcode ;
                        ext_model_rsp_data.ext_conflict.reason = 0x80;
                        ext_model_rsp_data.ext_conflict.reason |= 
   52AE1:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52AE2:	6400      	**prefx    0x64
   52AE3:	FC16      	ld         al, @(+0x63FC, x)
   52AE4:	0100      	**prefx    0x1
   52AE5:	80B4      	or         al, #+0x80
   52AE6:	6400      	**prefx    0x64
   52AE7:	1225      	st         al, @0x6412 <___libgatt_lib_db_638+0x7>
   52AE8:	2AE0      	bra        +0x2A <extensionModelEventHandler+0x90:0x52B12[p]>
                    else
                    {
                        /* Its a new valid opcode received, hence add it to the 
                         * proposed opcode database.
                         */
                        ext_hdlr_data.prop_opcode[opcode_idx].opcode = 
   52AE9:	051B      	ld         x, @(+0x5, y)
   52AEA:	0616      	ld         al, @(+0x6, x)
   52AEB:	E019      	ld         x, @0xFFE0 <register ah>
   52AEC:	0026      	st         al, @(0x0, x)
                                                        p_event->proposedopcode;
                        ext_hdlr_data.prop_opcode[opcode_idx].range = 
   52AED:	051B      	ld         x, @(+0x5, y)
   52AEE:	0716      	ld         al, @(+0x7, x)
   52AEF:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52AF0:	6400      	**prefx    0x64
   52AF1:	FC26      	st         al, @(+0x63FC, x)
                                                        p_event->range;
                        writeExtensionDataOnIndex(opcode_idx);
   52AF2:	0417      	ld         al, @(+0x4, y)
   52AF3:	FF00      	**prefx    0xFF
   52AF4:	D69C      	bsr        -0x12A <writeExtensionDataOnIndex:0x529CA[p]>
   52AF5:	10E0      	bra        +0x10 <extensionModelEventHandler+0x83:0x52B05[p]>
                    }
                }
                else
                {

                    if(ext_hdlr_data.prop_opcode[opcode_idx].opcode != 0)
   52AF6:	0417      	ld         al, @(+0x4, y)
   52AF7:	03A0      	asl        #0x3
   52AF8:	E119      	ld         x, @0xFFE1 <register al>
   52AF9:	6400      	**prefx    0x64
   52AFA:	FB12      	ld         ah, @(+0x63FB, x)
   52AFB:	1BF4      	beq        +0x1B <extensionModelEventHandler+0x94:0x52B16[p]>
                    {
                        /* Send a conflict only if the proposed opcode or range.
                         * is different.
                         */
                        if((ext_hdlr_data.prop_opcode[opcode_idx].opcode
   52AFC:	051B      	ld         x, @(+0x5, y)
   52AFD:	0682      	cmp        ah, @(+0x6, x)
   52AFE:	09F0      	bne        +0x9 <extensionModelEventHandler+0x85:0x52B07[p]>
   52AFF:	E119      	ld         x, @0xFFE1 <register al>
   52B00:	6400      	**prefx    0x64
   52B01:	FC16      	ld         al, @(+0x63FC, x)
   52B02:	051B      	ld         x, @(+0x5, y)
   52B03:	0786      	cmp        al, @(+0x7, x)
   52B04:	03F0      	bne        +0x3 <extensionModelEventHandler+0x85:0x52B07[p]>
   52B05:	0014      	ld         al, #+0x0
   52B06:	1CE0      	bra        +0x1C <extensionModelEventHandler+0xA0:0x52B22[p]>
                            != p_event->proposedopcode) ||
                            (ext_hdlr_data.prop_opcode[opcode_idx].range
                            != p_event->range))
                        {
                            /* Add opcode range and proposed opcode value */
                            ext_model_rsp_data.ext_conflict.proposedopcode = 
   52B07:	6400      	**prefx    0x64
   52B08:	1121      	st         ah, @0x6411 <___libgatt_lib_db_638+0x6>
                                ext_hdlr_data.prop_opcode[opcode_idx].opcode ;
                            ext_model_rsp_data.ext_conflict.reason = 0x80;
                            ext_model_rsp_data.ext_conflict.reason |= 
   52B09:	0417      	ld         al, @(+0x4, y)
   52B0A:	03A0      	asl        #0x3
   52B0B:	E119      	ld         x, @0xFFE1 <register al>
   52B0C:	6400      	**prefx    0x64
   52B0D:	FC1A      	ld         x, @(+0x63FC, x)
   52B0E:	0100      	**prefx    0x1
   52B0F:	80B8      	or         x, #+0x80
   52B10:	6400      	**prefx    0x64
   52B11:	1229      	st         x, @0x6412 <___libgatt_lib_db_638+0x7>
                              ext_hdlr_data.prop_opcode[opcode_idx].range;
                            data->src_id =0;
   52B12:	0014      	ld         al, #+0x0
   52B13:	071B      	ld         x, @(+0x7, y)
   52B14:	0326      	st         al, @(+0x3, x)
   52B15:	0CE0      	bra        +0xC <extensionModelEventHandler+0x9F:0x52B21[p]>
            else
            {
                /* There is a conflict and we do not have the hash string 
                 * supported, hence send the conflict with reason 01.
                 */
                ext_model_rsp_data.ext_conflict.proposedopcode = 
   52B16:	051B      	ld         x, @(+0x5, y)
   52B17:	061A      	ld         x, @(+0x6, x)
   52B18:	6400      	**prefx    0x64
   52B19:	1129      	st         x, @0x6411 <___libgatt_lib_db_638+0x6>
                                                p_event->proposedopcode;
                ext_model_rsp_data.ext_conflict.reason = 0x01;
   52B1A:	0114      	ld         al, #+0x1
   52B1B:	6400      	**prefx    0x64
   52B1C:	1225      	st         al, @0x6412 <___libgatt_lib_db_638+0x7>
                data->src_id =0;
   52B1D:	0014      	ld         al, #+0x0
   52B1E:	071B      	ld         x, @(+0x7, y)
   52B1F:	0326      	st         al, @(+0x3, x)
                data->allow_relay = FALSE;
   52B20:	0826      	st         al, @(+0x8, x)
   52B21:	0114      	ld         al, #+0x1
                send_conf_rsp = TRUE;
            }

            if (state_data != NULL && send_conf_rsp)
   52B22:	0B9B      	tst        @(+0xB, y)
   52B23:	15F4      	beq        +0x15 <extensionModelEventHandler+0xB6:0x52B38[p]>
   52B24:	E199      	tst        @0xFFE1 <register al>
   52B25:	13F4      	beq        +0x13 <extensionModelEventHandler+0xB6:0x52B38[p]>
            {
                MemCopy(&ext_model_rsp_data.ext_conflict.extensionhash,
   52B26:	0614      	ld         al, #+0x6
   52B27:	6400      	**prefx    0x64
   52B28:	0B10      	ld         ah, #+0x640B
   52B29:	051B      	ld         x, @(+0x5, y)
   52B2A:	FD09      	bc2        
                        p_event->extensionhash,
                        MANUF_HASH_STRING_LENGTH);

                *state_data = (void *)&ext_model_rsp_data.ext_conflict;
   52B2B:	6400      	**prefx    0x64
   52B2C:	0B14      	ld         al, #+0x640B
   52B2D:	0B1B      	ld         x, @(+0xB, y)
   52B2E:	0026      	st         al, @(0x0, x)
   52B2F:	09E0      	bra        +0x9 <extensionModelEventHandler+0xB6:0x52B38[p]>
        }
        break;

         default:
            /* Handle the extended opcode messages here */
            extendedMsgHandler(event_code, data, length,state_data);
   52B30:	0A1B      	ld         x, @(+0xA, y)
   52B31:	002B      	st         x, @(0x0, y)
   52B32:	0B17      	ld         al, @(+0xB, y)
   52B33:	0127      	st         al, @(+0x1, y)
   52B34:	0617      	ld         al, @(+0x6, y)
   52B35:	0713      	ld         ah, @(+0x7, y)
   52B36:	FF00      	**prefx    0xFF
   52B37:	F99C      	bsr        -0x107 <extendedMsgHandler:0x52A30[p]>
        break;
    }
    
    return CSR_MESH_RESULT_SUCCESS;
}
   52B38:	0014      	ld         al, #+0x0
   52B39:	F60F      	leave      #-0xA

0x00052B3A <ReadExtensionModelDataFromNVM>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void ReadExtensionModelDataFromNVM(CsrUint16 offset)
{
   52B3A:	FC0B      	enter      #-0x4

    for(index=0; index < MAX_EXT_OPCODE_RANGE_SUPPORTED; index++)
    {
        CsrUint16 nvm_ext_index = GET_EXTENSION_NVM_OFFSET(index);

        Nvm_Read(
   52B3B:	0200      	**prefx    0x2
   52B3C:	A114      	ld         al, #+0x1A1
   52B3D:	0027      	st         al, @(0x0, y)
   52B3E:	6400      	**prefx    0x64
   52B3F:	FB14      	ld         al, #+0x63FB
   52B40:	0110      	ld         ah, #+0x1
   52B41:	DD00      	**prefx    0xDD
   52B42:	1A9C      	bsr        -0x22E6 <Nvm_Read:0x5085C[p]>
            (CsrUint16 *)&ext_hdlr_data.prop_opcode[index].opcode,
                  sizeof(CsrUint16),
                  nvm_ext_index + NVM_OFFSET_EXTENSION_OPCODE);

        Nvm_Read(
   52B43:	6400      	**prefx    0x64
   52B44:	FC14      	ld         al, #+0x63FC
   52B45:	0127      	st         al, @(+0x1, y)
   52B46:	0200      	**prefx    0x2
   52B47:	A214      	ld         al, #+0x1A2
   52B48:	0027      	st         al, @(0x0, y)
   52B49:	0117      	ld         al, @(+0x1, y)
   52B4A:	0110      	ld         ah, #+0x1
   52B4B:	DD00      	**prefx    0xDD
   52B4C:	109C      	bsr        -0x22F0 <Nvm_Read:0x5085C[p]>

    for(index=0; index < MAX_EXT_OPCODE_RANGE_SUPPORTED; index++)
    {
        CsrUint16 nvm_ext_index = GET_EXTENSION_NVM_OFFSET(index);

        Nvm_Read(
   52B4D:	0117      	ld         al, @(+0x1, y)
   52B4E:	0734      	add        al, #+0x7
   52B4F:	0127      	st         al, @(+0x1, y)
   52B50:	0200      	**prefx    0x2
   52B51:	A314      	ld         al, #+0x1A3
   52B52:	0027      	st         al, @(0x0, y)
   52B53:	0117      	ld         al, @(+0x1, y)
   52B54:	0110      	ld         ah, #+0x1
   52B55:	DD00      	**prefx    0xDD
   52B56:	069C      	bsr        -0x22FA <Nvm_Read:0x5085C[p]>
            (CsrUint16 *)&ext_hdlr_data.prop_opcode[index].opcode,
                  sizeof(CsrUint16),
                  nvm_ext_index + NVM_OFFSET_EXTENSION_OPCODE);

        Nvm_Read(
   52B57:	0117      	ld         al, @(+0x1, y)
   52B58:	0134      	add        al, #+0x1
   52B59:	0127      	st         al, @(+0x1, y)
   52B5A:	0200      	**prefx    0x2
   52B5B:	A414      	ld         al, #+0x1A4
   52B5C:	0027      	st         al, @(0x0, y)
   52B5D:	0117      	ld         al, @(+0x1, y)
   52B5E:	0110      	ld         ah, #+0x1
   52B5F:	DD00      	**prefx    0xDD
   52B60:	FC9C      	bsr        -0x2304 <Nvm_Read:0x5085C[p]>
            (CsrUint16 *)&ext_hdlr_data.prop_opcode[index].range,
                 sizeof(CsrUint16), 
                 nvm_ext_index + NVM_OFFSET_EXTENSION_RANGE);
    }
}
   52B61:	FC0F      	leave      #-0x4

0x00052B62 <LotModelHandlerInit>:
 *
 *---------------------------------------------------------------------------*/
extern void LotModelHandlerInit(CsrUint8 nw_id,
                                  uint16 lot_model_groups[],
                                  CsrUint16 num_groups)
{
   52B62:	FA0B      	enter      #-0x6
   
    /* Initialize LOT Model */
    LargeObjectTransferModelInit(nw_id, 
   52B63:	061B      	ld         x, @(+0x6, y)
   52B64:	002B      	st         x, @(0x0, y)
   52B65:	2C00      	**prefx    0x2C
   52B66:	9D18      	ld         x, #+0x2B9D
   52B67:	022B      	st         x, @(+0x2, y)
   52B68:	0518      	ld         x, #+0x5
   52B69:	012B      	st         x, @(+0x1, y)
   52B6A:	4E00      	**prefx    0x4E
   52B6B:	C29C      	bsr        +0x4DC2 <LargeObjectTransferModelInit:0x5792D[p]>
                                 lot_model_groups,
                                 num_groups,
                                 lotModelEventHandler);
    
    /* Generate Most Significant 48 bits of Consumer ServiceID */
    g_lot_consumer_service_id[10] = 0x06;
   52B6C:	0614      	ld         al, #+0x6
   52B6D:	6400      	**prefx    0x64
   52B6E:	1D25      	st         al, @0x641D <___libgatt_lib_db_643>
    g_lot_consumer_service_id[11] = 0x05;
   52B6F:	0518      	ld         x, #+0x5
   52B70:	6400      	**prefx    0x64
   52B71:	1E29      	st         x, @0x641E <___libgatt_lib_db_643+0x1>
    g_lot_consumer_service_id[12] = 0x04;
   52B72:	0414      	ld         al, #+0x4
   52B73:	6400      	**prefx    0x64
   52B74:	1F25      	st         al, @0x641F <___libgatt_lib_db_643+0x2>
    g_lot_consumer_service_id[13] = 0x03;
   52B75:	0318      	ld         x, #+0x3
   52B76:	6400      	**prefx    0x64
   52B77:	2029      	st         x, @0x6420 <___libgatt_lib_db_643+0x3>
    g_lot_consumer_service_id[14] = 0x02;
   52B78:	0214      	ld         al, #+0x2
   52B79:	6400      	**prefx    0x64
   52B7A:	2125      	st         al, @0x6421 <___libgatt_lib_db_643+0x4>
    g_lot_consumer_service_id[15] = 0x01;
   52B7B:	0118      	ld         x, #+0x1
   52B7C:	6400      	**prefx    0x64
   52B7D:	2229      	st         x, @0x6422 <___libgatt_lib_db_643+0x5>
    
#ifndef CSR101x_A05
     /* Store handle */
    handle_t store_handle;
            
    status_appstore1 = Storage_FindStore(1, APP_STORE,&store_handle);
   52B7E:	E415      	ld         al, @0xFFE4 <register uy>
   52B7F:	0334      	add        al, #+0x3
   52B80:	0027      	st         al, @(0x0, y)
   52B81:	0114      	ld         al, #+0x1
   52B82:	0210      	ld         ah, #+0x2
   52B83:	5400      	**prefx    0x54
   52B84:	E29C      	bsr        +0x53E2 <Storage_FindStore:0x57F66[p]>
   52B85:	6B00      	**prefx    0x6B
   52B86:	A525      	st         al, @0x6AA5 <status_appstore1>
    if(status_appstore1== sys_status_success)
   52B87:	06F0      	bne        +0x6 <LotModelHandlerInit+0x2B:0x52B8D[p]>
        Storage_GetStoreInfo(store_handle,&store_info_appstore1);
   52B88:	0317      	ld         al, @(+0x3, y)
   52B89:	6B00      	**prefx    0x6B
   52B8A:	A110      	ld         ah, #+0x6AA1
   52B8B:	5400      	**prefx    0x54
   52B8C:	AF9C      	bsr        +0x53AF <Storage_GetStoreInfo:0x57F3B[p]>
    
    status_appstore2 = Storage_FindStore(2, APP_STORE,&store_handle);
   52B8D:	E419      	ld         x, @0xFFE4 <register uy>
   52B8E:	0338      	add        x, #+0x3
   52B8F:	002B      	st         x, @(0x0, y)
   52B90:	0214      	ld         al, #+0x2
   52B91:	0210      	ld         ah, #+0x2
   52B92:	5400      	**prefx    0x54
   52B93:	D39C      	bsr        +0x53D3 <Storage_FindStore:0x57F66[p]>
   52B94:	6B00      	**prefx    0x6B
   52B95:	9725      	st         al, @0x6A97 <status_appstore2>
    if(status_appstore2 == sys_status_success)
   52B96:	06F0      	bne        +0x6 <LotModelHandlerInit+0x3A:0x52B9C[p]>
        Storage_GetStoreInfo(store_handle,&store_info_appstore2);
   52B97:	0317      	ld         al, @(+0x3, y)
   52B98:	6B00      	**prefx    0x6B
   52B99:	AA10      	ld         ah, #+0x6AAA
   52B9A:	5400      	**prefx    0x54
   52B9B:	A09C      	bsr        +0x53A0 <Storage_GetStoreInfo:0x57F3B[p]>
                                                          &store_handle);
    if(status_userstore3 == sys_status_success)
        Storage_GetStoreInfo(store_handle,&store_info_userstore3);
#endif /* GAIA_OTAU_RELAY_SUPPORT */
#endif /* !CSR101x_A05 */
}
   52B9C:	FA0F      	leave      #-0x6

0x00052B9D <lotModelEventHandler>:
 *---------------------------------------------------------------------------*/
static CSRmeshResult lotModelEventHandler(CSRMESH_MODEL_EVENT_T event_code,
                                            CSRMESH_EVENT_DATA_T* data,
                                            CsrUint16 length,
                                            void **state_data)
{
   52B9D:	E70B      	enter      #-0x19
   52B9E:	1623      	st         ah, @(+0x16, y)
    switch(event_code)
   52B9F:	1A84      	cmp        al, #+0x1A
   52BA0:	0100      	**prefx    0x1
   52BA1:	DAF0      	bne        +0xDA <lotModelEventHandler+0xDE:0x52C7B[p]>
    {
        /* handling of Lot Model Event */
        case CSRMESH_LARGEOBJECTTRANSFER_ANNOUNCE:
        {
            uint16 g_lot_announce_hash[16],self_dev_id = 0;
   52BA2:	0014      	ld         al, #+0x0
   52BA3:	0127      	st         al, @(+0x1, y)
            uint8 i,device_variant = unknown_device;
            bool user_store = FALSE;
            CSR_MESH_APP_EVENT_DATA_T get_dev_id_data;
            
            /* Get Self Device ID */
            get_dev_id_data.appCallbackDataPtr = &self_dev_id;
   52BA4:	E419      	ld         x, @0xFFE4 <register uy>
   52BA5:	0138      	add        x, #+0x1
   52BA6:	042B      	st         x, @(+0x4, y)
            CSRmeshGetDeviceID(CSR_MESH_DEFAULT_NETID, &get_dev_id_data);
   52BA7:	E411      	ld         ah, @0xFFE4 <register uy>
   52BA8:	0230      	add        ah, #+0x2
   52BA9:	1400      	**prefx    0x14
   52BAA:	3E9C      	bsr        +0x143E <CSRmeshGetDeviceID:0x53FE8[p]>
            
            CSRMESH_LARGEOBJECTTRANSFER_ANNOUNCE_T *p_announce_data = 
            (CSRMESH_LARGEOBJECTTRANSFER_ANNOUNCE_T *)(((CSRMESH_EVENT_DATA_T *)data)->data);    
   52BAB:	161B      	ld         x, @(+0x16, y)
   52BAC:	091A      	ld         x, @(+0x9, x)
   52BAD:	152B      	st         x, @(+0x15, y)
            device_variant = csr102x_A05;
#elif defined (CSR102x_A06)
            device_variant = csr102x_A06;
#endif               
            /* Check if the node is interested in given payload type */
            if((p_announce_data->typeencoding != firmware_upgrade) || 
   52BAE:	029A      	tst        @(+0x2, x)
   52BAF:	0100      	**prefx    0x1
   52BB0:	CBF0      	bne        +0xCB <lotModelEventHandler+0xDE:0x52C7B[p]>
   52BB1:	0016      	ld         al, @(0x0, x)
   52BB2:	0A84      	cmp        al, #+0xA
   52BB3:	05F4      	beq        +0x5 <lotModelEventHandler+0x1B:0x52BB8[p]>
   52BB4:	0100      	**prefx    0x1
   52BB5:	D784      	cmp        al, #+0xD7
   52BB6:	0100      	**prefx    0x1
   52BB7:	C4F0      	bne        +0xC4 <lotModelEventHandler+0xDE:0x52C7B[p]>
   52BB8:	151B      	ld         x, @(+0x15, y)
   52BB9:	0116      	ld         al, @(+0x1, x)
   52BBA:	0184      	cmp        al, #+0x1
   52BBB:	0100      	**prefx    0x1
   52BBC:	BFF0      	bne        +0xBF <lotModelEventHandler+0xDE:0x52C7B[p]>
   52BBD:	0316      	ld         al, @(+0x3, x)
   52BBE:	0184      	cmp        al, #+0x1
   52BBF:	0100      	**prefx    0x1
   52BC0:	BBF0      	bne        +0xBB <lotModelEventHandler+0xDE:0x52C7B[p]>
            
            CsrUint16 old_version = (((APP_MAJOR_VERSION & 0x3F) << 10)|
                                      ((APP_MINOR_VERSION & 0x0F) << 6) |
                                      (APP_NEW_VERSION & 0x3F));
            
            if((p_announce_data->objectversion <= old_version) && (!user_store))
   52BC1:	0516      	ld         al, @(+0x5, x)
   52BC2:	0800      	**prefx    0x8
   52BC3:	4084      	cmp        al, #+0x840
   52BC4:	0100      	**prefx    0x1
   52BC5:	B62C      	bcz        +0xB6 <lotModelEventHandler+0xDE:0x52C7B[p]>
                break;
#endif
            }
            else
            {
                store_id_t cur_app_id = StoreUpdate_GetAppId().id;        
   52BC6:	5700      	**prefx    0x57
   52BC7:	9B9C      	bsr        +0x569B <StoreUpdate_GetAppId:0x58262[p]>
                if(cur_app_id == 1)
   52BC8:	0180      	cmp        ah, #+0x1
   52BC9:	0AF0      	bne        +0xA <lotModelEventHandler+0x36:0x52BD3[p]>
                {
                    if(status_appstore2 == sys_status_success)
   52BCA:	6B00      	**prefx    0x6B
   52BCB:	9799      	tst        @0x6A97 <status_appstore2>
   52BCC:	0100      	**prefx    0x1
   52BCD:	AEF0      	bne        +0xAE <lotModelEventHandler+0xDE:0x52C7B[p]>
                        store_size_available = ((store_info_appstore2.size * 2) / 1024);
   52BCE:	6B00      	**prefx    0x6B
   52BCF:	AB15      	ld         al, @0x6AAB <store_info_appstore2+0x1>
   52BD0:	6B00      	**prefx    0x6B
   52BD1:	AA11      	ld         ah, @0x6AAA <store_info_appstore2>
   52BD2:	09E0      	bra        +0x9 <lotModelEventHandler+0x3E:0x52BDB[p]>
                    else
                        break;
                 }
                else
                {
                    if(status_appstore1 == sys_status_success)
   52BD3:	6B00      	**prefx    0x6B
   52BD4:	A599      	tst        @0x6AA5 <status_appstore1>
   52BD5:	0100      	**prefx    0x1
   52BD6:	A5F0      	bne        +0xA5 <lotModelEventHandler+0xDE:0x52C7B[p]>
                        store_size_available = ((store_info_appstore1.size * 2) / 1024);
   52BD7:	6B00      	**prefx    0x6B
   52BD8:	A215      	ld         al, @0x6AA2 <store_info_appstore1+0x1>
   52BD9:	6B00      	**prefx    0x6B
   52BDA:	A111      	ld         ah, @0x6AA1 <store_info_appstore1>
   52BDB:	01A0      	asl        #0x1
   52BDC:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   52BDD:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   52BDE:	0009      	**unsigned
   52BDF:	0AA4      	lsr        #0xA
                    else
                        break;
                }
            }
            
            if(p_announce_data->size >= store_size_available)
   52BE0:	151B      	ld         x, @(+0x15, y)
   52BE1:	041A      	ld         x, @(+0x4, x)
   52BE2:	F829      	st         x, @0xFFF8 <(scratchpad)>
   52BE3:	0018      	ld         x, #+0x0
   52BE4:	E381      	cmp        ah, @0xFFE3 <register uxl>
   52BE5:	022C      	bcz        +0x2 <lotModelEventHandler+0x4A:0x52BE7[p]>
   52BE6:	07E0      	bra        +0x7 <lotModelEventHandler+0x50:0x52BED[p]>
   52BE7:	E381      	cmp        ah, @0xFFE3 <register uxl>
   52BE8:	0100      	**prefx    0x1
   52BE9:	92F0      	bne        +0x92 <lotModelEventHandler+0xDE:0x52C7B[p]>
   52BEA:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   52BEB:	0100      	**prefx    0x1
   52BEC:	8F2C      	bcz        +0x8F <lotModelEventHandler+0xDE:0x52C7B[p]>
                break;
#endif                     
            /* Copy the Random data in Consumer Service ID */
            g_lot_consumer_service_id[8] = self_dev_id & 0xFF;
   52BED:	0113      	ld         ah, @(+0x1, y)
   52BEE:	E015      	ld         al, @0xFFE0 <register ah>
   52BEF:	0100      	**prefx    0x1
   52BF0:	FFC4      	and        al, #0xFF
   52BF1:	6400      	**prefx    0x64
   52BF2:	1B25      	st         al, @0x641B <g_lot_consumer_service_id+0x8>
            g_lot_consumer_service_id[9] = (self_dev_id >> 8) & 0xFF;
   52BF3:	0009      	**unsigned
   52BF4:	08A4      	lsr        #0x8
   52BF5:	6400      	**prefx    0x64
   52BF6:	1C21      	st         ah, @0x641C <g_lot_consumer_service_id+0x9>
                        
            g_lot_announce[0] = (p_announce_data->companycode) & 0xFF;
   52BF7:	151B      	ld         x, @(+0x15, y)
   52BF8:	0016      	ld         al, @(0x0, x)
   52BF9:	0100      	**prefx    0x1
   52BFA:	FFC4      	and        al, #0xFF
   52BFB:	6B00      	**prefx    0x6B
   52BFC:	AE25      	st         al, @0x6AAE <g_lot_announce>
            g_lot_announce[1] = (p_announce_data->companycode >> 8) & 0xFF;
   52BFD:	0012      	ld         ah, @(0x0, x)
   52BFE:	0009      	**unsigned
   52BFF:	08A4      	lsr        #0x8
   52C00:	6B00      	**prefx    0x6B
   52C01:	AF21      	st         ah, @0x6AAF <___libgatt_lib_db_957>
            g_lot_announce[2] = (p_announce_data->platformtype) & 0xFF;
   52C02:	0116      	ld         al, @(+0x1, x)
   52C03:	0100      	**prefx    0x1
   52C04:	FFC4      	and        al, #0xFF
   52C05:	6B00      	**prefx    0x6B
   52C06:	B025      	st         al, @0x6AB0 <___libgatt_lib_db_957+0x1>
            g_lot_announce[3] = (p_announce_data->typeencoding) & 0xFF;
   52C07:	0216      	ld         al, @(+0x2, x)
   52C08:	0100      	**prefx    0x1
   52C09:	FFC4      	and        al, #0xFF
   52C0A:	6B00      	**prefx    0x6B
   52C0B:	B125      	st         al, @0x6AB1 <___libgatt_lib_db_957+0x2>
            g_lot_announce[4] = (p_announce_data->imagetype) & 0xFF;
   52C0C:	0316      	ld         al, @(+0x3, x)
   52C0D:	0100      	**prefx    0x1
   52C0E:	FFC4      	and        al, #0xFF
   52C0F:	6B00      	**prefx    0x6B
   52C10:	B225      	st         al, @0x6AB2 <___libgatt_lib_db_957+0x3>
            g_lot_announce[5] = (p_announce_data->size) & 0xFF;
   52C11:	0416      	ld         al, @(+0x4, x)
   52C12:	0100      	**prefx    0x1
   52C13:	FFC4      	and        al, #0xFF
   52C14:	6B00      	**prefx    0x6B
   52C15:	B325      	st         al, @0x6AB3 <___libgatt_lib_db_957+0x4>
            g_lot_announce[6] = (p_announce_data->objectversion) & 0xFF;
   52C16:	0516      	ld         al, @(+0x5, x)
   52C17:	0100      	**prefx    0x1
   52C18:	FFC4      	and        al, #0xFF
   52C19:	6B00      	**prefx    0x6B
   52C1A:	B425      	st         al, @0x6AB4 <___libgatt_lib_db_957+0x5>
            g_lot_announce[7] = (p_announce_data->objectversion >> 8) & 0xFF;
   52C1B:	0512      	ld         ah, @(+0x5, x)
   52C1C:	0009      	**unsigned
   52C1D:	08A4      	lsr        #0x8
   52C1E:	6B00      	**prefx    0x6B
   52C1F:	B521      	st         ah, @0x6AB5 <___libgatt_lib_db_957+0x6>
            g_lot_announce[8] = (p_announce_data->targetdestination) & 0xFF;
   52C20:	0616      	ld         al, @(+0x6, x)
   52C21:	0100      	**prefx    0x1
   52C22:	FFC4      	and        al, #0xFF
   52C23:	6B00      	**prefx    0x6B
   52C24:	B625      	st         al, @0x6AB6 <___libgatt_lib_db_957+0x7>
            g_lot_announce[9] = (p_announce_data->targetdestination >> 8) & 0xFF;
   52C25:	0612      	ld         ah, @(+0x6, x)
   52C26:	0009      	**unsigned
   52C27:	08A4      	lsr        #0x8
   52C28:	6B00      	**prefx    0x6B
   52C29:	B721      	st         ah, @0x6AB7 <___libgatt_lib_db_957+0x8>
            
            /* Generate hash of Most Significant 64 bits of Consumer Service ID */
            CSRmeshCalculateSHA256Hash(g_lot_announce, 
   52C2A:	E419      	ld         x, @0xFFE4 <register uy>
   52C2B:	0538      	add        x, #+0x5
   52C2C:	002B      	st         x, @(0x0, y)
   52C2D:	6B00      	**prefx    0x6B
   52C2E:	AE14      	ld         al, #+0x6AAE
   52C2F:	0A10      	ld         ah, #+0xA
   52C30:	2800      	**prefx    0x28
   52C31:	AB9C      	bsr        +0x27AB <CSRmeshCalculateSHA256Hash:0x553DC[p]>
   52C32:	E415      	ld         al, @0xFFE4 <register uy>
   52C33:	1034      	add        al, #+0x10
   52C34:	F925      	st         al, @0xFFF9 <(scratchpad)>
 *---------------------------------------------------------------------------*/
static CSRmeshResult lotModelEventHandler(CSRMESH_MODEL_EVENT_T event_code,
                                            CSRMESH_EVENT_DATA_T* data,
                                            CsrUint16 length,
                                            void **state_data)
{
   52C35:	E419      	ld         x, @0xFFE4 <register uy>
   52C36:	0538      	add        x, #+0x5
   52C37:	FA29      	st         x, @0xFFFA <(scratchpad)>
            
            /* Add the hash value in Consumer Service ID */
            for (i = 0; i < 4; i++)
            {
                uint16 t;
                t = g_lot_announce_hash[11 - i];
   52C38:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   52C39:	001A      	ld         x, @(0x0, x)
   52C3A:	F829      	st         x, @0xFFF8 <(scratchpad)>
                g_lot_consumer_service_id[(i << 1)] = ((t >> 8) & 0xFF);
   52C3B:	E415      	ld         al, @0xFFE4 <register uy>
   52C3C:	1034      	add        al, #+0x10
   52C3D:	F955      	sub        al, @0xFFF9 <(scratchpad)>
   52C3E:	01A0      	asl        #0x1
   52C3F:	E119      	ld         x, @0xFFE1 <register al>
   52C40:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   52C41:	0009      	**unsigned
   52C42:	08A4      	lsr        #0x8
   52C43:	6400      	**prefx    0x64
   52C44:	1322      	st         ah, @(+0x6413, x)
                g_lot_consumer_service_id[(i << 1) + 1] = (t & 0xFF);
   52C45:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   52C46:	0100      	**prefx    0x1
   52C47:	FFC4      	and        al, #0xFF
   52C48:	6400      	**prefx    0x64
   52C49:	1426      	st         al, @(+0x6414, x)
   52C4A:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   52C4B:	FF38      	add        x, #-0x1
   52C4C:	F929      	st         x, @0xFFF9 <(scratchpad)>
            CSRmeshCalculateSHA256Hash(g_lot_announce, 
                                       LOT_ANNOUNCE_MESSAGE_PAYLOAD_LENGTH ,
                                       g_lot_announce_hash);
            
            /* Add the hash value in Consumer Service ID */
            for (i = 0; i < 4; i++)
   52C4D:	E415      	ld         al, @0xFFE4 <register uy>
   52C4E:	0C34      	add        al, #+0xC
   52C4F:	E189      	cmp        x, @0xFFE1 <register al>
   52C50:	E5F0      	bne        -0x1B <lotModelEventHandler+0x98:0x52C35[p]>
   52C51:	0834      	add        al, #+0x8
   52C52:	F925      	st         al, @0xFFF9 <(scratchpad)>
                 
            /* Send Lot Interest Information to Model */
            for (i = 0; i < 4; i++)
            {
                uint16 t;
                t = g_lot_announce_hash[15 - i];
   52C53:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   52C54:	001A      	ld         x, @(0x0, x)
   52C55:	F829      	st         x, @0xFFF8 <(scratchpad)>
                interest_data.serviceid[(i << 1)] = ((t >> 8) & 0xFF);
   52C56:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   52C57:	0F34      	add        al, #+0xF
   52C58:	F955      	sub        al, @0xFFF9 <(scratchpad)>
   52C59:	01A0      	asl        #0x1
   52C5A:	E119      	ld         x, @0xFFE1 <register al>
   52C5B:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   52C5C:	0009      	**unsigned
   52C5D:	08A4      	lsr        #0x8
   52C5E:	6B00      	**prefx    0x6B
   52C5F:	9822      	st         ah, @(+0x6A98, x)
                interest_data.serviceid[(i << 1) + 1] = (t & 0xFF);
   52C60:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   52C61:	0100      	**prefx    0x1
   52C62:	FFC4      	and        al, #0xFF
   52C63:	6B00      	**prefx    0x6B
   52C64:	9926      	st         al, @(+0x6A99, x)
   52C65:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   52C66:	FF38      	add        x, #-0x1
   52C67:	F929      	st         x, @0xFFF9 <(scratchpad)>
                g_lot_consumer_service_id[(i << 1)] = ((t >> 8) & 0xFF);
                g_lot_consumer_service_id[(i << 1) + 1] = (t & 0xFF);
            }
                 
            /* Send Lot Interest Information to Model */
            for (i = 0; i < 4; i++)
   52C68:	E415      	ld         al, @0xFFE4 <register uy>
   52C69:	1034      	add        al, #+0x10
   52C6A:	E189      	cmp        x, @0xFFE1 <register al>
   52C6B:	E8F0      	bne        -0x18 <lotModelEventHandler+0xB6:0x52C53[p]>
                interest_data.serviceid[(i << 1) + 1] = (t & 0xFF);
            }
#ifdef GAIA_OTAU_RELAY_SUPPORT
            interest_data.serviceid[7] = interest_data.serviceid[7] | 0x80;
#else
            interest_data.serviceid[7] = interest_data.serviceid[7] & 0x7F;
   52C6C:	6B00      	**prefx    0x6B
   52C6D:	9F15      	ld         al, @0x6A9F <GattGetMtu+0x5>
   52C6E:	7FC4      	and        al, #0x7F
   52C6F:	6B00      	**prefx    0x6B
   52C70:	9F25      	st         al, @0x6A9F <GattGetMtu+0x5>
#endif            
            if (state_data != NULL)
   52C71:	1A9B      	tst        @(+0x1A, y)
   52C72:	05F4      	beq        +0x5 <lotModelEventHandler+0xDA:0x52C77[p]>
            {
                *state_data = (void *)&interest_data;
   52C73:	6B00      	**prefx    0x6B
   52C74:	9814      	ld         al, #+0x6A98
   52C75:	1A1B      	ld         x, @(+0x1A, y)
   52C76:	0026      	st         al, @(0x0, x)
            }

            /* Trigger connectable advertisements with LOT Interest Service ID */
            GattTriggerLOTAdverts(g_lot_consumer_service_id);
   52C77:	6400      	**prefx    0x64
   52C78:	1314      	ld         al, #+0x6413
   52C79:	F400      	**prefx    0xF4
   52C7A:	AE9C      	bsr        -0xC52 <GattTriggerLOTAdverts:0x52028[p]>
        default:
        break;
    }

    return CSR_MESH_RESULT_SUCCESS;
}
   52C7B:	0014      	ld         al, #+0x0
   52C7C:	E70F      	leave      #-0x19

0x00052C7D <updateStoreType>:
         g_app_otau_data.store_id = USER_STORE_GAIA_OTAU_ID;
         status = TRUE;
     }
#endif
    return status;
}
   52C7D:	0014      	ld         al, #+0x0
   52C7E:	00E2      	bra        0x0, x

0x00052C7F <AppGaiaOtauDataInit>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void AppGaiaOtauDataInit(void)
{
   52C7F:	FE0B      	enter      #-0x2
   g_app_otau_data.data_type = upgrade_header_upgrade_version;
   52C80:	6400      	**prefx    0x64
   52C81:	2318      	ld         x, #+0x6423
   52C82:	0014      	ld         al, #+0x0
   52C83:	0026      	st         al, @(0x0, x)
   g_app_otau_data.commit_cfm = FALSE;
   52C84:	0926      	st         al, @(+0x9, x)
   GaiaOtauUpgradedApplication(FALSE);
#ifdef GAIA_OTAU_RELAY_SUPPORT
   g_app_otau_data.store_type = APP_STORE;
#endif
}
   52C85:	001B      	ld         x, @(0x0, y)
   52C86:	023C      	add        y, #+0x2
 *----------------------------------------------------------------------------*/
extern void AppGaiaOtauDataInit(void)
{
   g_app_otau_data.data_type = upgrade_header_upgrade_version;
   g_app_otau_data.commit_cfm = FALSE;
   GaiaOtauUpgradedApplication(FALSE);
   52C87:	F200      	**prefx    0xF2
   52C88:	A2E0      	bra        -0xE5E <GaiaOtauUpgradedApplication:0x51E2A[p]>

0x00052C89 <AppGaiaOtauInit>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void AppGaiaOtauInit(void)
{
   52C89:	FE0B      	enter      #-0x2
    GaiaRegisterCallback(appHandleGaiaEvent);
   52C8A:	2E00      	**prefx    0x2E
   52C8B:	B214      	ld         al, #+0x2DB2
   52C8C:	0510      	ld         ah, #+0x5
   52C8D:	0500      	**prefx    0x5
   52C8E:	9A9C      	bsr        +0x49A <GaiaRegisterCallback:0x53128[p]>
    GaiaOtauRegisterCallback(appHandleGaiaOtauEvent);
   52C8F:	2D00      	**prefx    0x2D
   52C90:	A214      	ld         al, #+0x2CA2
   52C91:	0510      	ld         ah, #+0x5
   52C92:	0600      	**prefx    0x6
   52C93:	529C      	bsr        +0x652 <GaiaOtauRegisterCallback:0x532E5[p]>
#ifdef GAIA_OTAU_RELAY_SUPPORT
    AppOtauClientInit();
#endif
    AppGaiaOtauDataInit();
   52C94:	EB9C      	bsr        -0x15 <AppGaiaOtauDataInit:0x52C7F[p]>
}
   52C95:	FE0F      	leave      #-0x2

0x00052C96 <handleConnParamUpdateCallback>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleConnParamUpdateCallback(bool params_applied)
{
   52C96:	FE0B      	enter      #-0x2
    /* Unregister callback */
    ConnectionParamUpdateSetCallback(NULL);
   52C97:	0010      	ld         ah, #+0x0
   52C98:	0014      	ld         al, #+0x0
   52C99:	DA00      	**prefx    0xDA
   52C9A:	F19C      	bsr        -0x260F <ConnectionParamUpdateSetCallback:0x5068B[p]>
    
    /* Continue with upgrade */
    if (IsGaiaOtauInProgress())
   52C9B:	F200      	**prefx    0xF2
   52C9C:	8B9C      	bsr        -0xE75 <IsGaiaOtauInProgress:0x51E27[p]>
   52C9D:	E199      	tst        @0xFFE1 <register al>
   52C9E:	03F4      	beq        +0x3 <handleConnParamUpdateCallback+0xB:0x52CA1[p]>
    {
        GaiaOtauContinueUpgrade();
   52C9F:	0700      	**prefx    0x7
   52CA0:	4A9C      	bsr        +0x74A <GaiaOtauContinueUpgrade:0x533EA[p]>
    }
}
   52CA1:	FE0F      	leave      #-0x2

0x00052CA2 <appHandleGaiaOtauEvent>:
 *
 *  RETURNS
 *     sys_status: sys_status_success if event handled, or sys_status_failed.
 *----------------------------------------------------------------------------*/
static sys_status appHandleGaiaOtauEvent(gaia_otau_event event, GAIA_OTAU_EVENT_T *data)
{
   52CA2:	F00B      	enter      #-0x10
   52CA3:	E119      	ld         x, @0xFFE1 <register al>
   52CA4:	0D23      	st         ah, @(+0xD, y)
    sys_status status = sys_status_success;
    
    switch (event)
   52CA5:	0884      	cmp        al, #+0x8
   52CA6:	04F8      	bcc        +0x4 <.JTBASE19:0x52CAA[p]>
   52CA7:	A100      	**prefx    0xA1
   52CA8:	F01A      	ld         x, @(-0x5F10, x)
   52CA9:	FE09      	brxl       

0x00052CAA <.JTBASE19>:
   52CAA:	0C00      	**prefx    0xC
   52CAB:	0014      	ld         al, #+0xC00
   52CAC:	0100      	**prefx    0x1
   52CAD:	04E0      	bra        +0x104 <.JTBASE35+0xAE:0x52DB1[p]>
    {
        case gaia_otau_event_upgrade_starting:
            GaiaOtauInProgress(TRUE);
   52CAE:	0114      	ld         al, #+0x1
   52CAF:	F200      	**prefx    0xF2
   52CB0:	839C      	bsr        -0xE7D <GaiaOtauInProgress:0x51E33[p]>
#ifdef GAIA_OTAU_RELAY_SUPPORT
    GaiaOtauSetCommitStatus(FALSE);
#endif
    
    /* Stop connection parameter update if there was one pending */
    StopConnParamsUpdate();
   52CB1:	DB00      	**prefx    0xDB
   52CB2:	C79C      	bsr        -0x2539 <StopConnParamsUpdate:0x50779[p]>
    
    if (IsGaiaOtauUpgradedApplication())
   52CB3:	F100      	**prefx    0xF1
   52CB4:	799C      	bsr        -0xE87 <IsGaiaOtauUpgradedApplication:0x51E2D[p]>
   52CB5:	E199      	tst        @0xFFE1 <register al>
   52CB6:	39F0      	bne        +0x39 <.JTBASE19+0x45:0x52CEF[p]>
        /* No more data to download, no need to change connection parameters */
        event_data->continue_immediately = TRUE;
    }
    else
    {
        if ((GetUpdatedConnParams(&conn_params) &&
   52CB7:	E415      	ld         al, @0xFFE4 <register uy>
   52CB8:	0134      	add        al, #+0x1
   52CB9:	DA00      	**prefx    0xDA
   52CBA:	C49C      	bsr        -0x263C <GetUpdatedConnParams:0x5067E[p]>
   52CBB:	E199      	tst        @0xFFE1 <register al>
   52CBC:	04F4      	beq        +0x4 <.JTBASE19+0x16:0x52CC0[p]>
   52CBD:	0117      	ld         al, @(+0x1, y)
   52CBE:	2084      	cmp        al, #+0x20
   52CBF:	302C      	bcz        +0x30 <.JTBASE19+0x45:0x52CEF[p]>
   52CC0:	E415      	ld         al, @0xFFE4 <register uy>
   52CC1:	0134      	add        al, #+0x1
   52CC2:	DA00      	**prefx    0xDA
   52CC3:	BB9C      	bsr        -0x2645 <GetUpdatedConnParams:0x5067E[p]>
   52CC4:	E199      	tst        @0xFFE1 <register al>
   52CC5:	09F0      	bne        +0x9 <.JTBASE19+0x24:0x52CCE[p]>
   52CC6:	F100      	**prefx    0xF1
   52CC7:	699C      	bsr        -0xE97 <GetConnInterval:0x51E30[p]>
   52CC8:	E199      	tst        @0xFFE1 <register al>
   52CC9:	05F4      	beq        +0x5 <.JTBASE19+0x24:0x52CCE[p]>
   52CCA:	F100      	**prefx    0xF1
   52CCB:	659C      	bsr        -0xE9B <GetConnInterval:0x51E30[p]>
   52CCC:	2184      	cmp        al, #+0x21
   52CCD:	22FC      	bcs        +0x22 <.JTBASE19+0x45:0x52CEF[p]>
            event_data->continue_immediately = TRUE;
        }
        else
        {
            /* Request faster connection parameters for downloading update */
            ConnectionParamUpdateSetCallback(handleConnParamUpdateCallback);
   52CCE:	2D00      	**prefx    0x2D
   52CCF:	9614      	ld         al, #+0x2C96
   52CD0:	0510      	ld         ah, #+0x5
   52CD1:	DA00      	**prefx    0xDA
   52CD2:	B99C      	bsr        -0x2647 <ConnectionParamUpdateSetCallback:0x5068B[p]>
            DEBUG_STR("\r\nRequesting New Connection Parameters");
            AppRequestConnParamUpdate(GetConnectedDeviceId());
   52CD3:	F100      	**prefx    0xF1
   52CD4:	509C      	bsr        -0xEB0 <GetConnectedDeviceId:0x51E24[p]>
   52CD5:	F100      	**prefx    0xF1
   52CD6:	7A9C      	bsr        -0xE86 <AppRequestConnParamUpdate:0x51E50[p]>
   52CD7:	13E0      	bra        +0x13 <.JTBASE19+0x40:0x52CEA[p]>
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void otauCallbackValidateHeaderID(GAIA_OTAU_EVENT_VALIDATE_HEADER_T *event_data)
{
    const uint8 expected_header_id[] = MESH_OTAU_HEADER_ID;
   52CD8:	0914      	ld         al, #+0x9
   52CD9:	E419      	ld         x, @0xFFE4 <register uy>
   52CDA:	0138      	add        x, #+0x1
   52CDB:	F829      	st         x, @0xFFF8 <(scratchpad)>
   52CDC:	E311      	ld         ah, @0xFFE3 <register uxl>
   52CDD:	A100      	**prefx    0xA1
   52CDE:	E718      	ld         x, #-0x5F19
   52CDF:	FD09      	bc2        

    /* Check header ID string matches */
    if (MemCmp(event_data->header, expected_header_id, MESH_OTAU_HEADER_ID_LEN) != 0)
   52CE0:	0D1B      	ld         x, @(+0xD, y)
   52CE1:	0116      	ld         al, @(+0x1, x)
   52CE2:	0818      	ld         x, #+0x8
   52CE3:	002B      	st         x, @(0x0, y)
   52CE4:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   52CE5:	FC00      	**prefx    0xFC
   52CE6:	3200      	**prefx    0x32
   52CE7:	4A9C      	bsr        -0x3CDB6 <MemCmp:0x15F31[p]>
   52CE8:	E199      	tst        @0xFFE1 <register al>
   52CE9:	06F4      	beq        +0x6 <.JTBASE19+0x45:0x52CEF[p]>
    {
        event_data->header_valid = FALSE;
   52CEA:	0014      	ld         al, #+0x0
   52CEB:	0D1B      	ld         x, @(+0xD, y)
   52CEC:	0026      	st         al, @(0x0, x)
   52CED:	0100      	**prefx    0x1
   52CEE:	C3E0      	bra        +0xC3 <.JTBASE35+0xAE:0x52DB1[p]>
    }
    else
    {
        event_data->header_valid = TRUE;
   52CEF:	0114      	ld         al, #+0x1
   52CF0:	0100      	**prefx    0x1
   52CF1:	AAE0      	bra        +0xAA <.JTBASE35+0x98:0x52D9B[p]>
 *
 *---------------------------------------------------------------------------*/
static void otauCallbackValidateHeaderBody(GAIA_OTAU_EVENT_VALIDATE_HEADER_BODY_T *event_data)
{
    bool status = TRUE;
    uint8 size = event_data->portion_size;
   52CF2:	0D1B      	ld         x, @(+0xD, y)
   52CF3:	031A      	ld         x, @(+0x3, x)
   52CF4:	0B2B      	st         x, @(+0xB, y)
    uint8 *header_body = event_data->header_body;
   52CF5:	0D1B      	ld         x, @(+0xD, y)
   52CF6:	041A      	ld         x, @(+0x4, x)
   52CF7:	0C2B      	st         x, @(+0xC, y)
   52CF8:	0114      	ld         al, #+0x1
   52CF9:	0A27      	st         al, @(+0xA, y)
   52CFA:	0100      	**prefx    0x1
   52CFB:	97E0      	bra        +0x97 <.JTBASE35+0x8F:0x52D92[p]>
   52CFC:	0014      	ld         al, #+0x0
   52CFD:	0A27      	st         al, @(+0xA, y)
    while(size != 0)
    {
        switch (g_app_otau_data.data_type)
   52CFE:	0788      	cmp        x, #+0x7
   52CFF:	FDF8      	bcc        -0x3 <.JTBASE19+0x52:0x52CFC[p]>
   52D00:	A100      	**prefx    0xA1
   52D01:	F81A      	ld         x, @(-0x5F08, x)
   52D02:	FE09      	brxl       

0x00052D03 <.JTBASE35>:
            case upgrade_header_upgrade_version:
            {
#ifdef GAIA_OTAU_RELAY_SUPPORT
                MemCopy(g_app_otau_data.hdr_data,header_body,UPGRADE_HEADER_UPGRADE_VERSION_SIZE);
#endif
                g_app_otau_data.upgrade_version_major = 
   52D03:	0C17      	ld         al, @(+0xC, y)
   52D04:	0400      	**prefx    0x4
   52D05:	BA9C      	bsr        +0x3BA <GetUint16FromArray:0x530BF[p]>
   52D06:	6400      	**prefx    0x64
   52D07:	2425      	st         al, @0x6424 <g_app_otau_data+0x1>
                        GetUint16FromArray(header_body);
                g_app_otau_data.upgrade_version_minor = 
   52D08:	0C1B      	ld         x, @(+0xC, y)
   52D09:	0238      	add        x, #+0x2
   52D0A:	0C2B      	st         x, @(+0xC, y)
   52D0B:	E315      	ld         al, @0xFFE3 <register uxl>
   52D0C:	0400      	**prefx    0x4
   52D0D:	B29C      	bsr        +0x3B2 <GetUint16FromArray:0x530BF[p]>
   52D0E:	6400      	**prefx    0x64
   52D0F:	2525      	st         al, @0x6425 <g_app_otau_data+0x2>
                        GetUint16FromArray(header_body + 
                                           UPGRADE_HEADER_UPGRADE_VERSION_MAJOR_SIZE); 
                size -= UPGRADE_HEADER_UPGRADE_VERSION_SIZE;
   52D10:	0B17      	ld         al, @(+0xB, y)
   52D11:	FC34      	add        al, #-0x4
   52D12:	0B27      	st         al, @(+0xB, y)
                header_body += UPGRADE_HEADER_UPGRADE_VERSION_SIZE;
   52D13:	0C1B      	ld         x, @(+0xC, y)
   52D14:	0238      	add        x, #+0x2
   52D15:	0C2B      	st         x, @(+0xC, y)
                g_app_otau_data.data_type = upgrade_header_company_code;
   52D16:	0114      	ld         al, #+0x1
   52D17:	50E0      	bra        +0x50 <.JTBASE35+0x64:0x52D67[p]>
            case upgrade_header_company_code:
            {
#ifdef GAIA_OTAU_RELAY_SUPPORT
                MemCopy(&g_app_otau_data.hdr_data[COMPANY_CODE_OFFSET],header_body,UPGRADE_HEADER_COMPANY_CODE_SIZE);
#endif
                g_app_otau_data.company_code = 
   52D18:	0C17      	ld         al, @(+0xC, y)
   52D19:	0400      	**prefx    0x4
   52D1A:	A59C      	bsr        +0x3A5 <GetUint16FromArray:0x530BF[p]>
   52D1B:	6400      	**prefx    0x64
   52D1C:	2625      	st         al, @0x6426 <g_app_otau_data+0x3>
                        GetUint16FromArray(header_body);
                size -= UPGRADE_HEADER_COMPANY_CODE_SIZE;
   52D1D:	0B1B      	ld         x, @(+0xB, y)
   52D1E:	FE38      	add        x, #-0x2
   52D1F:	0B2B      	st         x, @(+0xB, y)
                header_body += UPGRADE_HEADER_COMPANY_CODE_SIZE;
   52D20:	0C1B      	ld         x, @(+0xC, y)
   52D21:	0238      	add        x, #+0x2
   52D22:	0C2B      	st         x, @(+0xC, y)

                if(g_app_otau_data.company_code != 0x00D7 && 
   52D23:	0100      	**prefx    0x1
   52D24:	D784      	cmp        al, #+0xD7
   52D25:	06F4      	beq        +0x6 <.JTBASE35+0x28:0x52D2B[p]>
   52D26:	0A84      	cmp        al, #+0xA
   52D27:	04F4      	beq        +0x4 <.JTBASE35+0x28:0x52D2B[p]>
                   g_app_otau_data.company_code != 0x000A)
                {
                    status = updateStoreType();
   52D28:	FF00      	**prefx    0xFF
   52D29:	549C      	bsr        -0xAC <updateStoreType:0x52C7D[p]>
   52D2A:	0A27      	st         al, @(+0xA, y)
                }
                if(status)
   52D2B:	0A9B      	tst        @(+0xA, y)
   52D2C:	66F4      	beq        +0x66 <.JTBASE35+0x8F:0x52D92[p]>
                    g_app_otau_data.data_type = upgrade_header_device_variant; 
   52D2D:	0214      	ld         al, #+0x2
   52D2E:	39E0      	bra        +0x39 <.JTBASE35+0x64:0x52D67[p]>
#elif defined (CSR102x_A05)
            device_variant = csr102x_A05;
#elif defined (CSR102x_A06)
            device_variant = csr102x_A06;
#endif       
                g_app_otau_data.device_variant = header_body[0];
   52D2F:	0C1B      	ld         x, @(+0xC, y)
   52D30:	0016      	ld         al, @(0x0, x)
   52D31:	6400      	**prefx    0x64
   52D32:	2725      	st         al, @0x6427 <g_app_otau_data+0x4>
                size -= UPGRADE_HEADER_DEVICE_VARIANT_SIZE;
   52D33:	0B1B      	ld         x, @(+0xB, y)
   52D34:	FF38      	add        x, #-0x1
   52D35:	0B2B      	st         x, @(+0xB, y)
                header_body += UPGRADE_HEADER_DEVICE_VARIANT_SIZE;
   52D36:	0C1B      	ld         x, @(+0xC, y)
   52D37:	0138      	add        x, #+0x1
   52D38:	0C2B      	st         x, @(+0xC, y)
                
                if(g_app_otau_data.device_variant != device_variant)
   52D39:	0184      	cmp        al, #+0x1
   52D3A:	04F4      	beq        +0x4 <.JTBASE35+0x3B:0x52D3E[p]>
                {
                    status = updateStoreType();
   52D3B:	FF00      	**prefx    0xFF
   52D3C:	419C      	bsr        -0xBF <updateStoreType:0x52C7D[p]>
   52D3D:	0A27      	st         al, @(+0xA, y)
                }
                if(status)
   52D3E:	0A9B      	tst        @(+0xA, y)
   52D3F:	53F4      	beq        +0x53 <.JTBASE35+0x8F:0x52D92[p]>
                    g_app_otau_data.data_type = upgrade_header_upgrade_type;                    
   52D40:	0314      	ld         al, #+0x3
   52D41:	26E0      	bra        +0x26 <.JTBASE35+0x64:0x52D67[p]>
            case upgrade_header_upgrade_type:
            {
#ifdef GAIA_OTAU_RELAY_SUPPORT
                g_app_otau_data.hdr_data[UPGRADE_TYPE_OFFSET] = header_body[0];
#endif
                g_app_otau_data.upgrade_type = header_body[0];
   52D42:	0C1B      	ld         x, @(+0xC, y)
   52D43:	0016      	ld         al, @(0x0, x)
   52D44:	6400      	**prefx    0x64
   52D45:	2825      	st         al, @0x6428 <g_app_otau_data+0x5>
                size -= UPGRADE_HEADER_UPGRADE_TYPE_SIZE;
   52D46:	0B1B      	ld         x, @(+0xB, y)
   52D47:	FF38      	add        x, #-0x1
   52D48:	0B2B      	st         x, @(+0xB, y)
                header_body += UPGRADE_HEADER_UPGRADE_TYPE_SIZE;
   52D49:	0C1B      	ld         x, @(+0xC, y)
   52D4A:	0138      	add        x, #+0x1
   52D4B:	0C2B      	st         x, @(+0xC, y)
                if(g_app_otau_data.upgrade_type != firmware_upgrade)
   52D4C:	E199      	tst        @0xFFE1 <register al>
   52D4D:	04F4      	beq        +0x4 <.JTBASE35+0x4E:0x52D51[p]>
                {
                    status = updateStoreType();
   52D4E:	FF00      	**prefx    0xFF
   52D4F:	2E9C      	bsr        -0xD2 <updateStoreType:0x52C7D[p]>
   52D50:	0A27      	st         al, @(+0xA, y)
                }
                if(status)
   52D51:	0A9B      	tst        @(+0xA, y)
   52D52:	40F4      	beq        +0x40 <.JTBASE35+0x8F:0x52D92[p]>
                    g_app_otau_data.data_type = upgrade_header_device_appearance;
   52D53:	0414      	ld         al, #+0x4
   52D54:	13E0      	bra        +0x13 <.JTBASE35+0x64:0x52D67[p]>
            case upgrade_header_device_appearance:
            {
#ifdef GAIA_OTAU_RELAY_SUPPORT
                g_app_otau_data.hdr_data[DEVICE_APPEARANCE_OFFSET] = header_body[0];
#endif
                g_app_otau_data.device_appearance = header_body[0];
   52D55:	0C1B      	ld         x, @(+0xC, y)
   52D56:	0016      	ld         al, @(0x0, x)
   52D57:	6400      	**prefx    0x64
   52D58:	2925      	st         al, @0x6429 <g_app_otau_data+0x6>
                size -= UPGRADE_HEADER_DEVICE_APPEARANCE_SIZE;
   52D59:	0B1B      	ld         x, @(+0xB, y)
   52D5A:	FF38      	add        x, #-0x1
   52D5B:	0B2B      	st         x, @(+0xB, y)
                header_body += UPGRADE_HEADER_DEVICE_APPEARANCE_SIZE;
   52D5C:	0C1B      	ld         x, @(+0xC, y)
   52D5D:	0138      	add        x, #+0x1
   52D5E:	0C2B      	st         x, @(+0xC, y)
                if(g_app_otau_data.device_appearance != IMAGE_TYPE)
   52D5F:	0184      	cmp        al, #+0x1
   52D60:	04F4      	beq        +0x4 <.JTBASE35+0x61:0x52D64[p]>
                {
                    status = updateStoreType();
   52D61:	FF00      	**prefx    0xFF
   52D62:	1B9C      	bsr        -0xE5 <updateStoreType:0x52C7D[p]>
   52D63:	0A27      	st         al, @(+0xA, y)
                }
                if(status)
   52D64:	0A9B      	tst        @(+0xA, y)
   52D65:	2DF4      	beq        +0x2D <.JTBASE35+0x8F:0x52D92[p]>
                    g_app_otau_data.data_type = upgrade_header_device_version;
   52D66:	0514      	ld         al, #+0x5
   52D67:	6400      	**prefx    0x64
   52D68:	2325      	st         al, @0x6423 <g_app_otau_data>
   52D69:	29E0      	bra        +0x29 <.JTBASE35+0x8F:0x52D92[p]>
            case upgrade_header_device_version:
            {
#ifdef GAIA_OTAU_RELAY_SUPPORT
                MemCopy(&g_app_otau_data.hdr_data[DEVICE_VERSION_OFFSET],&header_body[0],3);
#endif
                g_app_otau_data.device_version = ((((uint16)(header_body[0] & 0x3F)) << 10) |
   52D6A:	0C1B      	ld         x, @(+0xC, y)
   52D6B:	0216      	ld         al, @(+0x2, x)
   52D6C:	3FC4      	and        al, #0x3F
   52D6D:	F825      	st         al, @0xFFF8 <(scratchpad)>
   52D6E:	0016      	ld         al, @(0x0, x)
   52D6F:	0AA0      	asl        #0xA
   52D70:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
   52D71:	F825      	st         al, @0xFFF8 <(scratchpad)>
   52D72:	0116      	ld         al, @(+0x1, x)
   52D73:	0FC4      	and        al, #0xF
   52D74:	06A0      	asl        #0x6
   52D75:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
   52D76:	6400      	**prefx    0x64
   52D77:	2A25      	st         al, @0x642A <g_app_otau_data+0x7>
                                                     (((uint16)(header_body[1] & 0x0F)) << 6) |
                                                     ((uint16)(header_body[2] & 0x3F)));
                
                old_version = (((APP_MAJOR_VERSION & 0x3F) << 10)|
   52D78:	0800      	**prefx    0x8
   52D79:	4018      	ld         x, #+0x840
   52D7A:	6B00      	**prefx    0x6B
   52D7B:	B829      	st         x, @0x6AB8 <old_version>
                                      ((APP_MINOR_VERSION & 0x0F) << 6) |
                                      (APP_NEW_VERSION & 0x3F));
                              
                size -= UPGRADE_HEADER_DEVICE_VERSION_SIZE ;
                
                if(g_app_otau_data.device_version <= old_version)
   52D7C:	0800      	**prefx    0x8
   52D7D:	4184      	cmp        al, #+0x841
   52D7E:	03F8      	bcc        +0x3 <.JTBASE35+0x7E:0x52D81[p]>
   52D7F:	0014      	ld         al, #+0x0
   52D80:	0A27      	st         al, @(+0xA, y)
#else
                    status = FALSE; 
#endif       
                }                
                size = 0;
                g_app_otau_data.data_type = upgrade_header_nvm_version;
   52D81:	0618      	ld         x, #+0x6
   52D82:	0DE0      	bra        +0xD <.JTBASE35+0x8C:0x52D8F[p]>
            {
#ifdef GAIA_OTAU_RELAY_SUPPORT
                MemCopy(&g_app_otau_data.hdr_data[NVM_VERSION_OFFSET],&header_body[0],
                        UPGRADE_HEADER_NVM_VERSION_SIZE);
#endif
                g_app_otau_data.nvm_version = GetUint16FromArray(header_body);                
   52D83:	0C17      	ld         al, @(+0xC, y)
   52D84:	0300      	**prefx    0x3
   52D85:	3A9C      	bsr        +0x33A <GetUint16FromArray:0x530BF[p]>
   52D86:	6400      	**prefx    0x64
   52D87:	2B25      	st         al, @0x642B <g_app_otau_data+0x8>
                 old_version = APP_NVM_VERSION;                              
   52D88:	0118      	ld         x, #+0x1
   52D89:	6B00      	**prefx    0x6B
   52D8A:	B829      	st         x, @0x6AB8 <old_version>
                size -= UPGRADE_HEADER_NVM_VERSION_SIZE ;
                
                if(g_app_otau_data.nvm_version < old_version)
   52D8B:	E199      	tst        @0xFFE1 <register al>
   52D8C:	02F0      	bne        +0x2 <.JTBASE35+0x8B:0x52D8E[p]>
   52D8D:	0A27      	st         al, @(+0xA, y)
#else
                    status = FALSE; 
#endif       
                }                
                size = 0;
                g_app_otau_data.data_type = upgrade_header_upgrade_version;  
   52D8E:	0018      	ld         x, #+0x0
   52D8F:	6400      	**prefx    0x64
   52D90:	2329      	st         x, @0x6423 <g_app_otau_data>
   52D91:	07E0      	bra        +0x7 <.JTBASE35+0x95:0x52D98[p]>
static void otauCallbackValidateHeaderBody(GAIA_OTAU_EVENT_VALIDATE_HEADER_BODY_T *event_data)
{
    bool status = TRUE;
    uint8 size = event_data->portion_size;
    uint8 *header_body = event_data->header_body;
    while(size != 0)
   52D92:	0B9B      	tst        @(+0xB, y)
   52D93:	05F4      	beq        +0x5 <.JTBASE35+0x95:0x52D98[p]>
    {
        switch (g_app_otau_data.data_type)
   52D94:	6400      	**prefx    0x64
   52D95:	2319      	ld         x, @0x6423 <g_app_otau_data>
   52D96:	FF00      	**prefx    0xFF
   52D97:	67E0      	bra        -0x99 <.JTBASE19+0x54:0x52CFE[p]>
                status = FALSE; 
            }           
            break;
        }      
    }
    if(status == TRUE)
   52D98:	0A17      	ld         al, @(+0xA, y)
   52D99:	0184      	cmp        al, #+0x1
   52D9A:	04F0      	bne        +0x4 <.JTBASE35+0x9B:0x52D9E[p]>
    {
        event_data->header_body_valid = TRUE;
   52D9B:	0D1B      	ld         x, @(+0xD, y)
   52D9C:	0026      	st         al, @(0x0, x)
   52D9D:	13E0      	bra        +0x13 <.JTBASE35+0xAD:0x52DB0[p]>
    } 
    else
    {
        event_data->header_body_valid = FALSE;
   52D9E:	0014      	ld         al, #+0x0
   52D9F:	0D1B      	ld         x, @(+0xD, y)
   52DA0:	0026      	st         al, @(0x0, x)
        AppGaiaOtauDataInit();
   52DA1:	FF00      	**prefx    0xFF
   52DA2:	DD9C      	bsr        -0x123 <AppGaiaOtauDataInit:0x52C7F[p]>
   52DA3:	0DE0      	bra        +0xD <.JTBASE35+0xAD:0x52DB0[p]>
            break;      
            
        
        case gaia_otau_event_upgraded_application:
            /* Rebooted into a new application, but upgrade still in progress */
            GaiaOtauUpgradedApplication(TRUE);
   52DA4:	0114      	ld         al, #+0x1
   52DA5:	09E0      	bra        +0x9 <.JTBASE35+0xAB:0x52DAE[p]>
            break;

        case gaia_otau_event_new_app_commit:
            /* Indicate that the upgrade has finished successfully, reset flags */
            GaiaOtauUpgradedApplication(FALSE);
   52DA6:	0014      	ld         al, #+0x0
   52DA7:	F100      	**prefx    0xF1
   52DA8:	829C      	bsr        -0xF7E <GaiaOtauUpgradedApplication:0x51E2A[p]>
            g_app_otau_data.commit_cfm = TRUE;
   52DA9:	0118      	ld         x, #+0x1
   52DAA:	6400      	**prefx    0x64
   52DAB:	2C29      	st         x, @0x642C <g_app_otau_data+0x9>
   52DAC:	04E0      	bra        +0x4 <.JTBASE35+0xAD:0x52DB0[p]>
#endif
            break;

        case gaia_otau_event_upgrade_failed:
            /* Indicate that upgrade failed, reset flags */
            GaiaOtauUpgradedApplication(FALSE);
   52DAD:	0014      	ld         al, #+0x0
   52DAE:	F000      	**prefx    0xF0
   52DAF:	7B9C      	bsr        -0xF85 <GaiaOtauUpgradedApplication:0x51E2A[p]>
   52DB0:	0014      	ld         al, #+0x0
            status = sys_status_failed;
            break;
    }
    
    return status;
}
   52DB1:	F00F      	leave      #-0x10

0x00052DB2 <appHandleGaiaEvent>:
 *
 *  RETURNS
 *     sys_status: sys_status_success if event handled, or sys_status_failed.
 *----------------------------------------------------------------------------*/
static sys_status appHandleGaiaEvent(gaia_event event, GAIA_EVENT_T *data)
{
   52DB2:	FE0B      	enter      #-0x2
    sys_status status = sys_status_success;
    
    switch (event)
   52DB3:	E199      	tst        @0xFFE1 <register al>
   52DB4:	10F4      	beq        +0x10 <appHandleGaiaEvent+0x12:0x52DC4[p]>
   52DB5:	0184      	cmp        al, #+0x1
   52DB6:	04F4      	beq        +0x4 <appHandleGaiaEvent+0x8:0x52DBA[p]>
   52DB7:	0C00      	**prefx    0xC
   52DB8:	0014      	ld         al, #+0xC00
   52DB9:	0CE0      	bra        +0xC <appHandleGaiaEvent+0x13:0x52DC5[p]>
    {
        case gaia_event_upgrade_connect:
            break;
            
        case gaia_event_upgrade_disconnect:    
            if(g_app_otau_data.commit_cfm)
   52DBA:	6400      	**prefx    0x64
   52DBB:	2C99      	tst        @0x642C <g_app_otau_data+0x9>
   52DBC:	08F4      	beq        +0x8 <appHandleGaiaEvent+0x12:0x52DC4[p]>
            {
                g_app_otau_data.commit_cfm = FALSE;
   52DBD:	0014      	ld         al, #+0x0
   52DBE:	6400      	**prefx    0x64
   52DBF:	2C25      	st         al, @0x642C <g_app_otau_data+0x9>
                CMDisconnect(GetConnectedDeviceId());
   52DC0:	F000      	**prefx    0xF0
   52DC1:	639C      	bsr        -0xF9D <GetConnectedDeviceId:0x51E24[p]>
   52DC2:	DC00      	**prefx    0xDC
   52DC3:	509C      	bsr        -0x23B0 <CMDisconnect:0x50A13[p]>
   52DC4:	0014      	ld         al, #+0x0
            status = sys_status_failed;
            break;
    }
    
    return status;
}
   52DC5:	FE0F      	leave      #-0x2

0x00052DC6 <writeDeviceNameToNvm>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void writeDeviceNameToNvm(void)
{
   52DC6:	FD0B      	enter      #-0x3
    /* Write device name length to NVM */
    Nvm_Write(&g_service_data.length, sizeof(g_service_data.length), 
   52DC7:	6400      	**prefx    0x64
   52DC8:	2E18      	ld         x, #+0x642E
   52DC9:	001A      	ld         x, @(0x0, x)
   52DCA:	002B      	st         x, @(0x0, y)
   52DCB:	6400      	**prefx    0x64
   52DCC:	2D14      	ld         al, #+0x642D
   52DCD:	0110      	ld         ah, #+0x1
   52DCE:	DA00      	**prefx    0xDA
   52DCF:	769C      	bsr        -0x258A <Nvm_Write:0x50845[p]>

    /* Write device name to NVM 
     * Typecast of uint8 to uint16 or vice-versa shall not have any side 
     * affects as both types (uint8 and uint16) take one word memory on XAP
     */
    Nvm_Write((uint16*)(g_device_name+1), g_service_data.length, 
   52DD0:	6400      	**prefx    0x64
   52DD1:	2E18      	ld         x, #+0x642E
   52DD2:	0016      	ld         al, @(0x0, x)
   52DD3:	0134      	add        al, #+0x1
   52DD4:	0027      	st         al, @(0x0, y)
   52DD5:	6400      	**prefx    0x64
   52DD6:	3414      	ld         al, #+0x6434
   52DD7:	6400      	**prefx    0x64
   52DD8:	2D11      	ld         ah, @0x642D <g_service_data>
   52DD9:	DA00      	**prefx    0xDA
   52DDA:	6B9C      	bsr        -0x2595 <Nvm_Write:0x50845[p]>
              g_service_data.nvm_offset + 
              GAP_NVM_DEVICE_NAME_OFFSET); 

}
   52DDB:	FD0F      	leave      #-0x3

0x00052DDC <handleConnMgrProcedureEvent>:
 *
 *----------------------------------------------------------------------------*/
static void handleConnMgrProcedureEvent (
                                     cm_event event_type,
                                     CM_EVENT_T *p_event_data)
{
   52DDC:	F80B      	enter      #-0x8
   52DDD:	0523      	st         ah, @(+0x5, y)
    switch(event_type)
   52DDE:	1584      	cmp        al, #+0x15
   52DDF:	04F4      	beq        +0x4 <handleConnMgrProcedureEvent+0x7:0x52DE3[p]>
   52DE0:	1684      	cmp        al, #+0x16
   52DE1:	4DF0      	bne        +0x4D <handleConnMgrProcedureEvent+0x52:0x52E2E[p]>
   52DE2:	23E0      	bra        +0x23 <handleConnMgrProcedureEvent+0x29:0x52E05[p]>
    CM_ACCESS_RESPONSE_T cm_access_rsp;
    uint16 length = 0;
    uint8  *p_value = NULL;
    sys_status rc = sys_status_success;

    switch(p_event_data->handle)
   52DE3:	051B      	ld         x, @(+0x5, y)
   52DE4:	011A      	ld         x, @(+0x1, x)
   52DE5:	F829      	st         x, @0xFFF8 <(scratchpad)>
   52DE6:	0F88      	cmp        x, #+0xF
   52DE7:	04F4      	beq        +0x4 <handleConnMgrProcedureEvent+0xF:0x52DEB[p]>
   52DE8:	0A00      	**prefx    0xA
   52DE9:	4314      	ld         al, #+0xA43
   52DEA:	09E0      	bra        +0x9 <handleConnMgrProcedureEvent+0x17:0x52DF3[p]>
        case HANDLE_DEVICE_NAME:
        {
            /* Validate offset against length, it should be less than 
             * device name length
             */
            if(p_event_data->offset < g_service_data.length)
   52DEB:	051B      	ld         x, @(+0x5, y)
   52DEC:	0416      	ld         al, @(+0x4, x)
   52DED:	6400      	**prefx    0x64
   52DEE:	2D11      	ld         ah, @0x642D <g_service_data>
   52DEF:	E085      	cmp        al, @0xFFE0 <register ah>
   52DF0:	07FC      	bcs        +0x7 <handleConnMgrProcedureEvent+0x1B:0x52DF7[p]>
   52DF1:	0A00      	**prefx    0xA
   52DF2:	0714      	ld         al, #+0xA07
   52DF3:	0018      	ld         x, #+0x0
   52DF4:	F929      	st         x, @0xFFF9 <(scratchpad)>
   52DF5:	0010      	ld         ah, #+0x0
   52DF6:	06E0      	bra        +0x6 <handleConnMgrProcedureEvent+0x20:0x52DFC[p]>
            {
                length = g_service_data.length - p_event_data->offset;
   52DF7:	E151      	sub        ah, @0xFFE1 <register al>
                p_value = ((g_device_name + 1) + p_event_data->offset);
   52DF8:	6400      	**prefx    0x64
   52DF9:	3434      	add        al, #+0x6434
   52DFA:	F925      	st         al, @0xFFF9 <(scratchpad)>
   52DFB:	0014      	ld         al, #+0x0
            /* Let firmware handle the read request. */
            rc = gatt_status_irq_proceed;
        break;
    }

    cm_access_rsp.device_id         = p_event_data->device_id;
   52DFC:	051B      	ld         x, @(+0x5, y)
   52DFD:	001A      	ld         x, @(0x0, x)
   52DFE:	002B      	st         x, @(0x0, y)
    cm_access_rsp.handle            = p_event_data->handle;
   52DFF:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52E00:	012B      	st         x, @(+0x1, y)
    cm_access_rsp.rc                = rc;
   52E01:	0427      	st         al, @(+0x4, y)
    cm_access_rsp.size_value        = length;
   52E02:	0323      	st         ah, @(+0x3, y)
    cm_access_rsp.value             = p_value;
   52E03:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   52E04:	26E0      	bra        +0x26 <handleConnMgrProcedureEvent+0x4E:0x52E2A[p]>
static void handleAccessWrite(CM_WRITE_ACCESS_T *p_event_data)
{
    CM_ACCESS_RESPONSE_T cm_access_rsp;
    sys_status rc = sys_status_success;

    switch(p_event_data->handle)
   52E05:	051B      	ld         x, @(+0x5, y)
   52E06:	0116      	ld         al, @(+0x1, x)
   52E07:	0F84      	cmp        al, #+0xF
   52E08:	04F4      	beq        +0x4 <handleConnMgrProcedureEvent+0x30:0x52E0C[p]>
   52E09:	0A00      	**prefx    0xA
   52E0A:	0314      	ld         al, #+0xA03
   52E0B:	16E0      	bra        +0x16 <handleConnMgrProcedureEvent+0x45:0x52E21[p]>
    {        
        case HANDLE_DEVICE_NAME:
            /* Update device name */
            updateDeviceName(p_event_data->length,p_event_data->data);
   52E0C:	051B      	ld         x, @(+0x5, y)
   52E0D:	0316      	ld         al, @(+0x3, x)
   52E0E:	021A      	ld         x, @(+0x2, x)
   52E0F:	F829      	st         x, @0xFFF8 <(scratchpad)>
static void updateDeviceName(uint16 length, uint8 *name)
{
    uint8 *p_name = (g_device_name + 1);

    /* Update Device Name length to the maximum of DEVICE_NAME_MAX_LENGTH  */
    if(length < DEVICE_NAME_LENGTH)
   52E10:	1484      	cmp        al, #+0x14
   52E11:	02FC      	bcs        +0x2 <handleConnMgrProcedureEvent+0x37:0x52E13[p]>
        g_service_data.length = length;
    else
        g_service_data.length = DEVICE_NAME_LENGTH;
   52E12:	1414      	ld         al, #+0x14
   52E13:	6400      	**prefx    0x64
   52E14:	2D25      	st         al, @0x642D <g_service_data>

    MemCopy(p_name, name, g_service_data.length);
   52E15:	6400      	**prefx    0x64
   52E16:	2D15      	ld         al, @0x642D <g_service_data>
   52E17:	6400      	**prefx    0x64
   52E18:	3410      	ld         ah, #+0x6434
   52E19:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52E1A:	FD09      	bc2        

    /* Null terminate the device name string */
    p_name[g_service_data.length] = '\0';
   52E1B:	6400      	**prefx    0x64
   52E1C:	2D19      	ld         x, @0x642D <g_service_data>
   52E1D:	6400      	**prefx    0x64
   52E1E:	3426      	st         al, @(+0x6434, x)

    /* Write the Name to the NVM */
    writeDeviceNameToNvm();
   52E1F:	A79C      	bsr        -0x59 <writeDeviceNameToNvm:0x52DC6[p]>
   52E20:	0014      	ld         al, #+0x0
            /* No more IRQ characteristics */
            rc = gatt_status_write_not_permitted;
        break;
    }

    cm_access_rsp.device_id         = p_event_data->device_id;
   52E21:	051B      	ld         x, @(+0x5, y)
   52E22:	001A      	ld         x, @(0x0, x)
   52E23:	002B      	st         x, @(0x0, y)
    cm_access_rsp.handle            = p_event_data->handle;
   52E24:	051B      	ld         x, @(+0x5, y)
   52E25:	011A      	ld         x, @(+0x1, x)
   52E26:	012B      	st         x, @(+0x1, y)
    cm_access_rsp.rc                = rc;
   52E27:	0427      	st         al, @(+0x4, y)
    cm_access_rsp.size_value        = 0;
   52E28:	0014      	ld         al, #+0x0
   52E29:	0327      	st         al, @(+0x3, y)
    cm_access_rsp.value             = NULL;
   52E2A:	0227      	st         al, @(+0x2, y)

    /* Send the access response */
    CMSendAccessRsp(&cm_access_rsp);
   52E2B:	E415      	ld         al, @0xFFE4 <register uy>
   52E2C:	E500      	**prefx    0xE5
   52E2D:	2A9C      	bsr        -0x1AD6 <CMSendAccessRsp:0x51357[p]>
        
        default:
        break;

    }
}
   52E2E:	F80F      	leave      #-0x8

0x00052E2F <serviceDataInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void serviceDataInit(void)
{
   52E2F:	FE0B      	enter      #-0x2
    uint8 *p_name = (g_device_name + 1);
    g_service_data.length = StrLen(DEVICE_NAME);
   52E30:	A100      	**prefx    0xA1
   52E31:	FF14      	ld         al, #-0x5F01
   52E32:	FC00      	**prefx    0xFC
   52E33:	3100      	**prefx    0x31
   52E34:	2A9C      	bsr        -0x3CED6 <StrLen:0x15F5E[p]>
   52E35:	6400      	**prefx    0x64
   52E36:	2D25      	st         al, @0x642D <g_service_data>

    g_device_name[0] = AD_TYPE_LOCAL_NAME_COMPLETE;
   52E37:	6400      	**prefx    0x64
   52E38:	3310      	ld         ah, #+0x6433
   52E39:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   52E3A:	0910      	ld         ah, #+0x9
   52E3B:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   52E3C:	0022      	st         ah, @(0x0, x)
    MemCopy(p_name, DEVICE_NAME, g_service_data.length);
   52E3D:	0138      	add        x, #+0x1
   52E3E:	F829      	st         x, @0xFFF8 <(scratchpad)>
   52E3F:	E311      	ld         ah, @0xFFE3 <register uxl>
   52E40:	A100      	**prefx    0xA1
   52E41:	FF18      	ld         x, #-0x5F01
   52E42:	FD09      	bc2        
    p_name[g_service_data.length] = '\0';
   52E43:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   52E44:	6400      	**prefx    0x64
   52E45:	2D35      	add        al, @0x642D <g_service_data>
   52E46:	0010      	ld         ah, #+0x0
   52E47:	E119      	ld         x, @0xFFE1 <register al>
   52E48:	0022      	st         ah, @(0x0, x)
}
   52E49:	FE0F      	leave      #-0x2

0x00052E4A <GapInitServerServiceNoBond>:
 *
 *  RETURNS
 *      Nothing.
 *----------------------------------------------------------------------------*/
extern void GapInitServerServiceNoBond(void)
{
   52E4A:	FE0B      	enter      #-0x2
    /* Initialise the service data */
    serviceDataInit();
   52E4B:	E49C      	bsr        -0x1C <serviceDataInit:0x52E2F[p]>

    /* Assign the service handler */
    g_service_info.server_handler = g_service_handler;
   52E4C:	6400      	**prefx    0x64
   52E4D:	2F18      	ld         x, #+0x642F
   52E4E:	A100      	**prefx    0xA1
   52E4F:	0A15      	ld         al, @0xA10A <g_service_handler+0x1>
   52E50:	0126      	st         al, @(+0x1, x)
   52E51:	A100      	**prefx    0xA1
   52E52:	0915      	ld         al, @0xA109 <g_service_handler>
   52E53:	0026      	st         al, @(0x0, x)
    g_service_info.start_handle = HANDLE_GAP_SERVICE;
   52E54:	0D14      	ld         al, #+0xD
   52E55:	0226      	st         al, @(+0x2, x)
    g_service_info.end_handle = HANDLE_GAP_SERVICE_END;
   52E56:	1314      	ld         al, #+0x13
   52E57:	0326      	st         al, @(+0x3, x)

    /* Register the service with the CM */
    CMServerInitRegisterHandler(&g_service_info);
   52E58:	E315      	ld         al, @0xFFE3 <register uxl>
   52E59:	E400      	**prefx    0xE4
   52E5A:	1A9C      	bsr        -0x1BE6 <CMServerInitRegisterHandler:0x51274[p]>
}
   52E5B:	FE0F      	leave      #-0x2

0x00052E5C <GapGetNameAndLength>:
 *  RETURNS
 *      Pointer to device name array.
 *
 *---------------------------------------------------------------------------*/
extern uint8 *GapGetNameAndLength(uint16 *p_name_length)
{
   52E5C:	FD0B      	enter      #-0x3
   52E5D:	0027      	st         al, @(0x0, y)
    /* Device Name and Length include the AD Type field */
    *p_name_length = StrLen((char*)g_device_name);
   52E5E:	6400      	**prefx    0x64
   52E5F:	3314      	ld         al, #+0x6433
   52E60:	FC00      	**prefx    0xFC
   52E61:	3100      	**prefx    0x31
   52E62:	FC9C      	bsr        -0x3CF04 <StrLen:0x15F5E[p]>
   52E63:	001B      	ld         x, @(0x0, y)
   52E64:	0026      	st         al, @(0x0, x)

    return (g_device_name);
}
   52E65:	6400      	**prefx    0x64
   52E66:	3314      	ld         al, #+0x6433
   52E67:	FD0F      	leave      #-0x3

0x00052E68 <writeToNvm>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void writeToNvm(void)
{
   52E68:	FC0B      	enter      #-0x4
    /* Write Bond Id */
    Nvm_Write((uint16*)&g_service_data.bond_id,
   52E69:	6400      	**prefx    0x64
   52E6A:	4C14      	ld         al, #+0x644C
   52E6B:	0127      	st         al, @(+0x1, y)
   52E6C:	E119      	ld         x, @0xFFE1 <register al>
   52E6D:	001A      	ld         x, @(0x0, x)
   52E6E:	002B      	st         x, @(0x0, y)
   52E6F:	6400      	**prefx    0x64
   52E70:	4914      	ld         al, #+0x6449
   52E71:	0110      	ld         ah, #+0x1
   52E72:	DA00      	**prefx    0xDA
   52E73:	D29C      	bsr        -0x262E <Nvm_Write:0x50845[p]>
            sizeof(g_service_data.bond_id),
            g_service_data.nvm_offset +
            BOND_ID_OFFSET);

    /* Write Service Changed client configuration */
    Nvm_Write((uint16*)&(g_service_data.serv_changed_config),
   52E74:	0117      	ld         al, @(+0x1, y)
   52E75:	FF34      	add        al, #-0x1
   52E76:	011B      	ld         x, @(+0x1, y)
   52E77:	0012      	ld         ah, @(0x0, x)
   52E78:	0130      	add        ah, #+0x1
   52E79:	0023      	st         ah, @(0x0, y)
   52E7A:	0110      	ld         ah, #+0x1
   52E7B:	DA00      	**prefx    0xDA
   52E7C:	C99C      	bsr        -0x2637 <Nvm_Write:0x50845[p]>
            sizeof(g_service_data.serv_changed_config),
            (g_service_data.nvm_offset +
             SERV_CHANGED_CLIENT_CONFIG_OFFSET));

    /* Write Service Has Changed flag */
    Nvm_Write((uint16*)&(g_service_data.serv_changed),
   52E7D:	011B      	ld         x, @(+0x1, y)
   52E7E:	0016      	ld         al, @(0x0, x)
   52E7F:	0234      	add        al, #+0x2
   52E80:	0027      	st         al, @(0x0, y)
   52E81:	FE38      	add        x, #-0x2
   52E82:	E315      	ld         al, @0xFFE3 <register uxl>
   52E83:	0110      	ld         ah, #+0x1
   52E84:	DA00      	**prefx    0xDA
   52E85:	C09C      	bsr        -0x2640 <Nvm_Write:0x50845[p]>
            sizeof(g_service_data.serv_changed),
            (g_service_data.nvm_offset + SERV_CHANGED_SEND_IND_OFFSET));
}
   52E86:	FC0F      	leave      #-0x4

0x00052E87 <handleConnMgrProcedureEvent>:
 *
 *----------------------------------------------------------------------------*/
static void handleConnMgrProcedureEvent (
                                     cm_event event_type,
                                     CM_EVENT_T *p_event_data)
{
   52E87:	F50B      	enter      #-0xB
   52E88:	0823      	st         ah, @(+0x8, y)
    switch(event_type)
   52E89:	0784      	cmp        al, #+0x7
   52E8A:	16F4      	beq        +0x16 <handleConnMgrProcedureEvent+0x19:0x52EA0[p]>
   52E8B:	0884      	cmp        al, #+0x8
   52E8C:	04F8      	bcc        +0x4 <handleConnMgrProcedureEvent+0x9:0x52E90[p]>
   52E8D:	0684      	cmp        al, #+0x6
   52E8E:	7DF0      	bne        +0x7D <handleConnMgrProcedureEvent+0x84:0x52F0B[p]>
   52E8F:	06E0      	bra        +0x6 <handleConnMgrProcedureEvent+0xE:0x52E95[p]>
   52E90:	1584      	cmp        al, #+0x15
   52E91:	25F4      	beq        +0x25 <handleConnMgrProcedureEvent+0x2F:0x52EB6[p]>
   52E92:	1684      	cmp        al, #+0x16
   52E93:	78F0      	bne        +0x78 <handleConnMgrProcedureEvent+0x84:0x52F0B[p]>
   52E94:	44E0      	bra        +0x44 <handleConnMgrProcedureEvent+0x51:0x52ED8[p]>
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleConnNotify(CM_CONNECTION_NOTIFY_T *cm_event_data)
{
    if(cm_event_data->result == cm_conn_res_success)
   52E95:	081B      	ld         x, @(+0x8, y)
   52E96:	019A      	tst        @(+0x1, x)
   52E97:	74F0      	bne        +0x74 <handleConnMgrProcedureEvent+0x84:0x52F0B[p]>
    {
        if((g_service_data.bond_id != CM_INVALID_BOND_ID) &&
   52E98:	6400      	**prefx    0x64
   52E99:	4915      	ld         al, @0x6449 <g_service_data>
   52E9A:	FF84      	cmp        al, #-0x1
   52E9B:	70F4      	beq        +0x70 <handleConnMgrProcedureEvent+0x84:0x52F0B[p]>
   52E9C:	0016      	ld         al, @(0x0, x)
   52E9D:	DB00      	**prefx    0xDB
   52E9E:	619C      	bsr        -0x249F <CMGetBondIdFromDeviceId:0x509FF[p]>
   52E9F:	6CE0      	bra        +0x6C <handleConnMgrProcedureEvent+0x84:0x52F0B[p]>
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleBondNotify(CM_BONDING_NOTIFY_T *cm_event_data)
{
    if(cm_event_data->result == cm_bond_res_success)
   52EA0:	081B      	ld         x, @(+0x8, y)
   52EA1:	0716      	ld         al, @(+0x7, x)
   52EA2:	05F0      	bne        +0x5 <handleConnMgrProcedureEvent+0x20:0x52EA7[p]>
    {
        g_service_data.bond_id = cm_event_data->bond_id;
   52EA3:	0616      	ld         al, @(+0x6, x)
   52EA4:	6400      	**prefx    0x64
   52EA5:	4925      	st         al, @0x6449 <g_service_data>
   52EA6:	0BE0      	bra        +0xB <handleConnMgrProcedureEvent+0x2A:0x52EB1[p]>
    }
    else if(cm_event_data->result == cm_unbond_res_success)
   52EA7:	0184      	cmp        al, #+0x1
   52EA8:	09F0      	bne        +0x9 <handleConnMgrProcedureEvent+0x2A:0x52EB1[p]>
    {
        g_service_data.bond_id = CM_INVALID_BOND_ID;
   52EA9:	FF18      	ld         x, #-0x1
   52EAA:	6400      	**prefx    0x64
   52EAB:	4929      	st         x, @0x6449 <g_service_data>
        g_service_data.serv_changed_config = gatt_client_config_none;
   52EAC:	0014      	ld         al, #+0x0
   52EAD:	6400      	**prefx    0x64
   52EAE:	4B25      	st         al, @0x644B <g_service_data+0x2>
        g_service_data.serv_changed = FALSE;
   52EAF:	6400      	**prefx    0x64
   52EB0:	4A25      	st         al, @0x644A <g_service_data+0x1>
    }    
    if(!g_service_data.temporary_pairing)
   52EB1:	6400      	**prefx    0x64
   52EB2:	4D99      	tst        @0x644D <g_service_data+0x4>
   52EB3:	58F0      	bne        +0x58 <handleConnMgrProcedureEvent+0x84:0x52F0B[p]>
    {
        /* Write data to NVM */
        writeToNvm();
   52EB4:	B49C      	bsr        -0x4C <writeToNvm:0x52E68[p]>
   52EB5:	56E0      	bra        +0x56 <handleConnMgrProcedureEvent+0x84:0x52F0B[p]>
static void handleAccessRead(CM_READ_ACCESS_T *p_event_data)
{
    CM_ACCESS_RESPONSE_T cm_access_rsp;
    uint16  data_length = 0;
    uint8   value[2];
    uint8   *p_value = NULL;
   52EB6:	0018      	ld         x, #+0x0
   52EB7:	002B      	st         x, @(0x0, y)
    sys_status rc = gatt_status_read_not_permitted;

    switch(p_event_data->handle)
   52EB8:	081B      	ld         x, @(+0x8, y)
   52EB9:	0116      	ld         al, @(+0x1, x)
   52EBA:	0C84      	cmp        al, #+0xC
   52EBB:	05F4      	beq        +0x5 <handleConnMgrProcedureEvent+0x39:0x52EC0[p]>
   52EBC:	0A00      	**prefx    0xA
   52EBD:	0210      	ld         ah, #+0xA02
   52EBE:	0014      	ld         al, #+0x0
   52EBF:	0CE0      	bra        +0xC <handleConnMgrProcedureEvent+0x44:0x52ECB[p]>
        {
            /* Service changed client characteristic configuration
             * descriptor read has been requested
             */
            data_length = 2;
            p_value = value;
   52EC0:	E415      	ld         al, @0xFFE4 <register uy>
   52EC1:	0134      	add        al, #+0x1
   52EC2:	0027      	st         al, @(0x0, y)
            BufWriteUint16((uint8 **)&p_value,
   52EC3:	E415      	ld         al, @0xFFE4 <register uy>
   52EC4:	6400      	**prefx    0x64
   52EC5:	4B11      	ld         ah, @0x644B <g_service_data+0x2>
   52EC6:	FC00      	**prefx    0xFC
   52EC7:	3100      	**prefx    0x31
   52EC8:	179C      	bsr        -0x3CEE9 <BufWriteUint16:0x15FDF[p]>
   52EC9:	0010      	ld         ah, #+0x0
   52ECA:	0214      	ld         al, #+0x2
            rc = gatt_status_read_not_permitted;
        break;

    }

    cm_access_rsp.device_id         = p_event_data->device_id;
   52ECB:	081B      	ld         x, @(+0x8, y)
   52ECC:	001A      	ld         x, @(0x0, x)
   52ECD:	032B      	st         x, @(+0x3, y)
    cm_access_rsp.handle            = p_event_data->handle;
   52ECE:	081B      	ld         x, @(+0x8, y)
   52ECF:	011A      	ld         x, @(+0x1, x)
   52ED0:	042B      	st         x, @(+0x4, y)
    cm_access_rsp.rc                = rc;
   52ED1:	0723      	st         ah, @(+0x7, y)
    cm_access_rsp.size_value        = data_length;
   52ED2:	0627      	st         al, @(+0x6, y)
    cm_access_rsp.value             = value;
   52ED3:	E415      	ld         al, @0xFFE4 <register uy>
   52ED4:	0134      	add        al, #+0x1
   52ED5:	0527      	st         al, @(+0x5, y)

    /* Send the access response */
    CMSendAccessRsp(&cm_access_rsp);
   52ED6:	0234      	add        al, #+0x2
   52ED7:	32E0      	bra        +0x32 <handleConnMgrProcedureEvent+0x82:0x52F09[p]>
 *
 *---------------------------------------------------------------------------*/
static void handleAccessWrite(CM_WRITE_ACCESS_T *p_event_data)
{
    CM_ACCESS_RESPONSE_T cm_access_rsp;
    uint8 *p_value = p_event_data->data;
   52ED8:	081B      	ld         x, @(+0x8, y)
   52ED9:	021A      	ld         x, @(+0x2, x)
   52EDA:	002B      	st         x, @(0x0, y)
    uint16 client_config;
    sys_status rc = sys_status_success;

    switch(p_event_data->handle)
   52EDB:	081B      	ld         x, @(+0x8, y)
   52EDC:	0116      	ld         al, @(+0x1, x)
   52EDD:	0C84      	cmp        al, #+0xC
   52EDE:	04F4      	beq        +0x4 <handleConnMgrProcedureEvent+0x5B:0x52EE2[p]>
   52EDF:	0A00      	**prefx    0xA
   52EE0:	0314      	ld         al, #+0xA03
   52EE1:	1CE0      	bra        +0x1C <handleConnMgrProcedureEvent+0x76:0x52EFD[p]>
    {
        case HANDLE_SERVICE_CHANGED_CLIENT_CONFIG:
        {
            client_config = BufReadUint16(&p_value);
   52EE2:	E415      	ld         al, @0xFFE4 <register uy>
   52EE3:	FC00      	**prefx    0xFC
   52EE4:	3100      	**prefx    0x31
   52EE5:	DC9C      	bsr        -0x3CF24 <BufReadUint16:0x15FC1[p]>

            if((client_config == gatt_client_config_indication) ||
   52EE6:	0284      	cmp        al, #+0x2
   52EE7:	06F4      	beq        +0x6 <handleConnMgrProcedureEvent+0x66:0x52EED[p]>
   52EE8:	E199      	tst        @0xFFE1 <register al>
   52EE9:	04F4      	beq        +0x4 <handleConnMgrProcedureEvent+0x66:0x52EED[p]>
   52EEA:	0B00      	**prefx    0xB
   52EEB:	FD14      	ld         al, #+0xAFD
   52EEC:	11E0      	bra        +0x11 <handleConnMgrProcedureEvent+0x76:0x52EFD[p]>
               (client_config == gatt_client_config_none))
            {
                g_service_data.serv_changed_config = client_config;
   52EED:	6400      	**prefx    0x64
   52EEE:	4B25      	st         al, @0x644B <g_service_data+0x2>
                g_service_data.bond_id =
   52EEF:	081B      	ld         x, @(+0x8, y)
   52EF0:	0016      	ld         al, @(0x0, x)
   52EF1:	DB00      	**prefx    0xDB
   52EF2:	0D9C      	bsr        -0x24F3 <CMGetBondIdFromDeviceId:0x509FF[p]>
   52EF3:	6400      	**prefx    0x64
   52EF4:	4925      	st         al, @0x6449 <g_service_data>
                        CMGetBondIdFromDeviceId(p_event_data->device_id);
                
                if((!g_service_data.temporary_pairing) && 
   52EF5:	6400      	**prefx    0x64
   52EF6:	4D99      	tst        @0x644D <g_service_data+0x4>
   52EF7:	05F0      	bne        +0x5 <handleConnMgrProcedureEvent+0x75:0x52EFC[p]>
   52EF8:	FF84      	cmp        al, #-0x1
   52EF9:	03F4      	beq        +0x3 <handleConnMgrProcedureEvent+0x75:0x52EFC[p]>
                   g_service_data.bond_id != CM_INVALID_BOND_ID)
                {
                    /* Write to NVM */
                    writeToNvm();
   52EFA:	FF00      	**prefx    0xFF
   52EFB:	6D9C      	bsr        -0x93 <writeToNvm:0x52E68[p]>
   52EFC:	0014      	ld         al, #+0x0
        default:
            rc = gatt_status_write_not_permitted;
        break;
    }

    cm_access_rsp.device_id     = p_event_data->device_id;
   52EFD:	081B      	ld         x, @(+0x8, y)
   52EFE:	001A      	ld         x, @(0x0, x)
   52EFF:	032B      	st         x, @(+0x3, y)
    cm_access_rsp.handle        = p_event_data->handle;
   52F00:	081B      	ld         x, @(+0x8, y)
   52F01:	011A      	ld         x, @(+0x1, x)
   52F02:	042B      	st         x, @(+0x4, y)
    cm_access_rsp.rc            = rc;
   52F03:	0727      	st         al, @(+0x7, y)
    cm_access_rsp.size_value    = 0;
   52F04:	0014      	ld         al, #+0x0
   52F05:	0627      	st         al, @(+0x6, y)
    cm_access_rsp.value         = NULL;
   52F06:	0527      	st         al, @(+0x5, y)

    /* Send the access response */
    CMSendAccessRsp(&cm_access_rsp);
   52F07:	E415      	ld         al, @0xFFE4 <register uy>
   52F08:	0334      	add        al, #+0x3
   52F09:	E400      	**prefx    0xE4
   52F0A:	4D9C      	bsr        -0x1BB3 <CMSendAccessRsp:0x51357[p]>

        default:
        break;

    }
}
   52F0B:	F50F      	leave      #-0xB

0x00052F0C <readDataFromNVM>:
 *  RETURNS
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void readDataFromNVM(bool nvm_start_fresh, uint16 *nvm_offset)
{
   52F0C:	FC0B      	enter      #-0x4
   52F0D:	0123      	st         ah, @(+0x1, y)
    /* Save the NVM offset */
    g_service_data.nvm_offset = *nvm_offset;
   52F0E:	E019      	ld         x, @0xFFE0 <register ah>
   52F0F:	0012      	ld         ah, @(0x0, x)
   52F10:	6400      	**prefx    0x64
   52F11:	4C21      	st         ah, @0x644C <g_service_data+0x3>

    /* Read NVM only if the nvm is not fresh */
    if(!nvm_start_fresh)
   52F12:	E199      	tst        @0xFFE1 <register al>
   52F13:	1AF0      	bne        +0x1A <readDataFromNVM+0x21:0x52F2D[p]>
    {
        /* Read Bond Id */
        Nvm_Read((uint16*)&g_service_data.bond_id,
   52F14:	0023      	st         ah, @(0x0, y)
   52F15:	6400      	**prefx    0x64
   52F16:	4914      	ld         al, #+0x6449
   52F17:	0110      	ld         ah, #+0x1
   52F18:	D900      	**prefx    0xD9
   52F19:	439C      	bsr        -0x26BD <Nvm_Read:0x5085C[p]>
                sizeof(g_service_data.bond_id),
                g_service_data.nvm_offset +
                BOND_ID_OFFSET);

        /* Read Service Changed client configuration */
        Nvm_Read((uint16*)&(g_service_data.serv_changed_config),
   52F1A:	6400      	**prefx    0x64
   52F1B:	4C15      	ld         al, @0x644C <g_service_data+0x3>
   52F1C:	0134      	add        al, #+0x1
   52F1D:	0027      	st         al, @(0x0, y)
   52F1E:	6400      	**prefx    0x64
   52F1F:	4B14      	ld         al, #+0x644B
   52F20:	0110      	ld         ah, #+0x1
   52F21:	D900      	**prefx    0xD9
   52F22:	3A9C      	bsr        -0x26C6 <Nvm_Read:0x5085C[p]>
                sizeof(g_service_data.serv_changed_config),
                (g_service_data.nvm_offset +
                 SERV_CHANGED_CLIENT_CONFIG_OFFSET));

        /* Read Service Has Changed flag */
        Nvm_Read((uint16*)&(g_service_data.serv_changed),
   52F23:	6400      	**prefx    0x64
   52F24:	4C15      	ld         al, @0x644C <g_service_data+0x3>
   52F25:	0234      	add        al, #+0x2
   52F26:	0027      	st         al, @(0x0, y)
   52F27:	6400      	**prefx    0x64
   52F28:	4A14      	ld         al, #+0x644A
   52F29:	0110      	ld         ah, #+0x1
   52F2A:	D900      	**prefx    0xD9
   52F2B:	319C      	bsr        -0x26CF <Nvm_Read:0x5085C[p]>
   52F2C:	0BE0      	bra        +0xB <readDataFromNVM+0x2B:0x52F37[p]>
                sizeof(g_service_data.serv_changed),
                (g_service_data.nvm_offset + SERV_CHANGED_SEND_IND_OFFSET));
    }
    else
    {
        g_service_data.bond_id = CM_INVALID_BOND_ID;
   52F2D:	FF14      	ld         al, #-0x1
   52F2E:	6400      	**prefx    0x64
   52F2F:	4925      	st         al, @0x6449 <g_service_data>
        g_service_data.serv_changed_config = gatt_client_config_none;
   52F30:	0018      	ld         x, #+0x0
   52F31:	6400      	**prefx    0x64
   52F32:	4B29      	st         x, @0x644B <g_service_data+0x2>
        g_service_data.serv_changed = FALSE;
   52F33:	6400      	**prefx    0x64
   52F34:	4A29      	st         x, @0x644A <g_service_data+0x1>

        /* Write data to NVM */
        writeToNvm();
   52F35:	FF00      	**prefx    0xFF
   52F36:	329C      	bsr        -0xCE <writeToNvm:0x52E68[p]>
    }

    /* Increment the offset by the number of words of NVM memory required
     * by gatt service
     */
    *nvm_offset += GATT_SERVICE_NVM_MEMORY_WORDS;
   52F37:	011B      	ld         x, @(+0x1, y)
   52F38:	0016      	ld         al, @(0x0, x)
   52F39:	0334      	add        al, #+0x3
   52F3A:	0026      	st         al, @(0x0, x)

}
   52F3B:	FC0F      	leave      #-0x4

0x00052F3C <GattExtInitServerService>:
 *  RETURNS
 *      Nothing.
 *----------------------------------------------------------------------------*/
extern void GattExtInitServerService(bool nvm_start_fresh, uint16 *nvm_offset,
                                     bool temporary_pairing)
{
   52F3C:	FE0B      	enter      #-0x2
   52F3D:	E119      	ld         x, @0xFFE1 <register al>
   52F3E:	0217      	ld         al, @(+0x2, y)
    g_service_data.temporary_pairing = temporary_pairing;
   52F3F:	6400      	**prefx    0x64
   52F40:	4D25      	st         al, @0x644D <g_service_data+0x4>
    
    if(temporary_pairing)
   52F41:	0AF4      	beq        +0xA <GattExtInitServerService+0xF:0x52F4B[p]>
    {
        g_service_data.bond_id = CM_INVALID_BOND_ID;
   52F42:	FF14      	ld         al, #-0x1
   52F43:	6400      	**prefx    0x64
   52F44:	4925      	st         al, @0x6449 <g_service_data>
        g_service_data.serv_changed_config = gatt_client_config_none;
   52F45:	0014      	ld         al, #+0x0
   52F46:	6400      	**prefx    0x64
   52F47:	4B25      	st         al, @0x644B <g_service_data+0x2>
        g_service_data.serv_changed = FALSE;
   52F48:	6400      	**prefx    0x64
   52F49:	4A25      	st         al, @0x644A <g_service_data+0x1>
   52F4A:	03E0      	bra        +0x3 <GattExtInitServerService+0x11:0x52F4D[p]>
    }
    else
    {
        /* Read data from the NVM */
        readDataFromNVM(nvm_start_fresh, nvm_offset);
   52F4B:	E315      	ld         al, @0xFFE3 <register uxl>
   52F4C:	C09C      	bsr        -0x40 <readDataFromNVM:0x52F0C[p]>
    }

    /* Assign the service handler */
    g_service_info.server_handler = g_server_handler;
   52F4D:	A100      	**prefx    0xA1
   52F4E:	0C15      	ld         al, @0xA10C <g_server_handler+0x1>
   52F4F:	6400      	**prefx    0x64
   52F50:	4F25      	st         al, @0x644F <g_service_info+0x1>
   52F51:	A100      	**prefx    0xA1
   52F52:	0B15      	ld         al, @0xA10B <g_server_handler>
   52F53:	6400      	**prefx    0x64
   52F54:	4E25      	st         al, @0x644E <g_service_info>
    g_service_info.start_handle = HANDLE_GATT_SERVICE;
   52F55:	0914      	ld         al, #+0x9
   52F56:	6400      	**prefx    0x64
   52F57:	5025      	st         al, @0x6450 <___libgatt_lib_db_644>
    g_service_info.end_handle = HANDLE_GATT_SERVICE_END;
   52F58:	0C14      	ld         al, #+0xC
   52F59:	6400      	**prefx    0x64
   52F5A:	5125      	st         al, @0x6451 <___libgatt_lib_db_644+0x1>

    /* Register the service with the CM */
    CMServerInitRegisterHandler(&g_service_info);
   52F5B:	6400      	**prefx    0x64
   52F5C:	4E14      	ld         al, #+0x644E
   52F5D:	E300      	**prefx    0xE3
   52F5E:	169C      	bsr        -0x1CEA <CMServerInitRegisterHandler:0x51274[p]>
}
   52F5F:	FE0F      	leave      #-0x2

0x00052F60 <MeshControlServiceDataInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void MeshControlServiceDataInit(void)
{
   52F60:	FE0B      	enter      #-0x2
    /* Initialise Mesh Control Service Client Configuration Characterisitic
     * descriptor value to none.
     */
    g_mesh_svc_data.mtl_cp_ccd = gatt_client_config_none;
   52F61:	6B00      	**prefx    0x6B
   52F62:	B918      	ld         x, #+0x6AB9
   52F63:	0014      	ld         al, #+0x0
   52F64:	0026      	st         al, @(0x0, x)
    g_mesh_svc_data.device_id = CM_INVALID_DEVICE_ID;
   52F65:	FF14      	ld         al, #-0x1
   52F66:	1D26      	st         al, @(+0x1D, x)
}
   52F67:	FE0F      	leave      #-0x2

0x00052F68 <MeshControlNotifyResponse>:
 *
 *---------------------------------------------------------------------------*/
extern void MeshControlNotifyResponse(uint16 conn_id, 
                                      uint8 *mtl_msg,
                                      uint8 length)
{
   52F68:	F90B      	enter      #-0x7
   52F69:	0423      	st         ah, @(+0x4, y)
    /* Update the connected host if notifications are configured */
    if((g_mesh_svc_data.device_id != CM_INVALID_DEVICE_ID) &&
   52F6A:	6B00      	**prefx    0x6B
   52F6B:	D611      	ld         ah, @0x6AD6 <___libgatt_lib_db_958+0xC>
   52F6C:	FF80      	cmp        ah, #-0x1
   52F6D:	24F4      	beq        +0x24 <MeshControlNotifyResponse+0x29:0x52F91[p]>
   52F6E:	6B00      	**prefx    0x6B
   52F6F:	B915      	ld         al, @0x6AB9 <g_mesh_svc_data>
   52F70:	0184      	cmp        al, #+0x1
   52F71:	20F0      	bne        +0x20 <MeshControlNotifyResponse+0x29:0x52F91[p]>
        /* If message is less than or equal to ATT_WRITE_MAX_DATA_LEN,
         * notify it using MTL_COMPLETE_CP. If it is greater than
         * ATT_WRITE_MAX_DATA_LEN notify first ATT_WRITE_MAX_DATA_LEN bytes
         * with MTL_CONTINUATION_CP and rest with MTL_COMPLETE_CP.
         */
        if (length <= ATT_WRITE_MAX_DATALEN)
   52F72:	0717      	ld         al, @(+0x7, y)
   52F73:	1584      	cmp        al, #+0x15
   52F74:	08F8      	bcc        +0x8 <MeshControlNotifyResponse+0x14:0x52F7C[p]>
        {
            notification.device_id = g_mesh_svc_data.device_id;
   52F75:	0023      	st         ah, @(0x0, y)
            notification.handle = HANDLE_MTL_COMPLETE_CP;
   52F76:	1F14      	ld         al, #+0x1F
   52F77:	0127      	st         al, @(+0x1, y)
            notification.value = mtl_msg;
   52F78:	0417      	ld         al, @(+0x4, y)
   52F79:	0227      	st         al, @(+0x2, y)
            notification.size_value = length;
   52F7A:	0717      	ld         al, @(+0x7, y)
   52F7B:	12E0      	bra        +0x12 <MeshControlNotifyResponse+0x25:0x52F8D[p]>
        }
        else
        {
            /* Send first ATT_WRITE_MAX_DATALEN with MTL_CONTINUATION_CP */

            notification.device_id = g_mesh_svc_data.device_id;
   52F7C:	0023      	st         ah, @(0x0, y)
            notification.handle = HANDLE_MTL_CONTINUATION_CP;
   52F7D:	1C14      	ld         al, #+0x1C
   52F7E:	0127      	st         al, @(+0x1, y)
            notification.value = mtl_msg;
   52F7F:	0417      	ld         al, @(+0x4, y)
   52F80:	0227      	st         al, @(+0x2, y)
            notification.size_value = ATT_WRITE_MAX_DATALEN;
   52F81:	1414      	ld         al, #+0x14
   52F82:	0327      	st         al, @(+0x3, y)
            CMSendValueNotification(&notification);
   52F83:	E415      	ld         al, @0xFFE4 <register uy>
   52F84:	E400      	**prefx    0xE4
   52F85:	CB9C      	bsr        -0x1C35 <CMSendValueNotification:0x51350[p]>

            /* Send rest of the message with MTL_COMPLETE_CP */
            notification.handle = HANDLE_MTL_COMPLETE_CP;
   52F86:	1F14      	ld         al, #+0x1F
   52F87:	0127      	st         al, @(+0x1, y)
            notification.value = &mtl_msg[ATT_WRITE_MAX_DATALEN];
   52F88:	0417      	ld         al, @(+0x4, y)
   52F89:	1434      	add        al, #+0x14
   52F8A:	0227      	st         al, @(+0x2, y)
            notification.size_value = length - ATT_WRITE_MAX_DATALEN;
   52F8B:	0717      	ld         al, @(+0x7, y)
   52F8C:	EC34      	add        al, #-0x14
   52F8D:	0327      	st         al, @(+0x3, y)
            CMSendValueNotification(&notification);
   52F8E:	E415      	ld         al, @0xFFE4 <register uy>
   52F8F:	E400      	**prefx    0xE4
   52F90:	C09C      	bsr        -0x1C40 <CMSendValueNotification:0x51350[p]>
        }
    }
}
   52F91:	F90F      	leave      #-0x7

0x00052F92 <MeshControlInitServerService>:
 *  RETURNS
 *      Nothing.
 *----------------------------------------------------------------------------*/

extern void MeshControlInitServerService(bool nvm_start_fresh, uint16 *nvm_offset)
{
   52F92:	FE0B      	enter      #-0x2
    g_mesh_service_info.server_handler = g_mesh_server_handlers;
   52F93:	6400      	**prefx    0x64
   52F94:	5218      	ld         x, #+0x6452
   52F95:	A100      	**prefx    0xA1
   52F96:	1515      	ld         al, @0xA115 <g_mesh_server_handlers+0x1>
   52F97:	0126      	st         al, @(+0x1, x)
   52F98:	A100      	**prefx    0xA1
   52F99:	1415      	ld         al, @0xA114 <g_mesh_server_handlers>
   52F9A:	0026      	st         al, @(0x0, x)
    g_mesh_service_info.start_handle = HANDLE_MESH_CONTROL_SERVICE;
   52F9B:	1414      	ld         al, #+0x14
   52F9C:	0226      	st         al, @(+0x2, x)
    g_mesh_service_info.end_handle = HANDLE_MESH_CONTROL_SERVICE_END;
   52F9D:	FF14      	ld         al, #-0x1
   52F9E:	0326      	st         al, @(+0x3, x)

    /* Register HR Server service */
    CMServerInitRegisterHandler(&g_mesh_service_info);
   52F9F:	E315      	ld         al, @0xFFE3 <register uxl>
}
   52FA0:	001B      	ld         x, @(0x0, y)
   52FA1:	023C      	add        y, #+0x2
    g_mesh_service_info.server_handler = g_mesh_server_handlers;
    g_mesh_service_info.start_handle = HANDLE_MESH_CONTROL_SERVICE;
    g_mesh_service_info.end_handle = HANDLE_MESH_CONTROL_SERVICE_END;

    /* Register HR Server service */
    CMServerInitRegisterHandler(&g_mesh_service_info);
   52FA2:	E300      	**prefx    0xE3
   52FA3:	D1E0      	bra        -0x1D2F <CMServerInitRegisterHandler:0x51274[p]>

0x00052FA4 <handleAccessRead>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void handleAccessRead(CM_READ_ACCESS_T *p_event_data)
{
   52FA4:	D70B      	enter      #-0x29
   52FA5:	2627      	st         al, @(+0x26, y)
    uint16 length = 0;
    uint8  *p_value = NULL;
   52FA6:	0014      	ld         al, #+0x0
   52FA7:	0027      	st         al, @(0x0, y)
    sys_status rc = sys_status_success;
    CSR_MESH_UUID_T devUUID;
    uint8 val[16];
    CM_ACCESS_RESPONSE_T cm_access_rsp;

    switch(p_event_data->handle)
   52FA8:	261B      	ld         x, @(+0x26, y)
   52FA9:	0116      	ld         al, @(+0x1, x)
   52FAA:	1A84      	cmp        al, #+0x1A
   52FAB:	0CF4      	beq        +0xC <handleAccessRead+0x13:0x52FB7[p]>
   52FAC:	1B84      	cmp        al, #+0x1B
   52FAD:	04F8      	bcc        +0x4 <handleAccessRead+0xD:0x52FB1[p]>
   52FAE:	1884      	cmp        al, #+0x18
   52FAF:	06F0      	bne        +0x6 <handleAccessRead+0x11:0x52FB5[p]>
   52FB0:	0AE0      	bra        +0xA <handleAccessRead+0x16:0x52FBA[p]>
   52FB1:	1D84      	cmp        al, #+0x1D
   52FB2:	13F4      	beq        +0x13 <handleAccessRead+0x21:0x52FC5[p]>
   52FB3:	2284      	cmp        al, #+0x22
   52FB4:	03F4      	beq        +0x3 <handleAccessRead+0x13:0x52FB7[p]>
   52FB5:	0010      	ld         ah, #+0x0
   52FB6:	1CE0      	bra        +0x1C <handleAccessRead+0x2E:0x52FD2[p]>
   52FB7:	0010      	ld         ah, #+0x0
   52FB8:	0014      	ld         al, #+0x0
   52FB9:	1BE0      	bra        +0x1B <handleAccessRead+0x30:0x52FD4[p]>
    {
        case HANDLE_DEVICE_UUID:
        {
            p_value = val;
   52FBA:	E415      	ld         al, @0xFFE4 <register uy>
   52FBB:	1634      	add        al, #+0x16
   52FBC:	0027      	st         al, @(0x0, y)
            MemCopy(val, devUUID.uuid, 16);
   52FBD:	1014      	ld         al, #+0x10
   52FBE:	E411      	ld         ah, @0xFFE4 <register uy>
   52FBF:	1630      	add        ah, #+0x16
   52FC0:	E419      	ld         x, @0xFFE4 <register uy>
   52FC1:	0638      	add        x, #+0x6
   52FC2:	FD09      	bc2        
   52FC3:	1010      	ld         ah, #+0x10
   52FC4:	10E0      	bra        +0x10 <handleAccessRead+0x30:0x52FD4[p]>
        }
        break;

        case HANDLE_MTL_CP_CLIENT_CONFIG:
        {
            p_value = val;
   52FC5:	E419      	ld         x, @0xFFE4 <register uy>
   52FC6:	1638      	add        x, #+0x16
   52FC7:	002B      	st         x, @(0x0, y)
            BufWriteUint16(&p_value, g_mesh_svc_data.mtl_cp_ccd);
   52FC8:	E415      	ld         al, @0xFFE4 <register uy>
   52FC9:	6B00      	**prefx    0x6B
   52FCA:	B911      	ld         ah, @0x6AB9 <g_mesh_svc_data>
   52FCB:	FC00      	**prefx    0xFC
   52FCC:	3000      	**prefx    0x30
   52FCD:	129C      	bsr        -0x3CFEE <BufWriteUint16:0x15FDF[p]>
            p_value = val;
   52FCE:	E415      	ld         al, @0xFFE4 <register uy>
   52FCF:	1634      	add        al, #+0x16
   52FD0:	0027      	st         al, @(0x0, y)
   52FD1:	0210      	ld         ah, #+0x2
   52FD2:	0A00      	**prefx    0xA
   52FD3:	0214      	ld         al, #+0xA02
            rc = gatt_status_read_not_permitted;
        break;

    }

    cm_access_rsp.device_id = p_event_data->device_id;
   52FD4:	261B      	ld         x, @(+0x26, y)
   52FD5:	001A      	ld         x, @(0x0, x)
   52FD6:	012B      	st         x, @(+0x1, y)
    cm_access_rsp.handle = p_event_data->handle;
   52FD7:	261B      	ld         x, @(+0x26, y)
   52FD8:	011A      	ld         x, @(+0x1, x)
   52FD9:	022B      	st         x, @(+0x2, y)
    cm_access_rsp.rc = rc;
   52FDA:	0527      	st         al, @(+0x5, y)
    cm_access_rsp.size_value = length;
   52FDB:	0423      	st         ah, @(+0x4, y)
    cm_access_rsp.value = p_value;
   52FDC:	0017      	ld         al, @(0x0, y)
   52FDD:	0327      	st         al, @(+0x3, y)

    CMSendAccessRsp(&cm_access_rsp);
   52FDE:	E415      	ld         al, @0xFFE4 <register uy>
   52FDF:	0134      	add        al, #+0x1
   52FE0:	E300      	**prefx    0xE3
   52FE1:	769C      	bsr        -0x1C8A <CMSendAccessRsp:0x51357[p]>
}
   52FE2:	D70F      	leave      #-0x29

0x00052FE3 <handleAccessWrite>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void handleAccessWrite(CM_WRITE_ACCESS_T *p_event_data)
{
   52FE3:	EF0B      	enter      #-0x11
   52FE4:	0E27      	st         al, @(+0xE, y)
    sys_status rc = sys_status_success;
    uint8  *pValue;
    bool csr_mesh_send_msg = FALSE;
    CM_ACCESS_RESPONSE_T cm_access_rsp;

    switch(p_event_data->handle)
   52FE5:	E119      	ld         x, @0xFFE1 <register al>
   52FE6:	0116      	ld         al, @(+0x1, x)
   52FE7:	E434      	add        al, #-0x1C
   52FE8:	0784      	cmp        al, #+0x7
   52FE9:	06F8      	bcc        +0x6 <.JTBASE26:0x52FEF[p]>
   52FEA:	E119      	ld         x, @0xFFE1 <register al>
   52FEB:	A100      	**prefx    0xA1
   52FEC:	0D16      	ld         al, @(-0x5EF3, x)
   52FED:	E119      	ld         x, @0xFFE1 <register al>
   52FEE:	FE09      	brxl       

0x00052FEF <.JTBASE26>:
   52FEF:	0A00      	**prefx    0xA
   52FF0:	0314      	ld         al, #+0xA03
   52FF1:	0018      	ld         x, #+0x0
   52FF2:	5BE0      	bra        +0x5B <.JTBASE26+0x5E:0x5304D[p]>
    {
        case HANDLE_MTL_CP_CLIENT_CONFIG:
        case HANDLE_MTL_CP2_CLIENT_CONFIG:
        {
            CSR_SCHED_GATT_EVENT_DATA_T gatt_event_data;
            gatt_event_data.cid = CMGetConnId(p_event_data->device_id);
   52FF3:	0E1B      	ld         x, @(+0xE, y)
   52FF4:	0016      	ld         al, @(0x0, x)
   52FF5:	DD00      	**prefx    0xDD
   52FF6:	159C      	bsr        -0x22EB <CMGetConnId:0x50D0B[p]>
   52FF7:	0427      	st         al, @(+0x4, y)
            pValue = p_event_data->data;
   52FF8:	0E1B      	ld         x, @(+0xE, y)
   52FF9:	021A      	ld         x, @(+0x2, x)
   52FFA:	022B      	st         x, @(+0x2, y)
            g_mesh_svc_data.mtl_cp_ccd = BufReadUint16(&pValue);
   52FFB:	E415      	ld         al, @0xFFE4 <register uy>
   52FFC:	0234      	add        al, #+0x2
   52FFD:	FC00      	**prefx    0xFC
   52FFE:	3000      	**prefx    0x30
   52FFF:	C29C      	bsr        -0x3D03E <BufReadUint16:0x15FC1[p]>
   53000:	6B00      	**prefx    0x6B
   53001:	B925      	st         al, @0x6AB9 <g_mesh_svc_data>
            g_mesh_svc_data.device_id = p_event_data->device_id;
   53002:	0E1B      	ld         x, @(+0xE, y)
   53003:	001A      	ld         x, @(0x0, x)
   53004:	6B00      	**prefx    0x6B
   53005:	D629      	st         x, @0x6AD6 <___libgatt_lib_db_958+0xC>

            /* Reset the reserved bits in any case */
            g_mesh_svc_data.mtl_cp_ccd &= ~gatt_client_config_reserved;
   53006:	E119      	ld         x, @0xFFE1 <register al>
   53007:	0BC8      	and        x, #0xB
   53008:	6B00      	**prefx    0x6B
   53009:	B929      	st         x, @0x6AB9 <g_mesh_svc_data>

            /* Configure the scheduler with the ccd value written */
            if((g_mesh_svc_data.mtl_cp_ccd & gatt_client_config_notification)
   5300A:	01C4      	and        al, #0x1
   5300B:	E411      	ld         ah, @0xFFE4 <register uy>
   5300C:	0430      	add        ah, #+0x4
   5300D:	E199      	tst        @0xFFE1 <register al>
   5300E:	09F4      	beq        +0x9 <.JTBASE26+0x28:0x53017[p]>
                    == gatt_client_config_notification)
            {
                gatt_event_data.is_notification_enabled = TRUE;
   5300F:	0114      	ld         al, #+0x1
   53010:	0727      	st         al, @(+0x7, y)
                CSRSchedNotifyGattEvent(CSR_SCHED_GATT_CCCD_STATE_CHANGE_EVENT,
   53011:	2F00      	**prefx    0x2F
   53012:	6818      	ld         x, #+0x2F68
   53013:	012B      	st         x, @(+0x1, y)
   53014:	0514      	ld         al, #+0x5
   53015:	0027      	st         al, @(0x0, y)
   53016:	05E0      	bra        +0x5 <.JTBASE26+0x2C:0x5301B[p]>
                                        &gatt_event_data, 
                                        MeshControlNotifyResponse);
            }
            else
            {
                gatt_event_data.is_notification_enabled = FALSE;
   53017:	0018      	ld         x, #+0x0
   53018:	072B      	st         x, @(+0x7, y)
                CSRSchedNotifyGattEvent(CSR_SCHED_GATT_CCCD_STATE_CHANGE_EVENT,
   53019:	002B      	st         x, @(0x0, y)
   5301A:	012B      	st         x, @(+0x1, y)
   5301B:	0214      	ld         al, #+0x2
   5301C:	2B00      	**prefx    0x2B
   5301D:	619C      	bsr        +0x2B61 <CSRSchedNotifyGattEvent:0x55B7E[p]>
   5301E:	3DE0      	bra        +0x3D <.JTBASE26+0x6C:0x5305B[p]>
        }
        break;

        case HANDLE_MTL_CONTINUATION_CP:
        {
            pValue = p_event_data->data;
   5301F:	0E1B      	ld         x, @(+0xE, y)
   53020:	021A      	ld         x, @(+0x2, x)
   53021:	022B      	st         x, @(+0x2, y)

            /* Reset the length of the mesh message */
            g_mesh_svc_data.mesh_data.length = 0;
   53022:	0014      	ld         al, #+0x0
   53023:	6B00      	**prefx    0x6B
   53024:	BA25      	st         al, @0x6ABA <g_mesh_svc_data+0x1>

            if(p_event_data->length)
   53025:	0E1B      	ld         x, @(+0xE, y)
   53026:	0316      	ld         al, @(+0x3, x)
   53027:	35F4      	beq        +0x35 <.JTBASE26+0x6D:0x5305C[p]>
            {
                MemCopy(g_mesh_svc_data.mesh_data.mesh_data + p_event_data->offset,
   53028:	6B00      	**prefx    0x6B
   53029:	BB10      	ld         ah, #+0x6ABB
   5302A:	0E1B      	ld         x, @(+0xE, y)
   5302B:	0432      	add        ah, @(+0x4, x)
   5302C:	021A      	ld         x, @(+0x2, x)
   5302D:	FD09      	bc2        
                        p_event_data->data, p_event_data->length);
                g_mesh_svc_data.mesh_data.length = p_event_data->length;
   5302E:	0E1B      	ld         x, @(+0xE, y)
   5302F:	031A      	ld         x, @(+0x3, x)
   53030:	6B00      	**prefx    0x6B
   53031:	BA29      	st         x, @0x6ABA <g_mesh_svc_data+0x1>
   53032:	2AE0      	bra        +0x2A <.JTBASE26+0x6D:0x5305C[p]>
        }
        break;

        case HANDLE_MTL_COMPLETE_CP:
        {
            pValue = p_event_data->data;
   53033:	0E1B      	ld         x, @(+0xE, y)
   53034:	021A      	ld         x, @(+0x2, x)
   53035:	F829      	st         x, @0xFFF8 <(scratchpad)>
   53036:	022B      	st         x, @(+0x2, y)

            if(p_event_data->length && ((p_event_data->length + 
   53037:	0E1B      	ld         x, @(+0xE, y)
   53038:	031A      	ld         x, @(+0x3, x)
   53039:	16F4      	beq        +0x16 <.JTBASE26+0x60:0x5304F[p]>
   5303A:	6B00      	**prefx    0x6B
   5303B:	BA11      	ld         ah, @0x6ABA <g_mesh_svc_data+0x1>
   5303C:	E015      	ld         al, @0xFFE0 <register ah>
   5303D:	E335      	add        al, @0xFFE3 <register uxl>
   5303E:	1C84      	cmp        al, #+0x1C
   5303F:	10F8      	bcc        +0x10 <.JTBASE26+0x60:0x5304F[p]>
                     g_mesh_svc_data.mesh_data.length) <= MESH_LONGEST_MSG_LEN))
            {
                MemCopy(g_mesh_svc_data.mesh_data.mesh_data + \
   53040:	6B00      	**prefx    0x6B
   53041:	BB30      	add        ah, #+0x6ABB
   53042:	E315      	ld         al, @0xFFE3 <register uxl>
   53043:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   53044:	FD09      	bc2        
                        g_mesh_svc_data.mesh_data.length,
                        p_event_data->data, p_event_data->length);
                g_mesh_svc_data.mesh_data.length += p_event_data->length;
   53045:	0E1B      	ld         x, @(+0xE, y)
   53046:	0316      	ld         al, @(+0x3, x)
   53047:	6B00      	**prefx    0x6B
   53048:	BA35      	add        al, @0x6ABA <g_mesh_svc_data+0x1>
   53049:	6B00      	**prefx    0x6B
   5304A:	BA25      	st         al, @0x6ABA <g_mesh_svc_data+0x1>
   5304B:	0014      	ld         al, #+0x0
   5304C:	0118      	ld         x, #+0x1
   5304D:	0D2B      	st         x, @(+0xD, y)
   5304E:	0FE0      	bra        +0xF <.JTBASE26+0x6E:0x5305D[p]>
                /* Send message to CSRmesh Library. */
                csr_mesh_send_msg = TRUE;
            }
            else
            {
                g_mesh_svc_data.mesh_data.length = 0;
   5304F:	0014      	ld         al, #+0x0
   53050:	6B00      	**prefx    0x6B
   53051:	BA25      	st         al, @0x6ABA <g_mesh_svc_data+0x1>
   53052:	0AE0      	bra        +0xA <.JTBASE26+0x6D:0x5305C[p]>
        break;

        case HANDLE_MTL_TTL:
        {
            uint8 ttl = 0x00;
            pValue = p_event_data->data;
   53053:	0E1B      	ld         x, @(+0xE, y)
   53054:	021A      	ld         x, @(+0x2, x)
   53055:	022B      	st         x, @(+0x2, y)
            ttl =  BufReadUint8(&pValue);
   53056:	E415      	ld         al, @0xFFE4 <register uy>
   53057:	0234      	add        al, #+0x2
   53058:	FC00      	**prefx    0xFC
   53059:	2F00      	**prefx    0x2F
   5305A:	5B9C      	bsr        -0x3D0A5 <BufReadUint8:0x15FB5[p]>
   5305B:	0014      	ld         al, #+0x0
   5305C:	0D27      	st         al, @(+0xD, y)
        }
        break;
    }

    /* Send ACCESS RESPONSE */
    cm_access_rsp.device_id = p_event_data->device_id;
   5305D:	0E1B      	ld         x, @(+0xE, y)
   5305E:	001A      	ld         x, @(0x0, x)
   5305F:	082B      	st         x, @(+0x8, y)
    cm_access_rsp.handle = p_event_data->handle;
   53060:	0E1B      	ld         x, @(+0xE, y)
   53061:	011A      	ld         x, @(+0x1, x)
   53062:	092B      	st         x, @(+0x9, y)
    cm_access_rsp.rc = rc;
   53063:	0C27      	st         al, @(+0xC, y)
    cm_access_rsp.size_value = 0;
   53064:	0014      	ld         al, #+0x0
   53065:	0B27      	st         al, @(+0xB, y)
    cm_access_rsp.value = NULL;
   53066:	0A27      	st         al, @(+0xA, y)

    CMSendAccessRsp(&cm_access_rsp);
   53067:	E415      	ld         al, @0xFFE4 <register uy>
   53068:	0834      	add        al, #+0x8
   53069:	E300      	**prefx    0xE3
   5306A:	ED9C      	bsr        -0x1D13 <CMSendAccessRsp:0x51357[p]>

    if (csr_mesh_send_msg)
   5306B:	0D9B      	tst        @(+0xD, y)
   5306C:	16F4      	beq        +0x16 <.JTBASE26+0x93:0x53082[p]>
    {
        int8 rssi;

        /* Ignore the error as FW fills invalid RSSI value in case of error. */
        (void)CMReadRssi(p_event_data->device_id, &rssi);
   5306D:	0E1B      	ld         x, @(+0xE, y)
   5306E:	0016      	ld         al, @(0x0, x)
   5306F:	E411      	ld         ah, @0xFFE4 <register uy>
   53070:	0330      	add        ah, #+0x3
   53071:	D900      	**prefx    0xD9
   53072:	219C      	bsr        -0x26DF <CMReadRssi:0x50993[p]>

        /* Send the MTL data as it is on the mesh */

        /* Update Bearer Event Data structure with incoming Mesh Data */
        if(g_mesh_svc_data.mesh_data.length <= sizeof(g_mesh_svc_data.mesh_data.mesh_data))
   53073:	6B00      	**prefx    0x6B
   53074:	BA15      	ld         al, @0x6ABA <g_mesh_svc_data+0x1>
   53075:	1C84      	cmp        al, #+0x1C
   53076:	0CF8      	bcc        +0xC <.JTBASE26+0x93:0x53082[p]>
        {

             CSRSchedHandleIncomingData(CSR_SCHED_INCOMING_GATT_MESH_DATA_EVENT,
   53077:	0027      	st         al, @(0x0, y)
   53078:	0317      	ld         al, @(+0x3, y)
   53079:	0127      	st         al, @(+0x1, y)
   5307A:	0214      	ld         al, #+0x2
   5307B:	6B00      	**prefx    0x6B
   5307C:	BB10      	ld         ah, #+0x6ABB
   5307D:	2900      	**prefx    0x29
   5307E:	BB9C      	bsr        +0x28BB <CSRSchedHandleIncomingData:0x55939[p]>
                                       g_mesh_svc_data.mesh_data.mesh_data,
                                       g_mesh_svc_data.mesh_data.length,
                                       rssi);

            /* Reset the length of the mesh message */
            g_mesh_svc_data.mesh_data.length = 0;
   5307F:	0018      	ld         x, #+0x0
   53080:	6B00      	**prefx    0x6B
   53081:	BA29      	st         x, @0x6ABA <g_mesh_svc_data+0x1>
        }
    }
}
   53082:	EF0F      	leave      #-0x11

0x00053083 <handleConnMgrProcedureEvent>:
 *----------------------------------------------------------------------------*/

static void handleConnMgrProcedureEvent (
                                     cm_event event_type,
                                     CM_EVENT_T *p_event_data)
{
   53083:	FE0B      	enter      #-0x2
    switch(event_type)
   53084:	1584      	cmp        al, #+0x15
   53085:	04F4      	beq        +0x4 <handleConnMgrProcedureEvent+0x6:0x53089[p]>
   53086:	1684      	cmp        al, #+0x16
   53087:	09F0      	bne        +0x9 <handleConnMgrProcedureEvent+0xD:0x53090[p]>
   53088:	05E0      	bra        +0x5 <handleConnMgrProcedureEvent+0xA:0x5308D[p]>

        case CM_BONDING_NOTIFY:
        break;

        case CM_READ_ACCESS:
            handleAccessRead((CM_READ_ACCESS_T *)p_event_data);
   53089:	E015      	ld         al, @0xFFE0 <register ah>
   5308A:	FF00      	**prefx    0xFF
   5308B:	199C      	bsr        -0xE7 <handleAccessRead:0x52FA4[p]>
   5308C:	04E0      	bra        +0x4 <handleConnMgrProcedureEvent+0xD:0x53090[p]>
        break;

        case CM_WRITE_ACCESS:
            handleAccessWrite((CM_WRITE_ACCESS_T *)p_event_data);
   5308D:	E015      	ld         al, @0xFFE0 <register ah>
   5308E:	FF00      	**prefx    0xFF
   5308F:	549C      	bsr        -0xAC <handleAccessWrite:0x52FE3[p]>

        default:
        break;

    }
}
   53090:	FE0F      	leave      #-0x2

0x00053091 <SetUint8InArray>:
 *  RETURNS:
 *      Number of octets converted
 *
 *----------------------------------------------------------------------------*/
extern uint16 SetUint8InArray(uint8 *dst, uint16 byteIndex, uint8 val)
{
   53091:	FE0B      	enter      #-0x2
   53092:	E119      	ld         x, @0xFFE1 <register al>
    dst[byteIndex] = val;
   53093:	E039      	add        x, @0xFFE0 <register ah>
   53094:	0217      	ld         al, @(+0x2, y)
   53095:	0026      	st         al, @(0x0, x)

    return 1;
}
   53096:	0114      	ld         al, #+0x1
   53097:	FE0F      	leave      #-0x2

0x00053098 <SetUint16InArray>:
 *  RETURNS:
 *      Number of octets converted
 *
 *----------------------------------------------------------------------------*/
extern uint16 SetUint16InArray(uint8 *dst, uint16 byteIndex, uint16 val)
{
   53098:	FE0B      	enter      #-0x2
   53099:	E119      	ld         x, @0xFFE1 <register al>
   5309A:	0217      	ld         al, @(+0x2, y)
   5309B:	F825      	st         al, @0xFFF8 <(scratchpad)>
    dst[byteIndex] = val >> 8;
   5309C:	E039      	add        x, @0xFFE0 <register ah>
   5309D:	E111      	ld         ah, @0xFFE1 <register al>
   5309E:	0009      	**unsigned
   5309F:	08A4      	lsr        #0x8
   530A0:	0022      	st         ah, @(0x0, x)
    dst[byteIndex+1] = val;
   530A1:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   530A2:	0126      	st         al, @(+0x1, x)

    return 2;
}
   530A3:	0214      	ld         al, #+0x2
   530A4:	FE0F      	leave      #-0x2

0x000530A5 <SetUint32InArray>:
 *  RETURNS:
 *      Number of octets converted
 *
 *----------------------------------------------------------------------------*/
extern uint16 SetUint32InArray(uint8 *dst, uint16 byteIndex, uint32 val)
{
   530A5:	FE0B      	enter      #-0x2
   530A6:	E119      	ld         x, @0xFFE1 <register al>
   530A7:	0317      	ld         al, @(+0x3, y)
   530A8:	F925      	st         al, @0xFFF9 <(scratchpad)>
   530A9:	0217      	ld         al, @(+0x2, y)
   530AA:	F825      	st         al, @0xFFF8 <(scratchpad)>
    dst[byteIndex] = val >> 24;
   530AB:	E039      	add        x, @0xFFE0 <register ah>
   530AC:	E111      	ld         ah, @0xFFE1 <register al>
   530AD:	0009      	**unsigned
   530AE:	08A4      	lsr        #0x8
   530AF:	0022      	st         ah, @(0x0, x)
    dst[byteIndex+1] = val >> 16;
   530B0:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   530B1:	0126      	st         al, @(+0x1, x)
    dst[byteIndex+2] = val >> 8;
   530B2:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   530B3:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   530B4:	0009      	**unsigned
   530B5:	08A4      	lsr        #0x8
   530B6:	0226      	st         al, @(+0x2, x)
    dst[byteIndex+3] = val;
   530B7:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   530B8:	0326      	st         al, @(+0x3, x)

    return 4;
}
   530B9:	0414      	ld         al, #+0x4
   530BA:	FE0F      	leave      #-0x2

0x000530BB <GetUint8FromArray>:
 *  RETURNS:
 *      Number of octets extracted
 *
 *----------------------------------------------------------------------------*/
extern uint8 GetUint8FromArray(const uint8 *src)
{
   530BB:	FE0B      	enter      #-0x2
   530BC:	E119      	ld         x, @0xFFE1 <register al>
   530BD:	0016      	ld         al, @(0x0, x)
    return src[0];
}
   530BE:	FE0F      	leave      #-0x2

0x000530BF <GetUint16FromArray>:
 *  RETURNS:
 *      Number of octets extracted
 *
 *----------------------------------------------------------------------------*/
extern uint16 GetUint16FromArray(const uint8 *src)
{
   530BF:	FE0B      	enter      #-0x2
   530C0:	E119      	ld         x, @0xFFE1 <register al>
    uint16 val = 0;

    val = (uint16)src[0] << 8;
   530C1:	0016      	ld         al, @(0x0, x)
   530C2:	08A0      	asl        #0x8
   530C3:	01B6      	or         al, @(+0x1, x)
    val |= src[1];

    return val;
}
   530C4:	FE0F      	leave      #-0x2

0x000530C5 <GetUint32FromArray>:
 *  RETURNS:
 *      Number of octets extracted
 *
 *----------------------------------------------------------------------------*/
extern uint32 GetUint32FromArray(const uint8 *src)
{
   530C5:	FE0B      	enter      #-0x2
   530C6:	E119      	ld         x, @0xFFE1 <register al>
    uint32 val = 0;

    val = ((uint32)src[0] & 0xff)<< 24;
   530C7:	0016      	ld         al, @(0x0, x)
   530C8:	0010      	ld         ah, #+0x0
   530C9:	18A0      	asl        #0x18
   530CA:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   530CB:	E111      	ld         ah, @0xFFE1 <register al>
    val |= ((uint32)src[1] & 0xff)<< 16;
   530CC:	0316      	ld         al, @(+0x3, x)
   530CD:	0100      	**prefx    0x1
   530CE:	FFC4      	and        al, #0xFF
   530CF:	E0B5      	or         al, @0xFFE0 <register ah>
   530D0:	F825      	st         al, @0xFFF8 <(scratchpad)>
    val |= ((uint32)src[2] & 0xff) << 8 ;
   530D1:	0116      	ld         al, @(+0x1, x)
   530D2:	0010      	ld         ah, #+0x0
   530D3:	0100      	**prefx    0x1
   530D4:	FFC4      	and        al, #0xFF
   530D5:	10A0      	asl        #0x10
   530D6:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
   530D7:	F9B1      	or         ah, @0xFFF9 <(scratchpad)>
   530D8:	F825      	st         al, @0xFFF8 <(scratchpad)>
   530D9:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   530DA:	0216      	ld         al, @(+0x2, x)
   530DB:	0010      	ld         ah, #+0x0
   530DC:	08A0      	asl        #0x8
   530DD:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
    val |= ((uint32)src[3] & 0xff) ;

    return val;
}
   530DE:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   530DF:	FE0F      	leave      #-0x2

0x000530E0 <SwapBytes>:
 *  RETURNS:
 *      Number of octets extracted
 *
 *----------------------------------------------------------------------------*/
extern void SwapBytes(uint16 count, uint8* source, uint8* destination)
{
   530E0:	FE0B      	enter      #-0x2
   530E1:	F825      	st         al, @0xFFF8 <(scratchpad)>
    uint8 i;

    /* even counts only */
    if ( count % 2 == 1 )
   530E2:	01C4      	and        al, #0x1
   530E3:	19F0      	bne        +0x19 <SwapBytes+0x1C:0x530FC[p]>
        return;
   530E4:	0217      	ld         al, @(+0x2, y)
   530E5:	0134      	add        al, #+0x1
   530E6:	F925      	st         al, @0xFFF9 <(scratchpad)>
   530E7:	0014      	ld         al, #+0x0
   530E8:	FA25      	st         al, @0xFFFA <(scratchpad)>
   530E9:	10E0      	bra        +0x10 <SwapBytes+0x19:0x530F9[p]>

    for(i = 0 ; i < count; i+=2)
    {
        destination[i+1] = source[i];
   530EA:	E019      	ld         x, @0xFFE0 <register ah>
   530EB:	0016      	ld         al, @(0x0, x)
   530EC:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   530ED:	0026      	st         al, @(0x0, x)
        destination[i] = source[i+1];
   530EE:	E019      	ld         x, @0xFFE0 <register ah>
   530EF:	0116      	ld         al, @(+0x1, x)
   530F0:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   530F1:	FF26      	st         al, @(-0x1, x)

    /* even counts only */
    if ( count % 2 == 1 )
        return;

    for(i = 0 ; i < count; i+=2)
   530F2:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   530F3:	0238      	add        x, #+0x2
   530F4:	FA29      	st         x, @0xFFFA <(scratchpad)>
   530F5:	0230      	add        ah, #+0x2
   530F6:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   530F7:	0234      	add        al, #+0x2
   530F8:	F925      	st         al, @0xFFF9 <(scratchpad)>
   530F9:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   530FA:	F889      	cmp        x, @0xFFF8 <(scratchpad)>
   530FB:	EFFC      	bcs        -0x11 <SwapBytes+0xA:0x530EA[p]>
    {
        destination[i+1] = source[i];
        destination[i] = source[i+1];
    }
}
   530FC:	FE0F      	leave      #-0x2

0x000530FD <BufReadUint16BE>:
 *      uint16 value from the first two bytes of the buffer. Advances the
 *      pointer to buffer.
 *
 *----------------------------------------------------------------------------*/
extern uint16 BufReadUint16BE(uint8 **buf)
{
   530FD:	FE0B      	enter      #-0x2
   530FE:	F825      	st         al, @0xFFF8 <(scratchpad)>
    uint8 *p = *buf;
   530FF:	E119      	ld         x, @0xFFE1 <register al>
   53100:	001A      	ld         x, @(0x0, x)
    uint16 r;
    r = *p++ << 8;
   53101:	0016      	ld         al, @(0x0, x)
   53102:	08A0      	asl        #0x8
    r |= *p++;
   53103:	01B6      	or         al, @(+0x1, x)
    *buf = p;
   53104:	E311      	ld         ah, @0xFFE3 <register uxl>
   53105:	0230      	add        ah, #+0x2
   53106:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   53107:	0022      	st         ah, @(0x0, x)
    return r;
}
   53108:	FE0F      	leave      #-0x2

0x00053109 <notifyApplication>:
 *  RETURNS
 *      Return status of the callback
 *
 *---------------------------------------------------------------------------*/
static sys_status notifyApplication(gaia_event event, GAIA_EVENT_T *data)
{
   53109:	FE0B      	enter      #-0x2
   5310A:	E119      	ld         x, @0xFFE1 <register al>
    if (g_gaia_lib_data.callback != NULL)
   5310B:	6400      	**prefx    0x64
   5310C:	5B15      	ld         al, @0x645B <g_gaia_lib_data+0x5>
   5310D:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5310E:	6400      	**prefx    0x64
   5310F:	5A15      	ld         al, @0x645A <g_gaia_lib_data+0x4>
   53110:	F825      	st         al, @0xFFF8 <(scratchpad)>
   53111:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   53112:	04F0      	bne        +0x4 <notifyApplication+0xD:0x53116[p]>
   53113:	0C00      	**prefx    0xC
   53114:	0014      	ld         al, #+0xC00
   53115:	08E0      	bra        +0x8 <notifyApplication+0x14:0x5311D[p]>
    {
        return g_gaia_lib_data.callback(event, data);
   53116:	E315      	ld         al, @0xFFE3 <register uxl>
   53117:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   53118:	FE2B      	st         x, @(-0x2, y)
   53119:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5311A:	FF2B      	st         x, @(-0x1, y)
   5311B:	FF0E      	ld         xh, @(-0x1, y)
   5311C:	FE9F      	bsr        @(-0x2, y)
    }

    return sys_status_failed;
}
   5311D:	FE0F      	leave      #-0x2

0x0005311E <GaiaLibInit>:
 *
 *  RETURNS/MODIFIES
 *      None
 *----------------------------------------------------------------------------*/
extern void GaiaLibInit(void)
{
   5311E:	FE0B      	enter      #-0x2
     g_gaia_lib_data.gaia_host_connected = FALSE;
   5311F:	6400      	**prefx    0x64
   53120:	5618      	ld         x, #+0x6456
   53121:	0014      	ld         al, #+0x0
   53122:	0026      	st         al, @(0x0, x)
     g_gaia_lib_data.data_transfer_session_on = FALSE;
   53123:	0126      	st         al, @(+0x1, x)
     g_gaia_lib_data.session_id = 0;
   53124:	0226      	st         al, @(+0x2, x)
     g_gaia_lib_data.data_transfer_ongoing = FALSE;
   53125:	0326      	st         al, @(+0x3, x)
}
   53126:	FE0F      	leave      #-0x2

0x00053127 <GaiaLibHandleConnNotify>:
 *  RETURNS/MODIFIES
 *      None
 *----------------------------------------------------------------------------*/
extern void GaiaLibHandleConnNotify(CM_CONNECTION_NOTIFY_T *cm_event_data)
{
    GaiaLibInit();
   53127:	F7E0      	bra        -0x9 <GaiaLibInit:0x5311E[p]>

0x00053128 <GaiaRegisterCallback>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void GaiaRegisterCallback(gaia_event_handler callback)
{
    g_gaia_lib_data.callback = callback;
   53128:	6400      	**prefx    0x64
   53129:	5B25      	st         al, @0x645B <g_gaia_lib_data+0x5>
   5312A:	6400      	**prefx    0x64
   5312B:	5A21      	st         ah, @0x645A <g_gaia_lib_data+0x4>
   5312C:	00E2      	bra        0x0, x

0x0005312D <GaiaSendPacket>:
 *----------------------------------------------------------------------------*/
extern void GaiaSendPacket( device_handle_id device_id,
                            uint16 command_id,
                            uint16 size_payload,
                            uint8 *payload)
{
   5312D:	E90B      	enter      #-0x17
   5312E:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5312F:	E019      	ld         x, @0xFFE0 <register ah>
   53130:	1717      	ld         al, @(+0x17, y)
   53131:	F825      	st         al, @0xFFF8 <(scratchpad)>
         +--------+--------+--------+--------+ +--------+--------+
         |    VENDOR ID    |   COMMAND ID    | | PAYLOAD   ...   |
         +--------+--------+--------+--------+ +--------+--------+
     */

    *p++ = HIGH(GAIA_VENDOR_CSR);
   53132:	0014      	ld         al, #+0x0
   53133:	0127      	st         al, @(+0x1, y)
    *p++ = LOW(GAIA_VENDOR_CSR);
   53134:	0A14      	ld         al, #+0xA
   53135:	0227      	st         al, @(+0x2, y)
    *p++ = HIGH(command_id);
   53136:	0009      	**unsigned
   53137:	08A4      	lsr        #0x8
   53138:	0323      	st         ah, @(+0x3, y)
    *p++ = LOW(command_id);
   53139:	0100      	**prefx    0x1
   5313A:	FFC8      	and        x, #0xFF
   5313B:	042B      	st         x, @(+0x4, y)
   5313C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5313D:	FA29      	st         x, @0xFFFA <(scratchpad)>
   5313E:	E411      	ld         ah, @0xFFE4 <register uy>
   5313F:	0530      	add        ah, #+0x5
   53140:	0CE0      	bra        +0xC <GaiaSendPacket+0x1F:0x5314C[p]>

    /*  Copy in the payload  */
    while (size--)
    {
        *p++ = *payload++;
   53141:	181B      	ld         x, @(+0x18, y)
   53142:	0016      	ld         al, @(0x0, x)
   53143:	E019      	ld         x, @0xFFE0 <register ah>
   53144:	0026      	st         al, @(0x0, x)
   53145:	0130      	add        ah, #+0x1
   53146:	181B      	ld         x, @(+0x18, y)
   53147:	0138      	add        x, #+0x1
   53148:	182B      	st         x, @(+0x18, y)
   53149:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   5314A:	FF34      	add        al, #-0x1
   5314B:	FA25      	st         al, @0xFFFA <(scratchpad)>
    *p++ = LOW(GAIA_VENDOR_CSR);
    *p++ = HIGH(command_id);
    *p++ = LOW(command_id);

    /*  Copy in the payload  */
    while (size--)
   5314C:	FA99      	tst        @0xFFFA <(scratchpad)>
   5314D:	F4F0      	bne        -0xC <GaiaSendPacket+0x14:0x53141[p]>
    {
        *p++ = *payload++;
    }

    GAIASendNotification(   device_id,
   5314E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5314F:	0438      	add        x, #+0x4
   53150:	E415      	ld         al, @0xFFE4 <register uy>
   53151:	0134      	add        al, #+0x1
   53152:	0027      	st         al, @(0x0, y)
   53153:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   53154:	E311      	ld         ah, @0xFFE3 <register uxl>
   53155:	0800      	**prefx    0x8
   53156:	CB9C      	bsr        +0x7CB <GAIASendNotification:0x53921[p]>
                            GAIA_GATT_PACKET_HEADER_SIZE + size_payload,
                            data);
}
   53157:	E90F      	leave      #-0x17

0x00053158 <GAIAProcessCommand>:
 *
 *  RETURNS/MODIFIES
 *      None
 *----------------------------------------------------------------------------*/
extern void GAIAProcessCommand(device_handle_id device_id, uint16 payload_len, uint8 *payload)
{
   53158:	F50B      	enter      #-0xB
   53159:	0727      	st         al, @(+0x7, y)
   5315A:	0823      	st         ah, @(+0x8, y)
    uint16 command_id = GAIA_COMMAND_RESERVED;
    uint8 response;

    if (payload_len >= GAIA_GATT_VID_SIZE)
   5315B:	0180      	cmp        ah, #+0x1
   5315C:	172C      	bcz        +0x17 <GAIAProcessCommand+0x1B:0x53173[p]>
    {
        /* First two bytes contain vendor id in big-endian format */
        if (BufReadUint16BE(&payload) != GAIA_VENDOR_CSR)
   5315D:	E415      	ld         al, @0xFFE4 <register uy>
   5315E:	0B34      	add        al, #+0xB
   5315F:	9E9C      	bsr        -0x62 <BufReadUint16BE:0x530FD[p]>
   53160:	0A84      	cmp        al, #+0xA
   53161:	0100      	**prefx    0x1
   53162:	19F0      	bne        +0x119 <GAIAProcessCommand+0x123:0x5327B[p]>
            return;
        payload_len -= GAIA_GATT_VID_SIZE;
   53163:	0817      	ld         al, @(+0x8, y)
   53164:	FE34      	add        al, #-0x2
   53165:	0827      	st         al, @(+0x8, y)
    }

    if (payload_len >= GAIA_GATT_COMMAND_ID_SIZE)
   53166:	0184      	cmp        al, #+0x1
   53167:	0C2C      	bcz        +0xC <GAIAProcessCommand+0x1B:0x53173[p]>
    {
        /* next two bytes contain commandId in big-endian format */
        command_id = BufReadUint16BE(&payload);
   53168:	E415      	ld         al, @0xFFE4 <register uy>
   53169:	0B34      	add        al, #+0xB
   5316A:	939C      	bsr        -0x6D <BufReadUint16BE:0x530FD[p]>
   5316B:	E111      	ld         ah, @0xFFE1 <register al>
        payload_len -= GAIA_GATT_COMMAND_ID_SIZE;
   5316C:	081B      	ld         x, @(+0x8, y)
   5316D:	FE38      	add        x, #-0x2
   5316E:	082B      	st         x, @(+0x8, y)
    }

    if(GET_GAIA_ACK_GROUP_ID(command_id))
   5316F:	E199      	tst        @0xFFE1 <register al>
   53170:	0100      	**prefx    0x1
   53171:	0AEC      	bmi        +0x10A <GAIAProcessCommand+0x123:0x5327B[p]>
   53172:	02E0      	bra        +0x2 <GAIAProcessCommand+0x1C:0x53174[p]>

    if (payload_len >= GAIA_GATT_COMMAND_ID_SIZE)
    {
        /* next two bytes contain commandId in big-endian format */
        command_id = BufReadUint16BE(&payload);
        payload_len -= GAIA_GATT_COMMAND_ID_SIZE;
   53173:	0010      	ld         ah, #+0x0
                break;
        }
    }
    else
    {
        switch (GET_GAIA_COMMAND_GROUP_ID(command_id))
   53174:	E015      	ld         al, @0xFFE0 <register ah>
   53175:	7F00      	**prefx    0x7F
   53176:	00C4      	and        al, #0x7F00
   53177:	0600      	**prefx    0x6
   53178:	0084      	cmp        al, #+0x600
   53179:	12F4      	beq        +0x12 <GAIAProcessCommand+0x33:0x5318B[p]>
   5317A:	4000      	**prefx    0x40
   5317B:	0084      	cmp        al, #+0x4000
   5317C:	0100      	**prefx    0x1
   5317D:	C1F4      	beq        +0xC1 <GAIAProcessCommand+0xE6:0x5323E[p]>
   5317E:	8000      	**prefx    0x80
   5317F:	00B0      	or         ah, #-0x8000
   53180:	0200      	**prefx    0x2
   53181:	0084      	cmp        al, #+0x200
   53182:	0100      	**prefx    0x1
   53183:	EFF0      	bne        +0xEF <GAIAProcessCommand+0x11A:0x53272[p]>
            GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, &response);
            SetClientNotificationMask(BufReadUint16BE(&payload));
            break;
#endif
        default:
            response = GAIA_STATUS_NOT_SUPPORTED;
   53184:	0114      	ld         al, #+0x1
   53185:	0327      	st         al, @(+0x3, y)
            GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, &response);
   53186:	0027      	st         al, @(0x0, y)
   53187:	E419      	ld         x, @0xFFE4 <register uy>
   53188:	0338      	add        x, #+0x3
   53189:	0100      	**prefx    0x1
   5318A:	EDE0      	bra        +0xED <GAIAProcessCommand+0x11F:0x53277[p]>
            case GAIA_COMMAND_TYPE_CONTROL:
                gaiaHandleControlCommand(device_id, command_id, payload_len, payload);
                break;

            case GAIA_COMMAND_TYPE_DATA_TRANSFER:
                gaiaHandleDataTransferCommand(device_id, command_id, payload_len, payload);
   5318B:	0B17      	ld         al, @(+0xB, y)
   5318C:	0327      	st         al, @(+0x3, y)
                                            uint16 payload_length,
                                            uint8 *payload)
{
    uint8 response;

    switch (command_id)
   5318D:	0600      	**prefx    0x6
   5318E:	0380      	cmp        ah, #+0x603
   5318F:	56F4      	beq        +0x56 <GAIAProcessCommand+0x8D:0x531E5[p]>
   53190:	0600      	**prefx    0x6
   53191:	0480      	cmp        ah, #+0x604
   53192:	09F8      	bcc        +0x9 <GAIAProcessCommand+0x43:0x5319B[p]>
   53193:	0600      	**prefx    0x6
   53194:	0180      	cmp        ah, #+0x601
   53195:	12F4      	beq        +0x12 <GAIAProcessCommand+0x4F:0x531A7[p]>
   53196:	0600      	**prefx    0x6
   53197:	0280      	cmp        ah, #+0x602
   53198:	0100      	**prefx    0x1
   53199:	9CF0      	bne        +0x9C <GAIAProcessCommand+0xDD:0x53235[p]>
   5319A:	27E0      	bra        +0x27 <GAIAProcessCommand+0x69:0x531C1[p]>
   5319B:	0600      	**prefx    0x6
   5319C:	4180      	cmp        ah, #+0x641
   5319D:	74F4      	beq        +0x74 <GAIAProcessCommand+0xB9:0x53211[p]>
   5319E:	0600      	**prefx    0x6
   5319F:	4280      	cmp        ah, #+0x642
   531A0:	0100      	**prefx    0x1
   531A1:	81F4      	beq        +0x81 <GAIAProcessCommand+0xCA:0x53222[p]>
   531A2:	0600      	**prefx    0x6
   531A3:	4080      	cmp        ah, #+0x640
   531A4:	0100      	**prefx    0x1
   531A5:	90F0      	bne        +0x90 <GAIAProcessCommand+0xDD:0x53235[p]>
   531A6:	5DE0      	bra        +0x5D <GAIAProcessCommand+0xAB:0x53203[p]>
    {
        case GAIA_COMMAND_DATA_TRANSFER_SETUP:
            if (g_gaia_lib_data.data_transfer_session_on)
   531A7:	6400      	**prefx    0x64
   531A8:	5799      	tst        @0x6457 <g_gaia_lib_data+0x1>
   531A9:	03F4      	beq        +0x3 <GAIAProcessCommand+0x54:0x531AC[p]>
            {
                response = GAIA_STATUS_INSUFFICIENT_RESOURCES;
   531AA:	0318      	ld         x, #+0x3
   531AB:	0BE0      	bra        +0xB <GAIAProcessCommand+0x5E:0x531B6[p]>
            {
                /* It is not possible to reach here if a session is
                 * already on. So no need to check for duplicate session
                 * ID. Present protocol does not define valid range for
                 * session ID. So we cannot check that here */
                g_gaia_lib_data.session_id = BufReadUint16BE(&payload);
   531AC:	E415      	ld         al, @0xFFE4 <register uy>
   531AD:	0334      	add        al, #+0x3
   531AE:	FF00      	**prefx    0xFF
   531AF:	4E9C      	bsr        -0xB2 <BufReadUint16BE:0x530FD[p]>
   531B0:	6400      	**prefx    0x64
   531B1:	5825      	st         al, @0x6458 <g_gaia_lib_data+0x2>
                payload_length -= 2;
                g_gaia_lib_data.data_transfer_session_on = TRUE;
   531B2:	0114      	ld         al, #+0x1
   531B3:	6400      	**prefx    0x64
   531B4:	5725      	st         al, @0x6457 <g_gaia_lib_data+0x1>
                response = GAIA_STATUS_SUCCESS;
   531B5:	0018      	ld         x, #+0x0
   531B6:	042B      	st         x, @(+0x4, y)
            }

            GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, &response);
   531B7:	0114      	ld         al, #+0x1
   531B8:	0027      	st         al, @(0x0, y)
   531B9:	E419      	ld         x, @0xFFE4 <register uy>
   531BA:	0438      	add        x, #+0x4
   531BB:	012B      	st         x, @(+0x1, y)
   531BC:	0717      	ld         al, @(+0x7, y)
   531BD:	8600      	**prefx    0x86
   531BE:	0110      	ld         ah, #-0x79FF
   531BF:	0100      	**prefx    0x1
   531C0:	B9E0      	bra        +0xB9 <GAIAProcessCommand+0x121:0x53279[p]>
            return TRUE;
            break;

        case GAIA_COMMAND_DATA_TRANSFER_CLOSE:
            if (g_gaia_lib_data.data_transfer_session_on)
   531C1:	6400      	**prefx    0x64
   531C2:	5799      	tst        @0x6457 <g_gaia_lib_data+0x1>
   531C3:	0DF4      	beq        +0xD <GAIAProcessCommand+0x78:0x531D0[p]>
            {
                if (BufReadUint16BE(&payload) == g_gaia_lib_data.session_id)
   531C4:	E415      	ld         al, @0xFFE4 <register uy>
   531C5:	0334      	add        al, #+0x3
   531C6:	FF00      	**prefx    0xFF
   531C7:	369C      	bsr        -0xCA <BufReadUint16BE:0x530FD[p]>
   531C8:	6400      	**prefx    0x64
   531C9:	5885      	cmp        al, @0x6458 <g_gaia_lib_data+0x2>
   531CA:	03F0      	bne        +0x3 <GAIAProcessCommand+0x75:0x531CD[p]>
                {
                    response = GAIA_STATUS_SUCCESS;
   531CB:	0014      	ld         al, #+0x0
   531CC:	05E0      	bra        +0x5 <GAIAProcessCommand+0x79:0x531D1[p]>
                }
                else
                    response = GAIA_STATUS_INVALID_PARAMETER;
   531CD:	0518      	ld         x, #+0x5
   531CE:	042B      	st         x, @(+0x4, y)
   531CF:	03E0      	bra        +0x3 <GAIAProcessCommand+0x7A:0x531D2[p]>
            }
            else
            {
                response = GAIA_STATUS_INCORRECT_STATE;
   531D0:	0614      	ld         al, #+0x6
   531D1:	0427      	st         al, @(+0x4, y)
            }
            GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, &response);
   531D2:	0118      	ld         x, #+0x1
   531D3:	002B      	st         x, @(0x0, y)
   531D4:	E415      	ld         al, @0xFFE4 <register uy>
   531D5:	0434      	add        al, #+0x4
   531D6:	0127      	st         al, @(+0x1, y)
   531D7:	0717      	ld         al, @(+0x7, y)
   531D8:	8600      	**prefx    0x86
   531D9:	0210      	ld         ah, #-0x79FE
   531DA:	FF00      	**prefx    0xFF
   531DB:	529C      	bsr        -0xAE <GaiaSendPacket:0x5312D[p]>
            /* Reset the session parameters in any case */
            g_gaia_lib_data.session_id = 0;
   531DC:	0018      	ld         x, #+0x0
   531DD:	6400      	**prefx    0x64
   531DE:	5829      	st         x, @0x6458 <g_gaia_lib_data+0x2>
            g_gaia_lib_data.data_transfer_session_on = FALSE;
   531DF:	6400      	**prefx    0x64
   531E0:	5729      	st         x, @0x6457 <g_gaia_lib_data+0x1>
            g_gaia_lib_data.data_transfer_ongoing = FALSE;
   531E1:	6400      	**prefx    0x64
   531E2:	5929      	st         x, @0x6459 <g_gaia_lib_data+0x3>
   531E3:	0100      	**prefx    0x1
   531E4:	97E0      	bra        +0x97 <GAIAProcessCommand+0x123:0x5327B[p]>
#endif
            return TRUE;
            break;

        case GAIA_COMMAND_HOST_TO_DEVICE_DATA:
            if (g_gaia_lib_data.data_transfer_session_on)
   531E5:	6400      	**prefx    0x64
   531E6:	5799      	tst        @0x6457 <g_gaia_lib_data+0x1>
   531E7:	13F4      	beq        +0x13 <GAIAProcessCommand+0xA2:0x531FA[p]>
            {
                if (BufReadUint16BE(&payload) == g_gaia_lib_data.session_id)
   531E8:	E415      	ld         al, @0xFFE4 <register uy>
   531E9:	0334      	add        al, #+0x3
   531EA:	FF00      	**prefx    0xFF
   531EB:	129C      	bsr        -0xEE <BufReadUint16BE:0x530FD[p]>
   531EC:	6400      	**prefx    0x64
   531ED:	5885      	cmp        al, @0x6458 <g_gaia_lib_data+0x2>
   531EE:	0AF0      	bne        +0xA <GAIAProcessCommand+0xA0:0x531F8[p]>
                {
                    if(!g_gaia_lib_data.data_transfer_ongoing)
   531EF:	6400      	**prefx    0x64
   531F0:	5999      	tst        @0x6459 <g_gaia_lib_data+0x3>
   531F1:	04F0      	bne        +0x4 <GAIAProcessCommand+0x9D:0x531F5[p]>
                    {
                        g_gaia_lib_data.data_transfer_ongoing = TRUE;
   531F2:	0114      	ld         al, #+0x1
   531F3:	6400      	**prefx    0x64
   531F4:	5925      	st         al, @0x6459 <g_gaia_lib_data+0x3>
                    }
                    payload_length -= 2;
#ifdef GAIA_SET_GET_HOST_FEATURE_INFORMATION_SUPPORT
                    GaiaEventParseTransferData(payload_length, payload);
#endif
                    response = GAIA_STATUS_SUCCESS;
   531F5:	0018      	ld         x, #+0x0
   531F6:	042B      	st         x, @(+0x4, y)
   531F7:	03E0      	bra        +0x3 <GAIAProcessCommand+0xA2:0x531FA[p]>
                }
                else
                {
                    response = GAIA_STATUS_INVALID_PARAMETER;
   531F8:	0514      	ld         al, #+0x5
   531F9:	0427      	st         al, @(+0x4, y)
                }
            }
            GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, &response);
   531FA:	0118      	ld         x, #+0x1
   531FB:	002B      	st         x, @(0x0, y)
   531FC:	E415      	ld         al, @0xFFE4 <register uy>
   531FD:	0434      	add        al, #+0x4
   531FE:	0127      	st         al, @(+0x1, y)
   531FF:	0717      	ld         al, @(+0x7, y)
   53200:	8600      	**prefx    0x86
   53201:	0310      	ld         ah, #-0x79FD
   53202:	77E0      	bra        +0x77 <GAIAProcessCommand+0x121:0x53279[p]>
            break;

#ifdef GAIA_OTAU_SUPPORT
        /* GAIA OTAu specific */
        case GAIA_COMMAND_VM_UPGRADE_CONNECT:
            response = GAIA_STATUS_SUCCESS;
   53203:	0018      	ld         x, #+0x0
   53204:	042B      	st         x, @(+0x4, y)
            GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, &response);
   53205:	0114      	ld         al, #+0x1
   53206:	0027      	st         al, @(0x0, y)
   53207:	E419      	ld         x, @0xFFE4 <register uy>
   53208:	0438      	add        x, #+0x4
   53209:	012B      	st         x, @(+0x1, y)
   5320A:	0717      	ld         al, @(+0x7, y)
   5320B:	8600      	**prefx    0x86
   5320C:	4010      	ld         ah, #-0x79C0
   5320D:	FF00      	**prefx    0xFF
   5320E:	1F9C      	bsr        -0xE1 <GaiaSendPacket:0x5312D[p]>
            notifyApplication(gaia_event_upgrade_connect, NULL);
   5320F:	0014      	ld         al, #+0x0
   53210:	0EE0      	bra        +0xE <GAIAProcessCommand+0xC6:0x5321E[p]>
            return TRUE;
            break;

        case GAIA_COMMAND_VM_UPGRADE_DISCONNECT:
            response = GAIA_STATUS_SUCCESS;
   53211:	0014      	ld         al, #+0x0
   53212:	0427      	st         al, @(+0x4, y)
            GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, &response);
   53213:	0118      	ld         x, #+0x1
   53214:	002B      	st         x, @(0x0, y)
   53215:	E415      	ld         al, @0xFFE4 <register uy>
   53216:	0434      	add        al, #+0x4
   53217:	0127      	st         al, @(+0x1, y)
   53218:	0717      	ld         al, @(+0x7, y)
   53219:	8600      	**prefx    0x86
   5321A:	4110      	ld         ah, #-0x79BF
   5321B:	FF00      	**prefx    0xFF
   5321C:	119C      	bsr        -0xEF <GaiaSendPacket:0x5312D[p]>
            notifyApplication(gaia_event_upgrade_disconnect, NULL);
   5321D:	0114      	ld         al, #+0x1
   5321E:	0010      	ld         ah, #+0x0
   5321F:	FF00      	**prefx    0xFF
   53220:	E99C      	bsr        -0x117 <notifyApplication:0x53109[p]>
   53221:	5AE0      	bra        +0x5A <GAIAProcessCommand+0x123:0x5327B[p]>
            return TRUE;
            break;

        case GAIA_COMMAND_VM_UPGRADE_CONTROL:
            response = GAIA_STATUS_SUCCESS;
   53222:	0018      	ld         x, #+0x0
   53223:	042B      	st         x, @(+0x4, y)
            GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, &response);
   53224:	0114      	ld         al, #+0x1
   53225:	0027      	st         al, @(0x0, y)
   53226:	E419      	ld         x, @0xFFE4 <register uy>
   53227:	0438      	add        x, #+0x4
   53228:	012B      	st         x, @(+0x1, y)
   53229:	0717      	ld         al, @(+0x7, y)
   5322A:	8600      	**prefx    0x86
   5322B:	4210      	ld         ah, #-0x79BE
   5322C:	FF00      	**prefx    0xFF
   5322D:	009C      	bsr        -0x100 <GaiaSendPacket:0x5312D[p]>
            GaiaOtauHandleVmUpgradeControlCommand(device_id, payload_length, payload);
   5322E:	0317      	ld         al, @(+0x3, y)
   5322F:	0027      	st         al, @(0x0, y)
   53230:	0717      	ld         al, @(+0x7, y)
   53231:	0813      	ld         ah, @(+0x8, y)
   53232:	0500      	**prefx    0x5
   53233:	6C9C      	bsr        +0x56C <GaiaOtauHandleVmUpgradeControlCommand:0x5379F[p]>
   53234:	47E0      	bra        +0x47 <GAIAProcessCommand+0x123:0x5327B[p]>
            return TRUE;
            break;
#endif  /* GAIA_OTAU_SUPPORT */

        default:
            response = GAIA_STATUS_NOT_SUPPORTED;
   53235:	0118      	ld         x, #+0x1
   53236:	042B      	st         x, @(+0x4, y)
            GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, &response);
   53237:	8000      	**prefx    0x80
   53238:	00B0      	or         ah, #-0x8000
   53239:	002B      	st         x, @(0x0, y)
   5323A:	E415      	ld         al, @0xFFE4 <register uy>
   5323B:	0434      	add        al, #+0x4
   5323C:	0127      	st         al, @(+0x1, y)
   5323D:	3BE0      	bra        +0x3B <GAIAProcessCommand+0x120:0x53278[p]>
                                            uint16 payload_length,
                                            uint8 *payload)
{
    uint8 event_code;
    uint8 response[GAIA_COMMAND_NOTIFICATION_ACK_SIZE];
    event_code = payload[GAIA_COMMAND_NOTIFICATION_EVENT_OFFSET];
   5323E:	0B1B      	ld         x, @(+0xB, y)
   5323F:	0016      	ld         al, @(0x0, x)

    switch (command_id)
   53240:	4000      	**prefx    0x40
   53241:	0180      	cmp        ah, #+0x4001
   53242:	05F4      	beq        +0x5 <GAIAProcessCommand+0xEF:0x53247[p]>
   53243:	4000      	**prefx    0x40
   53244:	0380      	cmp        ah, #+0x4003
   53245:	25F0      	bne        +0x25 <GAIAProcessCommand+0x112:0x5326A[p]>
   53246:	11E0      	bra        +0x11 <GAIAProcessCommand+0xFF:0x53257[p]>
    {
        case GAIA_COMMAND_REGISTER_NOTIFICATION:
            {
                response[GAIA_COMMAND_NOTIFICATION_ACK_EVENT_OFFSET] = event_code;

                switch (event_code )
   53247:	1284      	cmp        al, #+0x12
   53248:	03F0      	bne        +0x3 <GAIAProcessCommand+0xF3:0x5324B[p]>
                {
                    case GAIA_EVENT_VMUP_PACKET:
                        response[GAIA_COMMAND_NOTIFICATION_ACK_STATUS_OFFSET] = GAIA_STATUS_SUCCESS;
   53249:	0018      	ld         x, #+0x0
   5324A:	02E0      	bra        +0x2 <GAIAProcessCommand+0xF4:0x5324C[p]>
                        break;

                    default:
                        response[GAIA_COMMAND_NOTIFICATION_ACK_STATUS_OFFSET] = GAIA_STATUS_INVALID_PARAMETER;
   5324B:	0518      	ld         x, #+0x5
   5324C:	052B      	st         x, @(+0x5, y)

    switch (command_id)
    {
        case GAIA_COMMAND_REGISTER_NOTIFICATION:
            {
                response[GAIA_COMMAND_NOTIFICATION_ACK_EVENT_OFFSET] = event_code;
   5324D:	0627      	st         al, @(+0x6, y)
                    default:
                        response[GAIA_COMMAND_NOTIFICATION_ACK_STATUS_OFFSET] = GAIA_STATUS_INVALID_PARAMETER;
                        break;
                }

                GaiaSendPacket( device_id,
   5324E:	0214      	ld         al, #+0x2
   5324F:	0027      	st         al, @(0x0, y)
   53250:	E419      	ld         x, @0xFFE4 <register uy>
   53251:	0538      	add        x, #+0x5
   53252:	012B      	st         x, @(+0x1, y)
   53253:	0717      	ld         al, @(+0x7, y)
   53254:	C000      	**prefx    0xC0
   53255:	0110      	ld         ah, #-0x3FFF
   53256:	23E0      	bra        +0x23 <GAIAProcessCommand+0x121:0x53279[p]>
                                response);
            }
            break;

        case GAIA_EVENT_NOTIFICATION:
            if(event_code == GAIA_EVENT_HOST_NOTIFICATION)
   53257:	1384      	cmp        al, #+0x13
   53258:	06F0      	bne        +0x6 <GAIAProcessCommand+0x106:0x5325E[p]>
            {
                response[0] = GAIA_STATUS_SUCCESS;
   53259:	0014      	ld         al, #+0x0
   5325A:	0527      	st         al, @(+0x5, y)

                /* copy the event type */
                response[1] = event_code;
   5325B:	1318      	ld         x, #+0x13
   5325C:	062B      	st         x, @(+0x6, y)
   5325D:	04E0      	bra        +0x4 <GAIAProcessCommand+0x109:0x53261[p]>
                GaiaEventParseNotification(payload_length, payload);
#endif                
            }
            else
            {
                response[0] = GAIA_STATUS_NOT_SUPPORTED;
   5325E:	0118      	ld         x, #+0x1
   5325F:	052B      	st         x, @(+0x5, y)

                /* return the event code. We don't bother as we support only
                 * one event
                 */
                response[1] = event_code;
   53260:	0627      	st         al, @(+0x6, y)

                GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 2, response);
   53261:	0214      	ld         al, #+0x2
   53262:	0027      	st         al, @(0x0, y)
   53263:	E419      	ld         x, @0xFFE4 <register uy>
   53264:	0538      	add        x, #+0x5
   53265:	012B      	st         x, @(+0x1, y)
   53266:	0717      	ld         al, @(+0x7, y)
   53267:	C000      	**prefx    0xC0
   53268:	0310      	ld         ah, #-0x3FFD
   53269:	10E0      	bra        +0x10 <GAIAProcessCommand+0x121:0x53279[p]>

            return TRUE;
            break;

        default:
            response[0] = GAIA_STATUS_NOT_SUPPORTED;
   5326A:	0114      	ld         al, #+0x1
   5326B:	0527      	st         al, @(+0x5, y)
            GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, response);
   5326C:	8000      	**prefx    0x80
   5326D:	00B0      	or         ah, #-0x8000
   5326E:	0027      	st         al, @(0x0, y)
   5326F:	E419      	ld         x, @0xFFE4 <register uy>
   53270:	0538      	add        x, #+0x5
   53271:	06E0      	bra        +0x6 <GAIAProcessCommand+0x11F:0x53277[p]>
            case GAIA_COMMAND_TYPE_NOTIFICATION:
                gaiaHandleNotificationCommand(device_id, command_id, payload_len, payload);
                break;

            default:
                response = GAIA_STATUS_NOT_SUPPORTED;
   53272:	0114      	ld         al, #+0x1
   53273:	0227      	st         al, @(+0x2, y)
                GaiaSendPacket(device_id, command_id | GAIA_ACK_MASK, 1, &response);
   53274:	0027      	st         al, @(0x0, y)
   53275:	E419      	ld         x, @0xFFE4 <register uy>
   53276:	0238      	add        x, #+0x2
   53277:	012B      	st         x, @(+0x1, y)
   53278:	0717      	ld         al, @(+0x7, y)
   53279:	FF00      	**prefx    0xFF
   5327A:	B39C      	bsr        -0x14D <GaiaSendPacket:0x5312D[p]>
                break;
        }
    }
}
   5327B:	F50F      	leave      #-0xB

0x0005327C <initStateVariables>:
 *  RETURNS:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void initStateVariables(void)
{
   5327C:	FE0B      	enter      #-0x2
   5327D:	0018      	ld         x, #+0x0
    int i;

    for ( i = 0; i < SHA256_SIZE_WORDS; i++ )
    {
        g_otau_data.oem_signature.sha256_sum[i] = 0;
   5327E:	0014      	ld         al, #+0x0
   5327F:	6400      	**prefx    0x64
   53280:	7126      	st         al, @(+0x6471, x)
 *----------------------------------------------------------------------------*/
static void initStateVariables(void)
{
    int i;

    for ( i = 0; i < SHA256_SIZE_WORDS; i++ )
   53281:	0138      	add        x, #+0x1
   53282:	1088      	cmp        x, #+0x10
   53283:	FBF0      	bne        -0x5 <initStateVariables+0x2:0x5327E[p]>
    {
        g_otau_data.oem_signature.sha256_sum[i] = 0;
    }

    g_otau_data.validation_done = FALSE;
   53284:	6400      	**prefx    0x64
   53285:	6025      	st         al, @0x6460 <g_otau_data+0x4>
    g_otau_data.bytes_transferred = 0;
   53286:	6400      	**prefx    0x64
   53287:	5E25      	st         al, @0x645E <g_otau_data+0x2>
   53288:	6400      	**prefx    0x64
   53289:	5F25      	st         al, @0x645F <g_otau_data+0x3>
    g_otau_data.data_transfer_state = data_transfer_state_header_id;
   5328A:	6400      	**prefx    0x64
   5328B:	5D25      	st         al, @0x645D <g_otau_data+0x1>
    g_otau_data.disconnect_reset = FALSE;
   5328C:	6400      	**prefx    0x64
   5328D:	6125      	st         al, @0x6461 <g_otau_data+0x5>
    g_otau_data.reboot_wait = FALSE;
   5328E:	6400      	**prefx    0x64
   5328F:	6225      	st         al, @0x6462 <g_otau_data+0x6>
    g_otau_data.partition.last_partition = FALSE;
   53290:	6400      	**prefx    0x64
   53291:	6E25      	st         al, @0x646E <g_otau_data+0x12>
}
   53292:	FE0F      	leave      #-0x2

0x00053293 <notifyApplication>:
 *  RETURNS
 *      Return status of the callback
 *
 *---------------------------------------------------------------------------*/
static sys_status notifyApplication(gaia_otau_event event, GAIA_OTAU_EVENT_T *data)
{
   53293:	FE0B      	enter      #-0x2
   53294:	E119      	ld         x, @0xFFE1 <register al>
    if (g_otau_data.callback != NULL)
   53295:	6500      	**prefx    0x65
   53296:	9A15      	ld         al, @0x649A <___libgatt_lib_db_642+0x16>
   53297:	F925      	st         al, @0xFFF9 <(scratchpad)>
   53298:	6500      	**prefx    0x65
   53299:	9915      	ld         al, @0x6499 <___libgatt_lib_db_642+0x15>
   5329A:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5329B:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   5329C:	04F0      	bne        +0x4 <notifyApplication+0xD:0x532A0[p]>
   5329D:	0C00      	**prefx    0xC
   5329E:	0014      	ld         al, #+0xC00
   5329F:	08E0      	bra        +0x8 <notifyApplication+0x14:0x532A7[p]>
    {
        return g_otau_data.callback(event, data);
   532A0:	E315      	ld         al, @0xFFE3 <register uxl>
   532A1:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   532A2:	FE2B      	st         x, @(-0x2, y)
   532A3:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   532A4:	FF2B      	st         x, @(-0x1, y)
   532A5:	FF0E      	ld         xh, @(-0x1, y)
   532A6:	FE9F      	bsr        @(-0x2, y)
    }

    return sys_status_failed;
}
   532A7:	FE0F      	leave      #-0x2

0x000532A8 <notifyApplicationRebootWarning>:
 *  RETURNS
 *      None
 *
 *---------------------------------------------------------------------------*/
static void notifyApplicationRebootWarning(void)
{
   532A8:	F90B      	enter      #-0x7
    GAIA_OTAU_EVENT_T event_data;

    event_data.reboot_warning.reboot_wait = FALSE;
   532A9:	0014      	ld         al, #+0x0
   532AA:	0027      	st         al, @(0x0, y)
    notifyApplication(gaia_otau_event_reboot_warning, &event_data);
   532AB:	0414      	ld         al, #+0x4
   532AC:	E411      	ld         ah, @0xFFE4 <register uy>
   532AD:	E69C      	bsr        -0x1A <notifyApplication:0x53293[p]>
    g_otau_data.reboot_wait = event_data.reboot_warning.reboot_wait;
   532AE:	0017      	ld         al, @(0x0, y)
   532AF:	6400      	**prefx    0x64
   532B0:	6225      	st         al, @0x6462 <g_otau_data+0x6>
}
   532B1:	F90F      	leave      #-0x7

0x000532B2 <isNewApp>:
 *              yet committed
 *      FALSE - the application is the "original" application
 *
 *----------------------------------------------------------------------------*/
static bool isNewApp(void)
{
   532B2:	0010      	ld         ah, #+0x0
   532B3:	6400      	**prefx    0x64
   532B4:	6315      	ld         al, @0x6463 <g_otau_data+0x7>
   532B5:	6400      	**prefx    0x64
   532B6:	6585      	cmp        al, @0x6465 <g_otau_data+0x9>
   532B7:	02F4      	beq        +0x2 <isNewApp+0x7:0x532B9[p]>
   532B8:	0110      	ld         ah, #+0x1
    return (g_otau_data.app_id != g_otau_data.cs_id);
}
   532B9:	E015      	ld         al, @0xFFE0 <register ah>
   532BA:	00E2      	bra        0x0, x

0x000532BB <getAppStoreToUpgrade>:
 *
 *  RETURNS
 *      None
 *---------------------------------------------------------------------------*/
static store_id_t getAppStoreToUpgrade(store_id_t app_id, store_id_t cs_id)
{
   532BB:	FE0B      	enter      #-0x2
    store_id_t next_store;

    if ( g_otau_data.app_id == UPGRADE_STORE_APPID_LAST )
   532BC:	6400      	**prefx    0x64
   532BD:	6315      	ld         al, @0x6463 <g_otau_data+0x7>
   532BE:	0284      	cmp        al, #+0x2
   532BF:	05F0      	bne        +0x5 <getAppStoreToUpgrade+0x9:0x532C4[p]>
    {
        if ( isNewApp() )    /* stage 2 commit stage */
   532C0:	F29C      	bsr        -0xE <isNewApp:0x532B2[p]>
   532C1:	E199      	tst        @0xFFE1 <register al>
   532C2:	07F0      	bne        +0x7 <getAppStoreToUpgrade+0xE:0x532C9[p]>
   532C3:	04E0      	bra        +0x4 <getAppStoreToUpgrade+0xC:0x532C7[p]>
            next_store = UPGRADE_STORE_APPID_FIRST;
        }
    }
    else  /* is FIRST */
    {
        if ( isNewApp() )    /* stage 2 commit stage */
   532C4:	EE9C      	bsr        -0x12 <isNewApp:0x532B2[p]>
   532C5:	E199      	tst        @0xFFE1 <register al>
   532C6:	03F4      	beq        +0x3 <getAppStoreToUpgrade+0xE:0x532C9[p]>
   532C7:	0114      	ld         al, #+0x1
   532C8:	02E0      	bra        +0x2 <getAppStoreToUpgrade+0xF:0x532CA[p]>
   532C9:	0214      	ld         al, #+0x2
        {
            next_store = UPGRADE_STORE_APPID_LAST;
        }
    }
    return next_store;
}
   532CA:	FE0F      	leave      #-0x2

0x000532CB <GaiaOtauConfigStoreMsg>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void GaiaOtauConfigStoreMsg(msg_t *msg)
{
   532CB:	FE0B      	enter      #-0x2
   532CC:	E119      	ld         x, @0xFFE1 <register al>
    configstore_msg_t *cs_msg = (configstore_msg_t*)msg;

    switch(msg->header.id)
   532CD:	0316      	ld         al, @(+0x3, x)
   532CE:	0200      	**prefx    0x2
   532CF:	0184      	cmp        al, #+0x201
   532D0:	14F0      	bne        +0x14 <GaiaOtauConfigStoreMsg+0x19:0x532E4[p]>
         * This will be returned when the GAIA OTAu library is initialised
         * and the CS key is read.
         */
        case CONFIG_STORE_READ_KEY_CFM:
        {
            if(cs_msg->body.read_key_cfm.status == STATUS_SUCCESS)
   532D1:	049A      	tst        @(+0x4, x)
   532D2:	12F0      	bne        +0x12 <GaiaOtauConfigStoreMsg+0x19:0x532E4[p]>
            {
                if(cs_msg->body.read_key_cfm.id == CS_ID_APP_STORE_ID)
   532D3:	0516      	ld         al, @(+0x5, x)
   532D4:	2384      	cmp        al, #+0x23
   532D5:	0FF0      	bne        +0xF <GaiaOtauConfigStoreMsg+0x19:0x532E4[p]>
                {
                    g_otau_data.cs_id_read = TRUE;
   532D6:	0114      	ld         al, #+0x1
   532D7:	6400      	**prefx    0x64
   532D8:	6425      	st         al, @0x6464 <g_otau_data+0x8>
                    g_otau_data.cs_id = cs_msg->body.read_key_cfm.value[0];
   532D9:	091A      	ld         x, @(+0x9, x)
   532DA:	6400      	**prefx    0x64
   532DB:	6529      	st         x, @0x6465 <g_otau_data+0x9>
                    g_otau_data.transfer_state = CTRL_WAIT_FOR_HOST;
   532DC:	6400      	**prefx    0x64
   532DD:	5C25      	st         al, @0x645C <g_otau_data>

                    /* notify the application if this is the new application */
                    if ( isNewApp() )
   532DE:	D49C      	bsr        -0x2C <isNewApp:0x532B2[p]>
   532DF:	E199      	tst        @0xFFE1 <register al>
   532E0:	04F4      	beq        +0x4 <GaiaOtauConfigStoreMsg+0x19:0x532E4[p]>
                    {
                        notifyApplication(gaia_otau_event_upgraded_application, NULL);
   532E1:	0514      	ld         al, #+0x5
   532E2:	0010      	ld         ah, #+0x0
   532E3:	B09C      	bsr        -0x50 <notifyApplication:0x53293[p]>
            break;

        default:
            break;
    }
}
   532E4:	FE0F      	leave      #-0x2

0x000532E5 <GaiaOtauRegisterCallback>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void GaiaOtauRegisterCallback(gaia_otau_event_handler callback)
{
    g_otau_data.callback = callback;
   532E5:	6500      	**prefx    0x65
   532E6:	9A25      	st         al, @0x649A <___libgatt_lib_db_642+0x16>
   532E7:	6500      	**prefx    0x65
   532E8:	9921      	st         ah, @0x6499 <___libgatt_lib_db_642+0x15>
}
   532E9:	00E2      	bra        0x0, x

0x000532EA <GaiaOtauHandleConnNotify>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void GaiaOtauHandleConnNotify(CM_CONNECTION_NOTIFY_T *cm_event_data)
{
   532EA:	FE0B      	enter      #-0x2
   532EB:	E119      	ld         x, @0xFFE1 <register al>
    if(cm_event_data->result == cm_conn_res_success)
   532EC:	0116      	ld         al, @(+0x1, x)
   532ED:	0BF0      	bne        +0xB <GaiaOtauHandleConnNotify+0xE:0x532F8[p]>
    {
        /* Initialise g_otau_data */
        if ( g_otau_data.cs_id_read == FALSE )
   532EE:	6400      	**prefx    0x64
   532EF:	6499      	tst        @0x6464 <g_otau_data+0x8>
   532F0:	03F0      	bne        +0x3 <GaiaOtauHandleConnNotify+0x9:0x532F3[p]>
        {
            g_otau_data.transfer_state = CTRL_PRE_FAIL; /* assume failure until CS store keys can be read */
   532F1:	0A14      	ld         al, #+0xA
   532F2:	02E0      	bra        +0x2 <GaiaOtauHandleConnNotify+0xA:0x532F4[p]>
        }
        else
        {
            g_otau_data.transfer_state = CTRL_WAIT_FOR_HOST;
   532F3:	0114      	ld         al, #+0x1
   532F4:	6400      	**prefx    0x64
   532F5:	5C25      	st         al, @0x645C <g_otau_data>
        }
        initStateVariables();
   532F6:	869C      	bsr        -0x7A <initStateVariables:0x5327C[p]>
   532F7:	11E0      	bra        +0x11 <GaiaOtauHandleConnNotify+0x1E:0x53308[p]>
    }
    else if(cm_event_data->result == cm_disconn_res_success)
   532F8:	0384      	cmp        al, #+0x3
   532F9:	0FF0      	bne        +0xF <GaiaOtauHandleConnNotify+0x1E:0x53308[p]>
        /*
         * The reason for this disconnection could have been because the
         * the OTAu library is going to run the new application for the first time
         * or if an abort occurred while running the new application.
         */
        if ( g_otau_data.disconnect_reset == TRUE )
   532FA:	6400      	**prefx    0x64
   532FB:	6115      	ld         al, @0x6461 <g_otau_data+0x5>
   532FC:	0184      	cmp        al, #+0x1
   532FD:	0BF0      	bne        +0xB <GaiaOtauHandleConnNotify+0x1E:0x53308[p]>
        {
            if ( g_otau_data.reboot_wait )
   532FE:	6400      	**prefx    0x64
   532FF:	6299      	tst        @0x6462 <g_otau_data+0x6>
   53300:	05F4      	beq        +0x5 <GaiaOtauHandleConnNotify+0x1B:0x53305[p]>
            {
                g_otau_data.transfer_state = CTRL_WAITING_TO_REBOOT;
   53301:	0B14      	ld         al, #+0xB
   53302:	6400      	**prefx    0x64
   53303:	5C25      	st         al, @0x645C <g_otau_data>
   53304:	04E0      	bra        +0x4 <GaiaOtauHandleConnNotify+0x1E:0x53308[p]>
            } else
            {
                WarmReset();
   53305:	FC00      	**prefx    0xFC
   53306:	8200      	**prefx    0x82
   53307:	D09C      	bsr        -0x47E30 <WarmReset:0xB4D7[p]>
            }
        }
    }
}
   53308:	FE0F      	leave      #-0x2

0x00053309 <setDefaultNVM>:
 *  RETURNS:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void setDefaultNVM(void)
{
   53309:	FC0B      	enter      #-0x4
    /* Write GAIA OTAu InProgressIdentifier config */
    g_otau_data.InProgressIdentifier = GAIA_IN_PROGRESS_IDENTIFIER_DEFAULT;
   5330A:	6500      	**prefx    0x65
   5330B:	9414      	ld         al, #+0x6494
   5330C:	0127      	st         al, @(+0x1, y)
   5330D:	0014      	ld         al, #+0x0
   5330E:	011B      	ld         x, @(+0x1, y)
   5330F:	0026      	st         al, @(0x0, x)
   53310:	0126      	st         al, @(+0x1, x)
    Nvm_Write((uint16*)&g_otau_data.InProgressIdentifier,
   53311:	FF1A      	ld         x, @(-0x1, x)
   53312:	002B      	st         x, @(0x0, y)
   53313:	0117      	ld         al, @(+0x1, y)
   53314:	0210      	ld         ah, #+0x2
   53315:	D500      	**prefx    0xD5
   53316:	2F9C      	bsr        -0x2AD1 <Nvm_Write:0x50845[p]>
             sizeof(g_otau_data.InProgressIdentifier),
             g_otau_data.nvm_offset + GAIA_NVM_IN_PROGRESS_IDENTIFIER_OFFSET);

    /* Write GAIA OTAu Resume Point config */
    g_otau_data.resume_point = GAIA_RESUME_POINT_DEFAULT;
   53317:	0014      	ld         al, #+0x0
   53318:	011B      	ld         x, @(+0x1, y)
   53319:	D326      	st         al, @(-0x2D, x)
    Nvm_Write((uint16*)&g_otau_data.resume_point,
   5331A:	FF16      	ld         al, @(-0x1, x)
   5331B:	0234      	add        al, #+0x2
   5331C:	0027      	st         al, @(0x0, y)
    Nvm_Write((uint16*)&g_otau_data.InProgressIdentifier,
             sizeof(g_otau_data.InProgressIdentifier),
             g_otau_data.nvm_offset + GAIA_NVM_IN_PROGRESS_IDENTIFIER_OFFSET);

    /* Write GAIA OTAu Resume Point config */
    g_otau_data.resume_point = GAIA_RESUME_POINT_DEFAULT;
   5331D:	D338      	add        x, #-0x2D
    Nvm_Write((uint16*)&g_otau_data.resume_point,
   5331E:	E315      	ld         al, @0xFFE3 <register uxl>
   5331F:	0110      	ld         ah, #+0x1
   53320:	D500      	**prefx    0xD5
   53321:	249C      	bsr        -0x2ADC <Nvm_Write:0x50845[p]>
             sizeof(g_otau_data.resume_point),
             g_otau_data.nvm_offset + GAIA_NVM_RESUME_POINT_OFFSET);
}
   53322:	FC0F      	leave      #-0x4

0x00053323 <hostCommitTimeoutHandler>:
 *  RETURNS
 *      none
 *
 *---------------------------------------------------------------------------*/
static void hostCommitTimeoutHandler(timer_id tid)
{
   53323:	FE0B      	enter      #-0x2
    g_otau_data.commit_timeout_tid = TIMER_INVALID;
   53324:	0014      	ld         al, #+0x0
   53325:	6500      	**prefx    0x65
   53326:	9B25      	st         al, @0x649B <___libgatt_lib_db_642+0x17>
    setDefaultNVM();
   53327:	E29C      	bsr        -0x1E <setDefaultNVM:0x53309[p]>
    g_otau_data.transfer_state = CTRL_WAITING_TO_REBOOT;
   53328:	0B14      	ld         al, #+0xB
   53329:	6400      	**prefx    0x64
   5332A:	5C25      	st         al, @0x645C <g_otau_data>
    notifyApplication(gaia_otau_event_upgrade_failed, NULL);
   5332B:	0714      	ld         al, #+0x7
   5332C:	0010      	ld         ah, #+0x0
   5332D:	FF00      	**prefx    0xFF
   5332E:	659C      	bsr        -0x9B <notifyApplication:0x53293[p]>
    notifyApplicationRebootWarning();
   5332F:	FF00      	**prefx    0xFF
   53330:	789C      	bsr        -0x88 <notifyApplicationRebootWarning:0x532A8[p]>

    /* reboot, unless the application blocks it temporarily */
    if ( !g_otau_data.reboot_wait )
   53331:	6400      	**prefx    0x64
   53332:	6299      	tst        @0x6462 <g_otau_data+0x6>
   53333:	04F0      	bne        +0x4 <hostCommitTimeoutHandler+0x14:0x53337[p]>
    {
        WarmReset();
   53334:	FC00      	**prefx    0xFC
   53335:	8200      	**prefx    0x82
   53336:	A19C      	bsr        -0x47E5F <WarmReset:0xB4D7[p]>
    }
}
   53337:	FE0F      	leave      #-0x2

0x00053338 <upgradeDeviceSendErrorInd>:
 *
 *  RETURNS
 *      None
 *---------------------------------------------------------------------------*/
static void upgradeDeviceSendErrorInd(device_handle_id device_id, uint16 error_code)
{
   53338:	F20B      	enter      #-0xE
   53339:	0A27      	st         al, @(+0xA, y)
   5333A:	0B23      	st         ah, @(+0xB, y)
    uint16 byte_index;
    uint8 response[VM_UPGRADE_MSG_SIZE + UPGRADE_ERROR_IND_PAYLOAD_SIZE];

    byte_index = 0;
    byte_index += SetUint8InArray(response,byte_index,GAIA_EVENT_VMUP_PACKET);
   5333B:	1214      	ld         al, #+0x12
   5333C:	0027      	st         al, @(0x0, y)
   5333D:	E415      	ld         al, @0xFFE4 <register uy>
   5333E:	0234      	add        al, #+0x2
   5333F:	0010      	ld         ah, #+0x0
   53340:	FD00      	**prefx    0xFD
   53341:	509C      	bsr        -0x2B0 <SetUint8InArray:0x53091[p]>
   53342:	0927      	st         al, @(+0x9, y)
    byte_index += SetUint8InArray(response,byte_index,UPGRADE_HOST_ERRORWARN_IND);
   53343:	1114      	ld         al, #+0x11
   53344:	0027      	st         al, @(0x0, y)
   53345:	E415      	ld         al, @0xFFE4 <register uy>
   53346:	0234      	add        al, #+0x2
   53347:	0913      	ld         ah, @(+0x9, y)
   53348:	FD00      	**prefx    0xFD
   53349:	489C      	bsr        -0x2B8 <SetUint8InArray:0x53091[p]>
   5334A:	0937      	add        al, @(+0x9, y)
   5334B:	0827      	st         al, @(+0x8, y)
    byte_index += SetUint16InArray(response,byte_index,UPGRADE_ERROR_IND_PAYLOAD_SIZE);
   5334C:	0214      	ld         al, #+0x2
   5334D:	0027      	st         al, @(0x0, y)
   5334E:	E415      	ld         al, @0xFFE4 <register uy>
   5334F:	0234      	add        al, #+0x2
   53350:	0813      	ld         ah, @(+0x8, y)
   53351:	FD00      	**prefx    0xFD
   53352:	469C      	bsr        -0x2BA <SetUint16InArray:0x53098[p]>
    byte_index += SetUint16InArray(response,byte_index,error_code);
   53353:	0837      	add        al, @(+0x8, y)
   53354:	0827      	st         al, @(+0x8, y)
   53355:	0B17      	ld         al, @(+0xB, y)
   53356:	0027      	st         al, @(0x0, y)
   53357:	E415      	ld         al, @0xFFE4 <register uy>
   53358:	0234      	add        al, #+0x2
   53359:	0813      	ld         ah, @(+0x8, y)
   5335A:	FD00      	**prefx    0xFD
   5335B:	3D9C      	bsr        -0x2C3 <SetUint16InArray:0x53098[p]>

    GaiaSendPacket( device_id,
   5335C:	0614      	ld         al, #+0x6
   5335D:	0027      	st         al, @(0x0, y)
   5335E:	E415      	ld         al, @0xFFE4 <register uy>
   5335F:	0234      	add        al, #+0x2
   53360:	0127      	st         al, @(+0x1, y)
   53361:	0A17      	ld         al, @(+0xA, y)
   53362:	4000      	**prefx    0x40
   53363:	0310      	ld         ah, #+0x4003
   53364:	FE00      	**prefx    0xFE
   53365:	C89C      	bsr        -0x238 <GaiaSendPacket:0x5312D[p]>
                    GAIA_EVENT_NOTIFICATION,
                    VM_UPGRADE_MSG_SIZE + UPGRADE_ERROR_IND_PAYLOAD_SIZE,
                    response);

    notifyApplication(gaia_otau_event_upgrade_failed, NULL);
   53366:	0714      	ld         al, #+0x7
   53367:	0010      	ld         ah, #+0x0
   53368:	FF00      	**prefx    0xFF
   53369:	2A9C      	bsr        -0xD6 <notifyApplication:0x53293[p]>
}
   5336A:	F20F      	leave      #-0xE

0x0005336B <handleVmUpgradeHostSyncReq>:
        }
    }
}

static void handleVmUpgradeHostSyncReq(void)
{
   5336B:	EB0B      	enter      #-0x15
    if ( g_otau_data.new_in_progress_id == GAIA_IN_PROGRESS_IDENTIFIER_NONE )
   5336C:	6500      	**prefx    0x65
   5336D:	9611      	ld         ah, @0x6496 <___libgatt_lib_db_642+0x12>
   5336E:	6500      	**prefx    0x65
   5336F:	9715      	ld         al, @0x6497 <___libgatt_lib_db_642+0x13>
   53370:	FB25      	st         al, @0xFFFB <(scratchpad)>
   53371:	E015      	ld         al, @0xFFE0 <register ah>
   53372:	FBB5      	or         al, @0xFFFB <(scratchpad)>
   53373:	05F0      	bne        +0x5 <handleVmUpgradeHostSyncReq+0xD:0x53378[p]>
    {
        upgradeDeviceSendErrorInd(g_otau_data.device_id, UPGRADE_HOST_ERROR_INVALID_SYNC_ID);
   53374:	6500      	**prefx    0x65
   53375:	9815      	ld         al, @0x6498 <___libgatt_lib_db_642+0x14>
   53376:	2210      	ld         ah, #+0x22
   53377:	6DE0      	bra        +0x6D <handleVmUpgradeHostSyncReq+0x79:0x533E4[p]>
    }
    else if (   g_otau_data.InProgressIdentifier == GAIA_IN_PROGRESS_IDENTIFIER_NONE ||
   53378:	6500      	**prefx    0x65
   53379:	9418      	ld         x, #+0x6494
   5337A:	FA29      	st         x, @0xFFFA <(scratchpad)>
   5337B:	6500      	**prefx    0x65
   5337C:	9415      	ld         al, @0x6494 <___libgatt_lib_db_642+0x10>
   5337D:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5337E:	6500      	**prefx    0x65
   5337F:	9519      	ld         x, @0x6495 <___libgatt_lib_db_642+0x11>
   53380:	E3B5      	or         al, @0xFFE3 <register uxl>
   53381:	07F4      	beq        +0x7 <handleVmUpgradeHostSyncReq+0x1D:0x53388[p]>
   53382:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   53383:	E085      	cmp        al, @0xFFE0 <register ah>
   53384:	5CF0      	bne        +0x5C <handleVmUpgradeHostSyncReq+0x75:0x533E0[p]>
   53385:	FB89      	cmp        x, @0xFFFB <(scratchpad)>
   53386:	5AF0      	bne        +0x5A <handleVmUpgradeHostSyncReq+0x75:0x533E0[p]>
   53387:	0DE0      	bra        +0xD <handleVmUpgradeHostSyncReq+0x29:0x53394[p]>
                g_otau_data.InProgressIdentifier == g_otau_data.new_in_progress_id )
    {
        if ( g_otau_data.InProgressIdentifier == GAIA_IN_PROGRESS_IDENTIFIER_NONE )
        {
            g_otau_data.InProgressIdentifier = g_otau_data.new_in_progress_id;
   53388:	6500      	**prefx    0x65
   53389:	9421      	st         ah, @0x6494 <___libgatt_lib_db_642+0x10>
   5338A:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   5338B:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5338C:	0126      	st         al, @(+0x1, x)
            Nvm_Write((uint16*)&g_otau_data.InProgressIdentifier,
   5338D:	6500      	**prefx    0x65
   5338E:	9319      	ld         x, @0x6493 <___libgatt_lib_db_642+0xF>
   5338F:	002B      	st         x, @(0x0, y)
   53390:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   53391:	0210      	ld         ah, #+0x2
   53392:	D500      	**prefx    0xD5
   53393:	B29C      	bsr        -0x2B4E <Nvm_Write:0x50845[p]>
                    sizeof(g_otau_data.InProgressIdentifier),
                    g_otau_data.nvm_offset + GAIA_NVM_IN_PROGRESS_IDENTIFIER_OFFSET);
        }

        upgradeDeviceSendSyncCfm(g_otau_data.device_id, g_otau_data.InProgressIdentifier);
   53394:	6500      	**prefx    0x65
   53395:	9815      	ld         al, @0x6498 <___libgatt_lib_db_642+0x14>
   53396:	0E27      	st         al, @(+0xE, y)
   53397:	6500      	**prefx    0x65
   53398:	9519      	ld         x, @0x6495 <___libgatt_lib_db_642+0x11>
   53399:	122B      	st         x, @(+0x12, y)
   5339A:	6500      	**prefx    0x65
   5339B:	9415      	ld         al, @0x6494 <___libgatt_lib_db_642+0x10>
   5339C:	1127      	st         al, @(+0x11, y)
{
    uint16 byte_index;
    uint8 response[VM_UPGRADE_MSG_SIZE + UPGRADE_HOST_SYNC_CFM_BYTE_SIZE];

    byte_index = 0;
    byte_index += SetUint8InArray(response,byte_index,GAIA_EVENT_VMUP_PACKET);
   5339D:	1218      	ld         x, #+0x12
   5339E:	002B      	st         x, @(0x0, y)
   5339F:	E415      	ld         al, @0xFFE4 <register uy>
   533A0:	0234      	add        al, #+0x2
   533A1:	0010      	ld         ah, #+0x0
   533A2:	FD00      	**prefx    0xFD
   533A3:	EE9C      	bsr        -0x312 <SetUint8InArray:0x53091[p]>
   533A4:	0F27      	st         al, @(+0xF, y)
    byte_index += SetUint8InArray(response,byte_index,UPGRADE_HOST_SYNC_CFM);
   533A5:	1414      	ld         al, #+0x14
   533A6:	0027      	st         al, @(0x0, y)
   533A7:	E415      	ld         al, @0xFFE4 <register uy>
   533A8:	0234      	add        al, #+0x2
   533A9:	0F13      	ld         ah, @(+0xF, y)
   533AA:	FD00      	**prefx    0xFD
   533AB:	E69C      	bsr        -0x31A <SetUint8InArray:0x53091[p]>
   533AC:	0F37      	add        al, @(+0xF, y)
   533AD:	1027      	st         al, @(+0x10, y)
    byte_index += SetUint16InArray(response,byte_index,UPGRADE_HOST_SYNC_CFM_BYTE_SIZE);
   533AE:	0618      	ld         x, #+0x6
   533AF:	002B      	st         x, @(0x0, y)
   533B0:	E415      	ld         al, @0xFFE4 <register uy>
   533B1:	0234      	add        al, #+0x2
   533B2:	1013      	ld         ah, @(+0x10, y)
   533B3:	FD00      	**prefx    0xFD
   533B4:	E49C      	bsr        -0x31C <SetUint16InArray:0x53098[p]>
   533B5:	101B      	ld         x, @(+0x10, y)
   533B6:	E139      	add        x, @0xFFE1 <register al>
   533B7:	0D2B      	st         x, @(+0xD, y)
    /*
     * There are two resume states supported:
     * (1) UPGRADE_RESUME_POINT_START, resume point 0
     * (2) UPGRADE_RESUME_POINT_POST_REBOOT, resume point 3
     */
    byte_index += SetUint8InArray(response, byte_index, g_otau_data.resume_point);
   533B8:	6400      	**prefx    0x64
   533B9:	6715      	ld         al, @0x6467 <g_otau_data+0xB>
   533BA:	0027      	st         al, @(0x0, y)
   533BB:	E415      	ld         al, @0xFFE4 <register uy>
   533BC:	0234      	add        al, #+0x2
   533BD:	E311      	ld         ah, @0xFFE3 <register uxl>
   533BE:	FD00      	**prefx    0xFD
   533BF:	D29C      	bsr        -0x32E <SetUint8InArray:0x53091[p]>
   533C0:	0D1B      	ld         x, @(+0xD, y)
   533C1:	E139      	add        x, @0xFFE1 <register al>
   533C2:	0C2B      	st         x, @(+0xC, y)

    byte_index += SetUint32InArray(response, byte_index, in_progress_id);
   533C3:	1217      	ld         al, @(+0x12, y)
   533C4:	0127      	st         al, @(+0x1, y)
   533C5:	111B      	ld         x, @(+0x11, y)
   533C6:	002B      	st         x, @(0x0, y)
   533C7:	E415      	ld         al, @0xFFE4 <register uy>
   533C8:	0234      	add        al, #+0x2
   533C9:	0C13      	ld         ah, @(+0xC, y)
   533CA:	FD00      	**prefx    0xFD
   533CB:	DA9C      	bsr        -0x326 <SetUint32InArray:0x530A5[p]>
    byte_index += SetUint8InArray(response, byte_index, PROTOCOL_CURRENT_VERSION);
   533CC:	0C37      	add        al, @(+0xC, y)
   533CD:	0C27      	st         al, @(+0xC, y)
   533CE:	0314      	ld         al, #+0x3
   533CF:	0027      	st         al, @(0x0, y)
   533D0:	E415      	ld         al, @0xFFE4 <register uy>
   533D1:	0234      	add        al, #+0x2
   533D2:	0C13      	ld         ah, @(+0xC, y)
   533D3:	FD00      	**prefx    0xFD
   533D4:	BD9C      	bsr        -0x343 <SetUint8InArray:0x53091[p]>

    GaiaSendPacket( device_id,
   533D5:	0A18      	ld         x, #+0xA
   533D6:	002B      	st         x, @(0x0, y)
   533D7:	E415      	ld         al, @0xFFE4 <register uy>
   533D8:	0234      	add        al, #+0x2
   533D9:	0127      	st         al, @(+0x1, y)
   533DA:	0E17      	ld         al, @(+0xE, y)
   533DB:	4000      	**prefx    0x40
   533DC:	0310      	ld         ah, #+0x4003
   533DD:	FD00      	**prefx    0xFD
   533DE:	4F9C      	bsr        -0x2B1 <GaiaSendPacket:0x5312D[p]>
   533DF:	07E0      	bra        +0x7 <handleVmUpgradeHostSyncReq+0x7B:0x533E6[p]>

        upgradeDeviceSendSyncCfm(g_otau_data.device_id, g_otau_data.InProgressIdentifier);
    }
    else  /* In Progress Identifiers do not match */
    {
        upgradeDeviceSendErrorInd(g_otau_data.device_id, UPGRADE_HOST_WARN_SYNC_ID_IS_DIFFERENT);
   533E0:	6500      	**prefx    0x65
   533E1:	9815      	ld         al, @0x6498 <___libgatt_lib_db_642+0x14>
   533E2:	0100      	**prefx    0x1
   533E3:	8110      	ld         ah, #+0x81
   533E4:	FF00      	**prefx    0xFF
   533E5:	539C      	bsr        -0xAD <upgradeDeviceSendErrorInd:0x53338[p]>
    }

    g_otau_data.transfer_state = CTRL_WAIT_FOR_HOST;
   533E6:	0118      	ld         x, #+0x1
   533E7:	6400      	**prefx    0x64
   533E8:	5C29      	st         x, @0x645C <g_otau_data>
}
   533E9:	EB0F      	leave      #-0x15

0x000533EA <GaiaOtauContinueUpgrade>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void GaiaOtauContinueUpgrade(void)
{
   533EA:	FE0B      	enter      #-0x2
    switch ( g_otau_data.transfer_state )
   533EB:	6400      	**prefx    0x64
   533EC:	5C15      	ld         al, @0x645C <g_otau_data>
   533ED:	0284      	cmp        al, #+0x2
   533EE:	04F4      	beq        +0x4 <GaiaOtauContinueUpgrade+0x8:0x533F2[p]>
   533EF:	0B84      	cmp        al, #+0xB
   533F0:	08F0      	bne        +0x8 <GaiaOtauContinueUpgrade+0xE:0x533F8[p]>
   533F1:	04E0      	bra        +0x4 <GaiaOtauContinueUpgrade+0xB:0x533F5[p]>
    {
        case CTRL_WAIT_FOR_DEVICE:
            handleVmUpgradeHostSyncReq();
   533F2:	FF00      	**prefx    0xFF
   533F3:	789C      	bsr        -0x88 <handleVmUpgradeHostSyncReq:0x5336B[p]>
   533F4:	04E0      	bra        +0x4 <GaiaOtauContinueUpgrade+0xE:0x533F8[p]>
            break;

        case CTRL_WAITING_TO_REBOOT:
            WarmReset();
   533F5:	FC00      	**prefx    0xFC
   533F6:	8100      	**prefx    0x81
   533F7:	E09C      	bsr        -0x47F20 <WarmReset:0xB4D7[p]>
            break;

        default:
            break;
    }
}
   533F8:	FE0F      	leave      #-0x2

0x000533F9 <upgradeDeviceSendDataBytesReq>:
 *
 *  RETURNS
 *      None
 *---------------------------------------------------------------------------*/
static void upgradeDeviceSendDataBytesReq(device_handle_id device_id, uint32 num_bytes)
{
   533F9:	015C      	sub        y, #+0x1
   533FA:	EA0B      	enter      #-0x16
   533FB:	1127      	st         al, @(+0x11, y)
   533FC:	1623      	st         ah, @(+0x16, y)
   533FD:	1717      	ld         al, @(+0x17, y)
   533FE:	1327      	st         al, @(+0x13, y)
   533FF:	1223      	st         ah, @(+0x12, y)
    uint16 byte_index;
    uint8 response[VM_UPGRADE_MSG_SIZE + UPGRADE_HOST_DATA_BYTES_REQ_BYTE_SIZE];
    uint32 start_offset = 0;

    byte_index = 0;
    byte_index += SetUint8InArray(response,byte_index,GAIA_EVENT_VMUP_PACKET);
   53400:	1214      	ld         al, #+0x12
   53401:	0027      	st         al, @(0x0, y)
   53402:	E415      	ld         al, @0xFFE4 <register uy>
   53403:	0234      	add        al, #+0x2
   53404:	0010      	ld         ah, #+0x0
   53405:	FD00      	**prefx    0xFD
   53406:	8B9C      	bsr        -0x375 <SetUint8InArray:0x53091[p]>
   53407:	1027      	st         al, @(+0x10, y)
    byte_index += SetUint8InArray(response,byte_index,UPGRADE_HOST_DATA_BYTES_REQ);
   53408:	0314      	ld         al, #+0x3
   53409:	0027      	st         al, @(0x0, y)
   5340A:	E415      	ld         al, @0xFFE4 <register uy>
   5340B:	0234      	add        al, #+0x2
   5340C:	1013      	ld         ah, @(+0x10, y)
   5340D:	FD00      	**prefx    0xFD
   5340E:	839C      	bsr        -0x37D <SetUint8InArray:0x53091[p]>
   5340F:	1037      	add        al, @(+0x10, y)
   53410:	0F27      	st         al, @(+0xF, y)
    byte_index += SetUint16InArray(response,byte_index,UPGRADE_HOST_DATA_BYTES_REQ_BYTE_SIZE);
   53411:	0814      	ld         al, #+0x8
   53412:	0027      	st         al, @(0x0, y)
   53413:	E415      	ld         al, @0xFFE4 <register uy>
   53414:	0234      	add        al, #+0x2
   53415:	0F13      	ld         ah, @(+0xF, y)
   53416:	FD00      	**prefx    0xFD
   53417:	819C      	bsr        -0x37F <SetUint16InArray:0x53098[p]>
   53418:	0E27      	st         al, @(+0xE, y)
   53419:	0F17      	ld         al, @(+0xF, y)
   5341A:	0E37      	add        al, @(+0xE, y)
   5341B:	0E27      	st         al, @(+0xE, y)
    byte_index += SetUint32InArray(response,byte_index,num_bytes);
   5341C:	1317      	ld         al, @(+0x13, y)
   5341D:	0127      	st         al, @(+0x1, y)
   5341E:	1217      	ld         al, @(+0x12, y)
   5341F:	0027      	st         al, @(0x0, y)
   53420:	E415      	ld         al, @0xFFE4 <register uy>
   53421:	0234      	add        al, #+0x2
   53422:	0E13      	ld         ah, @(+0xE, y)
   53423:	FD00      	**prefx    0xFD
   53424:	819C      	bsr        -0x37F <SetUint32InArray:0x530A5[p]>
    byte_index += SetUint32InArray(response,byte_index,start_offset);
   53425:	0E37      	add        al, @(+0xE, y)
   53426:	0E27      	st         al, @(+0xE, y)
   53427:	0014      	ld         al, #+0x0
   53428:	0027      	st         al, @(0x0, y)
   53429:	0127      	st         al, @(+0x1, y)
   5342A:	E415      	ld         al, @0xFFE4 <register uy>
   5342B:	0234      	add        al, #+0x2
   5342C:	0E13      	ld         ah, @(+0xE, y)
   5342D:	FC00      	**prefx    0xFC
   5342E:	779C      	bsr        -0x389 <SetUint32InArray:0x530A5[p]>

    GaiaSendPacket( device_id,
   5342F:	0C14      	ld         al, #+0xC
   53430:	0027      	st         al, @(0x0, y)
   53431:	E415      	ld         al, @0xFFE4 <register uy>
   53432:	0234      	add        al, #+0x2
   53433:	0127      	st         al, @(+0x1, y)
   53434:	1117      	ld         al, @(+0x11, y)
   53435:	4000      	**prefx    0x40
   53436:	0310      	ld         ah, #+0x4003
   53437:	FD00      	**prefx    0xFD
   53438:	F59C      	bsr        -0x30B <GaiaSendPacket:0x5312D[p]>
                    GAIA_EVENT_NOTIFICATION,
                    VM_UPGRADE_MSG_SIZE + UPGRADE_HOST_DATA_BYTES_REQ_BYTE_SIZE,
                    response);
}
   53439:	173C      	add        y, #+0x17
   5343A:	FE0E      	ld         xh, @(-0x2, y)
   5343B:	FDE3      	bra        @(-0x3, y)

0x0005343C <upgradeDeviceSendValidationCfm>:
 *
 *  RETURNS
 *      None
 *---------------------------------------------------------------------------*/
static void upgradeDeviceSendValidationCfm(device_handle_id device_id)
{
   5343C:	F30B      	enter      #-0xD
   5343D:	0A27      	st         al, @(+0xA, y)
    uint16 byte_index ;
    uint8 response[VM_UPGRADE_MSG_SIZE + UPGRADE_VALIDATION_CFM_PAYLOAD_SIZE];
    uint16 back_off_time = UPGRADE_VALIDATION_BACKOFF_TIME_DEFAULT;

    byte_index = 0;
    byte_index += SetUint8InArray(response,byte_index,GAIA_EVENT_VMUP_PACKET);
   5343E:	1214      	ld         al, #+0x12
   5343F:	0027      	st         al, @(0x0, y)
   53440:	E415      	ld         al, @0xFFE4 <register uy>
   53441:	0234      	add        al, #+0x2
   53442:	0010      	ld         ah, #+0x0
   53443:	FC00      	**prefx    0xFC
   53444:	4D9C      	bsr        -0x3B3 <SetUint8InArray:0x53091[p]>
   53445:	0927      	st         al, @(+0x9, y)
    byte_index += SetUint8InArray(response,byte_index,UPGRADE_HOST_IS_CSR_VALID_DONE_CFM);
   53446:	1714      	ld         al, #+0x17
   53447:	0027      	st         al, @(0x0, y)
   53448:	E415      	ld         al, @0xFFE4 <register uy>
   53449:	0234      	add        al, #+0x2
   5344A:	0913      	ld         ah, @(+0x9, y)
   5344B:	FC00      	**prefx    0xFC
   5344C:	459C      	bsr        -0x3BB <SetUint8InArray:0x53091[p]>
   5344D:	0937      	add        al, @(+0x9, y)
   5344E:	0827      	st         al, @(+0x8, y)
    byte_index += SetUint16InArray(response,byte_index,UPGRADE_VALIDATION_CFM_PAYLOAD_SIZE);
   5344F:	0214      	ld         al, #+0x2
   53450:	0027      	st         al, @(0x0, y)
   53451:	E415      	ld         al, @0xFFE4 <register uy>
   53452:	0234      	add        al, #+0x2
   53453:	0813      	ld         ah, @(+0x8, y)
   53454:	FC00      	**prefx    0xFC
   53455:	439C      	bsr        -0x3BD <SetUint16InArray:0x53098[p]>
    byte_index += SetUint16InArray(response,byte_index,back_off_time);
   53456:	0837      	add        al, @(+0x8, y)
   53457:	0827      	st         al, @(+0x8, y)
   53458:	1400      	**prefx    0x14
   53459:	8814      	ld         al, #+0x1388
   5345A:	0027      	st         al, @(0x0, y)
   5345B:	E415      	ld         al, @0xFFE4 <register uy>
   5345C:	0234      	add        al, #+0x2
   5345D:	0813      	ld         ah, @(+0x8, y)
   5345E:	FC00      	**prefx    0xFC
   5345F:	399C      	bsr        -0x3C7 <SetUint16InArray:0x53098[p]>

    GaiaSendPacket( device_id,
   53460:	0614      	ld         al, #+0x6
   53461:	0027      	st         al, @(0x0, y)
   53462:	E415      	ld         al, @0xFFE4 <register uy>
   53463:	0234      	add        al, #+0x2
   53464:	0127      	st         al, @(+0x1, y)
   53465:	0A17      	ld         al, @(+0xA, y)
   53466:	4000      	**prefx    0x40
   53467:	0310      	ld         ah, #+0x4003
   53468:	FD00      	**prefx    0xFD
   53469:	C49C      	bsr        -0x33C <GaiaSendPacket:0x5312D[p]>
                    GAIA_EVENT_NOTIFICATION,
                    VM_UPGRADE_MSG_SIZE + UPGRADE_VALIDATION_CFM_PAYLOAD_SIZE,
                    response);
}
   5346A:	F30F      	leave      #-0xD

0x0005346B <GaiaOtauHandleStoreUpdateMsg>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void GaiaOtauHandleStoreUpdateMsg(device_handle_id device_id, store_update_msg_t *msg)
{
   5346B:	F60B      	enter      #-0xA
   5346C:	0527      	st         al, @(+0x5, y)
    status_t status;

    switch(msg->header.id)
   5346D:	E019      	ld         x, @0xFFE0 <register ah>
   5346E:	0316      	ld         al, @(+0x3, x)
   5346F:	E100      	**prefx    0xE1
   53470:	FD34      	add        al, #-0x1F03
   53471:	0F84      	cmp        al, #+0xF
   53472:	0100      	**prefx    0x1
   53473:	A7F8      	bcc        +0xA7 <.JTBASE72+0xA1:0x5351A[p]>
   53474:	E119      	ld         x, @0xFFE1 <register al>
   53475:	A100      	**prefx    0xA1
   53476:	1616      	ld         al, @(-0x5EEA, x)
   53477:	E119      	ld         x, @0xFFE1 <register al>
   53478:	FE09      	brxl       

0x00053479 <.JTBASE72>:
            /*
             * This message originates from handleOtauFileTransfer(),
             * Once the Store is ready, the rest of the application
             * can be requested
             */
            status = msg->body.set_store_id_cfm.status;
   53479:	E019      	ld         x, @0xFFE0 <register ah>
   5347A:	0412      	ld         ah, @(+0x4, x)
            if( status == sys_status_too_much_data ) /* file too big */
   5347B:	0C00      	**prefx    0xC
   5347C:	1980      	cmp        ah, #+0xC19
   5347D:	71F4      	beq        +0x71 <.JTBASE72+0x75:0x534EE[p]>
            {
                upgradeDeviceSendErrorInd(device_id, UPGRADE_HOST_ERROR_FILE_TOO_BIG);
            }
            else if ( status == sys_status_no_store )   /* no such store */
   5347E:	0C00      	**prefx    0xC
   5347F:	1380      	cmp        ah, #+0xC13
   53480:	05F0      	bne        +0x5 <.JTBASE72+0xC:0x53485[p]>
            {
                upgradeDeviceSendErrorInd(device_id, UPGRADE_HOST_ERROR_PARTITION_OPEN_FAILED);
   53481:	0517      	ld         al, @(+0x5, y)
   53482:	1710      	ld         ah, #+0x17
   53483:	0100      	**prefx    0x1
   53484:	94E0      	bra        +0x94 <.JTBASE72+0x9F:0x53518[p]>
            {
                /*
                 * begin transfer of the partition, otherwise this was the
                 * message for when the old application was deleted after a commit
                 */
                if ( !isNewApp() )
   53485:	FE00      	**prefx    0xFE
   53486:	2C9C      	bsr        -0x1D4 <isNewApp:0x532B2[p]>
   53487:	E199      	tst        @0xFFE1 <register al>
   53488:	09F0      	bne        +0x9 <.JTBASE72+0x18:0x53491[p]>
                {
                    upgradeDeviceSendDataBytesReq(device_id, DATA_REQUEST_SIZE);
   53489:	0C10      	ld         ah, #+0xC
   5348A:	0023      	st         ah, @(0x0, y)
   5348B:	0010      	ld         ah, #+0x0
   5348C:	0517      	ld         al, @(+0x5, y)
   5348D:	FF00      	**prefx    0xFF
   5348E:	6B9C      	bsr        -0x95 <upgradeDeviceSendDataBytesReq:0x533F9[p]>
   5348F:	0100      	**prefx    0x1
   53490:	8AE0      	bra        +0x8A <.JTBASE72+0xA1:0x5351A[p]>
                }
                else
                {
                    g_otau_data.cs_id = g_otau_data.app_id;
   53491:	6400      	**prefx    0x64
   53492:	6315      	ld         al, @0x6463 <g_otau_data+0x7>
   53493:	6400      	**prefx    0x64
   53494:	6525      	st         al, @0x6465 <g_otau_data+0x9>
   53495:	0100      	**prefx    0x1
   53496:	84E0      	bra        +0x84 <.JTBASE72+0xA1:0x5351A[p]>
            }
            break;

        case STORE_UPDATE_WRITE_CHUNK_CFM:
            /* start the SHA256 calculation on the last chunk */
            status = msg->body.write_chunk_cfm.status;
   53497:	E019      	ld         x, @0xFFE0 <register ah>
   53498:	0412      	ld         ah, @(+0x4, x)
            if ( status == sys_status_success )
   53499:	27F0      	bne        +0x27 <.JTBASE72+0x47:0x534C0[p]>
            {
                if ( g_otau_data.partition.last_chunk )
   5349A:	6400      	**prefx    0x64
   5349B:	6D99      	tst        @0x646D <g_otau_data+0x11>
   5349C:	7EF4      	beq        +0x7E <.JTBASE72+0xA1:0x5351A[p]>
 *---------------------------------------------------------------------------*/
static void startSHA256sum(void)
{
    handle_t handle;

    Storage_FindStore( g_otau_data.partition.id, g_otau_data.partition.type, &handle);
   5349D:	E411      	ld         ah, @0xFFE4 <register uy>
   5349E:	0430      	add        ah, #+0x4
   5349F:	0023      	st         ah, @(0x0, y)
   534A0:	6400      	**prefx    0x64
   534A1:	6915      	ld         al, @0x6469 <g_otau_data+0xD>
   534A2:	6400      	**prefx    0x64
   534A3:	6811      	ld         ah, @0x6468 <g_otau_data+0xC>
   534A4:	4B00      	**prefx    0x4B
   534A5:	C19C      	bsr        +0x4AC1 <Storage_FindStore:0x57F66[p]>
    StoreUpdate_HashStore(  handle,
   534A6:	6400      	**prefx    0x64
   534A7:	6C15      	ld         al, @0x646C <g_otau_data+0x10>
   534A8:	0727      	st         al, @(+0x7, y)
   534A9:	6400      	**prefx    0x64
   534AA:	6B19      	ld         x, @0x646B <g_otau_data+0xF>
   534AB:	062B      	st         x, @(+0x6, y)
   534AC:	0717      	ld         al, @(+0x7, y)
   534AD:	0613      	ld         ah, @(+0x6, y)
   534AE:	0009      	**unsigned
   534AF:	01A4      	lsr        #0x1
   534B0:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   534B1:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   534B2:	FC34      	add        al, #-0x4
   534B3:	FF40      	addc       ah, #-0x1
   534B4:	0227      	st         al, @(+0x2, y)
   534B5:	0123      	st         ah, @(+0x1, y)
   534B6:	6500      	**prefx    0x65
   534B7:	8114      	ld         al, #+0x6481
   534B8:	0327      	st         al, @(+0x3, y)
   534B9:	0418      	ld         x, #+0x4
   534BA:	002B      	st         x, @(0x0, y)
   534BB:	0010      	ld         ah, #+0x0
   534BC:	0417      	ld         al, @(+0x4, y)
   534BD:	4E00      	**prefx    0x4E
   534BE:	BC9C      	bsr        +0x4DBC <StoreUpdate_HashStore:0x5827A[p]>
   534BF:	5BE0      	bra        +0x5B <.JTBASE72+0xA1:0x5351A[p]>
                }
            }
            else if(status != sys_status_success )
            {
                /* Abort after having sent the error code back over the GATT. */
                g_otau_data.transfer_state = CTRL_ABORTED;
   534C0:	0814      	ld         al, #+0x8
   534C1:	6400      	**prefx    0x64
   534C2:	5C25      	st         al, @0x645C <g_otau_data>
                if( status == sys_status_too_much_data )
   534C3:	0C00      	**prefx    0xC
   534C4:	1980      	cmp        ah, #+0xC19
   534C5:	2CF0      	bne        +0x2C <.JTBASE72+0x78:0x534F1[p]>
   534C6:	28E0      	bra        +0x28 <.JTBASE72+0x75:0x534EE[p]>
                }
            }
            break;

        case STORE_UPDATE_CHECK_INTEGRITY_CFM:
            status = msg->body.check_integrity_cfm.status;
   534C7:	E019      	ld         x, @0xFFE0 <register ah>
   534C8:	0416      	ld         al, @(+0x4, x)
            g_otau_data.validation_done = TRUE;
   534C9:	0110      	ld         ah, #+0x1
   534CA:	6400      	**prefx    0x64
   534CB:	6021      	st         ah, @0x6460 <g_otau_data+0x4>
            /* Check the status to see if the integrity check succeeded or not */
            if( status == sys_status_success )
   534CC:	E199      	tst        @0xFFE1 <register al>
   534CD:	05F0      	bne        +0x5 <.JTBASE72+0x59:0x534D2[p]>
            {
                /* Win: switch to the initial state where, the host can run the new app. */
                g_otau_data.transfer_state = CTRL_READY;
   534CE:	0314      	ld         al, #+0x3
   534CF:	6400      	**prefx    0x64
   534D0:	5C25      	st         al, @0x645C <g_otau_data>
   534D1:	49E0      	bra        +0x49 <.JTBASE72+0xA1:0x5351A[p]>
            }
            else    /* integrity check failed */
            {
                g_otau_data.transfer_state = CTRL_FAILED;
   534D2:	0718      	ld         x, #+0x7
   534D3:	6400      	**prefx    0x64
   534D4:	5C29      	st         x, @0x645C <g_otau_data>
                upgradeDeviceSendErrorInd(device_id, UPGRADE_HOST_ERROR_OEM_VALIDATION_FAILED_MEMORY);
   534D5:	0517      	ld         al, @(+0x5, y)
   534D6:	3E10      	ld         ah, #+0x3E
   534D7:	41E0      	bra        +0x41 <.JTBASE72+0x9F:0x53518[p]>
            }
            break;

        case STORE_UPDATE_RUN_APP_CFM:
            status = msg->body.run_app_cfm.status;
            if( status == sys_status_success )
   534D8:	E019      	ld         x, @0xFFE0 <register ah>
   534D9:	049A      	tst        @(+0x4, x)
   534DA:	40F0      	bne        +0x40 <.JTBASE72+0xA1:0x5351A[p]>
                 * Delete the old application if this is the new application
                 * Update the cs_id and the app_id, and recalculate the store to upgrade
                 * This is required in case the user does another upgrade before resetting
                 * the device.
                 */
                StoreUpdate_SetStoreId( g_otau_data.cs_id,
   534DB:	0A10      	ld         ah, #+0xA
   534DC:	0023      	st         ah, @(0x0, y)
   534DD:	6400      	**prefx    0x64
   534DE:	6515      	ld         al, @0x6465 <g_otau_data+0x9>
   534DF:	0210      	ld         ah, #+0x2
   534E0:	FC00      	**prefx    0xFC
   534E1:	CB00      	**prefx    0xCB
   534E2:	6B9C      	bsr        -0x43495 <StoreUpdate_SetStoreId:0x1004D[p]>
                                        APP_STORE,
                                        SETSTOREID_SIZE_MIN);
                initStateVariables();
   534E3:	FE00      	**prefx    0xFE
   534E4:	989C      	bsr        -0x268 <initStateVariables:0x5327C[p]>
   534E5:	35E0      	bra        +0x35 <.JTBASE72+0xA1:0x5351A[p]>
            }
            break;

        case STORE_UPDATE_ABORT_IND:
            /* We received an abort from the memory subsystem. We behave accordingly. */
            status = msg->body.abort_ind.status;
   534E6:	E019      	ld         x, @0xFFE0 <register ah>
   534E7:	0416      	ld         al, @(+0x4, x)
            g_otau_data.transfer_state = CTRL_ABORTED;
   534E8:	0810      	ld         ah, #+0x8
   534E9:	6400      	**prefx    0x64
   534EA:	5C21      	st         ah, @0x645C <g_otau_data>
            if( sys_status_too_much_data == status )
   534EB:	0C00      	**prefx    0xC
   534EC:	1984      	cmp        al, #+0xC19
   534ED:	04F0      	bne        +0x4 <.JTBASE72+0x78:0x534F1[p]>
            {
                upgradeDeviceSendErrorInd(device_id, UPGRADE_HOST_ERROR_FILE_TOO_BIG);
   534EE:	0517      	ld         al, @(+0x5, y)
   534EF:	5910      	ld         ah, #+0x59
   534F0:	28E0      	bra        +0x28 <.JTBASE72+0x9F:0x53518[p]>
            }
            else
            {
                upgradeDeviceSendErrorInd(device_id, UPGRADE_HOST_ERROR_UPDATE_FAILED);
   534F1:	0517      	ld         al, @(+0x5, y)
   534F2:	1C10      	ld         ah, #+0x1C
   534F3:	25E0      	bra        +0x25 <.JTBASE72+0x9F:0x53518[p]>
        {
            int i;
            int MSB_sum, LSB_sum;
            status = msg->body.hash_store_cfm.status;

            if ( status == sys_status_success )
   534F4:	E019      	ld         x, @0xFFE0 <register ah>
   534F5:	049A      	tst        @(+0x4, x)
   534F6:	20F0      	bne        +0x20 <.JTBASE72+0x9D:0x53516[p]>
   534F7:	0010      	ld         ah, #+0x0
   534F8:	F921      	st         ah, @0xFFF9 <(scratchpad)>
                /* sum this hash with the previous hash
                 * it is a byte sum, so split in to 8octet sums and don't carry
                 */
                for ( i = 0; i < SHA256_SIZE_WORDS; i++ )
                {
                    MSB_sum =   ((g_otau_data.oem_signature.sha256_sum[i]&0xff00) +
   534F9:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   534FA:	6400      	**prefx    0x64
   534FB:	7116      	ld         al, @(+0x6471, x)
   534FC:	6500      	**prefx    0x65
   534FD:	8112      	ld         ah, @(+0x6481, x)
                                (g_otau_data.oem_signature.sha256_buffer[i]&0xff00) );
                    MSB_sum &= 0xff00;

                    LSB_sum =   ((g_otau_data.oem_signature.sha256_sum[i]) +
   534FE:	E019      	ld         x, @0xFFE0 <register ah>
   534FF:	E139      	add        x, @0xFFE1 <register al>
                /* sum this hash with the previous hash
                 * it is a byte sum, so split in to 8octet sums and don't carry
                 */
                for ( i = 0; i < SHA256_SIZE_WORDS; i++ )
                {
                    MSB_sum =   ((g_otau_data.oem_signature.sha256_sum[i]&0xff00) +
   53500:	FF00      	**prefx    0xFF
   53501:	00C0      	and        ah, #0xFF00
   53502:	FF00      	**prefx    0xFF
   53503:	00C4      	and        al, #0xFF00

                    LSB_sum =   ((g_otau_data.oem_signature.sha256_sum[i]) +
                                (g_otau_data.oem_signature.sha256_buffer[i]) );
                    LSB_sum &= 0x00ff;

                    g_otau_data.oem_signature.sha256_sum[i] = MSB_sum | LSB_sum;
   53504:	E131      	add        ah, @0xFFE1 <register al>
   53505:	0100      	**prefx    0x1
   53506:	FFC8      	and        x, #0xFF
   53507:	E3B1      	or         ah, @0xFFE3 <register uxl>
   53508:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   53509:	6400      	**prefx    0x64
   5350A:	7122      	st         ah, @(+0x6471, x)
            {

                /* sum this hash with the previous hash
                 * it is a byte sum, so split in to 8octet sums and don't carry
                 */
                for ( i = 0; i < SHA256_SIZE_WORDS; i++ )
   5350B:	0138      	add        x, #+0x1
   5350C:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5350D:	1088      	cmp        x, #+0x10
   5350E:	EBF0      	bne        -0x15 <.JTBASE72+0x80:0x534F9[p]>
                    LSB_sum &= 0x00ff;

                    g_otau_data.oem_signature.sha256_sum[i] = MSB_sum | LSB_sum;
                }

                if ( g_otau_data.partition.last_partition )
   5350F:	6400      	**prefx    0x64
   53510:	6E99      	tst        @0x646E <g_otau_data+0x12>
   53511:	09F4      	beq        +0x9 <.JTBASE72+0xA1:0x5351A[p]>
                {
                    g_otau_data.validation_done = TRUE;
   53512:	0110      	ld         ah, #+0x1
   53513:	6400      	**prefx    0x64
   53514:	6021      	st         ah, @0x6460 <g_otau_data+0x4>
   53515:	05E0      	bra        +0x5 <.JTBASE72+0xA1:0x5351A[p]>
                }
            }
            else
            {
                upgradeDeviceSendErrorInd(device_id, UPGRADE_HOST_ERROR_INTERNAL_ERROR_1);
   53516:	0517      	ld         al, @(+0x5, y)
   53517:	6510      	ld         ah, #+0x65
   53518:	FE00      	**prefx    0xFE
   53519:	1F9C      	bsr        -0x1E1 <upgradeDeviceSendErrorInd:0x53338[p]>

        default:
            /* This message is not to be handled by this function. Exit silently. */
            return;
    }
}
   5351A:	F60F      	leave      #-0xA

0x0005351B <hostCommitTimeoutCreate>:
 *  RETURNS
 *      none
 *
 *---------------------------------------------------------------------------*/
static void hostCommitTimeoutCreate(void)
{
   5351B:	FB0B      	enter      #-0x5
    if ( g_otau_data.commit_timeout_tid == TIMER_INVALID )
   5351C:	6500      	**prefx    0x65
   5351D:	9B99      	tst        @0x649B <___libgatt_lib_db_642+0x17>
   5351E:	11F0      	bne        +0x11 <hostCommitTimeoutCreate+0x14:0x5352F[p]>
    {
        g_otau_data.commit_timeout_tid = TimerCreate(  GAIA_OTAU_COMMIT_HOST_TIMEOUT,
   5351F:	0114      	ld         al, #+0x1
   53520:	0027      	st         al, @(0x0, y)
   53521:	3300      	**prefx    0x33
   53522:	2314      	ld         al, #+0x3323
   53523:	0227      	st         al, @(+0x2, y)
   53524:	0514      	ld         al, #+0x5
   53525:	0127      	st         al, @(+0x1, y)
   53526:	1200      	**prefx    0x12
   53527:	E110      	ld         ah, #+0x11E1
   53528:	A300      	**prefx    0xA3
   53529:	0014      	ld         al, #-0x5D00
   5352A:	FC00      	**prefx    0xFC
   5352B:	B700      	**prefx    0xB7
   5352C:	029C      	bsr        -0x448FE <TimerCreate:0xEC2E[p]>
   5352D:	6500      	**prefx    0x65
   5352E:	9B25      	st         al, @0x649B <___libgatt_lib_db_642+0x17>
                                                    TRUE,
                                                    hostCommitTimeoutHandler);
    }
}
   5352F:	FB0F      	leave      #-0x5

0x00053530 <upgradeDeviceSendStartCfm>:
 *
 *  RETURNS
 *      None
 *---------------------------------------------------------------------------*/
static void upgradeDeviceSendStartCfm(device_handle_id device_id, uint8 status)
{
   53530:	EF0B      	enter      #-0x11
   53531:	0D27      	st         al, @(+0xD, y)
   53532:	0E23      	st         ah, @(+0xE, y)
    uint16 byte_index;
    uint8 response[VM_UPGRADE_MSG_SIZE + UPGRADE_HOST_START_CFM_PAYLOAD_SIZE];

    byte_index = 0;
    byte_index += SetUint8InArray(response,byte_index,GAIA_EVENT_VMUP_PACKET);
   53533:	1214      	ld         al, #+0x12
   53534:	0027      	st         al, @(0x0, y)
   53535:	E415      	ld         al, @0xFFE4 <register uy>
   53536:	0234      	add        al, #+0x2
   53537:	0010      	ld         ah, #+0x0
   53538:	FB00      	**prefx    0xFB
   53539:	589C      	bsr        -0x4A8 <SetUint8InArray:0x53091[p]>
   5353A:	0C27      	st         al, @(+0xC, y)
    byte_index += SetUint8InArray(response,byte_index,UPGRADE_HOST_START_CFM);
   5353B:	0218      	ld         x, #+0x2
   5353C:	002B      	st         x, @(0x0, y)
   5353D:	E415      	ld         al, @0xFFE4 <register uy>
   5353E:	0234      	add        al, #+0x2
   5353F:	0C13      	ld         ah, @(+0xC, y)
   53540:	FB00      	**prefx    0xFB
   53541:	509C      	bsr        -0x4B0 <SetUint8InArray:0x53091[p]>
   53542:	0C37      	add        al, @(+0xC, y)
   53543:	0A27      	st         al, @(+0xA, y)
    byte_index += SetUint16InArray(response,byte_index,UPGRADE_HOST_START_CFM_PAYLOAD_SIZE);
   53544:	0314      	ld         al, #+0x3
   53545:	0027      	st         al, @(0x0, y)
   53546:	E415      	ld         al, @0xFFE4 <register uy>
   53547:	0234      	add        al, #+0x2
   53548:	0A13      	ld         ah, @(+0xA, y)
   53549:	FB00      	**prefx    0xFB
   5354A:	4E9C      	bsr        -0x4B2 <SetUint16InArray:0x53098[p]>
   5354B:	0A1B      	ld         x, @(+0xA, y)
   5354C:	E139      	add        x, @0xFFE1 <register al>
   5354D:	092B      	st         x, @(+0x9, y)
    byte_index += SetUint8InArray(response,byte_index,status);
   5354E:	0E17      	ld         al, @(+0xE, y)
   5354F:	0027      	st         al, @(0x0, y)
   53550:	E415      	ld         al, @0xFFE4 <register uy>
   53551:	0234      	add        al, #+0x2
   53552:	E311      	ld         ah, @0xFFE3 <register uxl>
   53553:	FB00      	**prefx    0xFB
   53554:	3D9C      	bsr        -0x4C3 <SetUint8InArray:0x53091[p]>
   53555:	0B27      	st         al, @(+0xB, y)
    byte_index += SetUint16InArray(response,byte_index,BatteryReadVoltage());
   53556:	FC00      	**prefx    0xFC
   53557:	8C00      	**prefx    0x8C
   53558:	519C      	bsr        -0x473AF <BatteryReadVoltage:0xC1A9[p]>
   53559:	091B      	ld         x, @(+0x9, y)
   5355A:	0B3B      	add        x, @(+0xB, y)
   5355B:	0027      	st         al, @(0x0, y)
   5355C:	E415      	ld         al, @0xFFE4 <register uy>
   5355D:	0234      	add        al, #+0x2
   5355E:	E311      	ld         ah, @0xFFE3 <register uxl>
   5355F:	FB00      	**prefx    0xFB
   53560:	389C      	bsr        -0x4C8 <SetUint16InArray:0x53098[p]>

    GaiaSendPacket( device_id,
   53561:	0714      	ld         al, #+0x7
   53562:	0027      	st         al, @(0x0, y)
   53563:	E419      	ld         x, @0xFFE4 <register uy>
   53564:	0238      	add        x, #+0x2
   53565:	012B      	st         x, @(+0x1, y)
   53566:	0D17      	ld         al, @(+0xD, y)
   53567:	4000      	**prefx    0x40
   53568:	0310      	ld         ah, #+0x4003
   53569:	FC00      	**prefx    0xFC
   5356A:	C39C      	bsr        -0x43D <GaiaSendPacket:0x5312D[p]>
                    GAIA_EVENT_NOTIFICATION,
                    VM_UPGRADE_MSG_SIZE + UPGRADE_HOST_START_CFM_PAYLOAD_SIZE,
                    response);
}
   5356B:	EF0F      	leave      #-0x11

0x0005356C <handleOtauFileTransfer>:
 *---------------------------------------------------------------------------*/
static void handleOtauFileTransfer( device_handle_id device_id,
                                    uint8 more_data_flag,
                                    uint16 length,
                                    uint8* file_data)
{
   5356C:	D90B      	enter      #-0x27
   5356D:	2327      	st         al, @(+0x23, y)
   5356E:	2423      	st         ah, @(+0x24, y)
    if(g_otau_data.transfer_state != CTRL_IN_PROGRESS)
   5356F:	6400      	**prefx    0x64
   53570:	5C15      	ld         al, @0x645C <g_otau_data>
   53571:	0484      	cmp        al, #+0x4
   53572:	0200      	**prefx    0x2
   53573:	09F0      	bne        +0x209 <.JTBASE101+0x200:0x5377C[p]>
    {
        return;
    }

    switch (g_otau_data.data_transfer_state)
   53574:	6400      	**prefx    0x64
   53575:	5D19      	ld         x, @0x645D <g_otau_data+0x1>
   53576:	0888      	cmp        x, #+0x8
   53577:	0200      	**prefx    0x2
   53578:	04F8      	bcc        +0x204 <.JTBASE101+0x200:0x5377C[p]>
   53579:	A100      	**prefx    0xA1
   5357A:	371A      	ld         x, @(-0x5EC9, x)
   5357B:	FE09      	brxl       

0x0005357C <.JTBASE101>:
            check_failed = FALSE;
            for ( i = 0; i < length; i += 2  )
            {
                SHA256_word = ( file_data[i] << 8 )  + file_data[i+1];

                if ( g_otau_data.oem_signature.sha256_sum[(g_otau_data.bytes_transferred + i ) / 2] != SHA256_word  )
   5357C:	6400      	**prefx    0x64
   5357D:	5F11      	ld         ah, @0x645F <g_otau_data+0x3>
   5357E:	FF23      	st         ah, @(-0x1, y)
   5357F:	6400      	**prefx    0x64
   53580:	5E15      	ld         al, @0x645E <g_otau_data+0x2>
   53581:	FB25      	st         al, @0xFFFB <(scratchpad)>
   53582:	281B      	ld         x, @(+0x28, y)
   53583:	212B      	st         x, @(+0x21, y)
   53584:	0010      	ld         ah, #+0x0
   53585:	FE23      	st         ah, @(-0x2, y)
   53586:	0200      	**prefx    0x2
   53587:	AFE0      	bra        +0x1AF <.JTBASE101+0x1BA:0x53736[p]>
         * Request the LENGTH parameter.
         */
        case data_transfer_state_header_id:
        {
            GAIA_OTAU_EVENT_T event_data;
            event_data.validate_header.header_valid = TRUE;
   53588:	0114      	ld         al, #+0x1
   53589:	0127      	st         al, @(+0x1, y)
            event_data.validate_header.header = file_data;
   5358A:	281B      	ld         x, @(+0x28, y)
   5358B:	022B      	st         x, @(+0x2, y)

            notifyApplication(gaia_otau_event_validate_header, &event_data);
   5358C:	E411      	ld         ah, @0xFFE4 <register uy>
   5358D:	0130      	add        ah, #+0x1
   5358E:	FD00      	**prefx    0xFD
   5358F:	049C      	bsr        -0x2FC <notifyApplication:0x53293[p]>

            g_otau_data.data_transfer_state = data_transfer_state_header_length;
   53590:	0110      	ld         ah, #+0x1
   53591:	6400      	**prefx    0x64
   53592:	5D21      	st         ah, @0x645D <g_otau_data+0x1>
            if ( event_data.validate_header.header_valid )
   53593:	019B      	tst        @(+0x1, y)
   53594:	46F4      	beq        +0x46 <.JTBASE101+0x5E:0x535DA[p]>
   53595:	6EE0      	bra        +0x6E <.JTBASE101+0x87:0x53603[p]>
         * 0       <8 octet string>
         * 8       <Length bytes>
         * 12      <header body>
         */
        case data_transfer_state_header_length:
            g_otau_data.header_length = GetUint32FromArray(file_data);
   53596:	2817      	ld         al, @(+0x28, y)
   53597:	FB00      	**prefx    0xFB
   53598:	2D9C      	bsr        -0x4D3 <GetUint32FromArray:0x530C5[p]>
   53599:	6400      	**prefx    0x64
   5359A:	6F21      	st         ah, @0x646F <g_otau_data+0x13>
   5359B:	6400      	**prefx    0x64
   5359C:	7025      	st         al, @0x6470 <g_otau_data+0x14>
            g_otau_data.data_transfer_state = data_transfer_state_header_body;
   5359D:	0218      	ld         x, #+0x2
   5359E:	6400      	**prefx    0x64
   5359F:	5D29      	st         x, @0x645D <g_otau_data+0x1>
            upgradeDeviceSendDataBytesReq(device_id, g_otau_data.header_length);
   535A0:	0027      	st         al, @(0x0, y)
   535A1:	0200      	**prefx    0x2
   535A2:	D2E0      	bra        +0x1D2 <.JTBASE101+0x1F8:0x53774[p]>
         * then the MTU size.
         */
        case data_transfer_state_header_body:
        {
            GAIA_OTAU_EVENT_T event_data;
            event_data.validate_header_body.header_body_valid = TRUE;
   535A3:	0110      	ld         ah, #+0x1
   535A4:	0623      	st         ah, @(+0x6, y)
            event_data.validate_header_body.header_body_size = g_otau_data.header_length;
   535A5:	6400      	**prefx    0x64
   535A6:	6F11      	ld         ah, @0x646F <g_otau_data+0x13>
   535A7:	6400      	**prefx    0x64
   535A8:	7015      	ld         al, @0x6470 <g_otau_data+0x14>
   535A9:	0827      	st         al, @(+0x8, y)
   535AA:	0723      	st         ah, @(+0x7, y)
            event_data.validate_header_body.portion_size = length;
   535AB:	271B      	ld         x, @(+0x27, y)
   535AC:	092B      	st         x, @(+0x9, y)
            event_data.validate_header_body.header_body = file_data;
   535AD:	2813      	ld         ah, @(+0x28, y)
   535AE:	0A23      	st         ah, @(+0xA, y)

            notifyApplication(gaia_otau_event_validate_header_body, &event_data);
   535AF:	0214      	ld         al, #+0x2
   535B0:	E411      	ld         ah, @0xFFE4 <register uy>
   535B1:	0630      	add        ah, #+0x6
   535B2:	FD00      	**prefx    0xFD
   535B3:	E09C      	bsr        -0x320 <notifyApplication:0x53293[p]>

            if ( event_data.validate_header_body.header_body_valid )
   535B4:	069B      	tst        @(+0x6, y)
   535B5:	25F4      	beq        +0x25 <.JTBASE101+0x5E:0x535DA[p]>
            {
                g_otau_data.bytes_transferred += length;
   535B6:	0010      	ld         ah, #+0x0
   535B7:	2717      	ld         al, @(+0x27, y)
   535B8:	6400      	**prefx    0x64
   535B9:	5F35      	add        al, @0x645F <g_otau_data+0x3>
   535BA:	6400      	**prefx    0x64
   535BB:	5E41      	addc       ah, @0x645E <g_otau_data+0x2>
   535BC:	E119      	ld         x, @0xFFE1 <register al>
   535BD:	6400      	**prefx    0x64
   535BE:	5E21      	st         ah, @0x645E <g_otau_data+0x2>
   535BF:	6400      	**prefx    0x64
   535C0:	5F25      	st         al, @0x645F <g_otau_data+0x3>
                if(g_otau_data.bytes_transferred < g_otau_data.header_length)
   535C1:	6400      	**prefx    0x64
   535C2:	6F15      	ld         al, @0x646F <g_otau_data+0x13>
   535C3:	E085      	cmp        al, @0xFFE0 <register ah>
   535C4:	032C      	bcz        +0x3 <.JTBASE101+0x4B:0x535C7[p]>
   535C5:	0200      	**prefx    0x2
   535C6:	B6E0      	bra        +0x1B6 <.JTBASE101+0x200:0x5377C[p]>
   535C7:	E085      	cmp        al, @0xFFE0 <register ah>
   535C8:	07F0      	bne        +0x7 <.JTBASE101+0x53:0x535CF[p]>
   535C9:	6400      	**prefx    0x64
   535CA:	7015      	ld         al, @0x6470 <g_otau_data+0x14>
   535CB:	E385      	cmp        al, @0xFFE3 <register uxl>
   535CC:	032C      	bcz        +0x3 <.JTBASE101+0x53:0x535CF[p]>
   535CD:	0200      	**prefx    0x2
   535CE:	AEE0      	bra        +0x1AE <.JTBASE101+0x200:0x5377C[p]>
                {
                    break;  /* wait until the rest of the header has been received */
                }
                else        /* request the partition header */
                {
                    g_otau_data.bytes_transferred = 0;
   535CF:	0014      	ld         al, #+0x0
   535D0:	6400      	**prefx    0x64
   535D1:	5E25      	st         al, @0x645E <g_otau_data+0x2>
   535D2:	6400      	**prefx    0x64
   535D3:	5F25      	st         al, @0x645F <g_otau_data+0x3>
                    g_otau_data.data_transfer_state = data_transfer_state_unknown_header_id;
   535D4:	0318      	ld         x, #+0x3
   535D5:	6400      	**prefx    0x64
   535D6:	5D29      	st         x, @0x645D <g_otau_data+0x1>
                    upgradeDeviceSendDataBytesReq(device_id, UNKNOWN_TYPE_ID_SIZE);
   535D7:	0810      	ld         ah, #+0x8
   535D8:	0100      	**prefx    0x1
   535D9:	22E0      	bra        +0x122 <.JTBASE101+0x17F:0x536FB[p]>
                }
            }
            else  /* header validation has failed */
            {
                upgradeDeviceSendErrorInd(device_id, UPGRADE_HOST_ERROR_OEM_VALIDATION_FAILED_UPGRADE_HEADER);
   535DA:	2317      	ld         al, @(+0x23, y)
   535DB:	3910      	ld         ah, #+0x39
   535DC:	0100      	**prefx    0x1
   535DD:	7FE0      	bra        +0x17F <.JTBASE101+0x1E0:0x5375C[p]>
 *      bool - TRUE if the type matches
 *
 *---------------------------------------------------------------------------*/
static bool isPartitionHeader( uint8* file_data )
{
    return ( MemCmp(    file_data,
   535DE:	A100      	**prefx    0xA1
   535DF:	2514      	ld         al, #-0x5EDB
   535E0:	FC00      	**prefx    0xFC
   535E1:	2900      	**prefx    0x29
   535E2:	7C9C      	bsr        -0x3D684 <StrLen:0x15F5E[p]>
   535E3:	0027      	st         al, @(0x0, y)
   535E4:	2817      	ld         al, @(+0x28, y)
   535E5:	A100      	**prefx    0xA1
   535E6:	2510      	ld         ah, #-0x5EDB
   535E7:	FC00      	**prefx    0xFC
   535E8:	2900      	**prefx    0x29
   535E9:	489C      	bsr        -0x3D6B8 <MemCmp:0x15F31[p]>

        /* download the next header and determine next action accordingly
         * Supported types are: PARTITION_HEADER and FOOTER_HEADER
         */
        case data_transfer_state_unknown_header_id:
            if ( isPartitionHeader(file_data) )     /* process a partition */
   535EA:	E199      	tst        @0xFFE1 <register al>
   535EB:	07F0      	bne        +0x7 <.JTBASE101+0x76:0x535F2[p]>
            {
                g_otau_data.data_transfer_state = data_transfer_state_partition_header_body;
   535EC:	0414      	ld         al, #+0x4
   535ED:	6400      	**prefx    0x64
   535EE:	5D25      	st         al, @0x645D <g_otau_data+0x1>
                upgradeDeviceSendDataBytesReq(device_id,
   535EF:	0818      	ld         x, #+0x8
   535F0:	0200      	**prefx    0x2
   535F1:	81E0      	bra        +0x181 <.JTBASE101+0x1F6:0x53772[p]>
                        StrLen(UPGRADE_PARTITION_ID) ) == 0 );
}

static bool isFooterHeader( uint8* file_data )
{
    return ( MemCmp(    file_data,
   535F2:	A100      	**prefx    0xA1
   535F3:	2E14      	ld         al, #-0x5ED2
   535F4:	FC00      	**prefx    0xFC
   535F5:	2900      	**prefx    0x29
   535F6:	689C      	bsr        -0x3D698 <StrLen:0x15F5E[p]>
   535F7:	0027      	st         al, @(0x0, y)
   535F8:	2817      	ld         al, @(+0x28, y)
   535F9:	A100      	**prefx    0xA1
   535FA:	2E10      	ld         ah, #-0x5ED2
   535FB:	FC00      	**prefx    0xFC
   535FC:	2900      	**prefx    0x29
   535FD:	349C      	bsr        -0x3D6CC <MemCmp:0x15F31[p]>
                upgradeDeviceSendDataBytesReq(device_id,
                                                PARTITION_HEADER_LENGTH_SIZE +
                                                PARTITION_HEADER_TYPE_SIZE +
                                                PARTITION_HEADER_NUMBER_SIZE );
            }
            else if ( isFooterHeader(file_data) )   /* no more partitions, read the footer */
   535FE:	E199      	tst        @0xFFE1 <register al>
   535FF:	07F0      	bne        +0x7 <.JTBASE101+0x8A:0x53606[p]>
            {
                g_otau_data.data_transfer_state = data_transfer_state_footer_length;
   53600:	0610      	ld         ah, #+0x6
   53601:	6400      	**prefx    0x64
   53602:	5D21      	st         ah, @0x645D <g_otau_data+0x1>
                upgradeDeviceSendDataBytesReq(device_id, FOOTER_LENGTH_SIZE );
   53603:	0414      	ld         al, #+0x4
   53604:	0100      	**prefx    0x1
   53605:	6AE0      	bra        +0x16A <.JTBASE101+0x1F3:0x5376F[p]>
            } else  /* unknown section ID */
            {
                upgradeDeviceSendErrorInd(device_id, UPGRADE_HOST_ERROR_OEM_VALIDATION_FAILED_HEADERS);
   53606:	2317      	ld         al, @(+0x23, y)
   53607:	3810      	ld         ah, #+0x38
   53608:	0100      	**prefx    0x1
   53609:	53E0      	bra        +0x153 <.JTBASE101+0x1E0:0x5375C[p]>
        case data_transfer_state_partition_header_body:
        {
            GAIA_OTAU_EVENT_T event_data;

            /* calculate the length of the partition  */
            g_otau_data.partition.data_length = GetUint32FromArray(file_data) -
   5360A:	2817      	ld         al, @(+0x28, y)
   5360B:	FB00      	**prefx    0xFB
   5360C:	B99C      	bsr        -0x547 <GetUint32FromArray:0x530C5[p]>
   5360D:	FC34      	add        al, #-0x4
   5360E:	FF40      	addc       ah, #-0x1
   5360F:	6400      	**prefx    0x64
   53610:	6C25      	st         al, @0x646C <g_otau_data+0x10>
   53611:	6400      	**prefx    0x64
   53612:	6B21      	st         ah, @0x646B <g_otau_data+0xF>
                                                PARTITION_HEADER_TYPE_SIZE -
                                                PARTITION_HEADER_NUMBER_SIZE;
            g_otau_data.partition.type = GetUint16FromArray(file_data +
   53613:	2817      	ld         al, @(+0x28, y)
   53614:	0434      	add        al, #+0x4
   53615:	FB00      	**prefx    0xFB
   53616:	A99C      	bsr        -0x557 <GetUint16FromArray:0x530BF[p]>
   53617:	6400      	**prefx    0x64
   53618:	6825      	st         al, @0x6468 <g_otau_data+0xC>
                                        PARTITION_HEADER_LENGTH_OFFSET );
            /*
             * App Store ID are Logical since they are swapped each upgrade,
             * User Store IDs are Physical
             */
            if ( g_otau_data.partition.type == APP_STORE )
   53619:	0284      	cmp        al, #+0x2
   5361A:	08F0      	bne        +0x8 <.JTBASE101+0xA6:0x53622[p]>
            {
                g_otau_data.partition.id = getAppStoreToUpgrade(   g_otau_data.app_id,
   5361B:	6400      	**prefx    0x64
   5361C:	6315      	ld         al, @0x6463 <g_otau_data+0x7>
   5361D:	6400      	**prefx    0x64
   5361E:	6511      	ld         ah, @0x6465 <g_otau_data+0x9>
   5361F:	FD00      	**prefx    0xFD
   53620:	9B9C      	bsr        -0x365 <getAppStoreToUpgrade:0x532BB[p]>
   53621:	06E0      	bra        +0x6 <.JTBASE101+0xAB:0x53627[p]>
                                                                g_otau_data.cs_id);

            } else
            {
                g_otau_data.partition.id = GetUint16FromArray(file_data +
   53622:	281B      	ld         x, @(+0x28, y)
   53623:	0638      	add        x, #+0x6
   53624:	E315      	ld         al, @0xFFE3 <register uxl>
   53625:	FB00      	**prefx    0xFB
   53626:	999C      	bsr        -0x567 <GetUint16FromArray:0x530BF[p]>
   53627:	6400      	**prefx    0x64
   53628:	6925      	st         al, @0x6469 <g_otau_data+0xD>
            }
            /*
             * Notify the application of the partition information, and allow
             * the application to modify the ID and Type
             */
            event_data.partition_info.partition_type = g_otau_data.partition.type;
   53629:	6400      	**prefx    0x64
   5362A:	6811      	ld         ah, @0x6468 <g_otau_data+0xC>
   5362B:	0B23      	st         ah, @(+0xB, y)
            event_data.partition_info.partition_id = g_otau_data.partition.id;
   5362C:	6400      	**prefx    0x64
   5362D:	6915      	ld         al, @0x6469 <g_otau_data+0xD>
   5362E:	0C27      	st         al, @(+0xC, y)
            event_data.partition_info.partition_size = g_otau_data.partition.data_length;
   5362F:	6400      	**prefx    0x64
   53630:	6B11      	ld         ah, @0x646B <g_otau_data+0xF>
   53631:	6400      	**prefx    0x64
   53632:	6C19      	ld         x, @0x646C <g_otau_data+0x10>
   53633:	0E2B      	st         x, @(+0xE, y)
   53634:	0D23      	st         ah, @(+0xD, y)
            notifyApplication(gaia_otau_event_partition_info, &event_data);
   53635:	0314      	ld         al, #+0x3
   53636:	E411      	ld         ah, @0xFFE4 <register uy>
   53637:	0B30      	add        ah, #+0xB
   53638:	FC00      	**prefx    0xFC
   53639:	5A9C      	bsr        -0x3A6 <notifyApplication:0x53293[p]>
            g_otau_data.partition.type = event_data.partition_info.partition_type;
   5363A:	0B1B      	ld         x, @(+0xB, y)
   5363B:	6400      	**prefx    0x64
   5363C:	6829      	st         x, @0x6468 <g_otau_data+0xC>
            g_otau_data.partition.id = event_data.partition_info.partition_id;
   5363D:	0C13      	ld         ah, @(+0xC, y)
   5363E:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5363F:	6400      	**prefx    0x64
   53640:	6921      	st         ah, @0x6469 <g_otau_data+0xD>

            /* convert the partition length to the internal format used by
             * the Store firmware */
            if ( storage_size_encode( g_otau_data.partition.data_length,
   53641:	6400      	**prefx    0x64
   53642:	6C15      	ld         al, @0x646C <g_otau_data+0x10>
   53643:	2027      	st         al, @(+0x20, y)
   53644:	6400      	**prefx    0x64
   53645:	6B11      	ld         ah, @0x646B <g_otau_data+0xF>
   53646:	1F23      	st         ah, @(+0x1F, y)
*/
/****************************************************************************/
static status_t storage_size_encode(memory_address_t size, uint16 *result)
{

    if (size <= MAX_SIZE_1B)
   53647:	07F0      	bne        +0x7 <.JTBASE101+0xD2:0x5364E[p]>
   53648:	2013      	ld         ah, @(+0x20, y)
   53649:	4000      	**prefx    0x40
   5364A:	0080      	cmp        ah, #+0x4000
   5364B:	03F8      	bcc        +0x3 <.JTBASE101+0xD2:0x5364E[p]>
    {
         /* Encode in units of 1 byte */
         *result = (uint16)size | FLAG_1B;
   5364C:	E015      	ld         al, @0xFFE0 <register ah>
   5364D:	2EE0      	bra        +0x2E <.JTBASE101+0xFF:0x5367B[p]>
         return sys_status_success;
    }

    if (size <= MAX_SIZE_16B)
   5364E:	1F13      	ld         ah, @(+0x1F, y)
   5364F:	0480      	cmp        ah, #+0x4
   53650:	12F8      	bcc        +0x12 <.JTBASE101+0xE6:0x53662[p]>
   53651:	0380      	cmp        ah, #+0x3
   53652:	04F0      	bne        +0x4 <.JTBASE101+0xDA:0x53656[p]>
   53653:	2013      	ld         ah, @(+0x20, y)
   53654:	F180      	cmp        ah, #-0xF
   53655:	0DF8      	bcc        +0xD <.JTBASE101+0xE6:0x53662[p]>
    {
         /* Check number is an exact multiple of 16 bytes */
         if (size & REMAINDER_16B)
   53656:	2013      	ld         ah, @(+0x20, y)
   53657:	E015      	ld         al, @0xFFE0 <register ah>
   53658:	0FC4      	and        al, #0xF
   53659:	0100      	**prefx    0x1
   5365A:	1EF0      	bne        +0x11E <.JTBASE101+0x1FC:0x53778[p]>
             return sys_status_bad_value;
         }

         /* Encode in units of 16 bytes */
         size = size >> SHIFT_16B;
         *result = (uint16)size | FLAG_16B;
   5365B:	2017      	ld         al, @(+0x20, y)
   5365C:	1F13      	ld         ah, @(+0x1F, y)
   5365D:	0009      	**unsigned
   5365E:	04A4      	lsr        #0x4
   5365F:	4000      	**prefx    0x40
   53660:	00B4      	or         al, #+0x4000
   53661:	1AE0      	bra        +0x1A <.JTBASE101+0xFF:0x5367B[p]>
         return sys_status_success;
    }

    if (size <= MAX_SIZE_4KB)
   53662:	1F17      	ld         al, @(+0x1F, y)
   53663:	0400      	**prefx    0x4
   53664:	0084      	cmp        al, #+0x400
   53665:	0100      	**prefx    0x1
   53666:	12F8      	bcc        +0x112 <.JTBASE101+0x1FC:0x53778[p]>
   53667:	0400      	**prefx    0x4
   53668:	FF84      	cmp        al, #+0x3FF
   53669:	06F0      	bne        +0x6 <.JTBASE101+0xF3:0x5366F[p]>
   5366A:	2017      	ld         al, @(+0x20, y)
   5366B:	F000      	**prefx    0xF0
   5366C:	0184      	cmp        al, #-0xFFF
   5366D:	0100      	**prefx    0x1
   5366E:	0AF8      	bcc        +0x10A <.JTBASE101+0x1FC:0x53778[p]>
    {
         /* Check number is an exact multiple of 4K bytes */
         if (size & REMAINDER_4KB)
   5366F:	2013      	ld         ah, @(+0x20, y)
   53670:	E015      	ld         al, @0xFFE0 <register ah>
   53671:	1000      	**prefx    0x10
   53672:	FFC4      	and        al, #0xFFF
   53673:	0100      	**prefx    0x1
   53674:	04F0      	bne        +0x104 <.JTBASE101+0x1FC:0x53778[p]>
             return sys_status_bad_value;
         }

         /* Encode in units of 4K bytes */
         size = size >> SHIFT_4KB;
         *result = (uint16)size | FLAG_4KB;
   53675:	2017      	ld         al, @(+0x20, y)
   53676:	1F13      	ld         ah, @(+0x1F, y)
   53677:	0009      	**unsigned
   53678:	0CA4      	lsr        #0xC
   53679:	8000      	**prefx    0x80
   5367A:	00B4      	or         al, #-0x8000
   5367B:	6400      	**prefx    0x64
   5367C:	6A25      	st         al, @0x646A <g_otau_data+0xE>
                 * few seconds for large devices. Wait for the confirmation
                 * from the firmware before sending the confirmation to the
                 * host.
                 * See GaiaOtauHandleStoreUpdateMsg()
                 */
                switch ( g_otau_data.partition.type )
   5367D:	0288      	cmp        x, #+0x2
   5367E:	04F4      	beq        +0x4 <.JTBASE101+0x106:0x53682[p]>
   5367F:	0488      	cmp        x, #+0x4
   53680:	14F0      	bne        +0x14 <.JTBASE101+0x118:0x53694[p]>
   53681:	0AE0      	bra        +0xA <.JTBASE101+0x10F:0x5368B[p]>
                {
                    /* Application Stores swap between two application partitions */
                    case APP_STORE:
                        g_otau_data.app_upgraded = TRUE;
   53682:	0114      	ld         al, #+0x1
   53683:	6400      	**prefx    0x64
   53684:	6625      	st         al, @0x6466 <g_otau_data+0xA>
                        StoreUpdate_SetStoreId( g_otau_data.partition.id,
   53685:	6400      	**prefx    0x64
   53686:	6A19      	ld         x, @0x646A <g_otau_data+0xE>
   53687:	002B      	st         x, @(0x0, y)
   53688:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   53689:	0210      	ld         ah, #+0x2
   5368A:	06E0      	bra        +0x6 <.JTBASE101+0x114:0x53690[p]>
                                                g_otau_data.partition.store_size);
                        break;

                    /* User stores aren't double buffered, so update in-place */
                    case USER_STORE:
                        StoreUpdate_SetStoreId( g_otau_data.partition.id,
   5368B:	6400      	**prefx    0x64
   5368C:	6A11      	ld         ah, @0x646A <g_otau_data+0xE>
   5368D:	0023      	st         ah, @(0x0, y)
   5368E:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5368F:	0410      	ld         ah, #+0x4
   53690:	FC00      	**prefx    0xFC
   53691:	CA00      	**prefx    0xCA
   53692:	BB9C      	bsr        -0x43645 <StoreUpdate_SetStoreId:0x1004D[p]>
   53693:	05E0      	bra        +0x5 <.JTBASE101+0x11C:0x53698[p]>
                                                g_otau_data.partition.type,
                                                g_otau_data.partition.store_size);
                        break;

                    default:    /* unknown store type */
                        upgradeDeviceSendErrorInd(device_id,
   53694:	2317      	ld         al, @(+0x23, y)
   53695:	4810      	ld         ah, #+0x48
   53696:	FD00      	**prefx    0xFD
   53697:	A19C      	bsr        -0x35F <upgradeDeviceSendErrorInd:0x53338[p]>
            }
            else
            {
                upgradeDeviceSendErrorInd(device_id, UPGRADE_HOST_ERROR_OEM_VALIDATION_FAILED_PARTITION_HEADER2);
            }
            g_otau_data.data_transfer_state = data_transfer_state_partition_data;
   53698:	0514      	ld         al, #+0x5
   53699:	6400      	**prefx    0x64
   5369A:	5D25      	st         al, @0x645D <g_otau_data+0x1>
   5369B:	0100      	**prefx    0x1
   5369C:	E0E0      	bra        +0xE0 <.JTBASE101+0x200:0x5377C[p]>
             * Store the partition data in to the store
             * The first packet includes the "Store Header", which will
             * automatically be added by the Store firmware, so
             * this is skipped (4 Words, 8 octets)
             */
            if(g_otau_data.bytes_transferred == 0)  /* first packet, skip Store Header */
   5369D:	6400      	**prefx    0x64
   5369E:	5E15      	ld         al, @0x645E <g_otau_data+0x2>
   5369F:	6400      	**prefx    0x64
   536A0:	5FB5      	or         al, @0x645F <g_otau_data+0x3>
   536A1:	21F0      	bne        +0x21 <.JTBASE101+0x146:0x536C2[p]>
            {
                SwapBytes(  length - STORE_HEADER_SIZE_OCTETS,
   536A2:	271B      	ld         x, @(+0x27, y)
   536A3:	F838      	add        x, #-0x8
   536A4:	222B      	st         x, @(+0x22, y)
   536A5:	2813      	ld         ah, @(+0x28, y)
   536A6:	0830      	add        ah, #+0x8
   536A7:	2823      	st         ah, @(+0x28, y)
   536A8:	E415      	ld         al, @0xFFE4 <register uy>
   536A9:	0B34      	add        al, #+0xB
   536AA:	0027      	st         al, @(0x0, y)
   536AB:	E315      	ld         al, @0xFFE3 <register uxl>
   536AC:	FA00      	**prefx    0xFA
   536AD:	339C      	bsr        -0x5CD <SwapBytes:0x530E0[p]>
                            file_data + STORE_HEADER_SIZE_OCTETS,
                            store_buffer);
                StoreUpdate_WriteChunk(length - STORE_HEADER_SIZE_OCTETS, store_buffer);
   536AE:	2217      	ld         al, @(+0x22, y)
   536AF:	E411      	ld         ah, @0xFFE4 <register uy>
   536B0:	0B30      	add        ah, #+0xB
   536B1:	FC00      	**prefx    0xFC
   536B2:	CA00      	**prefx    0xCA
   536B3:	B99C      	bsr        -0x43647 <StoreUpdate_WriteChunk:0x1006C[p]>
                g_otau_data.bytes_transferred += length;
   536B4:	0010      	ld         ah, #+0x0
   536B5:	2717      	ld         al, @(+0x27, y)
   536B6:	6400      	**prefx    0x64
   536B7:	5F35      	add        al, @0x645F <g_otau_data+0x3>
   536B8:	6400      	**prefx    0x64
   536B9:	5E41      	addc       ah, @0x645E <g_otau_data+0x2>
   536BA:	6400      	**prefx    0x64
   536BB:	5F25      	st         al, @0x645F <g_otau_data+0x3>
   536BC:	6400      	**prefx    0x64
   536BD:	5E21      	st         ah, @0x645E <g_otau_data+0x2>
                g_otau_data.partition.last_chunk = FALSE;
   536BE:	0018      	ld         x, #+0x0
   536BF:	6400      	**prefx    0x64
   536C0:	6D29      	st         x, @0x646D <g_otau_data+0x11>
   536C1:	18E0      	bra        +0x18 <.JTBASE101+0x15D:0x536D9[p]>
            }
            else    /* not the first packet, write to Flash as normal */
            {
                SwapBytes(length, file_data, store_buffer);
   536C2:	E411      	ld         ah, @0xFFE4 <register uy>
   536C3:	0B30      	add        ah, #+0xB
   536C4:	0023      	st         ah, @(0x0, y)
   536C5:	2717      	ld         al, @(+0x27, y)
   536C6:	2813      	ld         ah, @(+0x28, y)
   536C7:	FA00      	**prefx    0xFA
   536C8:	189C      	bsr        -0x5E8 <SwapBytes:0x530E0[p]>
                StoreUpdate_WriteChunk(length, store_buffer);
   536C9:	2717      	ld         al, @(+0x27, y)
   536CA:	E411      	ld         ah, @0xFFE4 <register uy>
   536CB:	0B30      	add        ah, #+0xB
   536CC:	FC00      	**prefx    0xFC
   536CD:	CA00      	**prefx    0xCA
   536CE:	9E9C      	bsr        -0x43662 <StoreUpdate_WriteChunk:0x1006C[p]>
                g_otau_data.bytes_transferred += length;
   536CF:	0010      	ld         ah, #+0x0
   536D0:	2717      	ld         al, @(+0x27, y)
   536D1:	6400      	**prefx    0x64
   536D2:	5F35      	add        al, @0x645F <g_otau_data+0x3>
   536D3:	6400      	**prefx    0x64
   536D4:	5E41      	addc       ah, @0x645E <g_otau_data+0x2>
   536D5:	6400      	**prefx    0x64
   536D6:	5F25      	st         al, @0x645F <g_otau_data+0x3>
   536D7:	6400      	**prefx    0x64
   536D8:	5E21      	st         ah, @0x645E <g_otau_data+0x2>

            /*
             * continue to request packets until a complete partition has been
             * received
             */
            bytes_remaining = g_otau_data.partition.data_length - g_otau_data.bytes_transferred;
   536D9:	6400      	**prefx    0x64
   536DA:	6C15      	ld         al, @0x646C <g_otau_data+0x10>
   536DB:	6400      	**prefx    0x64
   536DC:	6B11      	ld         ah, @0x646B <g_otau_data+0xF>
   536DD:	6400      	**prefx    0x64
   536DE:	5F55      	sub        al, @0x645F <g_otau_data+0x3>
   536DF:	6400      	**prefx    0x64
   536E0:	5E61      	subc       ah, @0x645E <g_otau_data+0x2>
   536E1:	F925      	st         al, @0xFFF9 <(scratchpad)>
   536E2:	F821      	st         ah, @0xFFF8 <(scratchpad)>
            if(bytes_remaining == 0)
   536E3:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   536E4:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   536E5:	11F0      	bne        +0x11 <.JTBASE101+0x17A:0x536F6[p]>
            {
                g_otau_data.partition.last_chunk = TRUE;
   536E6:	0114      	ld         al, #+0x1
   536E7:	6400      	**prefx    0x64
   536E8:	6D25      	st         al, @0x646D <g_otau_data+0x11>
                g_otau_data.bytes_transferred = 0;
   536E9:	0018      	ld         x, #+0x0
   536EA:	6400      	**prefx    0x64
   536EB:	5E29      	st         x, @0x645E <g_otau_data+0x2>
   536EC:	6400      	**prefx    0x64
   536ED:	5E18      	ld         x, #+0x645E
   536EE:	0010      	ld         ah, #+0x0
   536EF:	0122      	st         ah, @(+0x1, x)
                g_otau_data.data_transfer_state = data_transfer_state_unknown_header_id;
   536F0:	0314      	ld         al, #+0x3
   536F1:	6400      	**prefx    0x64
   536F2:	5D25      	st         al, @0x645D <g_otau_data+0x1>
                upgradeDeviceSendDataBytesReq(device_id, UNKNOWN_TYPE_ID_SIZE );
   536F3:	0818      	ld         x, #+0x8
   536F4:	002B      	st         x, @(0x0, y)
   536F5:	7FE0      	bra        +0x7F <.JTBASE101+0x1F8:0x53774[p]>
            }
            else if(bytes_remaining < DATA_REQUEST_SIZE)
   536F6:	F899      	tst        @0xFFF8 <(scratchpad)>
   536F7:	1EF0      	bne        +0x1E <.JTBASE101+0x199:0x53715[p]>
   536F8:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   536F9:	0C80      	cmp        ah, #+0xC
   536FA:	1BF8      	bcc        +0x1B <.JTBASE101+0x199:0x53715[p]>
                upgradeDeviceSendDataBytesReq(device_id, bytes_remaining);
   536FB:	0023      	st         ah, @(0x0, y)
   536FC:	77E0      	bra        +0x77 <.JTBASE101+0x1F7:0x53773[p]>
        /*
         * Parse the footer to get the length of the OEM signature, then request
         * the signature bytes
         */
        case data_transfer_state_footer_length:
            g_otau_data.oem_signature.length = GetUint32FromArray(&file_data[FOOTER_LENGTH_OFFSET - FOOTER_ID_SIZE]);
   536FD:	2817      	ld         al, @(+0x28, y)
   536FE:	FA00      	**prefx    0xFA
   536FF:	C69C      	bsr        -0x63A <GetUint32FromArray:0x530C5[p]>
   53700:	F925      	st         al, @0xFFF9 <(scratchpad)>
   53701:	6500      	**prefx    0x65
   53702:	9118      	ld         x, #+0x6491
   53703:	6500      	**prefx    0x65
   53704:	9121      	st         ah, @0x6491 <___libgatt_lib_db_642+0xD>
   53705:	0126      	st         al, @(+0x1, x)
            if ( g_otau_data.oem_signature.length == 0 )    /* no signature, so assume validation always succeeds */
   53706:	E015      	ld         al, @0xFFE0 <register ah>
   53707:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   53708:	5EF4      	beq        +0x5E <.JTBASE101+0x1EA:0x53766[p]>
            {
                g_otau_data.validation_done = TRUE;
            }
            else  /* request the signature bytes */
            {
                g_otau_data.bytes_transferred = 0;
   53709:	0014      	ld         al, #+0x0
   5370A:	6400      	**prefx    0x64
   5370B:	5E25      	st         al, @0x645E <g_otau_data+0x2>
   5370C:	CE26      	st         al, @(-0x32, x)
                g_otau_data.data_transfer_state = data_transfer_state_footer_oem_signature;
   5370D:	0714      	ld         al, #+0x7
   5370E:	6400      	**prefx    0x64
   5370F:	5D25      	st         al, @0x645D <g_otau_data+0x1>
                upgradeDeviceSendDataBytesReq(  device_id,
   53710:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   53711:	E099      	tst        @0xFFE0 <register ah>
   53712:	03F0      	bne        +0x3 <.JTBASE101+0x199:0x53715[p]>
   53713:	0D84      	cmp        al, #+0xD
   53714:	5BFC      	bcs        +0x5B <.JTBASE101+0x1F3:0x5376F[p]>
   53715:	0C14      	ld         al, #+0xC
   53716:	59E0      	bra        +0x59 <.JTBASE101+0x1F3:0x5376F[p]>

            /* check this chunk of signature against what has been calculated so far */
            check_failed = FALSE;
            for ( i = 0; i < length; i += 2  )
            {
                SHA256_word = ( file_data[i] << 8 )  + file_data[i+1];
   53717:	211B      	ld         x, @(+0x21, y)
   53718:	0016      	ld         al, @(0x0, x)
   53719:	08A0      	asl        #0x8
   5371A:	E111      	ld         ah, @0xFFE1 <register al>
   5371B:	0132      	add        ah, @(+0x1, x)
   5371C:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5371D:	0238      	add        x, #+0x2
   5371E:	212B      	st         x, @(+0x21, y)

                if ( g_otau_data.oem_signature.sha256_sum[(g_otau_data.bytes_transferred + i ) / 2] != SHA256_word  )
   5371F:	0010      	ld         ah, #+0x0
   53720:	FE17      	ld         al, @(-0x2, y)
   53721:	FF37      	add        al, @(-0x1, y)
   53722:	FB41      	addc       ah, @0xFFFB <(scratchpad)>
   53723:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   53724:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   53725:	0009      	**unsigned
   53726:	01A4      	lsr        #0x1
   53727:	E119      	ld         x, @0xFFE1 <register al>
   53728:	6400      	**prefx    0x64
   53729:	5C38      	add        x, #+0x645C
   5372A:	1516      	ld         al, @(+0x15, x)
   5372B:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   5372C:	07F4      	beq        +0x7 <.JTBASE101+0x1B7:0x53733[p]>
                {
                    /* signature check failed */
                    upgradeDeviceSendErrorInd(  device_id,
   5372D:	2317      	ld         al, @(+0x23, y)
   5372E:	3D10      	ld         ah, #+0x3D
   5372F:	FC00      	**prefx    0xFC
   53730:	089C      	bsr        -0x3F8 <upgradeDeviceSendErrorInd:0x53338[p]>
   53731:	0118      	ld         x, #+0x1
   53732:	08E0      	bra        +0x8 <.JTBASE101+0x1BE:0x5373A[p]>
            uint32 bytes_remaining;
            bool check_failed;

            /* check this chunk of signature against what has been calculated so far */
            check_failed = FALSE;
            for ( i = 0; i < length; i += 2  )
   53733:	FE17      	ld         al, @(-0x2, y)
   53734:	0234      	add        al, #+0x2
   53735:	FE27      	st         al, @(-0x2, y)
   53736:	FE1B      	ld         x, @(-0x2, y)
   53737:	278B      	cmp        x, @(+0x27, y)
   53738:	DFFC      	bcs        -0x21 <.JTBASE101+0x19B:0x53717[p]>
   53739:	0018      	ld         x, #+0x0
                    break;
                }
            }

            /* retrieve remaining signature bytes, and check for end */
            g_otau_data.bytes_transferred += length;
   5373A:	0010      	ld         ah, #+0x0
   5373B:	2717      	ld         al, @(+0x27, y)
   5373C:	6400      	**prefx    0x64
   5373D:	5F35      	add        al, @0x645F <g_otau_data+0x3>
   5373E:	6400      	**prefx    0x64
   5373F:	5E41      	addc       ah, @0x645E <g_otau_data+0x2>
   53740:	F925      	st         al, @0xFFF9 <(scratchpad)>
   53741:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   53742:	6400      	**prefx    0x64
   53743:	5F25      	st         al, @0x645F <g_otau_data+0x3>
   53744:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   53745:	6400      	**prefx    0x64
   53746:	5E25      	st         al, @0x645E <g_otau_data+0x2>
            bytes_remaining = g_otau_data.oem_signature.length - g_otau_data.bytes_transferred;
   53747:	6500      	**prefx    0x65
   53748:	9211      	ld         ah, @0x6492 <___libgatt_lib_db_642+0xE>
   53749:	6500      	**prefx    0x65
   5374A:	9115      	ld         al, @0x6491 <___libgatt_lib_db_642+0xD>
   5374B:	FA25      	st         al, @0xFFFA <(scratchpad)>
            if ( !check_failed )
   5374C:	E399      	tst        @0xFFE3 <register uxl>
   5374D:	2FF0      	bne        +0x2F <.JTBASE101+0x200:0x5377C[p]>
                }
            }

            /* retrieve remaining signature bytes, and check for end */
            g_otau_data.bytes_transferred += length;
            bytes_remaining = g_otau_data.oem_signature.length - g_otau_data.bytes_transferred;
   5374E:	E015      	ld         al, @0xFFE0 <register ah>
   5374F:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   53750:	F955      	sub        al, @0xFFF9 <(scratchpad)>
   53751:	F861      	subc       ah, @0xFFF8 <(scratchpad)>
   53752:	F925      	st         al, @0xFFF9 <(scratchpad)>
   53753:	F821      	st         ah, @0xFFF8 <(scratchpad)>
            if ( !check_failed )
            {
                if(more_data_flag == UPGRADE_DATA_LAST_PACKET)
   53754:	2417      	ld         al, @(+0x24, y)
   53755:	0184      	cmp        al, #+0x1
   53756:	0DF0      	bne        +0xD <.JTBASE101+0x1E7:0x53763[p]>
                {
                    if ( bytes_remaining != 0)  /* not enough bytes received, fail */
   53757:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   53758:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   53759:	06F4      	beq        +0x6 <.JTBASE101+0x1E3:0x5375F[p]>
                    {
                        upgradeDeviceSendErrorInd(  device_id,
   5375A:	2317      	ld         al, @(+0x23, y)
   5375B:	3D10      	ld         ah, #+0x3D
   5375C:	FC00      	**prefx    0xFC
   5375D:	DB9C      	bsr        -0x425 <upgradeDeviceSendErrorInd:0x53338[p]>
   5375E:	1EE0      	bra        +0x1E <.JTBASE101+0x200:0x5377C[p]>
                                                    UPGRADE_HOST_ERROR_OEM_VALIDATION_FAILED_FOOTER);
                    } else
                    {
                        g_otau_data.validation_done = TRUE;
   5375F:	0118      	ld         x, #+0x1
   53760:	6400      	**prefx    0x64
   53761:	6029      	st         x, @0x6460 <g_otau_data+0x4>
   53762:	1AE0      	bra        +0x1A <.JTBASE101+0x200:0x5377C[p]>
                    }
                }
                else  /* continue to request signature bytes */
                {
                    if(bytes_remaining == 0)
   53763:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   53764:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   53765:	05F0      	bne        +0x5 <.JTBASE101+0x1EE:0x5376A[p]>
                    {
                        /* signature received and all bytes matched */
                        g_otau_data.validation_done = TRUE;
   53766:	0110      	ld         ah, #+0x1
   53767:	6400      	**prefx    0x64
   53768:	6021      	st         ah, @0x6460 <g_otau_data+0x4>
   53769:	13E0      	bra        +0x13 <.JTBASE101+0x200:0x5377C[p]>
                    }
                    else if(bytes_remaining < DATA_REQUEST_SIZE)
   5376A:	F899      	tst        @0xFFF8 <(scratchpad)>
   5376B:	06F0      	bne        +0x6 <.JTBASE101+0x1F5:0x53771[p]>
   5376C:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5376D:	0C84      	cmp        al, #+0xC
   5376E:	03F8      	bcc        +0x3 <.JTBASE101+0x1F5:0x53771[p]>
                    {
                        upgradeDeviceSendDataBytesReq(device_id, bytes_remaining);
   5376F:	0027      	st         al, @(0x0, y)
   53770:	03E0      	bra        +0x3 <.JTBASE101+0x1F7:0x53773[p]>
                    }
                    else
                    {
                        upgradeDeviceSendDataBytesReq(device_id, DATA_REQUEST_SIZE);
   53771:	0C18      	ld         x, #+0xC
   53772:	002B      	st         x, @(0x0, y)
   53773:	0010      	ld         ah, #+0x0
   53774:	2317      	ld         al, @(+0x23, y)
   53775:	FD00      	**prefx    0xFD
   53776:	839C      	bsr        -0x37D <upgradeDeviceSendDataBytesReq:0x533F9[p]>
   53777:	05E0      	bra        +0x5 <.JTBASE101+0x200:0x5377C[p]>
                        break;
                }
            }
            else
            {
                upgradeDeviceSendErrorInd(device_id, UPGRADE_HOST_ERROR_OEM_VALIDATION_FAILED_PARTITION_HEADER2);
   53778:	2317      	ld         al, @(+0x23, y)
   53779:	3B10      	ld         ah, #+0x3B
   5377A:	FF00      	**prefx    0xFF
   5377B:	1BE0      	bra        -0xE5 <.JTBASE101+0x11A:0x53696[p]>
        }
            break;

        default: break;
    }
}
   5377C:	D90F      	leave      #-0x27

0x0005377D <hostCommitTimeoutDelete>:
    }
}


static void hostCommitTimeoutDelete(void)
{
   5377D:	FE0B      	enter      #-0x2
    TimerDelete( g_otau_data.commit_timeout_tid );
   5377E:	6500      	**prefx    0x65
   5377F:	9B18      	ld         x, #+0x649B
   53780:	0016      	ld         al, @(0x0, x)
   53781:	FC00      	**prefx    0xFC
   53782:	B500      	**prefx    0xB5
   53783:	A09C      	bsr        -0x44B60 <TimerDelete:0xEC23[p]>
    g_otau_data.commit_timeout_tid = TIMER_INVALID;
   53784:	0014      	ld         al, #+0x0
   53785:	6500      	**prefx    0x65
   53786:	9B18      	ld         x, #+0x649B
   53787:	0026      	st         al, @(0x0, x)
}
   53788:	FE0F      	leave      #-0x2

0x00053789 <runNewApp>:
 *
 *  RETURNS
 *      None
 *---------------------------------------------------------------------------*/
static void runNewApp(bool commit_flag)
{
   53789:	FE0B      	enter      #-0x2
    if ( commit_flag == FALSE ) /* temporarily run the new app */
   5378A:	E199      	tst        @0xFFE1 <register al>
   5378B:	0AF0      	bne        +0xA <runNewApp+0xC:0x53795[p]>
    {
        /* temporarily run the new application when next reset */
        StoreUpdate_RunAppOnce( getAppStoreToUpgrade(   g_otau_data.app_id,
   5378C:	6400      	**prefx    0x64
   5378D:	6315      	ld         al, @0x6463 <g_otau_data+0x7>
   5378E:	6400      	**prefx    0x64
   5378F:	6511      	ld         ah, @0x6465 <g_otau_data+0x9>
   53790:	FB00      	**prefx    0xFB
   53791:	2A9C      	bsr        -0x4D6 <getAppStoreToUpgrade:0x532BB[p]>
   53792:	4B00      	**prefx    0x4B
   53793:	CC9C      	bsr        +0x4ACC <StoreUpdate_RunAppOnce:0x5825F[p]>
   53794:	0AE0      	bra        +0xA <runNewApp+0x15:0x5379E[p]>
                                                        g_otau_data.cs_id));
    }
    else                      /* commit the new app */
    {
        StoreUpdate_RunApp( getAppStoreToUpgrade(   g_otau_data.app_id,
   53795:	6400      	**prefx    0x64
   53796:	6315      	ld         al, @0x6463 <g_otau_data+0x7>
   53797:	6400      	**prefx    0x64
   53798:	6511      	ld         ah, @0x6465 <g_otau_data+0x9>
   53799:	FB00      	**prefx    0xFB
   5379A:	219C      	bsr        -0x4DF <getAppStoreToUpgrade:0x532BB[p]>
   5379B:	FC00      	**prefx    0xFC
   5379C:	C900      	**prefx    0xC9
   5379D:	A49C      	bsr        -0x4375C <StoreUpdate_RunApp:0x10041[p]>
        /*
         * the current running application is now committed and will be the
         * default application
         */
    }
}
   5379E:	FE0F      	leave      #-0x2

0x0005379F <GaiaOtauHandleVmUpgradeControlCommand>:
 *      None
 *---------------------------------------------------------------------------*/
extern void GaiaOtauHandleVmUpgradeControlCommand(  device_handle_id device_id,
                                                    uint16 payload_size,
                                                    uint8 *payload)
{
   5379F:	F20B      	enter      #-0xE
   537A0:	0B27      	st         al, @(+0xB, y)
    uint16 msgId;

    /* Reset the commit timeout */
    if ( g_otau_data.resume_point == UPGRADE_RESUME_POINT_POST_REBOOT )
   537A1:	6400      	**prefx    0x64
   537A2:	6715      	ld         al, @0x6467 <g_otau_data+0xB>
   537A3:	0384      	cmp        al, #+0x3
   537A4:	04F0      	bne        +0x4 <GaiaOtauHandleVmUpgradeControlCommand+0x9:0x537A8[p]>
    {
        hostCommitTimeoutDelete();
   537A5:	D89C      	bsr        -0x28 <hostCommitTimeoutDelete:0x5377D[p]>
        hostCommitTimeoutCreate();
   537A6:	FD00      	**prefx    0xFD
   537A7:	749C      	bsr        -0x28C <hostCommitTimeoutCreate:0x5351B[p]>
    }

    /* get the payload */
    msgId = GetUint8FromArray(payload);
   537A8:	0E17      	ld         al, @(+0xE, y)
   537A9:	F900      	**prefx    0xF9
   537AA:	119C      	bsr        -0x6EF <GetUint8FromArray:0x530BB[p]>
   537AB:	E119      	ld         x, @0xFFE1 <register al>
    switch(msgId)
   537AC:	FF38      	add        x, #-0x1
   537AD:	1688      	cmp        x, #+0x16
   537AE:	0100      	**prefx    0x1
   537AF:	31F8      	bcc        +0x131 <.JTBASE178+0x12D:0x538E0[p]>
   537B0:	A100      	**prefx    0xA1
   537B1:	3F1A      	ld         x, @(-0x5EC1, x)
   537B2:	FE09      	brxl       

0x000537B3 <.JTBASE178>:
    {
        case UPGRADE_HOST_SYNC_REQ:
        {
            GAIA_OTAU_EVENT_T event_data;
            event_data.upgrade_starting.continue_immediately = TRUE;
   537B3:	0114      	ld         al, #+0x1
   537B4:	0227      	st         al, @(+0x2, y)

            notifyApplication(gaia_otau_event_upgrade_starting, &event_data);
   537B5:	0014      	ld         al, #+0x0
   537B6:	E411      	ld         ah, @0xFFE4 <register uy>
   537B7:	0230      	add        ah, #+0x2
   537B8:	FB00      	**prefx    0xFB
   537B9:	DA9C      	bsr        -0x526 <notifyApplication:0x53293[p]>

            /* Save local data for later use */
            g_otau_data.device_id = device_id;
   537BA:	0B1B      	ld         x, @(+0xB, y)
   537BB:	6500      	**prefx    0x65
   537BC:	9829      	st         x, @0x6498 <___libgatt_lib_db_642+0x14>
            g_otau_data.new_in_progress_id = GetUint32FromArray(&payload[GAIA_COMMAND_VM_UPGRADE_CONTROL_DATA_OFFSET]);
   537BD:	0E17      	ld         al, @(+0xE, y)
   537BE:	0334      	add        al, #+0x3
   537BF:	0E27      	st         al, @(+0xE, y)
   537C0:	F900      	**prefx    0xF9
   537C1:	049C      	bsr        -0x6FC <GetUint32FromArray:0x530C5[p]>
   537C2:	6500      	**prefx    0x65
   537C3:	9725      	st         al, @0x6497 <___libgatt_lib_db_642+0x13>
   537C4:	6500      	**prefx    0x65
   537C5:	9621      	st         ah, @0x6496 <___libgatt_lib_db_642+0x12>

            if ( event_data.upgrade_starting.continue_immediately )
   537C6:	029B      	tst        @(+0x2, y)
   537C7:	05F4      	beq        +0x5 <.JTBASE178+0x19:0x537CC[p]>
            {
                handleVmUpgradeHostSyncReq();
   537C8:	FC00      	**prefx    0xFC
   537C9:	A29C      	bsr        -0x45E <handleVmUpgradeHostSyncReq:0x5336B[p]>
   537CA:	0100      	**prefx    0x1
   537CB:	15E0      	bra        +0x115 <.JTBASE178+0x12D:0x538E0[p]>
            }
            else
            {
                /* Wait for application to call GaiaOtauContinueUpgrade */
                g_otau_data.transfer_state = CTRL_WAIT_FOR_DEVICE;
   537CC:	0218      	ld         x, #+0x2
   537CD:	6400      	**prefx    0x64
   537CE:	5C29      	st         x, @0x645C <g_otau_data>
   537CF:	0100      	**prefx    0x1
   537D0:	10E0      	bra        +0x110 <.JTBASE178+0x12D:0x538E0[p]>
            }
        }
            break;

        case UPGRADE_HOST_START_REQ:
            if ( g_otau_data.transfer_state != CTRL_PRE_FAIL )
   537D1:	6400      	**prefx    0x64
   537D2:	5C15      	ld         al, @0x645C <g_otau_data>
   537D3:	0A84      	cmp        al, #+0xA
   537D4:	04F4      	beq        +0x4 <.JTBASE178+0x25:0x537D8[p]>
            {
                upgradeDeviceSendStartCfm(device_id, UPGRADE_HOST_SUCCESS);
   537D5:	0B17      	ld         al, @(+0xB, y)
   537D6:	0010      	ld         ah, #+0x0
   537D7:	03E0      	bra        +0x3 <.JTBASE178+0x27:0x537DA[p]>
            }
            else  /* most likely == CTRL_PRE_FAIL */
            {
                upgradeDeviceSendStartCfm(device_id, UPGRADE_HOST_ERROR_APP_NOT_READY);
   537D8:	0B17      	ld         al, @(+0xB, y)
   537D9:	1D10      	ld         ah, #+0x1D
   537DA:	FD00      	**prefx    0xFD
   537DB:	559C      	bsr        -0x2AB <upgradeDeviceSendStartCfm:0x53530[p]>
   537DC:	0100      	**prefx    0x1
   537DD:	03E0      	bra        +0x103 <.JTBASE178+0x12D:0x538E0[p]>
        /*
         * request the first 8 bytes of the VM upgrade file header,
         * this contains the ID/version string
         */
        case UPGRADE_HOST_START_DATA_REQ:
            g_otau_data.transfer_state = CTRL_IN_PROGRESS;
   537DE:	0414      	ld         al, #+0x4
   537DF:	6400      	**prefx    0x64
   537E0:	5C25      	st         al, @0x645C <g_otau_data>
            g_otau_data.data_transfer_state = data_transfer_state_header_id;
   537E1:	0018      	ld         x, #+0x0
   537E2:	6400      	**prefx    0x64
   537E3:	5D29      	st         x, @0x645D <g_otau_data+0x1>
            g_otau_data.app_upgraded = FALSE;
   537E4:	6400      	**prefx    0x64
   537E5:	6629      	st         x, @0x6466 <g_otau_data+0xA>
            upgradeDeviceSendDataBytesReq(device_id, HEADER_ID_SIZE);
   537E6:	0814      	ld         al, #+0x8
   537E7:	0027      	st         al, @(0x0, y)
   537E8:	0010      	ld         ah, #+0x0
   537E9:	0B17      	ld         al, @(+0xB, y)
   537EA:	FC00      	**prefx    0xFC
   537EB:	0E9C      	bsr        -0x3F2 <upgradeDeviceSendDataBytesReq:0x533F9[p]>
   537EC:	0100      	**prefx    0x1
   537ED:	F3E0      	bra        +0xF3 <.JTBASE178+0x12D:0x538E0[p]>
         */
        case UPGRADE_HOST_DATA:
        {
            uint16 upgrade_data_length;

            upgrade_data_length = GetUint16FromArray(&payload[GAIA_COMMAND_VM_UPGRADE_CONTROL_LENGTH_OFFSET]);
   537EE:	0E17      	ld         al, @(+0xE, y)
   537EF:	0134      	add        al, #+0x1
   537F0:	F900      	**prefx    0xF9
   537F1:	CE9C      	bsr        -0x732 <GetUint16FromArray:0x530BF[p]>
            /*
             * The Packet contains [MORE_DATA flag][UPGRADE DATA ...]
             * Remove the MORE_DATA flag, pass as an argument, then pass
             * the offset of just the upgrade data.
             */
            handleOtauFileTransfer( device_id,
   537F2:	0E1B      	ld         x, @(+0xE, y)
   537F3:	0312      	ld         ah, @(+0x3, x)
   537F4:	FF34      	add        al, #-0x1
   537F5:	0027      	st         al, @(0x0, y)
   537F6:	0438      	add        x, #+0x4
   537F7:	012B      	st         x, @(+0x1, y)
   537F8:	0B17      	ld         al, @(+0xB, y)
   537F9:	FD00      	**prefx    0xFD
   537FA:	729C      	bsr        -0x28E <handleOtauFileTransfer:0x5356C[p]>
   537FB:	0100      	**prefx    0x1
   537FC:	E4E0      	bra        +0xE4 <.JTBASE178+0x12D:0x538E0[p]>
        /*
         * Host indicates Abort
         * Clear any NVM variables, and respond.
         */
        case UPGRADE_HOST_ABORT_REQ:
            setDefaultNVM();
   537FD:	FB00      	**prefx    0xFB
   537FE:	0B9C      	bsr        -0x4F5 <setDefaultNVM:0x53309[p]>
{
    uint16 byte_index;
    uint8 response[VM_UPGRADE_MSG_SIZE + UPGRADE_HOST_ABORT_CFM_PAYLOAD_SIZE];

    byte_index = 0;
    byte_index += SetUint8InArray(response,byte_index,GAIA_EVENT_VMUP_PACKET);
   537FF:	1214      	ld         al, #+0x12
   53800:	0027      	st         al, @(0x0, y)
   53801:	E415      	ld         al, @0xFFE4 <register uy>
   53802:	0234      	add        al, #+0x2
   53803:	0010      	ld         ah, #+0x0
   53804:	F900      	**prefx    0xF9
   53805:	8C9C      	bsr        -0x774 <SetUint8InArray:0x53091[p]>
   53806:	0A27      	st         al, @(+0xA, y)
    byte_index += SetUint8InArray(response,byte_index,UPGRADE_HOST_ABORT_CFM);
   53807:	0818      	ld         x, #+0x8
   53808:	002B      	st         x, @(0x0, y)
   53809:	E415      	ld         al, @0xFFE4 <register uy>
   5380A:	0234      	add        al, #+0x2
   5380B:	0A13      	ld         ah, @(+0xA, y)
   5380C:	F900      	**prefx    0xF9
   5380D:	849C      	bsr        -0x77C <SetUint8InArray:0x53091[p]>
   5380E:	E111      	ld         ah, @0xFFE1 <register al>
    byte_index += SetUint16InArray(response,byte_index,UPGRADE_HOST_ABORT_CFM_PAYLOAD_SIZE);
   5380F:	0A33      	add        ah, @(+0xA, y)
   53810:	0014      	ld         al, #+0x0
   53811:	0027      	st         al, @(0x0, y)
   53812:	E415      	ld         al, @0xFFE4 <register uy>
   53813:	0234      	add        al, #+0x2
   53814:	F900      	**prefx    0xF9
   53815:	839C      	bsr        -0x77D <SetUint16InArray:0x53098[p]>

    GaiaSendPacket( device_id,
   53816:	0418      	ld         x, #+0x4
   53817:	002B      	st         x, @(0x0, y)
   53818:	E415      	ld         al, @0xFFE4 <register uy>
   53819:	0234      	add        al, #+0x2
   5381A:	0127      	st         al, @(+0x1, y)
   5381B:	0B17      	ld         al, @(+0xB, y)
   5381C:	4000      	**prefx    0x40
   5381D:	0310      	ld         ah, #+0x4003
   5381E:	F900      	**prefx    0xF9
   5381F:	0E9C      	bsr        -0x6F2 <GaiaSendPacket:0x5312D[p]>
         * Clear any NVM variables, and respond.
         */
        case UPGRADE_HOST_ABORT_REQ:
            setDefaultNVM();
            upgradeDeviceSendAbortCfm(device_id);
            notifyApplication(gaia_otau_event_upgrade_failed, NULL);
   53820:	0714      	ld         al, #+0x7
   53821:	0010      	ld         ah, #+0x0
   53822:	FA00      	**prefx    0xFA
   53823:	709C      	bsr        -0x590 <notifyApplication:0x53293[p]>

            /*
             * If this is the new uncommitted application, rollback to the previous application
             * The reboot will happen once the disconnect has occurred
             */
            if ( isNewApp() )
   53824:	FB00      	**prefx    0xFB
   53825:	8D9C      	bsr        -0x573 <isNewApp:0x532B2[p]>
   53826:	E199      	tst        @0xFFE1 <register al>
   53827:	06F4      	beq        +0x6 <.JTBASE178+0x7A:0x5382D[p]>
            {
                g_otau_data.disconnect_reset = TRUE;
   53828:	0118      	ld         x, #+0x1
   53829:	6400      	**prefx    0x64
   5382A:	6129      	st         x, @0x6461 <g_otau_data+0x5>
   5382B:	0100      	**prefx    0x1
   5382C:	AFE0      	bra        +0xAF <.JTBASE178+0x128:0x538DB[p]>
            } else
            {
                /* reset the state variables in case the host makes another attempt
                 * without reconnecting
                 */
                initStateVariables();
   5382D:	FA00      	**prefx    0xFA
   5382E:	4E9C      	bsr        -0x5B2 <initStateVariables:0x5327C[p]>
   5382F:	0100      	**prefx    0x1
   53830:	B0E0      	bra        +0xB0 <.JTBASE178+0x12D:0x538E0[p]>
            }
            break;

        case UPGRADE_HOST_IS_CSR_VALID_DONE_REQ:
            if(g_otau_data.validation_done)
   53831:	6400      	**prefx    0x64
   53832:	6099      	tst        @0x6460 <g_otau_data+0x4>
   53833:	1EF4      	beq        +0x1E <.JTBASE178+0x9E:0x53851[p]>
{
    uint16 byte_index;
    uint8 response[VM_UPGRADE_MSG_SIZE + UPGRADE_TRANSFER_COMPLETE_IND_PAYLOAD_SIZE];

    byte_index = 0;
    byte_index += SetUint8InArray(response,byte_index,GAIA_EVENT_VMUP_PACKET);
   53834:	1214      	ld         al, #+0x12
   53835:	0027      	st         al, @(0x0, y)
   53836:	E415      	ld         al, @0xFFE4 <register uy>
   53837:	0234      	add        al, #+0x2
   53838:	0010      	ld         ah, #+0x0
   53839:	F800      	**prefx    0xF8
   5383A:	579C      	bsr        -0x7A9 <SetUint8InArray:0x53091[p]>
   5383B:	0927      	st         al, @(+0x9, y)
    byte_index += SetUint8InArray(response,byte_index,UPGRADE_HOST_TRANSFER_COMPLETE_IND);
   5383C:	0B18      	ld         x, #+0xB
   5383D:	002B      	st         x, @(0x0, y)
   5383E:	E415      	ld         al, @0xFFE4 <register uy>
   5383F:	0234      	add        al, #+0x2
   53840:	0913      	ld         ah, @(+0x9, y)
   53841:	F800      	**prefx    0xF8
   53842:	4F9C      	bsr        -0x7B1 <SetUint8InArray:0x53091[p]>
   53843:	E111      	ld         ah, @0xFFE1 <register al>
    byte_index += SetUint16InArray(response,byte_index,UPGRADE_TRANSFER_COMPLETE_IND_PAYLOAD_SIZE);
   53844:	0933      	add        ah, @(+0x9, y)
   53845:	0014      	ld         al, #+0x0
   53846:	0027      	st         al, @(0x0, y)
   53847:	E415      	ld         al, @0xFFE4 <register uy>
   53848:	0234      	add        al, #+0x2
   53849:	F800      	**prefx    0xF8
   5384A:	4E9C      	bsr        -0x7B2 <SetUint16InArray:0x53098[p]>

    GaiaSendPacket( device_id,
   5384B:	0418      	ld         x, #+0x4
   5384C:	002B      	st         x, @(0x0, y)
   5384D:	E415      	ld         al, @0xFFE4 <register uy>
   5384E:	0234      	add        al, #+0x2
   5384F:	0127      	st         al, @(+0x1, y)
   53850:	46E0      	bra        +0x46 <.JTBASE178+0xE3:0x53896[p]>
            {
                upgradeDeviceSendTransferCompleteInd(device_id);
            }
            else
            {
                upgradeDeviceSendValidationCfm(device_id);
   53851:	0B17      	ld         al, @(+0xB, y)
   53852:	FC00      	**prefx    0xFC
   53853:	E99C      	bsr        -0x417 <upgradeDeviceSendValidationCfm:0x5343C[p]>
   53854:	0100      	**prefx    0x1
   53855:	8BE0      	bra        +0x8B <.JTBASE178+0x12D:0x538E0[p]>
        /*
         * Midpoint of the upgrade, do the first reboot to run the app on a
         * temporary basis. Don't reboot if this is only a User Store upgrade
         */
        case UPGRADE_HOST_TRANSFER_COMPLETE_RES:
            if ( payload[UPGRADE_TRANSFER_COMPLETE_RES_ACTION_OFFSET] ==
   53856:	0E1B      	ld         x, @(+0xE, y)
   53857:	039A      	tst        @(+0x3, x)
   53858:	0100      	**prefx    0x1
   53859:	87F0      	bne        +0x87 <.JTBASE178+0x12D:0x538E0[p]>
                    UPGRADE_TRANSFER_COMPLETE_RES_ACTION_CONTINUE_UPGRADE )
            {
                g_otau_data.resume_point = UPGRADE_RESUME_POINT_POST_REBOOT;
   5385A:	0314      	ld         al, #+0x3
   5385B:	6400      	**prefx    0x64
   5385C:	6725      	st         al, @0x6467 <g_otau_data+0xB>
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void saveCurrentNVM(void)
{
    Nvm_Write((uint16*)&g_otau_data.InProgressIdentifier,
   5385D:	6500      	**prefx    0x65
   5385E:	9319      	ld         x, @0x6493 <___libgatt_lib_db_642+0xF>
   5385F:	002B      	st         x, @(0x0, y)
   53860:	6500      	**prefx    0x65
   53861:	9414      	ld         al, #+0x6494
   53862:	0210      	ld         ah, #+0x2
   53863:	D000      	**prefx    0xD0
   53864:	E19C      	bsr        -0x301F <Nvm_Write:0x50845[p]>
             sizeof(g_otau_data.InProgressIdentifier),
             g_otau_data.nvm_offset + GAIA_NVM_IN_PROGRESS_IDENTIFIER_OFFSET);
    Nvm_Write((uint16*)&g_otau_data.resume_point,
   53865:	6500      	**prefx    0x65
   53866:	9315      	ld         al, @0x6493 <___libgatt_lib_db_642+0xF>
   53867:	0234      	add        al, #+0x2
   53868:	0027      	st         al, @(0x0, y)
   53869:	6400      	**prefx    0x64
   5386A:	6714      	ld         al, #+0x6467
   5386B:	0110      	ld         ah, #+0x1
   5386C:	D000      	**prefx    0xD0
   5386D:	D89C      	bsr        -0x3028 <Nvm_Write:0x50845[p]>

                /*
                 * if the application was upgraded, then set the new application
                 * to run after the reset
                 */
                if ( g_otau_data.app_upgraded )
   5386E:	6400      	**prefx    0x64
   5386F:	6699      	tst        @0x6466 <g_otau_data+0xA>
   53870:	04F4      	beq        +0x4 <.JTBASE178+0xC1:0x53874[p]>
                {
                    runNewApp(FALSE);
   53871:	0014      	ld         al, #+0x0
   53872:	FF00      	**prefx    0xFF
   53873:	169C      	bsr        -0xEA <runNewApp:0x53789[p]>
                }

                /* reboot will occur after the disconnect */
                notifyApplicationRebootWarning();
   53874:	FA00      	**prefx    0xFA
   53875:	339C      	bsr        -0x5CD <notifyApplicationRebootWarning:0x532A8[p]>
                g_otau_data.disconnect_reset = TRUE;
   53876:	0114      	ld         al, #+0x1
   53877:	6400      	**prefx    0x64
   53878:	6125      	st         al, @0x6461 <g_otau_data+0x5>
   53879:	64E0      	bra        +0x64 <.JTBASE178+0x12A:0x538DD[p]>
{
    uint16 byte_index;
    uint8 response[VM_UPGRADE_MSG_SIZE + UPGRADE_HOST_COMMIT_REQ_PAYLOAD_SIZE];

    byte_index = 0;
    byte_index += SetUint8InArray(response,byte_index,GAIA_EVENT_VMUP_PACKET);
   5387A:	1218      	ld         x, #+0x12
   5387B:	002B      	st         x, @(0x0, y)
   5387C:	E415      	ld         al, @0xFFE4 <register uy>
   5387D:	0234      	add        al, #+0x2
   5387E:	0010      	ld         ah, #+0x0
   5387F:	F800      	**prefx    0xF8
   53880:	119C      	bsr        -0x7EF <SetUint8InArray:0x53091[p]>
   53881:	0827      	st         al, @(+0x8, y)
    byte_index += SetUint8InArray(response,byte_index,UPGRADE_HOST_COMMIT_REQ);
   53882:	0F14      	ld         al, #+0xF
   53883:	0027      	st         al, @(0x0, y)
   53884:	E415      	ld         al, @0xFFE4 <register uy>
   53885:	0234      	add        al, #+0x2
   53886:	0813      	ld         ah, @(+0x8, y)
   53887:	F800      	**prefx    0xF8
   53888:	099C      	bsr        -0x7F7 <SetUint8InArray:0x53091[p]>
   53889:	E111      	ld         ah, @0xFFE1 <register al>
    byte_index += SetUint16InArray(response,byte_index,UPGRADE_HOST_COMMIT_REQ_PAYLOAD_SIZE);
   5388A:	0833      	add        ah, @(+0x8, y)
   5388B:	0018      	ld         x, #+0x0
   5388C:	002B      	st         x, @(0x0, y)
   5388D:	E415      	ld         al, @0xFFE4 <register uy>
   5388E:	0234      	add        al, #+0x2
   5388F:	F800      	**prefx    0xF8
   53890:	089C      	bsr        -0x7F8 <SetUint16InArray:0x53098[p]>

    GaiaSendPacket( device_id,
   53891:	0414      	ld         al, #+0x4
   53892:	0027      	st         al, @(0x0, y)
   53893:	E419      	ld         x, @0xFFE4 <register uy>
   53894:	0238      	add        x, #+0x2
   53895:	012B      	st         x, @(+0x1, y)
   53896:	0B17      	ld         al, @(+0xB, y)
   53897:	4000      	**prefx    0x40
   53898:	0310      	ld         ah, #+0x4003
   53899:	F900      	**prefx    0xF9
   5389A:	939C      	bsr        -0x76D <GaiaSendPacket:0x5312D[p]>
   5389B:	45E0      	bra        +0x45 <.JTBASE178+0x12D:0x538E0[p]>
        case UPGRADE_HOST_COMMIT_CFM:
        {
            uint8 action;

            /* clear the NVM variables because this upgrade has completed */
            setDefaultNVM();
   5389C:	FA00      	**prefx    0xFA
   5389D:	6C9C      	bsr        -0x594 <setDefaultNVM:0x53309[p]>

            /* act on the result from the host */
            action = GetUint8FromArray(&payload[GAIA_COMMAND_VM_UPGRADE_CONTROL_DATA_OFFSET]);
   5389E:	0E17      	ld         al, @(+0xE, y)
   5389F:	0334      	add        al, #+0x3
   538A0:	0E27      	st         al, @(+0xE, y)
   538A1:	F800      	**prefx    0xF8
   538A2:	199C      	bsr        -0x7E7 <GetUint8FromArray:0x530BB[p]>
            if ( action == UPGRADE_COMMIT_CFM_ACTION_COMMIT_UPGRADE )
   538A3:	E199      	tst        @0xFFE1 <register al>
   538A4:	30F0      	bne        +0x30 <.JTBASE178+0x121:0x538D4[p]>
            {
                hostCommitTimeoutDelete();
   538A5:	FF00      	**prefx    0xFF
   538A6:	D79C      	bsr        -0x129 <hostCommitTimeoutDelete:0x5377D[p]>
{
    uint16 byte_index;
    uint8 response[VM_UPGRADE_MSG_SIZE + UPGRADE_HOST_UPDATE_COMPLETE_IND_PAYLOAD_SIZE];

    byte_index = 0;
    byte_index += SetUint8InArray(response,byte_index,GAIA_EVENT_VMUP_PACKET);
   538A7:	1218      	ld         x, #+0x12
   538A8:	002B      	st         x, @(0x0, y)
   538A9:	E415      	ld         al, @0xFFE4 <register uy>
   538AA:	0234      	add        al, #+0x2
   538AB:	0010      	ld         ah, #+0x0
   538AC:	F800      	**prefx    0xF8
   538AD:	E49C      	bsr        -0x81C <SetUint8InArray:0x53091[p]>
   538AE:	0727      	st         al, @(+0x7, y)
    byte_index += SetUint8InArray(response,byte_index,UPGRADE_HOST_COMPLETE_IND);
   538AF:	1214      	ld         al, #+0x12
   538B0:	0027      	st         al, @(0x0, y)
   538B1:	E415      	ld         al, @0xFFE4 <register uy>
   538B2:	0234      	add        al, #+0x2
   538B3:	0713      	ld         ah, @(+0x7, y)
   538B4:	F800      	**prefx    0xF8
   538B5:	DC9C      	bsr        -0x824 <SetUint8InArray:0x53091[p]>
   538B6:	E111      	ld         ah, @0xFFE1 <register al>
    byte_index += SetUint16InArray(response,byte_index,UPGRADE_HOST_UPDATE_COMPLETE_IND_PAYLOAD_SIZE);
   538B7:	0733      	add        ah, @(+0x7, y)
   538B8:	0018      	ld         x, #+0x0
   538B9:	002B      	st         x, @(0x0, y)
   538BA:	E415      	ld         al, @0xFFE4 <register uy>
   538BB:	0234      	add        al, #+0x2
   538BC:	F800      	**prefx    0xF8
   538BD:	DB9C      	bsr        -0x825 <SetUint16InArray:0x53098[p]>

    GaiaSendPacket( device_id,
   538BE:	0414      	ld         al, #+0x4
   538BF:	0027      	st         al, @(0x0, y)
   538C0:	E419      	ld         x, @0xFFE4 <register uy>
   538C1:	0238      	add        x, #+0x2
   538C2:	012B      	st         x, @(+0x1, y)
   538C3:	0B17      	ld         al, @(+0xB, y)
   538C4:	4000      	**prefx    0x40
   538C5:	0310      	ld         ah, #+0x4003
   538C6:	F800      	**prefx    0xF8
   538C7:	669C      	bsr        -0x79A <GaiaSendPacket:0x5312D[p]>
            action = GetUint8FromArray(&payload[GAIA_COMMAND_VM_UPGRADE_CONTROL_DATA_OFFSET]);
            if ( action == UPGRADE_COMMIT_CFM_ACTION_COMMIT_UPGRADE )
            {
                hostCommitTimeoutDelete();
                upgradeDeviceSendUpdateCompleteInd(device_id);
                notifyApplication(gaia_otau_event_new_app_commit, NULL);
   538C8:	0614      	ld         al, #+0x6
   538C9:	0010      	ld         ah, #+0x0
   538CA:	FA00      	**prefx    0xFA
   538CB:	C89C      	bsr        -0x638 <notifyApplication:0x53293[p]>

                /* Commit the application if we are the new application,
                 * and then delete the old application once it's committed */
                if ( isNewApp() )
   538CC:	FA00      	**prefx    0xFA
   538CD:	E59C      	bsr        -0x61B <isNewApp:0x532B2[p]>
   538CE:	E199      	tst        @0xFFE1 <register al>
   538CF:	11F4      	beq        +0x11 <.JTBASE178+0x12D:0x538E0[p]>
                {
                    runNewApp(TRUE);
   538D0:	0114      	ld         al, #+0x1
   538D1:	FF00      	**prefx    0xFF
   538D2:	B79C      	bsr        -0x149 <runNewApp:0x53789[p]>
   538D3:	0DE0      	bra        +0xD <.JTBASE178+0x12D:0x538E0[p]>
            else    /* don't commit */
            {
                /* roll back to the previous application, once the disconnect
                 * has gone through
                 */
                g_otau_data.disconnect_reset = TRUE;
   538D4:	0114      	ld         al, #+0x1
   538D5:	6400      	**prefx    0x64
   538D6:	6125      	st         al, @0x6461 <g_otau_data+0x5>
                notifyApplication(gaia_otau_event_upgrade_failed, NULL);
   538D7:	0714      	ld         al, #+0x7
   538D8:	0010      	ld         ah, #+0x0
   538D9:	FA00      	**prefx    0xFA
   538DA:	B99C      	bsr        -0x647 <notifyApplication:0x53293[p]>
                notifyApplicationRebootWarning();
   538DB:	FA00      	**prefx    0xFA
   538DC:	CC9C      	bsr        -0x634 <notifyApplicationRebootWarning:0x532A8[p]>
                CMDisconnect(device_id);
   538DD:	0B17      	ld         al, @(+0xB, y)
   538DE:	D100      	**prefx    0xD1
   538DF:	349C      	bsr        -0x2ECC <CMDisconnect:0x50A13[p]>
            break;

        default:
            break;
    }
}
   538E0:	F20F      	leave      #-0xE

0x000538E1 <GaiaOtauInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void GaiaOtauInit(bool nvm_start_fresh, uint16 *nvm_offset)
{
   538E1:	FB0B      	enter      #-0x5
   538E2:	0127      	st         al, @(+0x1, y)
   538E3:	0223      	st         ah, @(+0x2, y)
    /* Initialise g_otau_data */
    g_otau_data.transfer_state = CTRL_PRE_FAIL; /* assume failure until CS store keys can be read */
   538E4:	0A14      	ld         al, #+0xA
   538E5:	6400      	**prefx    0x64
   538E6:	5C25      	st         al, @0x645C <g_otau_data>
    initStateVariables();
   538E7:	FA00      	**prefx    0xFA
   538E8:	949C      	bsr        -0x66C <initStateVariables:0x5327C[p]>
    g_otau_data.commit_timeout_tid = TIMER_INVALID;
   538E9:	0018      	ld         x, #+0x0
   538EA:	6500      	**prefx    0x65
   538EB:	9B29      	st         x, @0x649B <___libgatt_lib_db_642+0x17>
    g_otau_data.cs_id_read = FALSE;
   538EC:	6400      	**prefx    0x64
   538ED:	6429      	st         x, @0x6464 <g_otau_data+0x8>
                               GAIA_OTAU_SERVICE_ID,
                               GAIA_OTAU_SERVICE_PADDED_LEN,
                               GAIA_OTAU_SERVICE_VERSION);
    }
#endif
    g_otau_data.nvm_offset = *nvm_offset;
   538EE:	021B      	ld         x, @(+0x2, y)
   538EF:	0016      	ld         al, @(0x0, x)
   538F0:	6500      	**prefx    0x65
   538F1:	9325      	st         al, @0x6493 <___libgatt_lib_db_642+0xF>

    if(!nvm_start_fresh)
   538F2:	019B      	tst        @(+0x1, y)
   538F3:	11F0      	bne        +0x11 <GaiaOtauInit+0x23:0x53904[p]>
    {
        /* Read GAIA OTAu InProgressIdentifier config */
        Nvm_Read((uint16*)&g_otau_data.InProgressIdentifier,
   538F4:	0027      	st         al, @(0x0, y)
   538F5:	6500      	**prefx    0x65
   538F6:	9414      	ld         al, #+0x6494
   538F7:	0210      	ld         ah, #+0x2
   538F8:	CF00      	**prefx    0xCF
   538F9:	639C      	bsr        -0x309D <Nvm_Read:0x5085C[p]>
                 sizeof(g_otau_data.InProgressIdentifier),
                 g_otau_data.nvm_offset + GAIA_NVM_IN_PROGRESS_IDENTIFIER_OFFSET);

        /* Read GAIA OTAu Resume Point config */
        Nvm_Read((uint16*)&g_otau_data.resume_point,
   538FA:	6500      	**prefx    0x65
   538FB:	9315      	ld         al, @0x6493 <___libgatt_lib_db_642+0xF>
   538FC:	0234      	add        al, #+0x2
   538FD:	0027      	st         al, @(0x0, y)
   538FE:	6400      	**prefx    0x64
   538FF:	6714      	ld         al, #+0x6467
   53900:	0110      	ld         ah, #+0x1
   53901:	CF00      	**prefx    0xCF
   53902:	5A9C      	bsr        -0x30A6 <Nvm_Read:0x5085C[p]>
   53903:	03E0      	bra        +0x3 <GaiaOtauInit+0x25:0x53906[p]>
                 sizeof(g_otau_data.resume_point),
                 g_otau_data.nvm_offset + GAIA_NVM_RESUME_POINT_OFFSET);
    }
    else    /* write default values */
    {
        setDefaultNVM();
   53904:	FA00      	**prefx    0xFA
   53905:	049C      	bsr        -0x5FC <setDefaultNVM:0x53309[p]>
    }

    /* Increment the offset by the number of words of NVM memory required
     * by GAIA OTAu service
     */
    *nvm_offset += GAIA_OTAU_SERVICE_NVM_MEMORY_WORDS;
   53906:	021B      	ld         x, @(+0x2, y)
   53907:	0016      	ld         al, @(0x0, x)
   53908:	0334      	add        al, #+0x3
   53909:	0026      	st         al, @(0x0, x)
    g_otau_data.transfer_state = CTRL_PRE_FAIL; /* assume failure until CS store keys can be read */
    initStateVariables();
    g_otau_data.commit_timeout_tid = TIMER_INVALID;
    g_otau_data.cs_id_read = FALSE;
    readDataFromNVM(nvm_start_fresh, nvm_offset);
    g_otau_data.callback = NULL;
   5390A:	0014      	ld         al, #+0x0
   5390B:	6500      	**prefx    0x65
   5390C:	9925      	st         al, @0x6499 <___libgatt_lib_db_642+0x15>
   5390D:	6500      	**prefx    0x65
   5390E:	9A25      	st         al, @0x649A <___libgatt_lib_db_642+0x16>

    /*
     * request the current AppId and the CS key AppId because it might
     * be needed later
     */
    g_otau_data.app_id = StoreUpdate_GetAppId().id;
   5390F:	4900      	**prefx    0x49
   53910:	529C      	bsr        +0x4952 <StoreUpdate_GetAppId:0x58262[p]>
   53911:	6400      	**prefx    0x64
   53912:	6321      	st         ah, @0x6463 <g_otau_data+0x7>
    ConfigStoreReadKey(CS_ID_APP_STORE_ID, STORE_ID_UNUSED);
   53913:	2314      	ld         al, #+0x23
   53914:	0010      	ld         ah, #+0x0
   53915:	4700      	**prefx    0x47
   53916:	BF9C      	bsr        +0x46BF <ConfigStoreReadKey:0x57FD5[p]>

    /* if this is the new, but temporary application, create a reboot timer in
     * case the Host never makes contact again
     */
    if ( g_otau_data.resume_point == UPGRADE_RESUME_POINT_POST_REBOOT )
   53917:	6400      	**prefx    0x64
   53918:	6715      	ld         al, @0x6467 <g_otau_data+0xB>
   53919:	0384      	cmp        al, #+0x3
   5391A:	06F0      	bne        +0x6 <GaiaOtauInit+0x3F:0x53920[p]>
    {
        hostCommitTimeoutCreate();
    }
}
   5391B:	031B      	ld         x, @(+0x3, y)
   5391C:	040E      	ld         xh, @(+0x4, y)
   5391D:	053C      	add        y, #+0x5
    /* if this is the new, but temporary application, create a reboot timer in
     * case the Host never makes contact again
     */
    if ( g_otau_data.resume_point == UPGRADE_RESUME_POINT_POST_REBOOT )
    {
        hostCommitTimeoutCreate();
   5391E:	FC00      	**prefx    0xFC
   5391F:	FCE0      	bra        -0x404 <hostCommitTimeoutCreate:0x5351B[p]>
    }
}
   53920:	FB0F      	leave      #-0x5

0x00053921 <GAIASendNotification>:
 *
 *----------------------------------------------------------------------------*/
extern cm_status_code GAIASendNotification( device_handle_id device_id,
                                            uint16 packet_length,
                                            uint8 *packet)
{
   53921:	F70B      	enter      #-0x9
   53922:	0527      	st         al, @(+0x5, y)
   53923:	0623      	st         ah, @(+0x6, y)
    CM_VALUE_NOTIFICATION_T notification;
    cm_status_code retval;

    /* Check if the GAIA state is not suspended */
    if(!GAIA_NOTIFICATION_ENABLED)
   53924:	6500      	**prefx    0x65
   53925:	A015      	ld         al, @0x64A0 <g_gaia_data>
   53926:	0184      	cmp        al, #+0x1
   53927:	04F4      	beq        +0x4 <GAIASendNotification+0xA:0x5392B[p]>
   53928:	0014      	ld         al, #+0x0
   53929:	0427      	st         al, @(+0x4, y)
   5392A:	1DE0      	bra        +0x1D <GAIASendNotification+0x26:0x53947[p]>
    {
        return cm_status_success;
    }

    /* Create notification */
    notification.device_id = device_id;
   5392B:	0517      	ld         al, @(+0x5, y)
   5392C:	0027      	st         al, @(0x0, y)
    notification.handle = HANDLE_GAIA_RESPONSE_ENDPOINT;
   5392D:	0514      	ld         al, #+0x5
   5392E:	0127      	st         al, @(+0x1, y)
    notification.size_value = packet_length;
   5392F:	0617      	ld         al, @(+0x6, y)
   53930:	0327      	st         al, @(+0x3, y)
    notification.value = packet;
   53931:	0917      	ld         al, @(+0x9, y)
   53932:	0227      	st         al, @(+0x2, y)

    /* Send the notification and check for send error. */
    retval = CMSendValueNotificationExt(&notification);
   53933:	E415      	ld         al, @0xFFE4 <register uy>
   53934:	DA00      	**prefx    0xDA
   53935:	209C      	bsr        -0x25E0 <CMSendValueNotificationExt:0x51355[p]>
   53936:	0427      	st         al, @(+0x4, y)

    if ( retval != sys_status_success )
   53937:	10F4      	beq        +0x10 <GAIASendNotification+0x26:0x53947[p]>
    {
        /* make a copy of the arguments and resend this message later */
        g_gaia_data.GAIASendNotification_args.device_id = device_id;
   53938:	0517      	ld         al, @(+0x5, y)
   53939:	6500      	**prefx    0x65
   5393A:	A125      	st         al, @0x64A1 <g_gaia_data+0x1>
        g_gaia_data.GAIASendNotification_args.packet_length = packet_length;
   5393B:	0617      	ld         al, @(+0x6, y)
   5393C:	6500      	**prefx    0x65
   5393D:	A225      	st         al, @0x64A2 <g_gaia_data+0x2>
        MemCopy( g_gaia_data.GAIASendNotification_args.packet, packet, packet_length );
   5393E:	6500      	**prefx    0x65
   5393F:	A310      	ld         ah, #+0x64A3
   53940:	091B      	ld         x, @(+0x9, y)
   53941:	FD09      	bc2        
        g_gaia_data.waiting_for_fw_buffer = TRUE;
   53942:	0114      	ld         al, #+0x1
   53943:	6500      	**prefx    0x65
   53944:	BA25      	st         al, @0x64BA <g_gaia_data+0x1A>
        CMSignalNumberOfCompletedPackets();
   53945:	D000      	**prefx    0xD0
   53946:	329C      	bsr        -0x2FCE <CMSignalNumberOfCompletedPackets:0x50978[p]>
    }
    return retval;
}
   53947:	0417      	ld         al, @(+0x4, y)
   53948:	F70F      	leave      #-0x9

0x00053949 <handleConnMgrProcedureEvent>:
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
static void handleConnMgrProcedureEvent (cm_event event_type,
        CM_EVENT_T *p_event_data)
{
   53949:	F60B      	enter      #-0xA
   5394A:	0723      	st         ah, @(+0x7, y)
    switch(event_type)
   5394B:	1584      	cmp        al, #+0x15
   5394C:	0DF4      	beq        +0xD <handleConnMgrProcedureEvent+0x10:0x53959[p]>
   5394D:	1684      	cmp        al, #+0x16
   5394E:	06F8      	bcc        +0x6 <handleConnMgrProcedureEvent+0xB:0x53954[p]>
   5394F:	0684      	cmp        al, #+0x6
   53950:	5CF4      	beq        +0x5C <handleConnMgrProcedureEvent+0x63:0x539AC[p]>
   53951:	0784      	cmp        al, #+0x7
   53952:	7FF0      	bne        +0x7F <handleConnMgrProcedureEvent+0x88:0x539D1[p]>
   53953:	60E0      	bra        +0x60 <handleConnMgrProcedureEvent+0x6A:0x539B3[p]>
   53954:	1684      	cmp        al, #+0x16
   53955:	1BF4      	beq        +0x1B <handleConnMgrProcedureEvent+0x27:0x53970[p]>
   53956:	1C84      	cmp        al, #+0x1C
   53957:	7AF0      	bne        +0x7A <handleConnMgrProcedureEvent+0x88:0x539D1[p]>
   53958:	6AE0      	bra        +0x6A <handleConnMgrProcedureEvent+0x79:0x539C2[p]>
    CM_ACCESS_RESPONSE_T cm_access_rsp;
    uint16 length = 0;
    uint8  *p_value = NULL;
    sys_status rc = sys_status_success;

    switch(p_event_data->handle)
   53959:	071B      	ld         x, @(+0x7, y)
   5395A:	0116      	ld         al, @(+0x1, x)
   5395B:	0584      	cmp        al, #+0x5
   5395C:	06F4      	beq        +0x6 <handleConnMgrProcedureEvent+0x19:0x53962[p]>
   5395D:	0884      	cmp        al, #+0x8
   5395E:	04F4      	beq        +0x4 <handleConnMgrProcedureEvent+0x19:0x53962[p]>
   5395F:	0A00      	**prefx    0xA
   53960:	4310      	ld         ah, #+0xA43
   53961:	02E0      	bra        +0x2 <handleConnMgrProcedureEvent+0x1A:0x53963[p]>
   53962:	0010      	ld         ah, #+0x0
            /* Let firmware handle the request */
            rc = gatt_status_irq_proceed;
            break;
    }

    cm_access_rsp.device_id = p_event_data->device_id;
   53963:	071B      	ld         x, @(+0x7, y)
   53964:	001A      	ld         x, @(0x0, x)
   53965:	022B      	st         x, @(+0x2, y)
    cm_access_rsp.handle = p_event_data->handle;
   53966:	0327      	st         al, @(+0x3, y)
    cm_access_rsp.rc = rc;
   53967:	0623      	st         ah, @(+0x6, y)
    cm_access_rsp.size_value = length;
   53968:	0014      	ld         al, #+0x0
   53969:	0527      	st         al, @(+0x5, y)
    cm_access_rsp.value = p_value;
   5396A:	0427      	st         al, @(+0x4, y)

    CMSendAccessRsp(&cm_access_rsp);
   5396B:	E415      	ld         al, @0xFFE4 <register uy>
   5396C:	0234      	add        al, #+0x2
   5396D:	DA00      	**prefx    0xDA
   5396E:	E99C      	bsr        -0x2617 <CMSendAccessRsp:0x51357[p]>
   5396F:	62E0      	bra        +0x62 <handleConnMgrProcedureEvent+0x88:0x539D1[p]>
 *
 *----------------------------------------------------------------------------*/
static void handleAccessWrite(CM_WRITE_ACCESS_T *p_event_data)
{
    CM_ACCESS_RESPONSE_T cm_access_rsp;
    uint8 *p_value = p_event_data->data;
   53970:	071B      	ld         x, @(+0x7, y)
   53971:	021A      	ld         x, @(+0x2, x)
   53972:	012B      	st         x, @(+0x1, y)
    sys_status rc = sys_status_success;
    uint16 client_config;

    switch(p_event_data->handle)
   53973:	071B      	ld         x, @(+0x7, y)
   53974:	0116      	ld         al, @(+0x1, x)
   53975:	0684      	cmp        al, #+0x6
   53976:	08F4      	beq        +0x8 <handleConnMgrProcedureEvent+0x35:0x5397E[p]>
   53977:	0884      	cmp        al, #+0x8
   53978:	1AF4      	beq        +0x1A <handleConnMgrProcedureEvent+0x49:0x53992[p]>
   53979:	0384      	cmp        al, #+0x3
   5397A:	18F4      	beq        +0x18 <handleConnMgrProcedureEvent+0x49:0x53992[p]>
   5397B:	0A00      	**prefx    0xA
   5397C:	0314      	ld         al, #+0xA03
   5397D:	16E0      	bra        +0x16 <handleConnMgrProcedureEvent+0x4A:0x53993[p]>
        case HANDLE_GAIA_RESPONSE_CLIENT_CONFIG:
            /* The GAIA protocol follows big-endian format whereas in
             * uEnergy applications, little-endian format is followed for
             * client_config words.
             */
            client_config = BufReadUint16(&p_value);
   5397E:	E415      	ld         al, @0xFFE4 <register uy>
   5397F:	0134      	add        al, #+0x1
   53980:	FC00      	**prefx    0xFC
   53981:	2600      	**prefx    0x26
   53982:	3F9C      	bsr        -0x3D9C1 <BufReadUint16:0x15FC1[p]>

            if( (client_config == gatt_client_config_notification) ||
   53983:	0184      	cmp        al, #+0x1
   53984:	042C      	bcz        +0x4 <handleConnMgrProcedureEvent+0x3F:0x53988[p]>
   53985:	0B00      	**prefx    0xB
   53986:	FD14      	ld         al, #+0xAFD
   53987:	0CE0      	bra        +0xC <handleConnMgrProcedureEvent+0x4A:0x53993[p]>
                (client_config == gatt_client_config_none))
            {
                g_gaia_data.gaia_client_config = client_config;
   53988:	6500      	**prefx    0x65
   53989:	A025      	st         al, @0x64A0 <g_gaia_data>
                Nvm_Write(  (uint16*)&g_gaia_data.gaia_client_config,
   5398A:	6500      	**prefx    0x65
   5398B:	BB15      	ld         al, @0x64BB <g_gaia_data+0x1B>
   5398C:	0027      	st         al, @(0x0, y)
   5398D:	6500      	**prefx    0x65
   5398E:	A014      	ld         al, #+0x64A0
   5398F:	0110      	ld         ah, #+0x1
   53990:	CF00      	**prefx    0xCF
   53991:	B49C      	bsr        -0x314C <Nvm_Write:0x50845[p]>
   53992:	0014      	ld         al, #+0x0
            rc = gatt_status_write_not_permitted;
            break;
    }

    /* Send ACCESS RESPONSE */
    cm_access_rsp.device_id = p_event_data->device_id;
   53993:	071B      	ld         x, @(+0x7, y)
   53994:	001A      	ld         x, @(0x0, x)
   53995:	022B      	st         x, @(+0x2, y)
    cm_access_rsp.handle = p_event_data->handle;
   53996:	071B      	ld         x, @(+0x7, y)
   53997:	011A      	ld         x, @(+0x1, x)
   53998:	032B      	st         x, @(+0x3, y)
    cm_access_rsp.rc = rc;
   53999:	0627      	st         al, @(+0x6, y)
    cm_access_rsp.size_value = 0;
   5399A:	0014      	ld         al, #+0x0
   5399B:	0527      	st         al, @(+0x5, y)
    cm_access_rsp.value = NULL;
   5399C:	0427      	st         al, @(+0x4, y)

    CMSendAccessRsp(&cm_access_rsp);
   5399D:	E415      	ld         al, @0xFFE4 <register uy>
   5399E:	0234      	add        al, #+0x2
   5399F:	DA00      	**prefx    0xDA
   539A0:	B79C      	bsr        -0x2649 <CMSendAccessRsp:0x51357[p]>

    if(p_event_data->handle == HANDLE_GAIA_COMMAND_ENDPOINT)
   539A1:	071B      	ld         x, @(+0x7, y)
   539A2:	0116      	ld         al, @(+0x1, x)
   539A3:	0384      	cmp        al, #+0x3
   539A4:	2DF0      	bne        +0x2D <handleConnMgrProcedureEvent+0x88:0x539D1[p]>
    {
        GAIAProcessCommand(p_event_data->device_id, p_event_data->length, p_event_data->data);
   539A5:	0312      	ld         ah, @(+0x3, x)
   539A6:	0216      	ld         al, @(+0x2, x)
   539A7:	0027      	st         al, @(0x0, y)
   539A8:	0016      	ld         al, @(0x0, x)
   539A9:	F800      	**prefx    0xF8
   539AA:	AE9C      	bsr        -0x852 <GAIAProcessCommand:0x53158[p]>
   539AB:	26E0      	bra        +0x26 <handleConnMgrProcedureEvent+0x88:0x539D1[p]>
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleConnNotify(CM_CONNECTION_NOTIFY_T *cm_event_data)
{
    GaiaLibHandleConnNotify(cm_event_data);
   539AC:	0717      	ld         al, @(+0x7, y)
   539AD:	F700      	**prefx    0xF7
   539AE:	799C      	bsr        -0x887 <GaiaLibHandleConnNotify:0x53127[p]>

#ifdef GAIA_OTAU_SUPPORT
    GaiaOtauHandleConnNotify(cm_event_data);
   539AF:	0717      	ld         al, @(+0x7, y)
   539B0:	F900      	**prefx    0xF9
   539B1:	399C      	bsr        -0x6C7 <GaiaOtauHandleConnNotify:0x532EA[p]>
   539B2:	1FE0      	bra        +0x1F <handleConnMgrProcedureEvent+0x88:0x539D1[p]>
 *      Nothing
 *
 *---------------------------------------------------------------------------*/
static void handleBondNotify(CM_BONDING_NOTIFY_T *cm_event_data)
{
    if(cm_event_data->result != cm_bond_res_success)
   539B3:	071B      	ld         x, @(+0x7, y)
   539B4:	079A      	tst        @(+0x7, x)
   539B5:	1CF4      	beq        +0x1C <handleConnMgrProcedureEvent+0x88:0x539D1[p]>
    {
        g_gaia_data.gaia_client_config = gatt_client_config_none;
   539B6:	0014      	ld         al, #+0x0
   539B7:	6500      	**prefx    0x65
   539B8:	A025      	st         al, @0x64A0 <g_gaia_data>

        Nvm_Write(  (uint16*)&g_gaia_data.gaia_client_config,
   539B9:	6500      	**prefx    0x65
   539BA:	BB19      	ld         x, @0x64BB <g_gaia_data+0x1B>
   539BB:	002B      	st         x, @(0x0, y)
   539BC:	6500      	**prefx    0x65
   539BD:	A014      	ld         al, #+0x64A0
   539BE:	0110      	ld         ah, #+0x1
   539BF:	CF00      	**prefx    0xCF
   539C0:	859C      	bsr        -0x317B <Nvm_Write:0x50845[p]>
   539C1:	10E0      	bra        +0x10 <handleConnMgrProcedureEvent+0x88:0x539D1[p]>
 *      none
 *
 *----------------------------------------------------------------------------*/
static void handleSignalNumberOfCompletedPackets(void)
{
    if (g_gaia_data.waiting_for_fw_buffer)
   539C2:	6500      	**prefx    0x65
   539C3:	BA99      	tst        @0x64BA <g_gaia_data+0x1A>
   539C4:	0DF4      	beq        +0xD <handleConnMgrProcedureEvent+0x88:0x539D1[p]>
    {
        g_gaia_data.waiting_for_fw_buffer = FALSE;
   539C5:	0014      	ld         al, #+0x0
   539C6:	6500      	**prefx    0x65
   539C7:	BA25      	st         al, @0x64BA <g_gaia_data+0x1A>
        GAIASendNotification(   g_gaia_data.GAIASendNotification_args.device_id,
   539C8:	6500      	**prefx    0x65
   539C9:	A318      	ld         x, #+0x64A3
   539CA:	002B      	st         x, @(0x0, y)
   539CB:	6500      	**prefx    0x65
   539CC:	A115      	ld         al, @0x64A1 <g_gaia_data+0x1>
   539CD:	6500      	**prefx    0x65
   539CE:	A211      	ld         ah, @0x64A2 <g_gaia_data+0x2>
   539CF:	FF00      	**prefx    0xFF
   539D0:	519C      	bsr        -0xAF <GAIASendNotification:0x53921[p]>
            break;

        default:
            break;
    }
}
   539D1:	F60F      	leave      #-0xA

0x000539D2 <GAIAInitServerService>:
 *  RETURNS
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void GAIAInitServerService(bool nvm_start_fresh, uint16 *nvm_offset)
{
   539D2:	FB0B      	enter      #-0x5
   539D3:	0127      	st         al, @(+0x1, y)
   539D4:	0223      	st         ah, @(+0x2, y)
    /* base GAIA library support */
    GaiaLibInit();
   539D5:	F700      	**prefx    0xF7
   539D6:	489C      	bsr        -0x8B8 <GaiaLibInit:0x5311E[p]>
        GaiaMessageDataInit();
#endif

#ifdef GAIA_OTAU_SUPPORT
        /* GAIA support for the Over The Air Upgrade support */
        GaiaOtauInit(nvm_start_fresh, nvm_offset);
   539D7:	0117      	ld         al, @(+0x1, y)
   539D8:	0213      	ld         ah, @(+0x2, y)
   539D9:	FF00      	**prefx    0xFF
   539DA:	079C      	bsr        -0xF9 <GaiaOtauInit:0x538E1[p]>
                               GAIA_SERVICE_PADDED_LEN,
                               GAIA_SERVICE_VERSION);
    }
#endif
    /* Save the NVM offset */
    g_gaia_data.nvm_offset = *nvm_offset;
   539DB:	021B      	ld         x, @(+0x2, y)
   539DC:	0016      	ld         al, @(0x0, x)
   539DD:	6500      	**prefx    0x65
   539DE:	BB25      	st         al, @0x64BB <g_gaia_data+0x1B>

    if(!nvm_start_fresh)
   539DF:	019B      	tst        @(+0x1, y)
   539E0:	08F0      	bne        +0x8 <GAIAInitServerService+0x16:0x539E8[p]>
    {
        /* Read GAIA Client Configuration */
        Nvm_Read((uint16*)&g_gaia_data.gaia_client_config,
   539E1:	0027      	st         al, @(0x0, y)
   539E2:	6500      	**prefx    0x65
   539E3:	A014      	ld         al, #+0x64A0
   539E4:	0110      	ld         ah, #+0x1
   539E5:	CE00      	**prefx    0xCE
   539E6:	769C      	bsr        -0x318A <Nvm_Read:0x5085C[p]>
   539E7:	0AE0      	bra        +0xA <GAIAInitServerService+0x1F:0x539F1[p]>
                 sizeof(g_gaia_data.gaia_client_config),
                 g_gaia_data.nvm_offset + NVM_GAIA_CLIENT_CONFIG_OFFSET);
    }
    else
    {
        g_gaia_data.gaia_client_config = gatt_client_config_none;
   539E8:	0018      	ld         x, #+0x0
   539E9:	6500      	**prefx    0x65
   539EA:	A029      	st         x, @0x64A0 <g_gaia_data>
        Nvm_Write((uint16*)&g_gaia_data.gaia_client_config,
   539EB:	0027      	st         al, @(0x0, y)
   539EC:	6500      	**prefx    0x65
   539ED:	A014      	ld         al, #+0x64A0
   539EE:	0110      	ld         ah, #+0x1
   539EF:	CE00      	**prefx    0xCE
   539F0:	559C      	bsr        -0x31AB <Nvm_Write:0x50845[p]>
    }

    /* Increment the offset by the number of words of NVM memory required
     * by GAIA service
     */
    *nvm_offset += GAIA_SERVICE_NVM_MEMORY_WORDS;
   539F1:	021B      	ld         x, @(+0x2, y)
   539F2:	0016      	ld         al, @(0x0, x)
   539F3:	0134      	add        al, #+0x1
   539F4:	0026      	st         al, @(0x0, x)
        GaiaOtauInit(nvm_start_fresh, nvm_offset);
#endif

    readDataFromNVM(nvm_start_fresh, nvm_offset);

    g_gaia_service_info.server_handler = g_gaia_server_handlers;
   539F5:	A100      	**prefx    0xA1
   539F6:	5615      	ld         al, @0xA156 <g_gaia_server_handlers+0x1>
   539F7:	6500      	**prefx    0x65
   539F8:	9D25      	st         al, @0x649D <g_gaia_service_info+0x1>
   539F9:	A100      	**prefx    0xA1
   539FA:	5519      	ld         x, @0xA155 <g_gaia_server_handlers>
   539FB:	6500      	**prefx    0x65
   539FC:	9C29      	st         x, @0x649C <g_gaia_service_info>
    g_gaia_service_info.start_handle = HANDLE_GAIA_SERVICE;
   539FD:	0114      	ld         al, #+0x1
   539FE:	6500      	**prefx    0x65
   539FF:	9E25      	st         al, @0x649E <g_gaia_service_info+0x2>
    g_gaia_service_info.end_handle = HANDLE_GAIA_SERVICE_END;
   53A00:	0818      	ld         x, #+0x8
   53A01:	6500      	**prefx    0x65
   53A02:	9F29      	st         x, @0x649F <g_gaia_service_info+0x3>

    /* Register Server service */
    CMServerInitRegisterHandler(&g_gaia_service_info);
   53A03:	6500      	**prefx    0x65
   53A04:	9C14      	ld         al, #+0x649C
}
   53A05:	031B      	ld         x, @(+0x3, y)
   53A06:	040E      	ld         xh, @(+0x4, y)
   53A07:	053C      	add        y, #+0x5
    g_gaia_service_info.server_handler = g_gaia_server_handlers;
    g_gaia_service_info.start_handle = HANDLE_GAIA_SERVICE;
    g_gaia_service_info.end_handle = HANDLE_GAIA_SERVICE_END;

    /* Register Server service */
    CMServerInitRegisterHandler(&g_gaia_service_info);
   53A08:	D800      	**prefx    0xD8
   53A09:	6BE0      	bra        -0x2795 <CMServerInitRegisterHandler:0x51274[p]>

0x00053A0A <AppProcessEvent>:
 *     status_t: STATUS_SUCCESS if successful
 *
 *----------------------------------------------------------------------------*/

status_t AppProcessEvent(msg_t *msg)
{
   53A0A:	FC0B      	enter      #-0x4
   53A0B:	0127      	st         al, @(+0x1, y)
    switch(GET_GROUP_ID(msg->header.id))
   53A0C:	E119      	ld         x, @0xFFE1 <register al>
   53A0D:	0312      	ld         ah, @(+0x3, x)
   53A0E:	E015      	ld         al, @0xFFE0 <register ah>
   53A0F:	FF00      	**prefx    0xFF
   53A10:	00C4      	and        al, #0xFF00
   53A11:	1800      	**prefx    0x18
   53A12:	0084      	cmp        al, #+0x1800
   53A13:	14F4      	beq        +0x14 <AppProcessEvent+0x1D:0x53A27[p]>
   53A14:	1800      	**prefx    0x18
   53A15:	0184      	cmp        al, #+0x1801
   53A16:	08F8      	bcc        +0x8 <AppProcessEvent+0x14:0x53A1E[p]>
   53A17:	0200      	**prefx    0x2
   53A18:	0084      	cmp        al, #+0x200
   53A19:	16F4      	beq        +0x16 <AppProcessEvent+0x25:0x53A2F[p]>
   53A1A:	0D00      	**prefx    0xD
   53A1B:	0084      	cmp        al, #+0xD00
   53A1C:	4DF0      	bne        +0x4D <AppProcessEvent+0x5F:0x53A69[p]>
   53A1D:	0EE0      	bra        +0xE <AppProcessEvent+0x21:0x53A2B[p]>
   53A1E:	1A00      	**prefx    0x1A
   53A1F:	0084      	cmp        al, #+0x1A00
   53A20:	07F4      	beq        +0x7 <AppProcessEvent+0x1D:0x53A27[p]>
   53A21:	1F00      	**prefx    0x1F
   53A22:	0084      	cmp        al, #+0x1F00
   53A23:	41F4      	beq        +0x41 <AppProcessEvent+0x5A:0x53A64[p]>
   53A24:	1900      	**prefx    0x19
   53A25:	0084      	cmp        al, #+0x1900
   53A26:	43F0      	bne        +0x43 <AppProcessEvent+0x5F:0x53A69[p]>
        case SM_GROUP_ID:
        case LS_GROUP_ID:
        case GATT_GROUP_ID:
        {
            /* CM Handles the SM, LS and GATT Messages */
            CMProcessMsg(msg);
   53A27:	0117      	ld         al, @(+0x1, y)
   53A28:	D100      	**prefx    0xD1
   53A29:	139C      	bsr        -0x2EED <CMProcessMsg:0x50B3C[p]>
   53A2A:	3FE0      	bra        +0x3F <AppProcessEvent+0x5F:0x53A69[p]>
        }
        break;

        case USER_STORE_GROUP_ID:
        {
            NvmProcessEvent(msg);
   53A2B:	0117      	ld         al, @(+0x1, y)
   53A2C:	CE00      	**prefx    0xCE
   53A2D:	3A9C      	bsr        -0x31C6 <NvmProcessEvent:0x50867[p]>
   53A2E:	3BE0      	bra        +0x3B <AppProcessEvent+0x5F:0x53A69[p]>
 *
 *----------------------------------------------------------------------------*/
static void configStoreProcessEvent(msg_t *msg)
{
    configstore_msg_t *cs_msg = (configstore_msg_t*)msg;
    switch(msg->header.id)
   53A2F:	0200      	**prefx    0x2
   53A30:	0180      	cmp        ah, #+0x201
   53A31:	38F0      	bne        +0x38 <AppProcessEvent+0x5F:0x53A69[p]>
        case CONFIG_STORE_READ_KEY_CFM:
        {
            configstore_read_key_cfm_t *read_key_cfm =
                    (configstore_read_key_cfm_t*)&cs_msg->body;

            if (STATUS_SUCCESS == read_key_cfm->status)
   53A32:	011B      	ld         x, @(+0x1, y)
   53A33:	049A      	tst        @(+0x4, x)
   53A34:	35F0      	bne        +0x35 <AppProcessEvent+0x5F:0x53A69[p]>
            {
                if ((USER_KEY1 == read_key_cfm->id) && (0 != read_key_cfm->value_len))
   53A35:	0516      	ld         al, @(+0x5, x)
   53A36:	4584      	cmp        al, #+0x45
   53A37:	27F0      	bne        +0x27 <AppProcessEvent+0x54:0x53A5E[p]>
   53A38:	089A      	tst        @(+0x8, x)
   53A39:	30F4      	beq        +0x30 <AppProcessEvent+0x5F:0x53A69[p]>
                {
                    /* Copy flags. */
                    g_cskey_flags = read_key_cfm->value[0];
   53A3A:	0916      	ld         al, @(+0x9, x)
   53A3B:	6A00      	**prefx    0x6A
   53A3C:	4325      	st         al, @0x6A43 <g_cskey_flags>

                    /* Copy UUID if Random UUID is not used. */
                    if (0 == (g_cskey_flags & CSKEY_RANDOM_UUID_ENABLE_BIT))
   53A3D:	04C4      	and        al, #0x4
   53A3E:	13F0      	bne        +0x13 <AppProcessEvent+0x47:0x53A51[p]>
                    {
                        if (read_key_cfm->value_len >= (UUID_LENGTH_WORDS + 1))
   53A3F:	0816      	ld         al, @(+0x8, x)
   53A40:	0884      	cmp        al, #+0x8
   53A41:	062C      	bcz        +0x6 <AppProcessEvent+0x3D:0x53A47[p]>
                        {
                            MemCopy(cached_uuid, &read_key_cfm->value[1],
   53A42:	0A38      	add        x, #+0xA
   53A43:	0814      	ld         al, #+0x8
   53A44:	6B00      	**prefx    0x6B
   53A45:	DB10      	ld         ah, #+0x6ADB
   53A46:	FD09      	bc2        
                                    UUID_LENGTH_WORDS);
                        }

                        /* Copy Authorization Code if enabled. */
#ifdef USE_AUTHORISATION_CODE
                        if (read_key_cfm->value_len >= (UUID_LENGTH_WORDS + AUTH_CODE_LENGTH_WORDS + 1))
   53A47:	011B      	ld         x, @(+0x1, y)
   53A48:	0816      	ld         al, @(+0x8, x)
   53A49:	0C84      	cmp        al, #+0xC
   53A4A:	072C      	bcz        +0x7 <AppProcessEvent+0x47:0x53A51[p]>
                        {
                            MemCopy(cached_auth_code, &read_key_cfm->value[1 + UUID_LENGTH_WORDS],
   53A4B:	1238      	add        x, #+0x12
   53A4C:	012B      	st         x, @(+0x1, y)
   53A4D:	0414      	ld         al, #+0x4
   53A4E:	6B00      	**prefx    0x6B
   53A4F:	D710      	ld         ah, #+0x6AD7
   53A50:	FD09      	bc2        
                    }
                    
                    /* Initialize the nvm offset to max words taken by application. 
                     * The CM is stores its data after this.
                     */
                    g_app_nvm_offset = NVM_OFFSET_SANITY_WORD;
   53A51:	0100      	**prefx    0x1
   53A52:	0414      	ld         al, #+0x104
   53A53:	6A00      	**prefx    0x6A
   53A54:	4425      	st         al, @0x6A44 <g_app_nvm_offset>
                    
                    /* Initialise the NVM. AppNvmReady is called when the NVM 
                     * initialisation complete.
                     */
                    Nvm_Init(NVM_ID,NVM_SANITY_MAGIC, &g_app_nvm_offset);
   53A55:	6A00      	**prefx    0x6A
   53A56:	4418      	ld         x, #+0x6A44
   53A57:	002B      	st         x, @(0x0, y)
   53A58:	0214      	ld         al, #+0x2
   53A59:	AC00      	**prefx    0xAC
   53A5A:	9110      	ld         ah, #-0x546F
   53A5B:	CE00      	**prefx    0xCE
   53A5C:	CD9C      	bsr        -0x3233 <Nvm_Init:0x50829[p]>
   53A5D:	0CE0      	bra        +0xC <AppProcessEvent+0x5F:0x53A69[p]>
                }
                else if(CS_ID_APP_STORE_ID == read_key_cfm->id)
   53A5E:	2384      	cmp        al, #+0x23
   53A5F:	0AF0      	bne        +0xA <AppProcessEvent+0x5F:0x53A69[p]>
                {
#ifdef GAIA_OTAU_SUPPORT
                    GaiaOtauConfigStoreMsg(msg);
   53A60:	0117      	ld         al, @(+0x1, y)
   53A61:	F800      	**prefx    0xF8
   53A62:	699C      	bsr        -0x797 <GaiaOtauConfigStoreMsg:0x532CB[p]>
   53A63:	06E0      	bra        +0x6 <AppProcessEvent+0x5F:0x53A69[p]>
        }
        break;
        
#ifdef GAIA_OTAU_SUPPORT
        case STORE_UPDATE_GROUP_ID:
        GaiaOtauHandleStoreUpdateMsg(GetConnectedDeviceId(), (store_update_msg_t*)msg );
   53A64:	E400      	**prefx    0xE4
   53A65:	BF9C      	bsr        -0x1C41 <GetConnectedDeviceId:0x51E24[p]>
   53A66:	0113      	ld         ah, @(+0x1, y)
   53A67:	FA00      	**prefx    0xFA
   53A68:	039C      	bsr        -0x5FD <GaiaOtauHandleStoreUpdateMsg:0x5346B[p]>

        default:
        break;
    }    
    return STATUS_SUCCESS;
}
   53A69:	0014      	ld         al, #+0x0
   53A6A:	FC0F      	leave      #-0x4

0x00053A6B <AppProcessSystemEvent>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void AppProcessSystemEvent(sys_event_id id, void *data)
{
   53A6B:	FE0B      	enter      #-0x2
    switch (id)
   53A6C:	0184      	cmp        al, #+0x1
   53A6D:	07F4      	beq        +0x7 <AppProcessSystemEvent+0x9:0x53A74[p]>
   53A6E:	0284      	cmp        al, #+0x2
   53A6F:	07F0      	bne        +0x7 <AppProcessSystemEvent+0xB:0x53A76[p]>
    {
        case sys_event_pio_changed:
        {
#ifndef DEBUG_ENABLE
             HandlePIOChangedEvent((pio_changed_data*)data);
   53A70:	E015      	ld         al, @0xFFE0 <register ah>
   53A71:	0400      	**prefx    0x4
   53A72:	AB9C      	bsr        +0x3AB <HandlePIOChangedEvent:0x53E1D[p]>
   53A73:	03E0      	bra        +0x3 <AppProcessSystemEvent+0xB:0x53A76[p]>
        case sys_event_battery_low:
        {
            /* Battery low event received - Broadcast the battery state to the
             * network.
             */
            SendLowBatteryIndication();
   53A74:	DC00      	**prefx    0xDC
   53A75:	A09C      	bsr        -0x2460 <SendLowBatteryIndication:0x51615[p]>
        break;

        default:
        break;
    }
}
   53A76:	FE0F      	leave      #-0x2

0x00053A77 <AppNvmReady>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void AppNvmReady(bool nvm_fresh, uint16 nvm_offset)
{
   53A77:	FE0B      	enter      #-0x2
    /* Save the NVM data */
    g_app_nvm_fresh = nvm_fresh;
   53A78:	6A00      	**prefx    0x6A
   53A79:	4525      	st         al, @0x6A45 <g_app_nvm_fresh>
#ifdef CSR101x_A05
    g_app_nvm_offset = NVM_MAX_APP_MEMORY_WORDS;
#else
    g_app_nvm_offset = NVM_OFFSET_CM_INITIALISATION;
   53A7A:	0100      	**prefx    0x1
   53A7B:	C818      	ld         x, #+0xC8
   53A7C:	6A00      	**prefx    0x6A
   53A7D:	4429      	st         x, @0x6A44 <g_app_nvm_offset>
    }
#endif /* RESET_NVM */
#endif

    /* Initilize CM */
    AppCMInit(g_app_nvm_fresh, &g_app_nvm_offset);
   53A7E:	6A00      	**prefx    0x6A
   53A7F:	4410      	ld         ah, #+0x6A44
}
   53A80:	001B      	ld         x, @(0x0, y)
   53A81:	023C      	add        y, #+0x2
    }
#endif /* RESET_NVM */
#endif

    /* Initilize CM */
    AppCMInit(g_app_nvm_fresh, &g_app_nvm_offset);
   53A82:	E400      	**prefx    0xE4
   53A83:	2BE0      	bra        -0x1BD5 <AppCMInit:0x51EAE[p]>

0x00053A84 <AppInit>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
void AppInit(sleep_state last_sleep_state)
{
   53A84:	FE0B      	enter      #-0x2
    /* Initialise the application timers */
    TimerInit(MAX_APP_TIMERS, (void*)app_timers);
   53A85:	1414      	ld         al, #+0x14
   53A86:	6500      	**prefx    0x65
   53A87:	BC10      	ld         ah, #+0x64BC
   53A88:	FC00      	**prefx    0xFC
   53A89:	B200      	**prefx    0xB2
   53A8A:	809C      	bsr        -0x44E80 <TimerInit:0xEC0A[p]>
#endif /* CSR101x_A05 */
#endif /* DEBUG_ENABLE */

#ifndef DEBUG_ENABLE
    /* Initialize Switch Hardware */
    SwitchHardwareInit();
   53A8B:	0500      	**prefx    0x5
   53A8C:	3B9C      	bsr        +0x53B <SwitchHardwareInit:0x53FC7[p]>
#endif

    /* Initialise Light and turn it off. */
    IOTLightControlDeviceInit();
   53A8D:	DD00      	**prefx    0xDD
   53A8E:	1D9C      	bsr        -0x22E3 <IOTLightControlDeviceInit:0x517AB[p]>
    IOTLightControlDevicePower(FALSE);
   53A8F:	0014      	ld         al, #+0x0
   53A90:	DC00      	**prefx    0xDC
   53A91:	669C      	bsr        -0x239A <IOTLightControlDevicePower:0x516F7[p]>
 *---------------------------------------------------------------------------*/
static void readUserKeys(void)
{
#ifndef CSR101x_A05
    /* Read payload filler from User key index1 */
    ConfigStoreReadKey(USER_KEY1 ,STORE_ID_UNUSED);
   53A92:	4514      	ld         al, #+0x45
   53A93:	0010      	ld         ah, #+0x0
    IOTLightControlDeviceInit();
    IOTLightControlDevicePower(FALSE);

    /* Read the user keys */
    readUserKeys();
}
   53A94:	001B      	ld         x, @(0x0, y)
   53A95:	010E      	ld         xh, @(+0x1, y)
   53A96:	023C      	add        y, #+0x2
 *---------------------------------------------------------------------------*/
static void readUserKeys(void)
{
#ifndef CSR101x_A05
    /* Read payload filler from User key index1 */
    ConfigStoreReadKey(USER_KEY1 ,STORE_ID_UNUSED);
   53A97:	4500      	**prefx    0x45
   53A98:	3DE0      	bra        +0x453D <ConfigStoreReadKey:0x57FD5[p]>

0x00053A99 <AppDataInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void AppDataInit(void)
{
   53A99:	FE0B      	enter      #-0x2
    /* Stop the connection parameter update if its in progress */
    StopConnParamsUpdate();
   53A9A:	CD00      	**prefx    0xCD
   53A9B:	DE9C      	bsr        -0x3322 <StopConnParamsUpdate:0x50779[p]>

    /* Initialises the GATT Data */
    InitialiseGattData();
   53A9C:	E300      	**prefx    0xE3
   53A9D:	7B9C      	bsr        -0x1C85 <InitialiseGattData:0x51E18[p]>

    /* Initialize the Mesh Control Service Data Structure */
    MeshControlServiceDataInit();
   53A9E:	F500      	**prefx    0xF5
   53A9F:	C19C      	bsr        -0xB3F <MeshControlServiceDataInit:0x52F60[p]>
}
   53AA0:	FE0F      	leave      #-0x2

0x00053AA1 <InitAppSupportedServices>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void InitAppSupportedServices(void)
{
   53AA1:	FD0B      	enter      #-0x3
#ifndef CSR101x_A05
    g_app_nvm_offset = NVM_OFFSET_GAIA_OTA_SERVICE;
   53AA2:	0014      	ld         al, #+0x0
   53AA3:	6A00      	**prefx    0x6A
   53AA4:	4425      	st         al, @0x6A44 <g_app_nvm_offset>
    /* Initialize the Gaia OTA service. */
#ifdef RESET_NVM
    GAIAInitServerService(g_gaia_nvm_fresh, &g_app_nvm_offset);
#else
    GAIAInitServerService(g_app_nvm_fresh, &g_app_nvm_offset);
   53AA5:	6A00      	**prefx    0x6A
   53AA6:	4515      	ld         al, @0x6A45 <g_app_nvm_fresh>
   53AA7:	6A00      	**prefx    0x6A
   53AA8:	4410      	ld         ah, #+0x6A44
   53AA9:	FF00      	**prefx    0xFF
   53AAA:	289C      	bsr        -0xD8 <GAIAInitServerService:0x539D2[p]>
#endif /* RESET_NVM */
#ifdef GAIA_OTAU_SUPPORT
    AppGaiaOtauInit();
   53AAB:	F200      	**prefx    0xF2
   53AAC:	DD9C      	bsr        -0xE23 <AppGaiaOtauInit:0x52C89[p]>
#endif /* GAIA_OTAU_SUPPORT */
    g_app_nvm_offset = NVM_OFFSET_MESH_APP_SERVICES;
   53AAD:	0100      	**prefx    0x1
   53AAE:	9614      	ld         al, #+0x96
   53AAF:	6A00      	**prefx    0x6A
   53AB0:	4425      	st         al, @0x6A44 <g_app_nvm_offset>
    OtaInitServerService(g_app_nvm_fresh, &g_app_nvm_offset);
#endif
#endif
    
    /* Initialize the GATT service. */
    GattExtInitServerService(g_app_nvm_fresh, &g_app_nvm_offset, TRUE);
   53AB1:	0114      	ld         al, #+0x1
   53AB2:	0027      	st         al, @(0x0, y)
   53AB3:	6A00      	**prefx    0x6A
   53AB4:	4515      	ld         al, @0x6A45 <g_app_nvm_fresh>
   53AB5:	6A00      	**prefx    0x6A
   53AB6:	4410      	ld         ah, #+0x6A44
   53AB7:	F500      	**prefx    0xF5
   53AB8:	849C      	bsr        -0xB7C <GattExtInitServerService:0x52F3C[p]>

    /* Initialize the GAP service. */
    GapInitServerServiceNoBond();
   53AB9:	F400      	**prefx    0xF4
   53ABA:	909C      	bsr        -0xC70 <GapInitServerServiceNoBond:0x52E4A[p]>

    /* Initialize the Mesh control service */
    MeshControlInitServerService(g_app_nvm_fresh, &g_app_nvm_offset);
   53ABB:	6A00      	**prefx    0x6A
   53ABC:	4515      	ld         al, @0x6A45 <g_app_nvm_fresh>
   53ABD:	6A00      	**prefx    0x6A
   53ABE:	4410      	ld         ah, #+0x6A44
   53ABF:	F500      	**prefx    0xF5
   53AC0:	D29C      	bsr        -0xB2E <MeshControlInitServerService:0x52F92[p]>
}
   53AC1:	FD0F      	leave      #-0x3

0x00053AC2 <writeSupportedModelGroupsOntoNVM>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
static void writeSupportedModelGroupsOntoNVM(void)
{
   53AC2:	FD0B      	enter      #-0x3
#ifdef ENABLE_SWITCH_MODEL
    Nvm_Write((uint16 *)switch_model_groups, sizeof(uint16)*MAX_MODEL_GROUPS,
   53AC3:	0200      	**prefx    0x2
   53AC4:	A514      	ld         al, #+0x1A5
   53AC5:	0027      	st         al, @(0x0, y)
   53AC6:	6A00      	**prefx    0x6A
   53AC7:	3E14      	ld         al, #+0x6A3E
   53AC8:	0110      	ld         ah, #+0x1
   53AC9:	CD00      	**prefx    0xCD
   53ACA:	7B9C      	bsr        -0x3285 <Nvm_Write:0x50845[p]>
                                             NVM_OFFSET_SWITCH_MODEL_GROUPS);
#endif /* ENABLE_SWITCH_MODEL */

#ifdef ENABLE_WATCHDOG_MODEL
    Nvm_Write((uint16 *)wdog_model_groups, sizeof(uint16)*MAX_MODEL_GROUPS,
   53ACB:	0200      	**prefx    0x2
   53ACC:	A614      	ld         al, #+0x1A6
   53ACD:	0027      	st         al, @(0x0, y)
   53ACE:	6A00      	**prefx    0x6A
   53ACF:	4214      	ld         al, #+0x6A42
   53AD0:	0110      	ld         ah, #+0x1
   53AD1:	CD00      	**prefx    0xCD
   53AD2:	739C      	bsr        -0x328D <Nvm_Write:0x50845[p]>
                                             NVM_OFFSET_WDOG_MODEL_GROUPS);
#endif /* ENABLE_WATCHDOG_MODEL */

#ifdef ENABLE_ATTENTION_MODEL
    Nvm_Write((uint16 *)attention_model_groups, sizeof(uint16)*MAX_MODEL_GROUPS,
   53AD3:	0200      	**prefx    0x2
   53AD4:	A714      	ld         al, #+0x1A7
   53AD5:	0027      	st         al, @(0x0, y)
   53AD6:	6A00      	**prefx    0x6A
   53AD7:	4114      	ld         al, #+0x6A41
   53AD8:	0110      	ld         ah, #+0x1
   53AD9:	CD00      	**prefx    0xCD
   53ADA:	6B9C      	bsr        -0x3295 <Nvm_Write:0x50845[p]>
                                                NVM_OFFSET_ATT_MODEL_GROUPS);
#endif /* ENABLE_ATTENTION_MODEL */

#ifdef ENABLE_DATA_MODEL
    Nvm_Write((uint16 *)data_model_groups, sizeof(uint16)*MAX_MODEL_GROUPS,
   53ADB:	0200      	**prefx    0x2
   53ADC:	A814      	ld         al, #+0x1A8
   53ADD:	0027      	st         al, @(0x0, y)
   53ADE:	6A00      	**prefx    0x6A
   53ADF:	4014      	ld         al, #+0x6A40
   53AE0:	0110      	ld         ah, #+0x1
   53AE1:	CD00      	**prefx    0xCD
   53AE2:	639C      	bsr        -0x329D <Nvm_Write:0x50845[p]>
                                                NVM_OFFSET_DATA_MODEL_GROUPS);
#endif /* ENABLE_DATA_MODEL */
    
#ifdef ENABLE_LOT_MODEL
    Nvm_Write((uint16 *)lot_model_groups, sizeof(uint16)*MAX_MODEL_GROUPS,
   53AE3:	0200      	**prefx    0x2
   53AE4:	A914      	ld         al, #+0x1A9
   53AE5:	0027      	st         al, @(0x0, y)
   53AE6:	6A00      	**prefx    0x6A
   53AE7:	3F14      	ld         al, #+0x6A3F
   53AE8:	0110      	ld         ah, #+0x1
   53AE9:	CD00      	**prefx    0xCD
   53AEA:	5B9C      	bsr        -0x32A5 <Nvm_Write:0x50845[p]>
                                                NVM_OFFSET_LOT_MODEL_GROUPS);
#endif /* ENABLE_LOT_MODEL */
}
   53AEB:	FD0F      	leave      #-0x3

0x00053AEC <HandleGroupSetMsg>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern bool HandleGroupSetMsg(CSR_MESH_GROUP_ID_RELATED_DATA_T msg)
{
   53AEC:	F90B      	enter      #-0x7
   53AED:	0817      	ld         al, @(+0x8, y)
   53AEE:	0327      	st         al, @(+0x3, y)
   53AEF:	0917      	ld         al, @(+0x9, y)
   53AF0:	0227      	st         al, @(+0x2, y)
   53AF1:	0B17      	ld         al, @(+0xB, y)
   53AF2:	0127      	st         al, @(+0x1, y)
    uint16 group_id = msg.gpId;
#endif
    bool update_lastetag = TRUE;

#ifdef ENABLE_SWITCH_MODEL
    if(model == CSRMESH_SWITCH_MODEL || model == CSRMESH_ALL_MODELS)
   53AF3:	0317      	ld         al, @(+0x3, y)
   53AF4:	1584      	cmp        al, #+0x15
   53AF5:	04F4      	beq        +0x4 <HandleGroupSetMsg+0xD:0x53AF9[p]>
   53AF6:	0100      	**prefx    0x1
   53AF7:	FF84      	cmp        al, #+0xFF
   53AF8:	10F0      	bne        +0x10 <HandleGroupSetMsg+0x1C:0x53B08[p]>
    {
        if(index < MAX_MODEL_GROUPS)
   53AF9:	029B      	tst        @(+0x2, y)
   53AFA:	03F4      	beq        +0x3 <HandleGroupSetMsg+0x11:0x53AFD[p]>
   53AFB:	0014      	ld         al, #+0x0
   53AFC:	0DE0      	bra        +0xD <HandleGroupSetMsg+0x1D:0x53B09[p]>
        {
            /* Store Group ID */
            switch_model_groups[index] = group_id;
   53AFD:	0117      	ld         al, @(+0x1, y)
   53AFE:	6A00      	**prefx    0x6A
   53AFF:	3E25      	st         al, @0x6A3E <switch_model_groups>

            /* Save to NVM */
            Nvm_Write(&switch_model_groups[index],
   53B00:	0200      	**prefx    0x2
   53B01:	A514      	ld         al, #+0x1A5
   53B02:	0027      	st         al, @(0x0, y)
   53B03:	6A00      	**prefx    0x6A
   53B04:	3E14      	ld         al, #+0x6A3E
   53B05:	0110      	ld         ah, #+0x1
   53B06:	CD00      	**prefx    0xCD
   53B07:	3E9C      	bsr        -0x32C2 <Nvm_Write:0x50845[p]>
   53B08:	0114      	ld         al, #+0x1
   53B09:	0427      	st         al, @(+0x4, y)
        }
    }
#endif /* ENABLE_SWITCH_MODEL */

#ifdef ENABLE_WATCHDOG_MODEL
    if(model == CSRMESH_WATCHDOG_MODEL || model == CSRMESH_ALL_MODELS)
   53B0A:	039B      	tst        @(+0x3, y)
   53B0B:	05F4      	beq        +0x5 <HandleGroupSetMsg+0x24:0x53B10[p]>
   53B0C:	0317      	ld         al, @(+0x3, y)
   53B0D:	0100      	**prefx    0x1
   53B0E:	FF84      	cmp        al, #+0xFF
   53B0F:	11F0      	bne        +0x11 <HandleGroupSetMsg+0x34:0x53B20[p]>
    {
        if(index < MAX_MODEL_GROUPS)
   53B10:	029B      	tst        @(+0x2, y)
   53B11:	04F4      	beq        +0x4 <HandleGroupSetMsg+0x29:0x53B15[p]>
   53B12:	0014      	ld         al, #+0x0
   53B13:	0427      	st         al, @(+0x4, y)
   53B14:	0CE0      	bra        +0xC <HandleGroupSetMsg+0x34:0x53B20[p]>
        {
            wdog_model_groups[index] = group_id;
   53B15:	0117      	ld         al, @(+0x1, y)
   53B16:	6A00      	**prefx    0x6A
   53B17:	4225      	st         al, @0x6A42 <wdog_model_groups>

            /* Save to NVM */
            Nvm_Write(&wdog_model_groups[index],
   53B18:	0200      	**prefx    0x2
   53B19:	A614      	ld         al, #+0x1A6
   53B1A:	0027      	st         al, @(0x0, y)
   53B1B:	6A00      	**prefx    0x6A
   53B1C:	4214      	ld         al, #+0x6A42
   53B1D:	0110      	ld         ah, #+0x1
   53B1E:	CD00      	**prefx    0xCD
   53B1F:	269C      	bsr        -0x32DA <Nvm_Write:0x50845[p]>
        }
    }
#endif /* ENABLE_WATCHDOG_MODEL */

#ifdef ENABLE_ATTENTION_MODEL
    if(model == CSRMESH_ATTENTION_MODEL || model == CSRMESH_ALL_MODELS)
   53B20:	0317      	ld         al, @(+0x3, y)
   53B21:	0E84      	cmp        al, #+0xE
   53B22:	04F4      	beq        +0x4 <HandleGroupSetMsg+0x3A:0x53B26[p]>
   53B23:	0100      	**prefx    0x1
   53B24:	FF84      	cmp        al, #+0xFF
   53B25:	11F0      	bne        +0x11 <HandleGroupSetMsg+0x4A:0x53B36[p]>
    {
        if(index < MAX_MODEL_GROUPS)
   53B26:	029B      	tst        @(+0x2, y)
   53B27:	04F4      	beq        +0x4 <HandleGroupSetMsg+0x3F:0x53B2B[p]>
   53B28:	0014      	ld         al, #+0x0
   53B29:	0427      	st         al, @(+0x4, y)
   53B2A:	0CE0      	bra        +0xC <HandleGroupSetMsg+0x4A:0x53B36[p]>
        {
            attention_model_groups[index] = group_id;
   53B2B:	0117      	ld         al, @(+0x1, y)
   53B2C:	6A00      	**prefx    0x6A
   53B2D:	4125      	st         al, @0x6A41 <attention_model_groups>

            /* Save to NVM */
            Nvm_Write(&attention_model_groups[index],
   53B2E:	0200      	**prefx    0x2
   53B2F:	A714      	ld         al, #+0x1A7
   53B30:	0027      	st         al, @(0x0, y)
   53B31:	6A00      	**prefx    0x6A
   53B32:	4114      	ld         al, #+0x6A41
   53B33:	0110      	ld         ah, #+0x1
   53B34:	CD00      	**prefx    0xCD
   53B35:	109C      	bsr        -0x32F0 <Nvm_Write:0x50845[p]>
        }
    }
#endif /* ENABLE_ATTENTION_MODEL */

#ifdef ENABLE_DATA_MODEL
    if(model == CSRMESH_DATA_MODEL || model == CSRMESH_ALL_MODELS)
   53B36:	0317      	ld         al, @(+0x3, y)
   53B37:	0884      	cmp        al, #+0x8
   53B38:	04F4      	beq        +0x4 <HandleGroupSetMsg+0x50:0x53B3C[p]>
   53B39:	0100      	**prefx    0x1
   53B3A:	FF84      	cmp        al, #+0xFF
   53B3B:	11F0      	bne        +0x11 <HandleGroupSetMsg+0x60:0x53B4C[p]>
    {
        if(index < MAX_MODEL_GROUPS)
   53B3C:	029B      	tst        @(+0x2, y)
   53B3D:	04F4      	beq        +0x4 <HandleGroupSetMsg+0x55:0x53B41[p]>
   53B3E:	0014      	ld         al, #+0x0
   53B3F:	0427      	st         al, @(+0x4, y)
   53B40:	0CE0      	bra        +0xC <HandleGroupSetMsg+0x60:0x53B4C[p]>
        {
            data_model_groups[index] = group_id;
   53B41:	0117      	ld         al, @(+0x1, y)
   53B42:	6A00      	**prefx    0x6A
   53B43:	4025      	st         al, @0x6A40 <data_model_groups>

            /* Save to NVM */
            Nvm_Write(&data_model_groups[index],
   53B44:	0200      	**prefx    0x2
   53B45:	A814      	ld         al, #+0x1A8
   53B46:	0027      	st         al, @(0x0, y)
   53B47:	6A00      	**prefx    0x6A
   53B48:	4014      	ld         al, #+0x6A40
   53B49:	0110      	ld         ah, #+0x1
   53B4A:	CD00      	**prefx    0xCD
   53B4B:	FA9C      	bsr        -0x3306 <Nvm_Write:0x50845[p]>
        }
    }
#endif /* ENABLE_DATA_MODEL */
    
#ifdef ENABLE_LOT_MODEL
    if(model == CSRMESH_LARGEOBJECTTRANSFER_MODEL || model == CSRMESH_ALL_MODELS)
   53B4C:	0317      	ld         al, @(+0x3, y)
   53B4D:	1E84      	cmp        al, #+0x1E
   53B4E:	04F4      	beq        +0x4 <HandleGroupSetMsg+0x66:0x53B52[p]>
   53B4F:	0100      	**prefx    0x1
   53B50:	FF84      	cmp        al, #+0xFF
   53B51:	11F0      	bne        +0x11 <HandleGroupSetMsg+0x76:0x53B62[p]>
    {
        if(index < MAX_MODEL_GROUPS)
   53B52:	029B      	tst        @(+0x2, y)
   53B53:	04F4      	beq        +0x4 <HandleGroupSetMsg+0x6B:0x53B57[p]>
   53B54:	0014      	ld         al, #+0x0
   53B55:	0427      	st         al, @(+0x4, y)
   53B56:	0CE0      	bra        +0xC <HandleGroupSetMsg+0x76:0x53B62[p]>
        {
            lot_model_groups[index] = group_id;
   53B57:	0117      	ld         al, @(+0x1, y)
   53B58:	6A00      	**prefx    0x6A
   53B59:	3F25      	st         al, @0x6A3F <lot_model_groups>

            /* Save to NVM */
            Nvm_Write(&lot_model_groups[index],
   53B5A:	0200      	**prefx    0x2
   53B5B:	A914      	ld         al, #+0x1A9
   53B5C:	0027      	st         al, @(0x0, y)
   53B5D:	6A00      	**prefx    0x6A
   53B5E:	3F14      	ld         al, #+0x6A3F
   53B5F:	0110      	ld         ah, #+0x1
   53B60:	CD00      	**prefx    0xCD
   53B61:	E49C      	bsr        -0x331C <Nvm_Write:0x50845[p]>
        }
    }
#endif /* ENABLE_LOT_MODEL */

    return update_lastetag;
}
   53B62:	0417      	ld         al, @(+0x4, y)
   53B63:	F90F      	leave      #-0x7

0x00053B64 <AppHandleCurrentTimeUpdate>:
 *----------------------------------------------------------------------------*/
extern void AppHandleCurrentTimeUpdate(uint8 current_time[])
{
#ifdef ENABLE_ACTION_MODEL
    /* Take actions to update the current time in the device */
    ActionModelSyncCurrentTime(current_time);
   53B64:	ED00      	**prefx    0xED
   53B65:	B2E0      	bra        -0x134E <ActionModelSyncCurrentTime:0x52817[p]>

0x00053B66 <AppLightSetLevel>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void AppLightSetLevel(CSRMESH_LIGHT_SET_LEVEL_T *p_params,
                             bool request_ack)
{
   53B66:	F80B      	enter      #-0x8
   53B67:	0427      	st         al, @(+0x4, y)
   53B68:	0523      	st         ah, @(+0x5, y)
    LightSetLevel(DEFAULT_NW_ID, switch_model_groups[0], AppGetCurrentTTL(),
   53B69:	6A00      	**prefx    0x6A
   53B6A:	3E15      	ld         al, @0x6A3E <switch_model_groups>
   53B6B:	0327      	st         al, @(+0x3, y)
   53B6C:	DE00      	**prefx    0xDE
   53B6D:	919C      	bsr        -0x226F <AppGetCurrentTTL:0x518FE[p]>
   53B6E:	0027      	st         al, @(0x0, y)
   53B6F:	0417      	ld         al, @(+0x4, y)
   53B70:	0127      	st         al, @(+0x1, y)
   53B71:	0517      	ld         al, @(+0x5, y)
   53B72:	0227      	st         al, @(+0x2, y)
   53B73:	0014      	ld         al, #+0x0
   53B74:	0313      	ld         ah, @(+0x3, y)
   53B75:	3200      	**prefx    0x32
   53B76:	9C9C      	bsr        +0x319C <LightSetLevel:0x56D12[p]>
                  p_params, request_ack);
}
   53B77:	F80F      	leave      #-0x8

0x00053B78 <AppPowerSetState>:
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void AppPowerSetState(CSRMESH_POWER_SET_STATE_T *p_params,
                             bool request_ack)
{
   53B78:	F80B      	enter      #-0x8
   53B79:	0427      	st         al, @(+0x4, y)
   53B7A:	0523      	st         ah, @(+0x5, y)
    PowerSetState(DEFAULT_NW_ID, switch_model_groups[0], AppGetCurrentTTL(),
   53B7B:	6A00      	**prefx    0x6A
   53B7C:	3E15      	ld         al, @0x6A3E <switch_model_groups>
   53B7D:	0327      	st         al, @(+0x3, y)
   53B7E:	DD00      	**prefx    0xDD
   53B7F:	7F9C      	bsr        -0x2281 <AppGetCurrentTTL:0x518FE[p]>
   53B80:	0027      	st         al, @(0x0, y)
   53B81:	0417      	ld         al, @(+0x4, y)
   53B82:	0127      	st         al, @(+0x1, y)
   53B83:	0517      	ld         al, @(+0x5, y)
   53B84:	0227      	st         al, @(+0x2, y)
   53B85:	0014      	ld         al, #+0x0
   53B86:	0313      	ld         ah, @(+0x3, y)
   53B87:	3200      	**prefx    0x32
   53B88:	109C      	bsr        +0x3210 <PowerSetState:0x56D98[p]>
                  p_params, request_ack);
}
   53B89:	F80F      	leave      #-0x8

0x00053B8A <RestoreLightState>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void RestoreLightState(void)
{
   53B8A:	FB0B      	enter      #-0x5
    if(g_mesh_handler_data.assoc_state == app_state_associated)
   53B8B:	6B00      	**prefx    0x6B
   53B8C:	E515      	ld         al, @0x6AE5 <g_mesh_handler_data+0x2>
   53B8D:	0284      	cmp        al, #+0x2
   53B8E:	05F0      	bne        +0x5 <RestoreLightState+0x9:0x53B93[p]>
    {
        IOTLightControlDevicePower(FALSE);
   53B8F:	0014      	ld         al, #+0x0
   53B90:	DB00      	**prefx    0xDB
   53B91:	669C      	bsr        -0x249A <IOTLightControlDevicePower:0x516F7[p]>
   53B92:	14E0      	bra        +0x14 <RestoreLightState+0x1C:0x53BA6[p]>
    }
    else if(g_mesh_handler_data.assoc_state == app_state_association_started)
   53B93:	0184      	cmp        al, #+0x1
   53B94:	09F0      	bne        +0x9 <RestoreLightState+0x13:0x53B9D[p]>
    {
        /* Blink Light in Yellow to indicate association in progress */
        IOTLightControlDeviceBlink(127, 127, 0, 32, 32);
   53B95:	0014      	ld         al, #+0x0
   53B96:	0027      	st         al, @(0x0, y)
   53B97:	2014      	ld         al, #+0x20
   53B98:	0127      	st         al, @(+0x1, y)
   53B99:	0227      	st         al, @(+0x2, y)
   53B9A:	7F14      	ld         al, #+0x7F
   53B9B:	7F10      	ld         ah, #+0x7F
   53B9C:	08E0      	bra        +0x8 <RestoreLightState+0x1A:0x53BA4[p]>
    }
    else
    {
        /* Restart Blue blink to indicate ready for association */
        IOTLightControlDeviceBlink(0, 0, 127, 32, 32);
   53B9D:	7F14      	ld         al, #+0x7F
   53B9E:	0027      	st         al, @(0x0, y)
   53B9F:	2014      	ld         al, #+0x20
   53BA0:	0127      	st         al, @(+0x1, y)
   53BA1:	0227      	st         al, @(+0x2, y)
   53BA2:	0014      	ld         al, #+0x0
   53BA3:	0010      	ld         ah, #+0x0
   53BA4:	DC00      	**prefx    0xDC
   53BA5:	BB9C      	bsr        -0x2445 <IOTLightControlDeviceBlink:0x51760[p]>
    }
}
   53BA6:	FB0F      	leave      #-0x5

0x00053BA7 <AppHandleAssociationComplete>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void AppHandleAssociationComplete(void)
{
   53BA7:	FE0B      	enter      #-0x2
    /* Restore default light state */
    RestoreLightState();
   53BA8:	E29C      	bsr        -0x1E <RestoreLightState:0x53B8A[p]>

#ifdef ENABLE_WATCHDOG_MODEL
    WatchdogStart();
   53BA9:	E100      	**prefx    0xE1
   53BAA:	4D9C      	bsr        -0x1EB3 <WatchdogStart:0x51CF7[p]>
#endif
}
   53BAB:	FE0F      	leave      #-0x2

0x00053BAC <SetScanDutyCycle>:
 *  RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void SetScanDutyCycle(uint8 scan_duty_cycle)
{
   53BAC:	FE0B      	enter      #-0x2
    le_params.generic_le_param.scan_param.scan_duty_param.scan_duty_cycle 
   53BAD:	6B00      	**prefx    0x6B
   53BAE:	F318      	ld         x, #+0x6AF3
   53BAF:	0026      	st         al, @(0x0, x)
                                                              = scan_duty_cycle;
    le_params.generic_le_param.scan_param.scan_duty_param.min_scan_slot = 4;
   53BB0:	0414      	ld         al, #+0x4
   53BB1:	0126      	st         al, @(+0x1, x)
    le_params.generic_le_param.scan_param_type = CSR_SCHED_SCAN_DUTY_PARAM;
   53BB2:	0114      	ld         al, #+0x1
   53BB3:	FF26      	st         al, @(-0x1, x)
    CSRSchedSetConfigParams(&le_params);
   53BB4:	6B00      	**prefx    0x6B
   53BB5:	ED14      	ld         al, #+0x6AED
}
   53BB6:	001B      	ld         x, @(0x0, y)
   53BB7:	023C      	add        y, #+0x2
{
    le_params.generic_le_param.scan_param.scan_duty_param.scan_duty_cycle 
                                                              = scan_duty_cycle;
    le_params.generic_le_param.scan_param.scan_duty_param.min_scan_slot = 4;
    le_params.generic_le_param.scan_param_type = CSR_SCHED_SCAN_DUTY_PARAM;
    CSRSchedSetConfigParams(&le_params);
   53BB8:	2100      	**prefx    0x21
   53BB9:	2BE0      	bra        +0x212B <CSRSchedSetConfigParams:0x55CE4[p]>

0x00053BBA <EnableHighDutyScanMode>:
 *      None
 *
 
*----------------------------------------------------------------------------*/
extern void EnableHighDutyScanMode(bool enable)
{
   53BBA:	FE0B      	enter      #-0x2
    uint8 scan_duty_cycle;

    if(enable)
   53BBB:	E199      	tst        @0xFFE1 <register al>
   53BBC:	07F0      	bne        +0x7 <EnableHighDutyScanMode+0x9:0x53BC3[p]>
    {
        scan_duty_cycle = HIGH_SCAN_DUTY_CYCLE;
    }
    else
    {
        if(AppGetAssociatedState() == app_state_associated)
   53BBD:	DD00      	**prefx    0xDD
   53BBE:	2A9C      	bsr        -0x22D6 <AppGetAssociatedState:0x518E8[p]>
   53BBF:	0284      	cmp        al, #+0x2
   53BC0:	03F0      	bne        +0x3 <EnableHighDutyScanMode+0x9:0x53BC3[p]>
   53BC1:	3214      	ld         al, #+0x32
   53BC2:	03E0      	bra        +0x3 <EnableHighDutyScanMode+0xB:0x53BC5[p]>
   53BC3:	0400      	**prefx    0x4
   53BC4:	E814      	ld         al, #+0x3E8
             * associated yet.
             */
            scan_duty_cycle = HIGH_SCAN_DUTY_CYCLE;
        }
    }
    SetScanDutyCycle(scan_duty_cycle);
   53BC5:	E79C      	bsr        -0x19 <SetScanDutyCycle:0x53BAC[p]>
}
   53BC6:	FE0F      	leave      #-0x2

0x00053BC7 <initializeSupportedModelGroups>:
 *
 *----------------------------------------------------------------------------*/
static void initializeSupportedModelGroups(void)
{
#ifdef ENABLE_SWITCH_MODEL
    MemSet(switch_model_groups, 0x0000, sizeof(uint16)*MAX_MODEL_GROUPS);
   53BC7:	0014      	ld         al, #+0x0
   53BC8:	6A00      	**prefx    0x6A
   53BC9:	3E25      	st         al, @0x6A3E <switch_model_groups>
#endif

#ifdef ENABLE_WATCHDOG_MODEL
    MemSet(wdog_model_groups, 0x0000, sizeof(uint16)*MAX_MODEL_GROUPS);
   53BCA:	6A00      	**prefx    0x6A
   53BCB:	4225      	st         al, @0x6A42 <wdog_model_groups>
#endif

#ifdef ENABLE_ATTENTION_MODEL
    MemSet(attention_model_groups, 0x0000, sizeof(uint16)*MAX_MODEL_GROUPS);
   53BCC:	6A00      	**prefx    0x6A
   53BCD:	4125      	st         al, @0x6A41 <attention_model_groups>
#endif

#ifdef ENABLE_DATA_MODEL
    MemSet(data_model_groups, 0x0000, sizeof(uint16)*MAX_MODEL_GROUPS);
   53BCE:	6A00      	**prefx    0x6A
   53BCF:	4025      	st         al, @0x6A40 <data_model_groups>
#endif
    
#ifdef ENABLE_LOT_MODEL
    MemSet(lot_model_groups, 0x0000, sizeof(uint16)*MAX_MODEL_GROUPS);
   53BD0:	6A00      	**prefx    0x6A
   53BD1:	3F25      	st         al, @0x6A3F <lot_model_groups>
#endif
}
   53BD2:	00E2      	bra        0x0, x

0x00053BD3 <RemoveAssociation>:
 *  RETURNS/MODIFIES
 *      Nothing
 *
 *----------------------------------------------------------------------------*/
extern void RemoveAssociation(void)
{
   53BD3:	FD0B      	enter      #-0x3
    if (app_state_not_associated != g_mesh_handler_data.assoc_state)
   53BD4:	6B00      	**prefx    0x6B
   53BD5:	E599      	tst        @0x6AE5 <g_mesh_handler_data+0x2>
   53BD6:	5CF4      	beq        +0x5C <RemoveAssociation+0x5F:0x53C32[p]>
    {
        /* clear the sequence cache present in mesh stack */
        AppClearSeqCache();
   53BD7:	DD00      	**prefx    0xDD
   53BD8:	2C9C      	bsr        -0x22D4 <AppClearSeqCache:0x51904[p]>

        /* API called to remove the network from the mesh stack */
        CSRmeshRemoveNetwork(CSR_MESH_DEFAULT_NETID);
   53BD9:	0014      	ld         al, #+0x0
   53BDA:	0500      	**prefx    0x5
   53BDB:	FC9C      	bsr        +0x4FC <CSRmeshRemoveNetwork:0x540D7[p]>

        /* Enable relay and bridge based on the CS User Key setting */
        g_mesh_handler_data.bearer_tx_state.bearerEnabled =  LE_BEARER_ACTIVE;
   53BDC:	0114      	ld         al, #+0x1
   53BDD:	6B00      	**prefx    0x6B
   53BDE:	E725      	st         al, @0x6AE7 <g_mesh_handler_data+0x4>
        if( g_cskey_flags & CSKEY_RELAY_ENABLE_BIT)
   53BDF:	6A00      	**prefx    0x6A
   53BE0:	4311      	ld         ah, @0x6A43 <g_cskey_flags>
   53BE1:	E015      	ld         al, @0xFFE0 <register ah>
   53BE2:	01C4      	and        al, #0x1
   53BE3:	04F4      	beq        +0x4 <RemoveAssociation+0x14:0x53BE7[p]>
        {
            g_mesh_handler_data.bearer_tx_state.bearerRelayActive = 
   53BE4:	0314      	ld         al, #+0x3
   53BE5:	6B00      	**prefx    0x6B
   53BE6:	E625      	st         al, @0x6AE6 <g_mesh_handler_data+0x3>
                               LE_BEARER_ACTIVE | GATT_SERVER_BEARER_ACTIVE;
        }
        if( g_cskey_flags & CSKEY_BRIDGE_ENABLE_BIT)
   53BE7:	02C0      	and        ah, #0x2
   53BE8:	04F4      	beq        +0x4 <RemoveAssociation+0x19:0x53BEC[p]>
        {
            g_mesh_handler_data.bearer_tx_state.bearerEnabled  |=
   53BE9:	0314      	ld         al, #+0x3
   53BEA:	6B00      	**prefx    0x6B
   53BEB:	E725      	st         al, @0x6AE7 <g_mesh_handler_data+0x4>
                                                  GATT_SERVER_BEARER_ACTIVE;
        }

         /* Enable promiscuous mode */
        g_mesh_handler_data.bearer_tx_state.bearerPromiscuous = 
   53BEC:	0314      	ld         al, #+0x3
   53BED:	6B00      	**prefx    0x6B
   53BEE:	E825      	st         al, @0x6AE8 <g_mesh_handler_data+0x5>
                    LE_BEARER_ACTIVE | GATT_SERVER_BEARER_ACTIVE;
        AppUpdateBearerState(&g_mesh_handler_data.bearer_tx_state);
   53BEF:	6B00      	**prefx    0x6B
   53BF0:	E614      	ld         al, #+0x6AE6
   53BF1:	DD00      	**prefx    0xDD
   53BF2:	5C9C      	bsr        -0x22A4 <AppUpdateBearerState:0x5194E[p]>

        /* Save the state to NVM */
        Nvm_Write((uint16 *)&g_mesh_handler_data.bearer_tx_state, 
   53BF3:	0100      	**prefx    0x1
   53BF4:	0814      	ld         al, #+0x108
   53BF5:	0027      	st         al, @(0x0, y)
   53BF6:	6B00      	**prefx    0x6B
   53BF7:	E614      	ld         al, #+0x6AE6
   53BF8:	0310      	ld         ah, #+0x3
   53BF9:	CC00      	**prefx    0xCC
   53BFA:	4B9C      	bsr        -0x33B5 <Nvm_Write:0x50845[p]>
                  sizeof(CSR_MESH_BEARER_STATE_DATA_T),
                  NVM_OFFSET_BEARER_STATE);

        g_mesh_handler_data.ttl_value = DEFAULT_TTL_VALUE;
   53BFB:	3214      	ld         al, #+0x32
   53BFC:	6B00      	**prefx    0x6B
   53BFD:	EC25      	st         al, @0x6AEC <g_mesh_handler_data+0x9>
        /* Save the ttl value onto NVM */
        Nvm_Write((uint16 *)&g_mesh_handler_data.ttl_value, 
   53BFE:	0100      	**prefx    0x1
   53BFF:	0714      	ld         al, #+0x107
   53C00:	0027      	st         al, @(0x0, y)
   53C01:	6B00      	**prefx    0x6B
   53C02:	EC14      	ld         al, #+0x6AEC
   53C03:	0110      	ld         ah, #+0x1
   53C04:	CC00      	**prefx    0xCC
   53C05:	409C      	bsr        -0x33C0 <Nvm_Write:0x50845[p]>
                  sizeof(g_mesh_handler_data.ttl_value),
                  NVM_OFFSET_TTL_VALUE);

        g_mesh_handler_data.assoc_state = app_state_not_associated;
   53C06:	0014      	ld         al, #+0x0
   53C07:	6B00      	**prefx    0x6B
   53C08:	E525      	st         al, @0x6AE5 <g_mesh_handler_data+0x2>

        /* Write association state to NVM */
        Nvm_Write((uint16 *)&g_mesh_handler_data.assoc_state,
   53C09:	0100      	**prefx    0x1
   53C0A:	0614      	ld         al, #+0x106
   53C0B:	0027      	st         al, @(0x0, y)
   53C0C:	6B00      	**prefx    0x6B
   53C0D:	E514      	ld         al, #+0x6AE5
   53C0E:	0110      	ld         ah, #+0x1
   53C0F:	CC00      	**prefx    0xCC
   53C10:	359C      	bsr        -0x33CB <Nvm_Write:0x50845[p]>
                 sizeof(g_mesh_handler_data.assoc_state),
                 NVM_OFFSET_ASSOCIATION_STATE);

        /* Reset the supported model groups and save it to NVM */
        initializeSupportedModelGroups();
   53C11:	B69C      	bsr        -0x4A <initializeSupportedModelGroups:0x53BC7[p]>
        writeSupportedModelGroupsOntoNVM();
   53C12:	FF00      	**prefx    0xFF
   53C13:	AF9C      	bsr        -0x151 <writeSupportedModelGroupsOntoNVM:0x53AC2[p]>

#ifdef ENABLE_WATCHDOG_MODEL
        /* Reset Switch State Data and Write it onto NVM */
        WatchdogModelDataInit(NULL);
   53C14:	0014      	ld         al, #+0x0
   53C15:	E100      	**prefx    0xE1
   53C16:	D49C      	bsr        -0x1F2C <WatchdogModelDataInit:0x51CEA[p]>
        WriteWatchdogModelDataOntoNVM();
   53C17:	E100      	**prefx    0xE1
   53C18:	699C      	bsr        -0x1E97 <WriteWatchdogModelDataOntoNVM:0x51D81[p]>
#endif
#ifdef ENABLE_TIME_MODEL
        TimeModelDataInit(NULL);
   53C19:	0014      	ld         al, #+0x0
   53C1A:	E500      	**prefx    0xE5
   53C1B:	439C      	bsr        -0x1ABD <TimeModelDataInit:0x5215E[p]>
        WriteTimeModelDataOntoNVM(NVM_OFFSET_TIME_INTERVAL);
   53C1C:	0100      	**prefx    0x1
   53C1D:	4014      	ld         al, #+0x140
   53C1E:	E700      	**prefx    0xE7
   53C1F:	B79C      	bsr        -0x1949 <WriteTimeModelDataOntoNVM:0x522D6[p]>
#endif

#ifdef ENABLE_ACTION_MODEL
        ActionModelDataInit();
   53C20:	E800      	**prefx    0xE8
   53C21:	169C      	bsr        -0x17EA <ActionModelDataInit:0x52437[p]>
        WriteActionModelDataOntoNVM(NVM_OFFSET_ACTION_MODEL_DATA);
   53C22:	0100      	**prefx    0x1
   53C23:	4114      	ld         al, #+0x141
   53C24:	EA00      	**prefx    0xEA
   53C25:	B69C      	bsr        -0x164A <WriteActionModelDataOntoNVM:0x525DB[p]>
#endif

#ifdef ENABLE_EXTENSION_MODEL
        ExtensionModelDataInit();
   53C26:	ED00      	**prefx    0xED
   53C27:	579C      	bsr        -0x12A9 <ExtensionModelDataInit:0x5297E[p]>
        WriteExtensionModelDataOntoNVM(NVM_OFFSET_EXTENSION_MODEL_DATA);
   53C28:	0200      	**prefx    0x2
   53C29:	A114      	ld         al, #+0x1A1
   53C2A:	EE00      	**prefx    0xEE
   53C2B:	FD9C      	bsr        -0x1203 <WriteExtensionModelDataOntoNVM:0x52A28[p]>
#endif /* ENABLE_EXTENSION_MODEL */

        CSRmeshSetDefaultTTL(g_mesh_handler_data.ttl_value);
   53C2C:	6B00      	**prefx    0x6B
   53C2D:	EC15      	ld         al, @0x6AEC <g_mesh_handler_data+0x9>
   53C2E:	0400      	**prefx    0x4
   53C2F:	359C      	bsr        +0x435 <CSRmeshSetDefaultTTL:0x54064[p]>

        /* Association is removed. Initiate association */
        InitiateAssociation();
   53C30:	DD00      	**prefx    0xDD
   53C31:	FE9C      	bsr        -0x2302 <InitiateAssociation:0x5192F[p]>
    }
}
   53C32:	FD0F      	leave      #-0x3

0x00053C33 <readPersistentStore>:
 *  RETURNS/MODIFIES
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
static void readPersistentStore(void)
{
   53C33:	ED0B      	enter      #-0x13
    /* NVM offset for supported services */
    uint16 nvm_sanity = 0xffff;
   53C34:	FF14      	ld         al, #-0x1
   53C35:	0127      	st         al, @(+0x1, y)
    uint16 app_nvm_version = 0;
   53C36:	0018      	ld         x, #+0x0
   53C37:	022B      	st         x, @(+0x2, y)
#ifdef CSR101x_A05
    g_cskey_flags = CSReadUserKey(CSKEY_INDEX_USER_FLAGS);
#endif

    /* Read the sanity word */
    Nvm_Read(&nvm_sanity, sizeof(nvm_sanity), NVM_OFFSET_SANITY_WORD);
   53C38:	0100      	**prefx    0x1
   53C39:	0414      	ld         al, #+0x104
   53C3A:	0027      	st         al, @(0x0, y)
   53C3B:	E415      	ld         al, @0xFFE4 <register uy>
   53C3C:	0134      	add        al, #+0x1
   53C3D:	0110      	ld         ah, #+0x1
   53C3E:	CC00      	**prefx    0xCC
   53C3F:	1D9C      	bsr        -0x33E3 <Nvm_Read:0x5085C[p]>

    /* Read the Application NVM version */
    Nvm_Read(&app_nvm_version, 1, NVM_OFFSET_APP_NVM_VERSION);
   53C40:	0100      	**prefx    0x1
   53C41:	0518      	ld         x, #+0x105
   53C42:	002B      	st         x, @(0x0, y)
   53C43:	E415      	ld         al, @0xFFE4 <register uy>
   53C44:	0234      	add        al, #+0x2
   53C45:	0110      	ld         ah, #+0x1
   53C46:	CC00      	**prefx    0xCC
   53C47:	159C      	bsr        -0x33EB <Nvm_Read:0x5085C[p]>

    if(g_app_nvm_fresh == FALSE && app_nvm_version == APP_NVM_VERSION )
   53C48:	6A00      	**prefx    0x6A
   53C49:	4515      	ld         al, @0x6A45 <g_app_nvm_fresh>
   53C4A:	26F0      	bne        +0x26 <readPersistentStore+0x3D:0x53C70[p]>
   53C4B:	0217      	ld         al, @(+0x2, y)
   53C4C:	0184      	cmp        al, #+0x1
   53C4D:	79F0      	bne        +0x79 <readPersistentStore+0x93:0x53CC6[p]>
    {
#ifdef ENABLE_WATCHDOG_MODEL
        /* Read the watchdog model data from NVM */
        ReadWatchdogModelDataFromNVM();
   53C4E:	E200      	**prefx    0xE2
   53C4F:	929C      	bsr        -0x1E6E <ReadWatchdogModelDataFromNVM:0x51DE1[p]>
#endif

#ifndef DEBUG_ENABLE
        /* Read the switch data from NVM. */
        ReadSwitchDataFromNVM();
   53C50:	0200      	**prefx    0x2
   53C51:	C29C      	bsr        +0x1C2 <ReadSwitchDataFromNVM:0x53E13[p]>
#endif

#ifdef ENABLE_TIME_MODEL
        /* Read the Time Model Data */
        ReadTimeModelDataFromNVM(NVM_OFFSET_TIME_INTERVAL);
   53C52:	0100      	**prefx    0x1
   53C53:	4014      	ld         al, #+0x140
   53C54:	E700      	**prefx    0xE7
   53C55:	3D9C      	bsr        -0x18C3 <ReadTimeModelDataFromNVM:0x52392[p]>
#endif

#ifdef ENABLE_ACTION_MODEL
        /* Read the Action Model Data */
        ReadActionModelDataFromNVM(NVM_OFFSET_ACTION_MODEL_DATA);
   53C56:	0100      	**prefx    0x1
   53C57:	4114      	ld         al, #+0x141
   53C58:	ED00      	**prefx    0xED
   53C59:	909C      	bsr        -0x1370 <ReadActionModelDataFromNVM:0x528E9[p]>
#endif

#ifdef ENABLE_EXTENSION_MODEL
        /* Read the Extension Model Data */
        ReadExtensionModelDataFromNVM(NVM_OFFSET_EXTENSION_MODEL_DATA);
   53C5A:	0200      	**prefx    0x2
   53C5B:	A114      	ld         al, #+0x1A1
   53C5C:	EF00      	**prefx    0xEF
   53C5D:	DD9C      	bsr        -0x1123 <ReadExtensionModelDataFromNVM:0x52B3A[p]>
#endif /* ENABLE_EXTENSION_MODEL */

        /* Read the saved bearer state from NVM */
        Nvm_Read((uint16 *)&g_mesh_handler_data.bearer_tx_state, 
   53C5E:	0100      	**prefx    0x1
   53C5F:	0814      	ld         al, #+0x108
   53C60:	0027      	st         al, @(0x0, y)
   53C61:	6B00      	**prefx    0x6B
   53C62:	E614      	ld         al, #+0x6AE6
   53C63:	0310      	ld         ah, #+0x3
   53C64:	CC00      	**prefx    0xCC
   53C65:	F79C      	bsr        -0x3409 <Nvm_Read:0x5085C[p]>
                  sizeof(CSR_MESH_BEARER_STATE_DATA_T),
                  NVM_OFFSET_BEARER_STATE);

        /* Read Stored TTL value from NVM */
        Nvm_Read((uint16 *)&g_mesh_handler_data.ttl_value,
   53C66:	0100      	**prefx    0x1
   53C67:	0718      	ld         x, #+0x107
   53C68:	002B      	st         x, @(0x0, y)
   53C69:	6B00      	**prefx    0x6B
   53C6A:	EC14      	ld         al, #+0x6AEC
   53C6B:	0110      	ld         ah, #+0x1
   53C6C:	CC00      	**prefx    0xCC
   53C6D:	EF9C      	bsr        -0x3411 <Nvm_Read:0x5085C[p]>
   53C6E:	0100      	**prefx    0x1
   53C6F:	A5E0      	bra        +0xA5 <readPersistentStore+0xE1:0x53D14[p]>
                NVM_OFFSET_TTL_VALUE);
    }
    else
    {
        /* Either the NVM Sanity is not valid or the App Version has changed */
        if( g_app_nvm_fresh == TRUE)
   53C70:	0184      	cmp        al, #+0x1
   53C71:	55F0      	bne        +0x55 <readPersistentStore+0x93:0x53CC6[p]>
        {
            /* NVM Sanity check failed means either the device is being brought
             * up for the first time or memory has got corrupted in which case
             * discard the data and start fresh.
             */
            nvm_sanity = NVM_SANITY_MAGIC;
   53C72:	AC00      	**prefx    0xAC
   53C73:	9114      	ld         al, #-0x546F
   53C74:	0127      	st         al, @(+0x1, y)

            /* The device will not be associated as it is coming up for the
             * first time
             */
            g_mesh_handler_data.assoc_state = app_state_not_associated;
   53C75:	0018      	ld         x, #+0x0
   53C76:	6B00      	**prefx    0x6B
   53C77:	E529      	st         x, @0x6AE5 <g_mesh_handler_data+0x2>

            /* Write association state to NVM */
            Nvm_Write((uint16 *)&g_mesh_handler_data.assoc_state,
   53C78:	0100      	**prefx    0x1
   53C79:	0614      	ld         al, #+0x106
   53C7A:	0027      	st         al, @(0x0, y)
   53C7B:	6B00      	**prefx    0x6B
   53C7C:	E514      	ld         al, #+0x6AE5
   53C7D:	0110      	ld         ah, #+0x1
   53C7E:	CC00      	**prefx    0xCC
   53C7F:	C69C      	bsr        -0x343A <Nvm_Write:0x50845[p]>
                      sizeof(g_mesh_handler_data.assoc_state),
                      NVM_OFFSET_ASSOCIATION_STATE);

            if (g_cskey_flags & CSKEY_RANDOM_UUID_ENABLE_BIT)
   53C80:	6A00      	**prefx    0x6A
   53C81:	4315      	ld         al, @0x6A43 <g_cskey_flags>
   53C82:	04C4      	and        al, #0x4
   53C83:	2BF4      	beq        +0x2B <readPersistentStore+0x7B:0x53CAE[p]>
   53C84:	E419      	ld         x, @0xFFE4 <register uy>
   53C85:	0738      	add        x, #+0x7
   53C86:	0F2B      	st         x, @(+0xF, y)
                uint16 uuid[UUID_LENGTH_WORDS];

                /* The flag is set so generate a random UUID and write to NVM */
                for (index = 0; index < UUID_LENGTH_WORDS; index++)
                {
                    uuid[index] = Random16();
   53C87:	FB00      	**prefx    0xFB
   53C88:	4700      	**prefx    0x47
   53C89:	E19C      	bsr        -0x4B91F <Random16:0x836A[p]>
   53C8A:	0F1B      	ld         x, @(+0xF, y)
   53C8B:	0026      	st         al, @(0x0, x)
   53C8C:	0138      	add        x, #+0x1
   53C8D:	0F2B      	st         x, @(+0xF, y)
            if (g_cskey_flags & CSKEY_RANDOM_UUID_ENABLE_BIT)
            {
                uint16 uuid[UUID_LENGTH_WORDS];

                /* The flag is set so generate a random UUID and write to NVM */
                for (index = 0; index < UUID_LENGTH_WORDS; index++)
   53C8E:	E415      	ld         al, @0xFFE4 <register uy>
   53C8F:	0F34      	add        al, #+0xF
   53C90:	E189      	cmp        x, @0xFFE1 <register al>
   53C91:	F6F0      	bne        -0xA <readPersistentStore+0x54:0x53C87[p]>
                {
                    uuid[index] = Random16();
                }
                Nvm_Write(uuid, UUID_LENGTH_WORDS,
   53C92:	0100      	**prefx    0x1
   53C93:	0C14      	ld         al, #+0x10C
   53C94:	0027      	st         al, @(0x0, y)
   53C95:	E415      	ld         al, @0xFFE4 <register uy>
   53C96:	0734      	add        al, #+0x7
   53C97:	0810      	ld         ah, #+0x8
   53C98:	CC00      	**prefx    0xCC
   53C99:	AC9C      	bsr        -0x3454 <Nvm_Write:0x50845[p]>
   53C9A:	E419      	ld         x, @0xFFE4 <register uy>
   53C9B:	0338      	add        x, #+0x3
   53C9C:	102B      	st         x, @(+0x10, y)
                uint16 ac[AUTH_CODE_LENGTH_WORDS];

                /* The flag is set so generate a random UUID and write to NVM */
                for (index = 0; index < AUTH_CODE_LENGTH_WORDS; index++)
                {
                    ac[index] = Random16();
   53C9D:	FB00      	**prefx    0xFB
   53C9E:	4700      	**prefx    0x47
   53C9F:	CB9C      	bsr        -0x4B935 <Random16:0x836A[p]>
   53CA0:	101B      	ld         x, @(+0x10, y)
   53CA1:	0026      	st         al, @(0x0, x)
   53CA2:	0138      	add        x, #+0x1
   53CA3:	102B      	st         x, @(+0x10, y)

#ifdef USE_AUTHORISATION_CODE
                uint16 ac[AUTH_CODE_LENGTH_WORDS];

                /* The flag is set so generate a random UUID and write to NVM */
                for (index = 0; index < AUTH_CODE_LENGTH_WORDS; index++)
   53CA4:	E415      	ld         al, @0xFFE4 <register uy>
   53CA5:	0734      	add        al, #+0x7
   53CA6:	E189      	cmp        x, @0xFFE1 <register al>
   53CA7:	F6F0      	bne        -0xA <readPersistentStore+0x6A:0x53C9D[p]>
                {
                    ac[index] = Random16();
                }
                Nvm_Write(ac, AUTH_CODE_LENGTH_WORDS,
   53CA8:	0100      	**prefx    0x1
   53CA9:	1414      	ld         al, #+0x114
   53CAA:	0027      	st         al, @(0x0, y)
   53CAB:	E415      	ld         al, @0xFFE4 <register uy>
   53CAC:	0334      	add        al, #+0x3
   53CAD:	0EE0      	bra        +0xE <readPersistentStore+0x88:0x53CBB[p]>
            {
#ifndef CSR101x
                /* Copy UUID and Authorization Code from CS Keys to Flash, if
                 * Random UUID is disabled in flags.
                 */
                Nvm_Write(cached_uuid, UUID_LENGTH_WORDS, CSR_MESH_NVM_DEVICE_UUID_OFFSET);
   53CAE:	0100      	**prefx    0x1
   53CAF:	0C18      	ld         x, #+0x10C
   53CB0:	002B      	st         x, @(0x0, y)
   53CB1:	6B00      	**prefx    0x6B
   53CB2:	DB14      	ld         al, #+0x6ADB
   53CB3:	0810      	ld         ah, #+0x8
   53CB4:	CC00      	**prefx    0xCC
   53CB5:	909C      	bsr        -0x3470 <Nvm_Write:0x50845[p]>

#ifdef USE_AUTHORISATION_CODE
                Nvm_Write(cached_auth_code, AUTH_CODE_LENGTH_WORDS, CSR_MESH_NVM_DEVICE_AUTH_CODE_OFFSET);
   53CB6:	0100      	**prefx    0x1
   53CB7:	1414      	ld         al, #+0x114
   53CB8:	0027      	st         al, @(0x0, y)
   53CB9:	6B00      	**prefx    0x6B
   53CBA:	D714      	ld         al, #+0x6AD7
   53CBB:	0410      	ld         ah, #+0x4
   53CBC:	CC00      	**prefx    0xCC
   53CBD:	889C      	bsr        -0x3478 <Nvm_Write:0x50845[p]>
             * at the end after all other NVM data is written.
             * This helps in avoiding unexpected application behaviour in case 
             * of a device reset after sanity word is written but other NVM info
             * is not written
             */
            Nvm_Write(&nvm_sanity, sizeof(nvm_sanity), NVM_OFFSET_SANITY_WORD);
   53CBE:	0100      	**prefx    0x1
   53CBF:	0418      	ld         x, #+0x104
   53CC0:	002B      	st         x, @(0x0, y)
   53CC1:	E415      	ld         al, @0xFFE4 <register uy>
   53CC2:	0134      	add        al, #+0x1
   53CC3:	0110      	ld         ah, #+0x1
   53CC4:	CC00      	**prefx    0xCC
   53CC5:	809C      	bsr        -0x3480 <Nvm_Write:0x50845[p]>
        }

        /* Initialize the new version of the NVM */
        app_nvm_version = APP_NVM_VERSION;
   53CC6:	0114      	ld         al, #+0x1
   53CC7:	0227      	st         al, @(+0x2, y)
         * after an application update, it has to be moved within the sanity
         * word check
         */
#ifndef RESET_NVM
#if (SRC_SEQ_CACHE_SLOT_SIZE == 0)
        AppClearSeqCache();
   53CC8:	DC00      	**prefx    0xDC
   53CC9:	3B9C      	bsr        -0x23C5 <AppClearSeqCache:0x51904[p]>
#endif
#endif /* !RESET_NVM */
        
#ifdef ENABLE_WATCHDOG_MODEL
        WatchdogModelDataInit(NULL);
   53CCA:	0014      	ld         al, #+0x0
   53CCB:	E000      	**prefx    0xE0
   53CCC:	1E9C      	bsr        -0x1FE2 <WatchdogModelDataInit:0x51CEA[p]>
        WriteWatchdogModelDataOntoNVM();
   53CCD:	E100      	**prefx    0xE1
   53CCE:	B39C      	bsr        -0x1F4D <WriteWatchdogModelDataOntoNVM:0x51D81[p]>
#endif
#ifdef ENABLE_TIME_MODEL
        TimeModelDataInit(NULL);
   53CCF:	0014      	ld         al, #+0x0
   53CD0:	E500      	**prefx    0xE5
   53CD1:	8D9C      	bsr        -0x1B73 <TimeModelDataInit:0x5215E[p]>
        WriteTimeModelDataOntoNVM(NVM_OFFSET_TIME_INTERVAL);
   53CD2:	0100      	**prefx    0x1
   53CD3:	4014      	ld         al, #+0x140
   53CD4:	E600      	**prefx    0xE6
   53CD5:	019C      	bsr        -0x19FF <WriteTimeModelDataOntoNVM:0x522D6[p]>
#endif

#ifdef ENABLE_ACTION_MODEL
        ActionModelDataInit();
   53CD6:	E700      	**prefx    0xE7
   53CD7:	609C      	bsr        -0x18A0 <ActionModelDataInit:0x52437[p]>
        WriteActionModelDataOntoNVM(NVM_OFFSET_ACTION_MODEL_DATA);
   53CD8:	0100      	**prefx    0x1
   53CD9:	4114      	ld         al, #+0x141
   53CDA:	E900      	**prefx    0xE9
   53CDB:	009C      	bsr        -0x1700 <WriteActionModelDataOntoNVM:0x525DB[p]>
#endif

#ifdef ENABLE_EXTENSION_MODEL
        ExtensionModelDataInit();
   53CDC:	ED00      	**prefx    0xED
   53CDD:	A19C      	bsr        -0x135F <ExtensionModelDataInit:0x5297E[p]>
        WriteExtensionModelDataOntoNVM(NVM_OFFSET_EXTENSION_MODEL_DATA);
   53CDE:	0200      	**prefx    0x2
   53CDF:	A114      	ld         al, #+0x1A1
   53CE0:	ED00      	**prefx    0xED
   53CE1:	479C      	bsr        -0x12B9 <WriteExtensionModelDataOntoNVM:0x52A28[p]>
#endif /* ENABLE_EXTENSION_MODEL */

        /* Enable relay and bridge based on the CS User Key setting */
        g_mesh_handler_data.bearer_tx_state.bearerEnabled =  LE_BEARER_ACTIVE;
   53CE2:	0118      	ld         x, #+0x1
   53CE3:	6B00      	**prefx    0x6B
   53CE4:	E729      	st         x, @0x6AE7 <g_mesh_handler_data+0x4>
        if( g_cskey_flags & CSKEY_RELAY_ENABLE_BIT)
   53CE5:	6A00      	**prefx    0x6A
   53CE6:	4311      	ld         ah, @0x6A43 <g_cskey_flags>
   53CE7:	E015      	ld         al, @0xFFE0 <register ah>
   53CE8:	01C4      	and        al, #0x1
   53CE9:	04F4      	beq        +0x4 <readPersistentStore+0xBA:0x53CED[p]>
        {
            g_mesh_handler_data.bearer_tx_state.bearerRelayActive = 
   53CEA:	0314      	ld         al, #+0x3
   53CEB:	6B00      	**prefx    0x6B
   53CEC:	E625      	st         al, @0x6AE6 <g_mesh_handler_data+0x3>
                               LE_BEARER_ACTIVE | GATT_SERVER_BEARER_ACTIVE;
        }
        if( g_cskey_flags & CSKEY_BRIDGE_ENABLE_BIT)
   53CED:	02C0      	and        ah, #0x2
   53CEE:	04F4      	beq        +0x4 <readPersistentStore+0xBF:0x53CF2[p]>
        {
            g_mesh_handler_data.bearer_tx_state.bearerEnabled  |=
   53CEF:	0318      	ld         x, #+0x3
   53CF0:	6B00      	**prefx    0x6B
   53CF1:	E729      	st         x, @0x6AE7 <g_mesh_handler_data+0x4>
        }
        /* Enable promiscuous mode as the device is not associated. This
         * allows the device to relay MCP messages targeted for other
         * devices that are already associated
         */
        g_mesh_handler_data.bearer_tx_state.bearerPromiscuous = 
   53CF2:	0314      	ld         al, #+0x3
   53CF3:	6B00      	**prefx    0x6B
   53CF4:	E825      	st         al, @0x6AE8 <g_mesh_handler_data+0x5>
                                   LE_BEARER_ACTIVE | GATT_SERVER_BEARER_ACTIVE;
        /* Save the state to NVM */
        Nvm_Write((uint16 *)&g_mesh_handler_data.bearer_tx_state, 
   53CF5:	0100      	**prefx    0x1
   53CF6:	0818      	ld         x, #+0x108
   53CF7:	002B      	st         x, @(0x0, y)
   53CF8:	6B00      	**prefx    0x6B
   53CF9:	E614      	ld         al, #+0x6AE6
   53CFA:	0310      	ld         ah, #+0x3
   53CFB:	CB00      	**prefx    0xCB
   53CFC:	499C      	bsr        -0x34B7 <Nvm_Write:0x50845[p]>
                  sizeof(CSR_MESH_BEARER_STATE_DATA_T),
                  NVM_OFFSET_BEARER_STATE);

        g_mesh_handler_data.ttl_value = DEFAULT_TTL_VALUE;
   53CFD:	3214      	ld         al, #+0x32
   53CFE:	6B00      	**prefx    0x6B
   53CFF:	EC25      	st         al, @0x6AEC <g_mesh_handler_data+0x9>
        /* Save the ttl value onto NVM */
        Nvm_Write((uint16 *)&g_mesh_handler_data.ttl_value, 
   53D00:	0100      	**prefx    0x1
   53D01:	0718      	ld         x, #+0x107
   53D02:	002B      	st         x, @(0x0, y)
   53D03:	6B00      	**prefx    0x6B
   53D04:	EC14      	ld         al, #+0x6AEC
   53D05:	0110      	ld         ah, #+0x1
   53D06:	CB00      	**prefx    0xCB
   53D07:	3E9C      	bsr        -0x34C2 <Nvm_Write:0x50845[p]>
                  sizeof(g_mesh_handler_data.ttl_value),
                  NVM_OFFSET_TTL_VALUE);

        /* Initialize model groups */
        initializeSupportedModelGroups();
   53D08:	FF00      	**prefx    0xFF
   53D09:	BE9C      	bsr        -0x142 <initializeSupportedModelGroups:0x53BC7[p]>
        writeSupportedModelGroupsOntoNVM();
   53D0A:	FE00      	**prefx    0xFE
   53D0B:	B79C      	bsr        -0x249 <writeSupportedModelGroupsOntoNVM:0x53AC2[p]>
         * at the end after all other NVM data is written.
         * This helps in avoiding unexpected application behaviour in case 
         * of a device reset after sanity word is written but other NVM info
         * is not written
         */
        Nvm_Write(&app_nvm_version, 1, NVM_OFFSET_APP_NVM_VERSION);
   53D0C:	0100      	**prefx    0x1
   53D0D:	0514      	ld         al, #+0x105
   53D0E:	0027      	st         al, @(0x0, y)
   53D0F:	E415      	ld         al, @0xFFE4 <register uy>
   53D10:	0234      	add        al, #+0x2
   53D11:	0110      	ld         ah, #+0x1
   53D12:	CB00      	**prefx    0xCB
   53D13:	329C      	bsr        -0x34CE <Nvm_Write:0x50845[p]>
 *----------------------------------------------------------------------------*/
static void readSupportedModelGroupsFromNVM(void)
{
#ifdef ENABLE_SWITCH_MODEL
    /* Read assigned Groups IDs for Switch model from NVM */
    Nvm_Read((uint16 *)switch_model_groups, sizeof(uint16)*MAX_MODEL_GROUPS,
   53D14:	0200      	**prefx    0x2
   53D15:	A518      	ld         x, #+0x1A5
   53D16:	002B      	st         x, @(0x0, y)
   53D17:	6A00      	**prefx    0x6A
   53D18:	3E14      	ld         al, #+0x6A3E
   53D19:	0110      	ld         ah, #+0x1
   53D1A:	CB00      	**prefx    0xCB
   53D1B:	419C      	bsr        -0x34BF <Nvm_Read:0x5085C[p]>
                                             NVM_OFFSET_SWITCH_MODEL_GROUPS);
#endif /* ENABLE_SWITCH_MODEL */

#ifdef ENABLE_WATCHDOG_MODEL
    /* Read assigned Groups IDs for Power model from NVM */
    Nvm_Read((uint16 *)wdog_model_groups, sizeof(uint16)*MAX_MODEL_GROUPS,
   53D1C:	0200      	**prefx    0x2
   53D1D:	A614      	ld         al, #+0x1A6
   53D1E:	0027      	st         al, @(0x0, y)
   53D1F:	6A00      	**prefx    0x6A
   53D20:	4214      	ld         al, #+0x6A42
   53D21:	0110      	ld         ah, #+0x1
   53D22:	CB00      	**prefx    0xCB
   53D23:	399C      	bsr        -0x34C7 <Nvm_Read:0x5085C[p]>
                                             NVM_OFFSET_WDOG_MODEL_GROUPS);
#endif /* ENABLE_WATCHDOG_MODEL */

#ifdef ENABLE_ATTENTION_MODEL
    /* Read assigned Groups IDs for Attention model from NVM */
    Nvm_Read((uint16 *)attention_model_groups, sizeof(uint16)*MAX_MODEL_GROUPS,
   53D24:	0200      	**prefx    0x2
   53D25:	A718      	ld         x, #+0x1A7
   53D26:	002B      	st         x, @(0x0, y)
   53D27:	6A00      	**prefx    0x6A
   53D28:	4114      	ld         al, #+0x6A41
   53D29:	0110      	ld         ah, #+0x1
   53D2A:	CB00      	**prefx    0xCB
   53D2B:	319C      	bsr        -0x34CF <Nvm_Read:0x5085C[p]>
                                             NVM_OFFSET_ATT_MODEL_GROUPS);
#endif /* ENABLE_ATTENTION_MODEL */

#ifdef ENABLE_DATA_MODEL
    /* Read assigned Groups IDs for Data model from NVM */
    Nvm_Read((uint16 *)data_model_groups, sizeof(uint16)*MAX_MODEL_GROUPS,
   53D2C:	0200      	**prefx    0x2
   53D2D:	A814      	ld         al, #+0x1A8
   53D2E:	0027      	st         al, @(0x0, y)
   53D2F:	6A00      	**prefx    0x6A
   53D30:	4014      	ld         al, #+0x6A40
   53D31:	0110      	ld         ah, #+0x1
   53D32:	CB00      	**prefx    0xCB
   53D33:	299C      	bsr        -0x34D7 <Nvm_Read:0x5085C[p]>
                                             NVM_OFFSET_DATA_MODEL_GROUPS);
#endif /* ENABLE_DATA_MODEL */
    
#ifdef ENABLE_LOT_MODEL
    Nvm_Read((uint16 *)lot_model_groups, sizeof(uint16)*MAX_MODEL_GROUPS,
   53D34:	0200      	**prefx    0x2
   53D35:	A918      	ld         x, #+0x1A9
   53D36:	002B      	st         x, @(0x0, y)
   53D37:	6A00      	**prefx    0x6A
   53D38:	3F14      	ld         al, #+0x6A3F
   53D39:	0110      	ld         ah, #+0x1
   53D3A:	CB00      	**prefx    0xCB
   53D3B:	219C      	bsr        -0x34DF <Nvm_Read:0x5085C[p]>

    /* Read all the supported model group information from the NVM */
    readSupportedModelGroupsFromNVM();

    /* Read association state from NVM */
    Nvm_Read((uint16 *)&g_mesh_handler_data.assoc_state,
   53D3C:	0100      	**prefx    0x1
   53D3D:	0614      	ld         al, #+0x106
   53D3E:	0027      	st         al, @(0x0, y)
   53D3F:	6B00      	**prefx    0x6B
   53D40:	E514      	ld         al, #+0x6AE5
   53D41:	0110      	ld         ah, #+0x1
   53D42:	CB00      	**prefx    0xCB
   53D43:	199C      	bsr        -0x34E7 <Nvm_Read:0x5085C[p]>
              sizeof(g_mesh_handler_data.assoc_state),
              NVM_OFFSET_ASSOCIATION_STATE);
}
   53D44:	ED0F      	leave      #-0x13

0x00053D45 <AppMeshInit>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void AppMeshInit(void)
{
   53D45:	FA0B      	enter      #-0x6
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
static void setMeshConfigParams(CSR_SCHED_MESH_LE_PARAM_T *mesh_le_params)
{
    mesh_le_params->is_le_bearer_ready           = TRUE;
   53D46:	0114      	ld         al, #+0x1
   53D47:	6B00      	**prefx    0x6B
   53D48:	ED25      	st         al, @0x6AED <le_params>
    mesh_le_params->tx_param.device_repeat_count = DEVICE_REPEAT_COUNT;
   53D49:	0614      	ld         al, #+0x6
   53D4A:	6B00      	**prefx    0x6B
   53D4B:	F025      	st         al, @0x6AF0 <le_params+0x3>
    mesh_le_params->tx_param.relay_repeat_count  = RELAY_REPEAT_COUNT;
   53D4C:	0314      	ld         al, #+0x3
   53D4D:	6B00      	**prefx    0x6B
   53D4E:	EF25      	st         al, @0x6AEF <le_params+0x2>
    mesh_le_params->tx_param.tx_queue_size       = TX_QUEUE_SIZE;
   53D4F:	0814      	ld         al, #+0x8
   53D50:	6B00      	**prefx    0x6B
   53D51:	EE25      	st         al, @0x6AEE <le_params+0x1>
    mesh_le_params->tx_param.tx_queue_ptr        = tx_queue_buffer;
   53D52:	6B00      	**prefx    0x6B
   53D53:	FC14      	ld         al, #+0x6AFC
   53D54:	6B00      	**prefx    0x6B
   53D55:	F125      	st         al, @0x6AF1 <le_params+0x4>
 *
 *----------------------------------------------------------------------------*/
static void setGenericConfigParams(
                            CSR_SCHED_GENERIC_LE_PARAM_T *generic_le_params)
{
    generic_le_params->scan_param_type      = CSR_SCHED_SCAN_DUTY_PARAM;
   53D56:	0114      	ld         al, #+0x1
   53D57:	6B00      	**prefx    0x6B
   53D58:	F225      	st         al, @0x6AF2 <le_params+0x5>
    generic_le_params->scan_param.scan_duty_param.scan_duty_cycle
   53D59:	0400      	**prefx    0x4
   53D5A:	E814      	ld         al, #+0x3E8
   53D5B:	6B00      	**prefx    0x6B
   53D5C:	F325      	st         al, @0x6AF3 <le_params+0x6>
                                            = HIGH_SCAN_DUTY_CYCLE;
    generic_le_params->scan_param.scan_duty_param.min_scan_slot   
   53D5D:	0414      	ld         al, #+0x4
   53D5E:	6B00      	**prefx    0x6B
   53D5F:	F425      	st         al, @0x6AF4 <le_params+0x7>
                                            = DEFAULT_MIN_SCAN_SLOT;
    generic_le_params->advertising_interval = DEFAULT_ADV_INTERVAL;
   53D60:	6B00      	**prefx    0x6B
   53D61:	F718      	ld         x, #+0x6AF7
   53D62:	0114      	ld         al, #+0x1
   53D63:	6B00      	**prefx    0x6B
   53D64:	F725      	st         al, @0x6AF7 <le_params+0xA>
   53D65:	6000      	**prefx    0x60
   53D66:	9014      	ld         al, #+0x5F90
   53D67:	0126      	st         al, @(+0x1, x)
    generic_le_params->advertising_time     = DEFAULT_ADV_TIME;
   53D68:	0914      	ld         al, #+0x9
   53D69:	6B00      	**prefx    0x6B
   53D6A:	F925      	st         al, @0x6AF9 <le_params+0xC>
   53D6B:	2800      	**prefx    0x28
   53D6C:	C014      	ld         al, #+0x27C0
   53D6D:	0326      	st         al, @(+0x3, x)
    generic_le_params->addr_type            = DEFAULT_ADDR_TYPE;
   53D6E:	0114      	ld         al, #+0x1
   53D6F:	6B00      	**prefx    0x6B
   53D70:	FB25      	st         al, @0x6AFB <le_params+0xE>
{
    CSRmeshResult result = CSR_MESH_RESULT_FAILURE;

    /* Set LE Config Params */
    setLeConfigParams(&le_params);
    CSRSchedSetConfigParams(&le_params);
   53D71:	6B00      	**prefx    0x6B
   53D72:	ED14      	ld         al, #+0x6AED
   53D73:	1F00      	**prefx    0x1F
   53D74:	709C      	bsr        +0x1F70 <CSRSchedSetConfigParams:0x55CE4[p]>

    /* Start ADV GATT Scheduler */
    CSRSchedStart();
   53D75:	1E00      	**prefx    0x1E
   53D76:	E49C      	bsr        +0x1DE4 <CSRSchedStart:0x55B5A[p]>
 *----------------------------------------------------------------------------*/
static void initializeSupportedModelData(void)
{
#ifdef ENABLE_WATCHDOG_MODEL
        /* Initialize the watchdog model */
        WatchdogModelDataInit(&g_watchdog_handler_data);
   53D77:	6500      	**prefx    0x65
   53D78:	EA14      	ld         al, #+0x64EA
   53D79:	DF00      	**prefx    0xDF
   53D7A:	709C      	bsr        -0x2090 <WatchdogModelDataInit:0x51CEA[p]>
#endif /* ENABLE_WATCHDOG_MODEL */

#ifdef ENABLE_ATTENTION_MODEL
        /* Initialize the attention model */
        AttentionModelDataInit(&g_attention_handler_data);
   53D7B:	6500      	**prefx    0x65
   53D7C:	E414      	ld         al, #+0x64E4
   53D7D:	DB00      	**prefx    0xDB
   53D7E:	C09C      	bsr        -0x2540 <AttentionModelDataInit:0x5183E[p]>
#endif /* ENABLE_ATTENTION_MODEL */

#ifdef ENABLE_BATTERY_MODEL
        /* Initialize the battery model */
        BatteryModelDataInit(&g_battery_handler_data);
   53D7F:	6500      	**prefx    0x65
   53D80:	E714      	ld         al, #+0x64E7
   53D81:	DB00      	**prefx    0xDB
   53D82:	359C      	bsr        -0x24CB <BatteryModelDataInit:0x518B7[p]>
#endif /* ENABLE_BATTERY_MODEL */

#ifdef ENABLE_TIME_MODEL
        /* Initialize Time Model */
        TimeModelDataInit(&g_time_handler_data);
   53D83:	6500      	**prefx    0x65
   53D84:	F214      	ld         al, #+0x64F2
   53D85:	E400      	**prefx    0xE4
   53D86:	D89C      	bsr        -0x1C28 <TimeModelDataInit:0x5215E[p]>
#endif /* ENABLE_TIME_MODEL */

#ifdef ENABLE_ACTION_MODEL
        /* Initialize Action Model */
        ActionModelDataInit();
   53D87:	E700      	**prefx    0xE7
   53D88:	AF9C      	bsr        -0x1951 <ActionModelDataInit:0x52437[p]>
#endif /* ENABLE_ACTION_MODEL */

#ifdef ENABLE_EXTENSION_MODEL
        /* Initialize Extension Model */
        ExtensionModelDataInit();
   53D89:	EC00      	**prefx    0xEC
   53D8A:	F49C      	bsr        -0x140C <ExtensionModelDataInit:0x5297E[p]>
     * could be poulated in the readPersistentStore() function.
     */
    initializeSupportedModelData();

    /* Read persistent storage */
    readPersistentStore();
   53D8B:	FF00      	**prefx    0xFF
   53D8C:	A79C      	bsr        -0x159 <readPersistentStore:0x53C33[p]>

    /* Register with CSR Mesh */
#ifdef USE_AUTHORISATION_CODE
    result = CSRmeshInit(CSR_MESH_NON_CONFIG_DEVICE_WITH_AUTH_CODE);
   53D8D:	0314      	ld         al, #+0x3
   53D8E:	0400      	**prefx    0x4
   53D8F:	529C      	bsr        +0x452 <CSRmeshInit:0x541E1[p]>
   53D90:	0327      	st         al, @(+0x3, y)
#else
    result = CSRmeshInit(CSR_MESH_NON_CONFIG_DEVICE);
#endif /* USE_AUTHORISATION_CODE */

    g_mesh_handler_data.appearance = &appearance;
   53D91:	6100      	**prefx    0x61
   53D92:	C214      	ld         al, #+0x60C2
   53D93:	6B00      	**prefx    0x6B
   53D94:	E325      	st         al, @0x6AE3 <g_mesh_handler_data>
    g_mesh_handler_data.vid_pid_info = &vid_pid_info;
   53D95:	6100      	**prefx    0x61
   53D96:	BE14      	ld         al, #+0x60BE
   53D97:	6B00      	**prefx    0x6B
   53D98:	E425      	st         al, @0x6AE4 <g_mesh_handler_data+0x1>

    MeshHandlerInit(&g_mesh_handler_data);
   53D99:	6B00      	**prefx    0x6B
   53D9A:	E314      	ld         al, #+0x6AE3
   53D9B:	DC00      	**prefx    0xDC
   53D9C:	889C      	bsr        -0x2478 <MeshHandlerInit:0x51924[p]>

    if(result == CSR_MESH_RESULT_SUCCESS)
   53D9D:	039B      	tst        @(+0x3, y)
   53D9E:	6AF0      	bne        +0x6A <AppMeshInit+0xC3:0x53E08[p]>
 *
 *----------------------------------------------------------------------------*/
static void initializeSupportedModels(void)
{
    /* Initialize Light Client */
    LightModelClientInit(NULL);
   53D9F:	0010      	ld         ah, #+0x0
   53DA0:	0014      	ld         al, #+0x0
   53DA1:	3000      	**prefx    0x30
   53DA2:	9D9C      	bsr        +0x2F9D <LightModelClientInit:0x56D3F[p]>

    /* Initialize the power Client */
    PowerModelClientInit(NULL);
   53DA3:	0010      	ld         ah, #+0x0
   53DA4:	0014      	ld         al, #+0x0
   53DA5:	3000      	**prefx    0x30
   53DA6:	1F9C      	bsr        +0x301F <PowerModelClientInit:0x56DC5[p]>

#ifdef ENABLE_SWITCH_MODEL
    /* Initialize the switch model */
    SwitchModelInit(CSR_MESH_DEFAULT_NETID, switch_model_groups,
   53DA7:	0114      	ld         al, #+0x1
   53DA8:	0027      	st         al, @(0x0, y)
   53DA9:	0014      	ld         al, #+0x0
   53DAA:	0127      	st         al, @(+0x1, y)
   53DAB:	0227      	st         al, @(+0x2, y)
   53DAC:	6A00      	**prefx    0x6A
   53DAD:	3E10      	ld         ah, #+0x6A3E
   53DAE:	3000      	**prefx    0x30
   53DAF:	299C      	bsr        +0x3029 <SwitchModelInit:0x56DD8[p]>
                    MAX_MODEL_GROUPS, NULL);
#endif /* ENABLE_SWITCH_MODEL */

#ifdef ENABLE_ATTENTION_MODEL
    /* Initialize the attention model */
    AttentionModelHandlerInit(CSR_MESH_DEFAULT_NETID, attention_model_groups, 
   53DB0:	0114      	ld         al, #+0x1
   53DB1:	0027      	st         al, @(0x0, y)
   53DB2:	0014      	ld         al, #+0x0
   53DB3:	6A00      	**prefx    0x6A
   53DB4:	4110      	ld         ah, #+0x6A41
   53DB5:	DB00      	**prefx    0xDB
   53DB6:	979C      	bsr        -0x2569 <AttentionModelHandlerInit:0x5184D[p]>
                              MAX_MODEL_GROUPS);
#endif /* ENABLE_ATTENTION_MODEL */

#ifdef ENABLE_WATCHDOG_MODEL
    /* Initialize the Watchdog model */
    WatchdogModelHandlerInit(CSR_MESH_DEFAULT_NETID, wdog_model_groups,
   53DB7:	0114      	ld         al, #+0x1
   53DB8:	0027      	st         al, @(0x0, y)
   53DB9:	0014      	ld         al, #+0x0
   53DBA:	6A00      	**prefx    0x6A
   53DBB:	4210      	ld         ah, #+0x6A42
   53DBC:	E000      	**prefx    0xE0
   53DBD:	389C      	bsr        -0x1FC8 <WatchdogModelHandlerInit:0x51DF5[p]>
                             MAX_MODEL_GROUPS);
#endif /* ENABLE_WATCHDOG_MODEL */

#ifdef ENABLE_BATTERY_MODEL
    /* Initialize the battery model */
    BatteryModelHandlerInit(CSR_MESH_DEFAULT_NETID, NULL, 0);
   53DBE:	0014      	ld         al, #+0x0
   53DBF:	0027      	st         al, @(0x0, y)
   53DC0:	0010      	ld         ah, #+0x0
   53DC1:	DB00      	**prefx    0xDB
   53DC2:	FA9C      	bsr        -0x2506 <BatteryModelHandlerInit:0x518BC[p]>
#endif /* ENABLE_BATTERY_MODEL */

#ifdef ENABLE_DATA_MODEL
        /* Initialize the data model */
        DataModelHandlerInit(CSR_MESH_DEFAULT_NETID, data_model_groups,
   53DC3:	0114      	ld         al, #+0x1
   53DC4:	0027      	st         al, @(0x0, y)
   53DC5:	0014      	ld         al, #+0x0
   53DC6:	6A00      	**prefx    0x6A
   53DC7:	4010      	ld         ah, #+0x6A40
   53DC8:	DD00      	**prefx    0xDD
   53DC9:	C29C      	bsr        -0x233E <DataModelHandlerInit:0x51A8B[p]>
                             MAX_MODEL_GROUPS);
#endif /* ENABLE_DATA_MODEL */

#ifdef ENABLE_TIME_MODEL
        /* Initialize Time Model */
        TimeModelHandlerInit(CSR_MESH_DEFAULT_NETID, NULL, 0);
   53DCA:	0014      	ld         al, #+0x0
   53DCB:	0027      	st         al, @(0x0, y)
   53DCC:	0010      	ld         ah, #+0x0
   53DCD:	E400      	**prefx    0xE4
   53DCE:	B99C      	bsr        -0x1C47 <TimeModelHandlerInit:0x52187[p]>
#endif /* ENABLE_TIME_MODEL */

#ifdef ENABLE_ACTION_MODEL
        /* Initialize Action Model */
        ActionModelHandlerInit(CSR_MESH_DEFAULT_NETID, NULL, 0);
   53DCF:	0014      	ld         al, #+0x0
   53DD0:	0027      	st         al, @(0x0, y)
   53DD1:	0010      	ld         ah, #+0x0
   53DD2:	E700      	**prefx    0xE7
   53DD3:	B59C      	bsr        -0x194B <ActionModelHandlerInit:0x52488[p]>
#endif /* ENABLE_ACTION_MODEL */

#ifdef ENABLE_EXTENSION_MODEL
        /* Initialize Extension Model */
        ExtensionModelHandlerInit(CSR_MESH_DEFAULT_NETID, NULL, 0);
   53DD4:	0014      	ld         al, #+0x0
   53DD5:	0027      	st         al, @(0x0, y)
   53DD6:	0010      	ld         ah, #+0x0
   53DD7:	EC00      	**prefx    0xEC
   53DD8:	D89C      	bsr        -0x1428 <ExtensionModelHandlerInit:0x529B0[p]>
#endif /* ENABLE_EXTENSION_MODEL */

#ifdef ENABLE_PING_MODEL
       /* Initialize Ping Model */
        PingModelInit(CSR_MESH_DEFAULT_NETID, NULL, 0, NULL);
   53DD9:	0014      	ld         al, #+0x0
   53DDA:	0027      	st         al, @(0x0, y)
   53DDB:	0127      	st         al, @(+0x1, y)
   53DDC:	0227      	st         al, @(+0x2, y)
   53DDD:	0010      	ld         ah, #+0x0
   53DDE:	3800      	**prefx    0x38
   53DDF:	C39C      	bsr        +0x37C3 <PingModelInit:0x575A2[p]>
#endif /* ENABLE_PING_MODEL */
        
#ifdef ENABLE_LOT_MODEL
       /* Initialize LOT Model */
       LotModelHandlerInit(CSR_MESH_DEFAULT_NETID,lot_model_groups, 
   53DE0:	0114      	ld         al, #+0x1
   53DE1:	0027      	st         al, @(0x0, y)
   53DE2:	0014      	ld         al, #+0x0
   53DE3:	6A00      	**prefx    0x6A
   53DE4:	3F10      	ld         ah, #+0x6A3F
   53DE5:	ED00      	**prefx    0xED
   53DE6:	7C9C      	bsr        -0x1284 <LotModelHandlerInit:0x52B62[p]>
    {
        /* Initialize all the models supported in the application. */
        initializeSupportedModels();

        /* Start CSRmesh */
        result = CSRmeshStart();
   53DE7:	0400      	**prefx    0x4
   53DE8:	C59C      	bsr        +0x3C5 <CSRmeshStart:0x541AD[p]>

        if(result == CSR_MESH_RESULT_SUCCESS)
   53DE9:	E199      	tst        @0xFFE1 <register al>
   53DEA:	1EF0      	bne        +0x1E <AppMeshInit+0xC3:0x53E08[p]>
        {
            /* Post MASP_DEVICE_ID msg in Bearer TX queue */
            if(g_mesh_handler_data.assoc_state == app_state_not_associated)
   53DEB:	6B00      	**prefx    0x6B
   53DEC:	E599      	tst        @0x6AE5 <g_mesh_handler_data+0x2>
   53DED:	0BF0      	bne        +0xB <AppMeshInit+0xB3:0x53DF8[p]>
            {
                if(g_app_nvm_fresh == TRUE)
   53DEE:	6A00      	**prefx    0x6A
   53DEF:	4515      	ld         al, @0x6A45 <g_app_nvm_fresh>
   53DF0:	0184      	cmp        al, #+0x1
   53DF1:	04F0      	bne        +0x4 <AppMeshInit+0xB0:0x53DF5[p]>
                {
                    /* As the application's sanity has changed, the association 
                     * information in the core stack needs to be removed.
                     */
                    CSRmeshRemoveNetwork(CSR_MESH_DEFAULT_NETID);
   53DF2:	0014      	ld         al, #+0x0
   53DF3:	0300      	**prefx    0x3
   53DF4:	E39C      	bsr        +0x2E3 <CSRmeshRemoveNetwork:0x540D7[p]>
                }
                /* Start sending device UUID adverts */
                InitiateAssociation();
   53DF5:	DB00      	**prefx    0xDB
   53DF6:	399C      	bsr        -0x24C7 <InitiateAssociation:0x5192F[p]>
   53DF7:	06E0      	bra        +0x6 <AppMeshInit+0xB8:0x53DFD[p]>
            }
            else
            {
                DEBUG_STR("switch is associated\r\n");
#ifdef ENABLE_WATCHDOG_MODEL
                WatchdogStart();
   53DF8:	DF00      	**prefx    0xDF
   53DF9:	FE9C      	bsr        -0x2102 <WatchdogStart:0x51CF7[p]>
#endif

                /* Initialize the source sequence cache */
                AppInitializeSeqCache(FALSE);
   53DFA:	0014      	ld         al, #+0x0
   53DFB:	DB00      	**prefx    0xDB
   53DFC:	079C      	bsr        -0x24F9 <AppInitializeSeqCache:0x51903[p]>
            }
            /* Update relay and promiscuous settings as per device state */
            AppUpdateBearerState(&g_mesh_handler_data.bearer_tx_state);
   53DFD:	6B00      	**prefx    0x6B
   53DFE:	E614      	ld         al, #+0x6AE6
   53DFF:	DB00      	**prefx    0xDB
   53E00:	4E9C      	bsr        -0x24B2 <AppUpdateBearerState:0x5194E[p]>

           /* Update the TTL value onto mesh stack */
            CSRmeshSetDefaultTTL(g_mesh_handler_data.ttl_value);
   53E01:	6B00      	**prefx    0x6B
   53E02:	EC15      	ld         al, @0x6AEC <g_mesh_handler_data+0x9>
    }
    else
    {
        /* Registration has failed */
    }
}
   53E03:	041B      	ld         x, @(+0x4, y)
   53E04:	050E      	ld         xh, @(+0x5, y)
   53E05:	063C      	add        y, #+0x6
            }
            /* Update relay and promiscuous settings as per device state */
            AppUpdateBearerState(&g_mesh_handler_data.bearer_tx_state);

           /* Update the TTL value onto mesh stack */
            CSRmeshSetDefaultTTL(g_mesh_handler_data.ttl_value);
   53E06:	0200      	**prefx    0x2
   53E07:	5DE0      	bra        +0x25D <CSRmeshSetDefaultTTL:0x54064[p]>
    }
    else
    {
        /* Registration has failed */
    }
}
   53E08:	FA0F      	leave      #-0x6

0x00053E09 <WriteSwitchDataOntoNVM>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void WriteSwitchDataOntoNVM(void)
{
   53E09:	FD0B      	enter      #-0x3
    Nvm_Write((uint16 *)&brightness_level, 
   53E0A:	0100      	**prefx    0x1
   53E0B:	3D14      	ld         al, #+0x13D
   53E0C:	0027      	st         al, @(0x0, y)
   53E0D:	6500      	**prefx    0x65
   53E0E:	FC14      	ld         al, #+0x64FC
   53E0F:	0110      	ld         ah, #+0x1
   53E10:	CA00      	**prefx    0xCA
   53E11:	349C      	bsr        -0x35CC <Nvm_Write:0x50845[p]>
               sizeof(uint16),
               NVM_OFFSET_SWITCH_STATE);
}
   53E12:	FD0F      	leave      #-0x3

0x00053E13 <ReadSwitchDataFromNVM>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void ReadSwitchDataFromNVM(void)
{
   53E13:	FD0B      	enter      #-0x3
    Nvm_Read((uint16 *)&brightness_level, 
   53E14:	0100      	**prefx    0x1
   53E15:	3D14      	ld         al, #+0x13D
   53E16:	0027      	st         al, @(0x0, y)
   53E17:	6500      	**prefx    0x65
   53E18:	FC14      	ld         al, #+0x64FC
   53E19:	0110      	ld         ah, #+0x1
   53E1A:	CA00      	**prefx    0xCA
   53E1B:	419C      	bsr        -0x35BF <Nvm_Read:0x5085C[p]>
              sizeof(uint16),
              NVM_OFFSET_SWITCH_STATE);
}
   53E1C:	FD0F      	leave      #-0x3

0x00053E1D <HandlePIOChangedEvent>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
extern void HandlePIOChangedEvent(pio_changed_data *data)
{
   53E1D:	F60B      	enter      #-0xA
   53E1E:	0727      	st         al, @(+0x7, y)
    uint16 sw3_index, sw2_index, sw4_index;

    /* When switch is not associated in stand alone mode,
     * don't send any CSR Mesh events.
     */
    if (AppGetAssociatedState() != app_state_associated)
   53E1F:	DB00      	**prefx    0xDB
   53E20:	C89C      	bsr        -0x2538 <AppGetAssociatedState:0x518E8[p]>
   53E21:	0284      	cmp        al, #+0x2
   53E22:	6DF0      	bne        +0x6D <HandlePIOChangedEvent+0x72:0x53E8F[p]>

    /* The PIO changed data is defined by struct pio_changed_data */
    event_data = (pio_changed_data *)data;

    /* Get the IOT switch mask */
    GetIOTSwitchMask(SW3_PIO, &sw3_mask, &sw3_index);
   53E23:	E415      	ld         al, @0xFFE4 <register uy>
   53E24:	0434      	add        al, #+0x4
   53E25:	0027      	st         al, @(0x0, y)
   53E26:	1714      	ld         al, #+0x17
   53E27:	6500      	**prefx    0x65
   53E28:	FD10      	ld         ah, #+0x64FD
   53E29:	D800      	**prefx    0xD8
   53E2A:	1E9C      	bsr        -0x27E2 <GetIOTSwitchMask:0x51648[p]>
    GetIOTSwitchMask(SW2_PIO, &sw2_mask, &sw2_index);
   53E2B:	E419      	ld         x, @0xFFE4 <register uy>
   53E2C:	0538      	add        x, #+0x5
   53E2D:	002B      	st         x, @(0x0, y)
   53E2E:	1814      	ld         al, #+0x18
   53E2F:	6500      	**prefx    0x65
   53E30:	0010      	ld         ah, #+0x6500
   53E31:	D800      	**prefx    0xD8
   53E32:	169C      	bsr        -0x27EA <GetIOTSwitchMask:0x51648[p]>
    GetIOTSwitchMask(SW4_PIO, &sw4_mask, &sw4_index);
   53E33:	E415      	ld         al, @0xFFE4 <register uy>
   53E34:	0634      	add        al, #+0x6
   53E35:	0027      	st         al, @(0x0, y)
   53E36:	1614      	ld         al, #+0x16
   53E37:	6500      	**prefx    0x65
   53E38:	0310      	ld         ah, #+0x6503
   53E39:	D800      	**prefx    0xD8
   53E3A:	0E9C      	bsr        -0x27F2 <GetIOTSwitchMask:0x51648[p]>

    /* If the PIO event comes from the button */
    if((event_data->pio_cause.mask[sw3_index] & sw3_mask.mask[sw3_index]) ||
   53E3B:	0413      	ld         ah, @(+0x4, y)
   53E3C:	0717      	ld         al, @(+0x7, y)
   53E3D:	E035      	add        al, @0xFFE0 <register ah>
   53E3E:	E119      	ld         x, @0xFFE1 <register al>
   53E3F:	0316      	ld         al, @(+0x3, x)
   53E40:	E019      	ld         x, @0xFFE0 <register ah>
   53E41:	6500      	**prefx    0x65
   53E42:	FDC6      	and        al, @(+0x64FD, x)
   53E43:	14F0      	bne        +0x14 <HandlePIOChangedEvent+0x3A:0x53E57[p]>
   53E44:	0513      	ld         ah, @(+0x5, y)
   53E45:	0717      	ld         al, @(+0x7, y)
   53E46:	E035      	add        al, @0xFFE0 <register ah>
   53E47:	E119      	ld         x, @0xFFE1 <register al>
   53E48:	0316      	ld         al, @(+0x3, x)
   53E49:	E019      	ld         x, @0xFFE0 <register ah>
   53E4A:	6500      	**prefx    0x65
   53E4B:	00C6      	and        al, @(+0x6500, x)
   53E4C:	0BF0      	bne        +0xB <HandlePIOChangedEvent+0x3A:0x53E57[p]>
   53E4D:	0613      	ld         ah, @(+0x6, y)
   53E4E:	0717      	ld         al, @(+0x7, y)
   53E4F:	E035      	add        al, @0xFFE0 <register ah>
   53E50:	0727      	st         al, @(+0x7, y)
   53E51:	E019      	ld         x, @0xFFE0 <register ah>
   53E52:	6500      	**prefx    0x65
   53E53:	0316      	ld         al, @(+0x6503, x)
   53E54:	071B      	ld         x, @(+0x7, y)
   53E55:	03C6      	and        al, @(+0x3, x)
   53E56:	39F4      	beq        +0x39 <HandlePIOChangedEvent+0x72:0x53E8F[p]>
    }

    if (start_timer)
    {
        /* Disable further Events */
        PioSetEventMultiple(sw3_mask, pio_event_mode_disable);
   53E57:	0314      	ld         al, #+0x3
   53E58:	E411      	ld         ah, @0xFFE4 <register uy>
   53E59:	6500      	**prefx    0x65
   53E5A:	FD18      	ld         x, #+0x64FD
   53E5B:	FD09      	bc2        
   53E5C:	0327      	st         al, @(+0x3, y)
   53E5D:	FB00      	**prefx    0xFB
   53E5E:	3300      	**prefx    0x33
   53E5F:	B09C      	bsr        -0x4CD50 <PioSetEventMultiple:0x710F[p]>
        PioSetEventMultiple(sw2_mask, pio_event_mode_disable);
   53E60:	0314      	ld         al, #+0x3
   53E61:	E411      	ld         ah, @0xFFE4 <register uy>
   53E62:	6500      	**prefx    0x65
   53E63:	0018      	ld         x, #+0x6500
   53E64:	FD09      	bc2        
   53E65:	0018      	ld         x, #+0x0
   53E66:	032B      	st         x, @(+0x3, y)
   53E67:	FB00      	**prefx    0xFB
   53E68:	3300      	**prefx    0x33
   53E69:	A69C      	bsr        -0x4CD5A <PioSetEventMultiple:0x710F[p]>
        PioSetEventMultiple(sw4_mask, pio_event_mode_disable);
   53E6A:	0314      	ld         al, #+0x3
   53E6B:	E411      	ld         ah, @0xFFE4 <register uy>
   53E6C:	6500      	**prefx    0x65
   53E6D:	0318      	ld         x, #+0x6503
   53E6E:	FD09      	bc2        
   53E6F:	0327      	st         al, @(+0x3, y)
   53E70:	FB00      	**prefx    0xFB
   53E71:	3300      	**prefx    0x33
   53E72:	9D9C      	bsr        -0x4CD63 <PioSetEventMultiple:0x710F[p]>

        /* Start a timer for de-bounce and delete one second timer
         * as we received a new event.
         */
        TimerDelete(oneSecTimerId);
   53E73:	6500      	**prefx    0x65
   53E74:	F815      	ld         al, @0x64F8 <oneSecTimerId>
   53E75:	FC00      	**prefx    0xFC
   53E76:	AE00      	**prefx    0xAE
   53E77:	AC9C      	bsr        -0x45254 <TimerDelete:0xEC23[p]>
        oneSecTimerId = TIMER_INVALID;
   53E78:	0018      	ld         x, #+0x0
   53E79:	6500      	**prefx    0x65
   53E7A:	F829      	st         x, @0x64F8 <oneSecTimerId>
        TimerDelete(debounce_tid);
   53E7B:	6C00      	**prefx    0x6C
   53E7C:	8C15      	ld         al, @0x6B8C <debounce_tid>
   53E7D:	FC00      	**prefx    0xFC
   53E7E:	AE00      	**prefx    0xAE
   53E7F:	A49C      	bsr        -0x4525C <TimerDelete:0xEC23[p]>
        debounce_tid =
   53E80:	0114      	ld         al, #+0x1
   53E81:	0027      	st         al, @(0x0, y)
   53E82:	3F00      	**prefx    0x3F
   53E83:	9018      	ld         x, #+0x3E90
   53E84:	022B      	st         x, @(+0x2, y)
   53E85:	0514      	ld         al, #+0x5
   53E86:	0127      	st         al, @(+0x1, y)
   53E87:	0010      	ld         ah, #+0x0
   53E88:	4E00      	**prefx    0x4E
   53E89:	2014      	ld         al, #+0x4E20
   53E8A:	FC00      	**prefx    0xFC
   53E8B:	AE00      	**prefx    0xAE
   53E8C:	A29C      	bsr        -0x4525E <TimerCreate:0xEC2E[p]>
   53E8D:	6C00      	**prefx    0x6C
   53E8E:	8C25      	st         al, @0x6B8C <debounce_tid>
                TimerCreate(BUTTON_DEBOUNCE_TIME, TRUE, handleButtonDebounce);
    }
}
   53E8F:	F60F      	leave      #-0xA

0x00053E90 <handleButtonDebounce>:
 *  RETURNS
 *      Nothing.
 *
 *---------------------------------------------------------------------------*/
static void handleButtonDebounce(timer_id tid)
{
   53E90:	F40B      	enter      #-0xC
    bool startOneSecTimer = FALSE;
    bool update_nvm = FALSE;
    CSRMESH_POWER_SET_STATE_T power_state;
    CSRMESH_LIGHT_SET_LEVEL_T light_level;

    if( tid == debounce_tid)
   53E91:	6C00      	**prefx    0x6C
   53E92:	8C85      	cmp        al, @0x6B8C <debounce_tid>
   53E93:	0100      	**prefx    0x1
   53E94:	BCF0      	bne        +0xBC <handleButtonDebounce+0xC0:0x53F50[p]>
    {
        debounce_tid = TIMER_INVALID;
   53E95:	0014      	ld         al, #+0x0
   53E96:	6C00      	**prefx    0x6C
   53E97:	8C25      	st         al, @0x6B8C <debounce_tid>

#ifdef CSR101x_A05
        /* Enable PIO Events again */
        PioSetEventMask(BUTTONS_BIT_MASK, pio_event_mode_both);
#else
        PioSetEventMultiple(sw3_mask,
   53E98:	0314      	ld         al, #+0x3
   53E99:	E411      	ld         ah, @0xFFE4 <register uy>
   53E9A:	6500      	**prefx    0x65
   53E9B:	FD18      	ld         x, #+0x64FD
   53E9C:	FD09      	bc2        
   53E9D:	0F14      	ld         al, #+0xF
   53E9E:	0327      	st         al, @(+0x3, y)
   53E9F:	FB00      	**prefx    0xFB
   53EA0:	3200      	**prefx    0x32
   53EA1:	6E9C      	bsr        -0x4CD92 <PioSetEventMultiple:0x710F[p]>
                            pio_event_mode_both | pio_event_mode_wake_both);
        PioSetEventMultiple(sw2_mask, 
   53EA2:	0314      	ld         al, #+0x3
   53EA3:	E411      	ld         ah, @0xFFE4 <register uy>
   53EA4:	6500      	**prefx    0x65
   53EA5:	0018      	ld         x, #+0x6500
   53EA6:	FD09      	bc2        
   53EA7:	0F14      	ld         al, #+0xF
   53EA8:	0327      	st         al, @(+0x3, y)
   53EA9:	FB00      	**prefx    0xFB
   53EAA:	3200      	**prefx    0x32
   53EAB:	649C      	bsr        -0x4CD9C <PioSetEventMultiple:0x710F[p]>
                            pio_event_mode_both | pio_event_mode_wake_both);
        PioSetEventMultiple(sw4_mask, 
   53EAC:	0314      	ld         al, #+0x3
   53EAD:	E411      	ld         ah, @0xFFE4 <register uy>
   53EAE:	6500      	**prefx    0x65
   53EAF:	0318      	ld         x, #+0x6503
   53EB0:	FD09      	bc2        
   53EB1:	0F14      	ld         al, #+0xF
   53EB2:	0327      	st         al, @(+0x3, y)
   53EB3:	FB00      	**prefx    0xFB
   53EB4:	3200      	**prefx    0x32
   53EB5:	5A9C      	bsr        -0x4CDA6 <PioSetEventMultiple:0x710F[p]>
#endif

        /* If PIO State is same as before starting de-bounce timer,
         * we have a valid event.
         */
        if ((PioGet(SW3_PIO) == FALSE) && (incButtonState == KEY_RELEASED))
   53EB6:	1714      	ld         al, #+0x17
   53EB7:	FB00      	**prefx    0xFB
   53EB8:	3200      	**prefx    0x32
   53EB9:	C99C      	bsr        -0x4CE37 <PioGet:0x7082[p]>
   53EBA:	E199      	tst        @0xFFE1 <register al>
   53EBB:	16F0      	bne        +0x16 <handleButtonDebounce+0x41:0x53ED1[p]>
   53EBC:	6500      	**prefx    0x65
   53EBD:	F999      	tst        @0x64F9 <incButtonState>
   53EBE:	13F0      	bne        +0x13 <handleButtonDebounce+0x41:0x53ED1[p]>
        {
            /* Set State and increment level */
            incButtonState = KEY_PRESSED;
   53EBF:	0114      	ld         al, #+0x1
   53EC0:	6500      	**prefx    0x65
   53EC1:	F925      	st         al, @0x64F9 <incButtonState>
            if (brightness_level < (MAX_LEVEL - LEVEL_STEP_SIZE))
   53EC2:	6500      	**prefx    0x65
   53EC3:	FC15      	ld         al, @0x64FC <brightness_level>
   53EC4:	0100      	**prefx    0x1
   53EC5:	FB84      	cmp        al, #+0xFB
   53EC6:	03F8      	bcc        +0x3 <handleButtonDebounce+0x39:0x53EC9[p]>
            {
                brightness_level += LEVEL_STEP_SIZE;
   53EC7:	0434      	add        al, #+0x4
   53EC8:	03E0      	bra        +0x3 <handleButtonDebounce+0x3B:0x53ECB[p]>
            }
            else
            {
                brightness_level = MAX_LEVEL;
   53EC9:	0100      	**prefx    0x1
   53ECA:	FF14      	ld         al, #+0xFF
   53ECB:	6500      	**prefx    0x65
   53ECC:	FC25      	st         al, @0x64FC <brightness_level>
   53ECD:	0114      	ld         al, #+0x1
   53ECE:	0927      	st         al, @(+0x9, y)
   53ECF:	0014      	ld         al, #+0x0
   53ED0:	13E0      	bra        +0x13 <handleButtonDebounce+0x53:0x53EE3[p]>
            }

            /* Start 1 second timer */
            startOneSecTimer = TRUE;
        }
        else if ((PioGet(SW3_PIO) == TRUE) && (incButtonState == KEY_PRESSED))
   53ED1:	1714      	ld         al, #+0x17
   53ED2:	FB00      	**prefx    0xFB
   53ED3:	3200      	**prefx    0x32
   53ED4:	AE9C      	bsr        -0x4CE52 <PioGet:0x7082[p]>
   53ED5:	0184      	cmp        al, #+0x1
   53ED6:	0BF0      	bne        +0xB <handleButtonDebounce+0x51:0x53EE1[p]>
   53ED7:	6500      	**prefx    0x65
   53ED8:	F915      	ld         al, @0x64F9 <incButtonState>
   53ED9:	0184      	cmp        al, #+0x1
   53EDA:	07F0      	bne        +0x7 <handleButtonDebounce+0x51:0x53EE1[p]>
        {
            /* Set state to KEY RELEASE */
            incButtonState = KEY_RELEASED;
   53EDB:	0014      	ld         al, #+0x0
   53EDC:	6500      	**prefx    0x65
   53EDD:	F925      	st         al, @0x64F9 <incButtonState>
   53EDE:	0927      	st         al, @(+0x9, y)
   53EDF:	0114      	ld         al, #+0x1
   53EE0:	03E0      	bra        +0x3 <handleButtonDebounce+0x53:0x53EE3[p]>
   53EE1:	0014      	ld         al, #+0x0
   53EE2:	0927      	st         al, @(+0x9, y)
   53EE3:	0827      	st         al, @(+0x8, y)
            update_nvm = TRUE;
        }

        if ((PioGet(SW2_PIO) == FALSE) && (decButtonState == KEY_RELEASED))
   53EE4:	1814      	ld         al, #+0x18
   53EE5:	FB00      	**prefx    0xFB
   53EE6:	3200      	**prefx    0x32
   53EE7:	9B9C      	bsr        -0x4CE65 <PioGet:0x7082[p]>
   53EE8:	E199      	tst        @0xFFE1 <register al>
   53EE9:	13F0      	bne        +0x13 <handleButtonDebounce+0x6C:0x53EFC[p]>
   53EEA:	6500      	**prefx    0x65
   53EEB:	FA99      	tst        @0x64FA <decButtonState>
   53EEC:	10F0      	bne        +0x10 <handleButtonDebounce+0x6C:0x53EFC[p]>
        {
            /* Set State and decrement level */
            decButtonState = KEY_PRESSED;
   53EED:	0114      	ld         al, #+0x1
   53EEE:	6500      	**prefx    0x65
   53EEF:	FA25      	st         al, @0x64FA <decButtonState>
            if (brightness_level > LEVEL_STEP_SIZE)
   53EF0:	6500      	**prefx    0x65
   53EF1:	FC15      	ld         al, @0x64FC <brightness_level>
   53EF2:	0484      	cmp        al, #+0x4
   53EF3:	032C      	bcz        +0x3 <handleButtonDebounce+0x66:0x53EF6[p]>
            {
                brightness_level -= LEVEL_STEP_SIZE;
   53EF4:	FC34      	add        al, #-0x4
   53EF5:	02E0      	bra        +0x2 <handleButtonDebounce+0x67:0x53EF7[p]>
            }
            else
            {
                brightness_level = MIN_LEVEL;
   53EF6:	0014      	ld         al, #+0x0
   53EF7:	6500      	**prefx    0x65
   53EF8:	FC25      	st         al, @0x64FC <brightness_level>
   53EF9:	0114      	ld         al, #+0x1
   53EFA:	0927      	st         al, @(+0x9, y)
   53EFB:	10E0      	bra        +0x10 <handleButtonDebounce+0x7B:0x53F0B[p]>
            }

            /* Start 1 second timer */
            startOneSecTimer = TRUE;
        }
        else if ((PioGet(SW2_PIO) == TRUE) && (decButtonState == KEY_PRESSED))
   53EFC:	1814      	ld         al, #+0x18
   53EFD:	FB00      	**prefx    0xFB
   53EFE:	3200      	**prefx    0x32
   53EFF:	839C      	bsr        -0x4CE7D <PioGet:0x7082[p]>
   53F00:	0184      	cmp        al, #+0x1
   53F01:	0AF0      	bne        +0xA <handleButtonDebounce+0x7B:0x53F0B[p]>
   53F02:	6500      	**prefx    0x65
   53F03:	FA15      	ld         al, @0x64FA <decButtonState>
   53F04:	0184      	cmp        al, #+0x1
   53F05:	06F0      	bne        +0x6 <handleButtonDebounce+0x7B:0x53F0B[p]>
        {
            /* Set state to KEY RELEASE */
            decButtonState = KEY_RELEASED;
   53F06:	0014      	ld         al, #+0x0
   53F07:	6500      	**prefx    0x65
   53F08:	FA25      	st         al, @0x64FA <decButtonState>
   53F09:	0114      	ld         al, #+0x1
   53F0A:	0827      	st         al, @(+0x8, y)
            update_nvm = TRUE;
        }

        if ((PioGet(SW4_PIO) == FALSE) && (onButtonState == KEY_RELEASED))
   53F0B:	1614      	ld         al, #+0x16
   53F0C:	FB00      	**prefx    0xFB
   53F0D:	3100      	**prefx    0x31
   53F0E:	749C      	bsr        -0x4CE8C <PioGet:0x7082[p]>
   53F0F:	E199      	tst        @0xFFE1 <register al>
   53F10:	06F0      	bne        +0x6 <handleButtonDebounce+0x86:0x53F16[p]>
   53F11:	6500      	**prefx    0x65
   53F12:	FB99      	tst        @0x64FB <onButtonState>
   53F13:	03F0      	bne        +0x3 <handleButtonDebounce+0x86:0x53F16[p]>
        {
            /* Set Button State */
            onButtonState = KEY_PRESSED;
   53F14:	0114      	ld         al, #+0x1
   53F15:	0CE0      	bra        +0xC <handleButtonDebounce+0x91:0x53F21[p]>
            power_state.state = csr_mesh_power_state_on;
            power_state.tid = switch_cmd_tid++;
            AppPowerSetState(&power_state, FALSE);
        }
        else if ((PioGet(SW4_PIO) == TRUE) && (onButtonState == KEY_PRESSED))
   53F16:	1614      	ld         al, #+0x16
   53F17:	FB00      	**prefx    0xFB
   53F18:	3100      	**prefx    0x31
   53F19:	699C      	bsr        -0x4CE97 <PioGet:0x7082[p]>
   53F1A:	0184      	cmp        al, #+0x1
   53F1B:	14F0      	bne        +0x14 <handleButtonDebounce+0x9F:0x53F2F[p]>
   53F1C:	6500      	**prefx    0x65
   53F1D:	FB15      	ld         al, @0x64FB <onButtonState>
   53F1E:	0184      	cmp        al, #+0x1
   53F1F:	10F0      	bne        +0x10 <handleButtonDebounce+0x9F:0x53F2F[p]>
        {
            /* Set state to KEY RELEASE */
            onButtonState = KEY_RELEASED;
   53F20:	0014      	ld         al, #+0x0
   53F21:	6500      	**prefx    0x65
   53F22:	FB25      	st         al, @0x64FB <onButtonState>
            power_state.state = csr_mesh_power_state_off;
   53F23:	0427      	st         al, @(+0x4, y)
            power_state.tid = switch_cmd_tid++;
   53F24:	6100      	**prefx    0x61
   53F25:	CF15      	ld         al, @0x60CF <switch_cmd_tid>
   53F26:	0527      	st         al, @(+0x5, y)
   53F27:	0134      	add        al, #+0x1
   53F28:	6100      	**prefx    0x61
   53F29:	CF25      	st         al, @0x60CF <switch_cmd_tid>
            AppPowerSetState(&power_state, FALSE);
   53F2A:	E415      	ld         al, @0xFFE4 <register uy>
   53F2B:	0434      	add        al, #+0x4
   53F2C:	0010      	ld         ah, #+0x0
   53F2D:	FC00      	**prefx    0xFC
   53F2E:	4A9C      	bsr        -0x3B6 <AppPowerSetState:0x53B78[p]>
        }

        /* Send Light Command and Create One Second Timer when flag is set */
        if (startOneSecTimer)
   53F2F:	099B      	tst        @(+0x9, y)
   53F30:	0100      	**prefx    0x1
   53F31:	89F4      	beq        +0x89 <handleButtonDebounce+0x12A:0x53FBA[p]>
        {
            light_level.level = brightness_level;
   53F32:	6500      	**prefx    0x65
   53F33:	FC15      	ld         al, @0x64FC <brightness_level>
   53F34:	0627      	st         al, @(+0x6, y)
            light_level.tid = switch_cmd_tid++;
   53F35:	6100      	**prefx    0x61
   53F36:	CF15      	ld         al, @0x60CF <switch_cmd_tid>
   53F37:	0727      	st         al, @(+0x7, y)
   53F38:	0134      	add        al, #+0x1
   53F39:	6100      	**prefx    0x61
   53F3A:	CF25      	st         al, @0x60CF <switch_cmd_tid>
            AppLightSetLevel(&light_level,FALSE);
   53F3B:	E415      	ld         al, @0xFFE4 <register uy>
   53F3C:	0634      	add        al, #+0x6
   53F3D:	0010      	ld         ah, #+0x0
   53F3E:	FC00      	**prefx    0xFC
   53F3F:	279C      	bsr        -0x3D9 <AppLightSetLevel:0x53B66[p]>

            /* Start 1 second timer */
            oneSecTimerId = TimerCreate(BUTTON_ONE_SEC_PRESS_TIME, TRUE,
   53F40:	0114      	ld         al, #+0x1
   53F41:	0027      	st         al, @(0x0, y)
   53F42:	3F00      	**prefx    0x3F
   53F43:	9014      	ld         al, #+0x3E90
   53F44:	0227      	st         al, @(+0x2, y)
   53F45:	0514      	ld         al, #+0x5
   53F46:	0127      	st         al, @(+0x1, y)
   53F47:	0F10      	ld         ah, #+0xF
   53F48:	4200      	**prefx    0x42
   53F49:	4014      	ld         al, #+0x4240
   53F4A:	FC00      	**prefx    0xFC
   53F4B:	AD00      	**prefx    0xAD
   53F4C:	E29C      	bsr        -0x4531E <TimerCreate:0xEC2E[p]>
   53F4D:	6500      	**prefx    0x65
   53F4E:	F825      	st         al, @0x64F8 <oneSecTimerId>
   53F4F:	6BE0      	bra        +0x6B <handleButtonDebounce+0x12A:0x53FBA[p]>
                                                    handleButtonDebounce);
        }
    }
    else if (tid == oneSecTimerId)
   53F50:	6500      	**prefx    0x65
   53F51:	F885      	cmp        al, @0x64F8 <oneSecTimerId>
   53F52:	66F0      	bne        +0x66 <handleButtonDebounce+0x128:0x53FB8[p]>
    {
        oneSecTimerId = TIMER_INVALID;
   53F53:	0014      	ld         al, #+0x0
   53F54:	6500      	**prefx    0x65
   53F55:	F825      	st         al, @0x64F8 <oneSecTimerId>

        /* Key has been held Pressed for a second now */
        if ((PioGet(SW3_PIO) == FALSE) && (incButtonState == KEY_PRESSED))
   53F56:	1714      	ld         al, #+0x17
   53F57:	FB00      	**prefx    0xFB
   53F58:	3100      	**prefx    0x31
   53F59:	299C      	bsr        -0x4CED7 <PioGet:0x7082[p]>
   53F5A:	E199      	tst        @0xFFE1 <register al>
   53F5B:	2DF0      	bne        +0x2D <handleButtonDebounce+0xF8:0x53F88[p]>
   53F5C:	6500      	**prefx    0x65
   53F5D:	F915      	ld         al, @0x64F9 <incButtonState>
   53F5E:	0184      	cmp        al, #+0x1
   53F5F:	29F0      	bne        +0x29 <handleButtonDebounce+0xF8:0x53F88[p]>
        {
            if (brightness_level < (MAX_LEVEL - (5*LEVEL_STEP_SIZE)))
   53F60:	6500      	**prefx    0x65
   53F61:	FC15      	ld         al, @0x64FC <brightness_level>
   53F62:	0100      	**prefx    0x1
   53F63:	EB84      	cmp        al, #+0xEB
   53F64:	03F8      	bcc        +0x3 <handleButtonDebounce+0xD7:0x53F67[p]>
            {
                brightness_level += (5*LEVEL_STEP_SIZE);
   53F65:	1434      	add        al, #+0x14
   53F66:	03E0      	bra        +0x3 <handleButtonDebounce+0xD9:0x53F69[p]>
            }
            else
            {
                brightness_level = MAX_LEVEL;
   53F67:	0100      	**prefx    0x1
   53F68:	FF14      	ld         al, #+0xFF
   53F69:	6500      	**prefx    0x65
   53F6A:	FC25      	st         al, @0x64FC <brightness_level>
            }

            light_level.level = brightness_level;
   53F6B:	6500      	**prefx    0x65
   53F6C:	FC15      	ld         al, @0x64FC <brightness_level>
   53F6D:	0627      	st         al, @(+0x6, y)
            light_level.tid = switch_cmd_tid++;
   53F6E:	6100      	**prefx    0x61
   53F6F:	CF15      	ld         al, @0x60CF <switch_cmd_tid>
   53F70:	0727      	st         al, @(+0x7, y)
   53F71:	0134      	add        al, #+0x1
   53F72:	6100      	**prefx    0x61
   53F73:	CF25      	st         al, @0x60CF <switch_cmd_tid>
            AppLightSetLevel(&light_level, FALSE);
   53F74:	E415      	ld         al, @0xFFE4 <register uy>
   53F75:	0634      	add        al, #+0x6
   53F76:	0010      	ld         ah, #+0x0
   53F77:	FC00      	**prefx    0xFC
   53F78:	EE9C      	bsr        -0x412 <AppLightSetLevel:0x53B66[p]>

            oneSecTimerId = TimerCreate(BUTTON_ONE_SEC_PRESS_TIME, TRUE,
   53F79:	0114      	ld         al, #+0x1
   53F7A:	0027      	st         al, @(0x0, y)
   53F7B:	3F00      	**prefx    0x3F
   53F7C:	9014      	ld         al, #+0x3E90
   53F7D:	0227      	st         al, @(+0x2, y)
   53F7E:	0514      	ld         al, #+0x5
   53F7F:	0127      	st         al, @(+0x1, y)
   53F80:	0F10      	ld         ah, #+0xF
   53F81:	4200      	**prefx    0x42
   53F82:	4014      	ld         al, #+0x4240
   53F83:	FC00      	**prefx    0xFC
   53F84:	AD00      	**prefx    0xAD
   53F85:	A99C      	bsr        -0x45357 <TimerCreate:0xEC2E[p]>
   53F86:	6500      	**prefx    0x65
   53F87:	F825      	st         al, @0x64F8 <oneSecTimerId>
                                                    handleButtonDebounce);
        }

        /* Key has been held Pressed for a second now */
        if ((PioGet(SW2_PIO) == FALSE) && (decButtonState == KEY_PRESSED))
   53F88:	1814      	ld         al, #+0x18
   53F89:	FB00      	**prefx    0xFB
   53F8A:	3100      	**prefx    0x31
   53F8B:	F79C      	bsr        -0x4CF09 <PioGet:0x7082[p]>
   53F8C:	E199      	tst        @0xFFE1 <register al>
   53F8D:	2BF0      	bne        +0x2B <handleButtonDebounce+0x128:0x53FB8[p]>
   53F8E:	6500      	**prefx    0x65
   53F8F:	FA15      	ld         al, @0x64FA <decButtonState>
   53F90:	0184      	cmp        al, #+0x1
   53F91:	27F0      	bne        +0x27 <handleButtonDebounce+0x128:0x53FB8[p]>
        {
            if (brightness_level > (5*LEVEL_STEP_SIZE))
   53F92:	6500      	**prefx    0x65
   53F93:	FC15      	ld         al, @0x64FC <brightness_level>
   53F94:	1484      	cmp        al, #+0x14
   53F95:	032C      	bcz        +0x3 <handleButtonDebounce+0x108:0x53F98[p]>
            {
                brightness_level -= (5*LEVEL_STEP_SIZE);
   53F96:	EC34      	add        al, #-0x14
   53F97:	02E0      	bra        +0x2 <handleButtonDebounce+0x109:0x53F99[p]>
            }
            else
            {
                brightness_level = MIN_LEVEL;
   53F98:	0014      	ld         al, #+0x0
   53F99:	6500      	**prefx    0x65
   53F9A:	FC25      	st         al, @0x64FC <brightness_level>
            }

            light_level.level = brightness_level;
   53F9B:	6500      	**prefx    0x65
   53F9C:	FC15      	ld         al, @0x64FC <brightness_level>
   53F9D:	0627      	st         al, @(+0x6, y)
            light_level.tid = switch_cmd_tid++;
   53F9E:	6100      	**prefx    0x61
   53F9F:	CF15      	ld         al, @0x60CF <switch_cmd_tid>
   53FA0:	0727      	st         al, @(+0x7, y)
   53FA1:	0134      	add        al, #+0x1
   53FA2:	6100      	**prefx    0x61
   53FA3:	CF25      	st         al, @0x60CF <switch_cmd_tid>
            AppLightSetLevel(&light_level, FALSE);
   53FA4:	E415      	ld         al, @0xFFE4 <register uy>
   53FA5:	0634      	add        al, #+0x6
   53FA6:	0010      	ld         ah, #+0x0
   53FA7:	FC00      	**prefx    0xFC
   53FA8:	BE9C      	bsr        -0x442 <AppLightSetLevel:0x53B66[p]>

            oneSecTimerId = TimerCreate(BUTTON_ONE_SEC_PRESS_TIME, TRUE,
   53FA9:	0114      	ld         al, #+0x1
   53FAA:	0027      	st         al, @(0x0, y)
   53FAB:	3F00      	**prefx    0x3F
   53FAC:	9014      	ld         al, #+0x3E90
   53FAD:	0227      	st         al, @(+0x2, y)
   53FAE:	0514      	ld         al, #+0x5
   53FAF:	0127      	st         al, @(+0x1, y)
   53FB0:	0F10      	ld         ah, #+0xF
   53FB1:	4200      	**prefx    0x42
   53FB2:	4014      	ld         al, #+0x4240
   53FB3:	FC00      	**prefx    0xFC
   53FB4:	AC00      	**prefx    0xAC
   53FB5:	799C      	bsr        -0x45387 <TimerCreate:0xEC2E[p]>
   53FB6:	6500      	**prefx    0x65
   53FB7:	F825      	st         al, @0x64F8 <oneSecTimerId>
   53FB8:	0014      	ld         al, #+0x0
   53FB9:	0827      	st         al, @(+0x8, y)
                                                    handleButtonDebounce);
        }
    }

    /* Restart the tid */
    switch_cmd_tid  = switch_cmd_tid > 255? 0: switch_cmd_tid;
   53FBA:	6100      	**prefx    0x61
   53FBB:	CF15      	ld         al, @0x60CF <switch_cmd_tid>
   53FBC:	0100      	**prefx    0x1
   53FBD:	FF84      	cmp        al, #+0xFF
   53FBE:	022C      	bcz        +0x2 <handleButtonDebounce+0x130:0x53FC0[p]>
   53FBF:	0014      	ld         al, #+0x0
   53FC0:	6100      	**prefx    0x61
   53FC1:	CF25      	st         al, @0x60CF <switch_cmd_tid>

    /* Update NVM if required */
    if (update_nvm)
   53FC2:	089B      	tst        @(+0x8, y)
   53FC3:	03F4      	beq        +0x3 <handleButtonDebounce+0x136:0x53FC6[p]>
    {
        WriteSwitchDataOntoNVM();
   53FC4:	FE00      	**prefx    0xFE
   53FC5:	449C      	bsr        -0x1BC <WriteSwitchDataOntoNVM:0x53E09[p]>
    }
}
   53FC6:	F40F      	leave      #-0xC

0x00053FC7 <SwitchHardwareInit>:
 * RETURNS
 *      Nothing.
 *
 *----------------------------------------------------------------------------*/
extern void SwitchHardwareInit(void)
{
   53FC7:	FE0B      	enter      #-0x2
    IOTSwitchInit();
   53FC8:	D700      	**prefx    0xD7
   53FC9:	A09C      	bsr        -0x2960 <IOTSwitchInit:0x51669[p]>

    /* Read the satus of the SW4 PIO and set the position accordingly */
    if(PioGet(SW4_PIO) == FALSE)
   53FCA:	1614      	ld         al, #+0x16
   53FCB:	FB00      	**prefx    0xFB
   53FCC:	3100      	**prefx    0x31
   53FCD:	B59C      	bsr        -0x4CF4B <PioGet:0x7082[p]>
   53FCE:	E199      	tst        @0xFFE1 <register al>
   53FCF:	04F0      	bne        +0x4 <SwitchHardwareInit+0xC:0x53FD3[p]>
    {
        onButtonState = KEY_PRESSED;
   53FD0:	0114      	ld         al, #+0x1
   53FD1:	6500      	**prefx    0x65
   53FD2:	FB25      	st         al, @0x64FB <onButtonState>
    }
}
   53FD3:	FE0F      	leave      #-0x2

0x00053FD4 <CSRmeshRegisterAppCallback>:
   53FD4:	FE0B      	enter      #-0x2
   53FD5:	E119      	ld         x, @0xFFE1 <register al>
   53FD6:	6C00      	**prefx    0x6C
   53FD7:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   53FD8:	FF34      	add        al, #-0x1
   53FD9:	0184      	cmp        al, #+0x1
   53FDA:	032C      	bcz        +0x3 <CSRmeshRegisterAppCallback+0x9:0x53FDD[p]>
   53FDB:	0214      	ld         al, #+0x2
   53FDC:	0BE0      	bra        +0xB <CSRmeshRegisterAppCallback+0x13:0x53FE7[p]>
   53FDD:	E015      	ld         al, @0xFFE0 <register ah>
   53FDE:	E3B5      	or         al, @0xFFE3 <register uxl>
   53FDF:	03F0      	bne        +0x3 <CSRmeshRegisterAppCallback+0xE:0x53FE2[p]>
   53FE0:	FF14      	ld         al, #-0x1
   53FE1:	06E0      	bra        +0x6 <CSRmeshRegisterAppCallback+0x13:0x53FE7[p]>
   53FE2:	6C00      	**prefx    0x6C
   53FE3:	9021      	st         ah, @0x6B90 <g_mesh_data+0x3>
   53FE4:	6C00      	**prefx    0x6C
   53FE5:	9129      	st         x, @0x6B91 <g_mesh_data+0x4>
   53FE6:	0014      	ld         al, #+0x0
   53FE7:	FE0F      	leave      #-0x2

0x00053FE8 <CSRmeshGetDeviceID>:
   53FE8:	FE0B      	enter      #-0x2
   53FE9:	F825      	st         al, @0xFFF8 <(scratchpad)>
   53FEA:	E019      	ld         x, @0xFFE0 <register ah>
   53FEB:	6C00      	**prefx    0x6C
   53FEC:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   53FED:	FF34      	add        al, #-0x1
   53FEE:	0184      	cmp        al, #+0x1
   53FEF:	032C      	bcz        +0x3 <CSRmeshGetDeviceID+0xA:0x53FF2[p]>
   53FF0:	0214      	ld         al, #+0x2
   53FF1:	17E0      	bra        +0x17 <CSRmeshGetDeviceID+0x20:0x54008[p]>
   53FF2:	E099      	tst        @0xFFE0 <register ah>
   53FF3:	12F4      	beq        +0x12 <CSRmeshGetDeviceID+0x1D:0x54005[p]>
   53FF4:	029A      	tst        @(+0x2, x)
   53FF5:	10F4      	beq        +0x10 <CSRmeshGetDeviceID+0x1D:0x54005[p]>
   53FF6:	0B14      	ld         al, #+0xB
   53FF7:	0026      	st         al, @(0x0, x)
   53FF8:	0014      	ld         al, #+0x0
   53FF9:	0126      	st         al, @(+0x1, x)
   53FFA:	021A      	ld         x, @(+0x2, x)
   53FFB:	6C00      	**prefx    0x6C
   53FFC:	BB15      	ld         al, @0x6BBB <g_mesh_context_data+0x1E>
   53FFD:	0026      	st         al, @(0x0, x)
   53FFE:	F899      	tst        @0xFFF8 <(scratchpad)>
   53FFF:	08F0      	bne        +0x8 <CSRmeshGetDeviceID+0x1F:0x54007[p]>
   54000:	6C00      	**prefx    0x6C
   54001:	9D99      	tst        @0x6B9D <g_mesh_context_data>
   54002:	05F4      	beq        +0x5 <CSRmeshGetDeviceID+0x1F:0x54007[p]>
   54003:	0014      	ld         al, #+0x0
   54004:	04E0      	bra        +0x4 <CSRmeshGetDeviceID+0x20:0x54008[p]>
   54005:	0B14      	ld         al, #+0xB
   54006:	02E0      	bra        +0x2 <CSRmeshGetDeviceID+0x20:0x54008[p]>
   54007:	0614      	ld         al, #+0x6
   54008:	FE0F      	leave      #-0x2

0x00054009 <___libcsrmesh_90>:
   54009:	FB0B      	enter      #-0x5
   5400A:	E119      	ld         x, @0xFFE1 <register al>
   5400B:	0223      	st         ah, @(+0x2, y)
   5400C:	6C00      	**prefx    0x6C
   5400D:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   5400E:	0284      	cmp        al, #+0x2
   5400F:	03F4      	beq        +0x3 <___libcsrmesh_90+0x9:0x54012[p]>
   54010:	0214      	ld         al, #+0x2
   54011:	11E0      	bra        +0x11 <___libcsrmesh_90+0x19:0x54022[p]>
   54012:	E399      	tst        @0xFFE3 <register uxl>
   54013:	0EF0      	bne        +0xE <___libcsrmesh_90+0x18:0x54021[p]>
   54014:	0200      	**prefx    0x2
   54015:	609C      	bsr        +0x260 <___libcsrmesh_274:0x54275[p]>
   54016:	E199      	tst        @0xFFE1 <register al>
   54017:	0AF4      	beq        +0xA <___libcsrmesh_90+0x18:0x54021[p]>
   54018:	0617      	ld         al, @(+0x6, y)
   54019:	0027      	st         al, @(0x0, y)
   5401A:	0114      	ld         al, #+0x1
   5401B:	0127      	st         al, @(+0x1, y)
   5401C:	0217      	ld         al, @(+0x2, y)
   5401D:	0513      	ld         ah, @(+0x5, y)
   5401E:	0F00      	**prefx    0xF
   5401F:	799C      	bsr        +0xF79 <___libcsrmesh_241:0x54F98[p]>
   54020:	02E0      	bra        +0x2 <___libcsrmesh_90+0x19:0x54022[p]>
   54021:	0614      	ld         al, #+0x6
   54022:	FB0F      	leave      #-0x5

0x00054023 <___libcsrmesh_86>:
   54023:	FE0B      	enter      #-0x2
   54024:	E119      	ld         x, @0xFFE1 <register al>
   54025:	6C00      	**prefx    0x6C
   54026:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   54027:	FF34      	add        al, #-0x1
   54028:	0184      	cmp        al, #+0x1
   54029:	032C      	bcz        +0x3 <___libcsrmesh_86+0x9:0x5402C[p]>
   5402A:	0214      	ld         al, #+0x2
   5402B:	11E0      	bra        +0x11 <___libcsrmesh_86+0x19:0x5403C[p]>
   5402C:	E399      	tst        @0xFFE3 <register uxl>
   5402D:	03F0      	bne        +0x3 <___libcsrmesh_86+0xD:0x54030[p]>
   5402E:	FF14      	ld         al, #-0x1
   5402F:	0DE0      	bra        +0xD <___libcsrmesh_86+0x19:0x5403C[p]>
   54030:	0014      	ld         al, #+0x0
   54031:	0426      	st         al, @(+0x4, x)
   54032:	0326      	st         al, @(+0x3, x)
   54033:	0526      	st         al, @(+0x5, x)
   54034:	0100      	**prefx    0x1
   54035:	8014      	ld         al, #+0x80
   54036:	0226      	st         al, @(+0x2, x)
   54037:	E315      	ld         al, @0xFFE3 <register uxl>
   54038:	0110      	ld         ah, #+0x1
   54039:	0F00      	**prefx    0xF
   5403A:	2C9C      	bsr        +0xF2C <___libcsrmesh_232:0x54F66[p]>
   5403B:	0014      	ld         al, #+0x0
   5403C:	FE0F      	leave      #-0x2

0x0005403D <___libcsrmesh_85>:
   5403D:	E111      	ld         ah, @0xFFE1 <register al>
   5403E:	6C00      	**prefx    0x6C
   5403F:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   54040:	FF34      	add        al, #-0x1
   54041:	0184      	cmp        al, #+0x1
   54042:	032C      	bcz        +0x3 <___libcsrmesh_85+0x8:0x54045[p]>
   54043:	0214      	ld         al, #+0x2
   54044:	00E2      	bra        0x0, x
   54045:	E015      	ld         al, @0xFFE0 <register ah>
   54046:	0010      	ld         ah, #+0x0
   54047:	0F00      	**prefx    0xF
   54048:	1EE0      	bra        +0xF1E <___libcsrmesh_232:0x54F66[p]>

0x00054049 <CSRmeshGetDefaultTTL>:
   54049:	FD0B      	enter      #-0x3
   5404A:	E119      	ld         x, @0xFFE1 <register al>
   5404B:	6C00      	**prefx    0x6C
   5404C:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   5404D:	FF34      	add        al, #-0x1
   5404E:	0184      	cmp        al, #+0x1
   5404F:	032C      	bcz        +0x3 <CSRmeshGetDefaultTTL+0x9:0x54052[p]>
   54050:	0214      	ld         al, #+0x2
   54051:	12E0      	bra        +0x12 <CSRmeshGetDefaultTTL+0x1A:0x54063[p]>
   54052:	E399      	tst        @0xFFE3 <register uxl>
   54053:	0FF4      	beq        +0xF <CSRmeshGetDefaultTTL+0x19:0x54062[p]>
   54054:	029A      	tst        @(+0x2, x)
   54055:	0DF4      	beq        +0xD <CSRmeshGetDefaultTTL+0x19:0x54062[p]>
   54056:	3414      	ld         al, #+0x34
   54057:	0026      	st         al, @(0x0, x)
   54058:	0014      	ld         al, #+0x0
   54059:	0126      	st         al, @(+0x1, x)
   5405A:	021A      	ld         x, @(+0x2, x)
   5405B:	002B      	st         x, @(0x0, y)
   5405C:	0F00      	**prefx    0xF
   5405D:	069C      	bsr        +0xF06 <___libcsrmesh_235:0x54F63[p]>
   5405E:	001B      	ld         x, @(0x0, y)
   5405F:	0026      	st         al, @(0x0, x)
   54060:	0014      	ld         al, #+0x0
   54061:	02E0      	bra        +0x2 <CSRmeshGetDefaultTTL+0x1A:0x54063[p]>
   54062:	FF14      	ld         al, #-0x1
   54063:	FD0F      	leave      #-0x3

0x00054064 <CSRmeshSetDefaultTTL>:
   54064:	FE0B      	enter      #-0x2
   54065:	E111      	ld         ah, @0xFFE1 <register al>
   54066:	6C00      	**prefx    0x6C
   54067:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   54068:	FF34      	add        al, #-0x1
   54069:	0184      	cmp        al, #+0x1
   5406A:	032C      	bcz        +0x3 <CSRmeshSetDefaultTTL+0x9:0x5406D[p]>
   5406B:	0214      	ld         al, #+0x2
   5406C:	07E0      	bra        +0x7 <CSRmeshSetDefaultTTL+0xF:0x54073[p]>
   5406D:	0100      	**prefx    0x1
   5406E:	FFC0      	and        ah, #0xFF
   5406F:	E015      	ld         al, @0xFFE0 <register ah>
   54070:	0F00      	**prefx    0xF
   54071:	EC9C      	bsr        +0xEEC <___libcsrmesh_246:0x54F5D[p]>
   54072:	0014      	ld         al, #+0x0
   54073:	FE0F      	leave      #-0x2

0x00054074 <CSRmeshDisableSequenceCache>:
   54074:	1200      	**prefx    0x12
   54075:	ECE0      	bra        +0x11EC <___libcsrmesh_459:0x55261[p]>

0x00054076 <CSRmeshSetTransmitState>:
   54076:	FB0B      	enter      #-0x5
   54077:	0127      	st         al, @(+0x1, y)
   54078:	0223      	st         ah, @(+0x2, y)
   54079:	6C00      	**prefx    0x6C
   5407A:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   5407B:	FF34      	add        al, #-0x1
   5407C:	0184      	cmp        al, #+0x1
   5407D:	042C      	bcz        +0x4 <CSRmeshSetTransmitState+0xB:0x54081[p]>
   5407E:	0214      	ld         al, #+0x2
   5407F:	0027      	st         al, @(0x0, y)
   54080:	1BE0      	bra        +0x1B <CSRmeshSetTransmitState+0x25:0x5409B[p]>
   54081:	019B      	tst        @(+0x1, y)
   54082:	04F0      	bne        +0x4 <CSRmeshSetTransmitState+0x10:0x54086[p]>
   54083:	0B18      	ld         x, #+0xB
   54084:	002B      	st         x, @(0x0, y)
   54085:	16E0      	bra        +0x16 <CSRmeshSetTransmitState+0x25:0x5409B[p]>
   54086:	0117      	ld         al, @(+0x1, y)
   54087:	0600      	**prefx    0x6
   54088:	A09C      	bsr        +0x5A0 <___libcsrmesh_284:0x54628[p]>
   54089:	0027      	st         al, @(0x0, y)
   5408A:	03F4      	beq        +0x3 <CSRmeshSetTransmitState+0x17:0x5408D[p]>
   5408B:	0684      	cmp        al, #+0x6
   5408C:	0FF0      	bne        +0xF <CSRmeshSetTransmitState+0x25:0x5409B[p]>
   5408D:	029B      	tst        @(+0x2, y)
   5408E:	0DF4      	beq        +0xD <CSRmeshSetTransmitState+0x25:0x5409B[p]>
   5408F:	021B      	ld         x, @(+0x2, y)
   54090:	0212      	ld         ah, @(+0x2, x)
   54091:	0AF4      	beq        +0xA <CSRmeshSetTransmitState+0x25:0x5409B[p]>
   54092:	011B      	ld         x, @(+0x1, y)
   54093:	0316      	ld         al, @(+0x3, x)
   54094:	0500      	**prefx    0x5
   54095:	759C      	bsr        +0x575 <___libcsrmesh_271:0x5460A[p]>
   54096:	0614      	ld         al, #+0x6
   54097:	021B      	ld         x, @(+0x2, y)
   54098:	0026      	st         al, @(0x0, x)
   54099:	0014      	ld         al, #+0x0
   5409A:	0126      	st         al, @(+0x1, x)
   5409B:	0017      	ld         al, @(0x0, y)
   5409C:	FB0F      	leave      #-0x5

0x0005409D <___libcsrmesh_84>:
   5409D:	6C00      	**prefx    0x6C
   5409E:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   5409F:	FF34      	add        al, #-0x1
   540A0:	0184      	cmp        al, #+0x1
   540A1:	032C      	bcz        +0x3 <___libcsrmesh_84+0x7:0x540A4[p]>
   540A2:	0014      	ld         al, #+0x0
   540A3:	00E2      	bra        0x0, x
   540A4:	0F00      	**prefx    0xF
   540A5:	BBE0      	bra        +0xEBB <___libcsrmesh_233:0x54F60[p]>

0x000540A6 <___libcsrmesh_88>:
   540A6:	FB0B      	enter      #-0x5
   540A7:	E119      	ld         x, @0xFFE1 <register al>
   540A8:	0223      	st         ah, @(+0x2, y)
   540A9:	6C00      	**prefx    0x6C
   540AA:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   540AB:	0284      	cmp        al, #+0x2
   540AC:	03F4      	beq        +0x3 <___libcsrmesh_88+0x9:0x540AF[p]>
   540AD:	0214      	ld         al, #+0x2
   540AE:	28E0      	bra        +0x28 <___libcsrmesh_88+0x30:0x540D6[p]>
   540AF:	E399      	tst        @0xFFE3 <register uxl>
   540B0:	25F0      	bne        +0x25 <___libcsrmesh_88+0x2F:0x540D5[p]>
   540B1:	0200      	**prefx    0x2
   540B2:	C39C      	bsr        +0x1C3 <___libcsrmesh_274:0x54275[p]>
   540B3:	E199      	tst        @0xFFE1 <register al>
   540B4:	21F4      	beq        +0x21 <___libcsrmesh_88+0x2F:0x540D5[p]>
   540B5:	6C00      	**prefx    0x6C
   540B6:	9B99      	tst        @0x6B9B <g_mesh_data+0xE>
   540B7:	0AF0      	bne        +0xA <___libcsrmesh_88+0x1B:0x540C1[p]>
   540B8:	0617      	ld         al, @(+0x6, y)
   540B9:	0027      	st         al, @(0x0, y)
   540BA:	0018      	ld         x, #+0x0
   540BB:	012B      	st         x, @(+0x1, y)
   540BC:	0217      	ld         al, @(+0x2, y)
   540BD:	0513      	ld         ah, @(+0x5, y)
   540BE:	0F00      	**prefx    0xF
   540BF:	D99C      	bsr        +0xED9 <___libcsrmesh_241:0x54F98[p]>
   540C0:	16E0      	bra        +0x16 <___libcsrmesh_88+0x30:0x540D6[p]>
   540C1:	DC9C      	bsr        -0x24 <___libcsrmesh_84:0x5409D[p]>
   540C2:	F825      	st         al, @0xFFF8 <(scratchpad)>
   540C3:	6C00      	**prefx    0x6C
   540C4:	9C15      	ld         al, @0x6B9C <g_mesh_data+0xF>
   540C5:	E119      	ld         x, @0xFFE1 <register al>
   540C6:	0012      	ld         ah, @(0x0, x)
   540C7:	0517      	ld         al, @(+0x5, y)
   540C8:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   540C9:	FD09      	bc2        
   540CA:	6C00      	**prefx    0x6C
   540CB:	9C19      	ld         x, @0x6B9C <g_mesh_data+0xF>
   540CC:	0517      	ld         al, @(+0x5, y)
   540CD:	0126      	st         al, @(+0x1, x)
   540CE:	0617      	ld         al, @(+0x6, y)
   540CF:	0226      	st         al, @(+0x2, x)
   540D0:	0018      	ld         x, #+0x0
   540D1:	6C00      	**prefx    0x6C
   540D2:	9B29      	st         x, @0x6B9B <g_mesh_data+0xE>
   540D3:	0014      	ld         al, #+0x0
   540D4:	02E0      	bra        +0x2 <___libcsrmesh_88+0x30:0x540D6[p]>
   540D5:	0614      	ld         al, #+0x6
   540D6:	FB0F      	leave      #-0x5

0x000540D7 <CSRmeshRemoveNetwork>:
   540D7:	FD0B      	enter      #-0x3
   540D8:	0027      	st         al, @(0x0, y)
   540D9:	6C00      	**prefx    0x6C
   540DA:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   540DB:	FF34      	add        al, #-0x1
   540DC:	0184      	cmp        al, #+0x1
   540DD:	032C      	bcz        +0x3 <CSRmeshRemoveNetwork+0x9:0x540E0[p]>
   540DE:	0214      	ld         al, #+0x2
   540DF:	1BE0      	bra        +0x1B <CSRmeshRemoveNetwork+0x23:0x540FA[p]>
   540E0:	6C00      	**prefx    0x6C
   540E1:	9715      	ld         al, @0x6B97 <g_mesh_data+0xA>
   540E2:	F925      	st         al, @0xFFF9 <(scratchpad)>
   540E3:	6C00      	**prefx    0x6C
   540E4:	9615      	ld         al, @0x6B96 <g_mesh_data+0x9>
   540E5:	F825      	st         al, @0xFFF8 <(scratchpad)>
   540E6:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   540E7:	07F4      	beq        +0x7 <CSRmeshRemoveNetwork+0x17:0x540EE[p]>
   540E8:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   540E9:	FE27      	st         al, @(-0x2, y)
   540EA:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   540EB:	FF27      	st         al, @(-0x1, y)
   540EC:	FF0E      	ld         xh, @(-0x1, y)
   540ED:	FE9F      	bsr        @(-0x2, y)
   540EE:	009B      	tst        @(0x0, y)
   540EF:	09F0      	bne        +0x9 <CSRmeshRemoveNetwork+0x21:0x540F8[p]>
   540F0:	0200      	**prefx    0x2
   540F1:	849C      	bsr        +0x184 <___libcsrmesh_274:0x54275[p]>
   540F2:	E199      	tst        @0xFFE1 <register al>
   540F3:	05F4      	beq        +0x5 <CSRmeshRemoveNetwork+0x21:0x540F8[p]>
   540F4:	0200      	**prefx    0x2
   540F5:	8C9C      	bsr        +0x18C <___libcsrmesh_278:0x54281[p]>
   540F6:	0014      	ld         al, #+0x0
   540F7:	03E0      	bra        +0x3 <CSRmeshRemoveNetwork+0x23:0x540FA[p]>
   540F8:	0100      	**prefx    0x1
   540F9:	FF14      	ld         al, #+0xFF
   540FA:	FD0F      	leave      #-0x3

0x000540FB <___libcsrmesh_95>:
   540FB:	F50B      	enter      #-0xB
   540FC:	6F14      	ld         al, #+0x6F
   540FD:	0027      	st         al, @(0x0, y)
   540FE:	6C00      	**prefx    0x6C
   540FF:	9D14      	ld         al, #+0x6B9D
   54100:	0010      	ld         ah, #+0x0
   54101:	FB00      	**prefx    0xFB
   54102:	EA00      	**prefx    0xEA
   54103:	4D9C      	bsr        -0x515B3 <MemSet:0x2B50[p]>
   54104:	D700      	**prefx    0xD7
   54105:	1D9C      	bsr        -0x28E3 <CSRmeshIsPsReadyForAccess:0x51822[p]>
   54106:	E199      	tst        @0xFFE1 <register al>
   54107:	66F4      	beq        +0x66 <___libcsrmesh_95+0x72:0x5416D[p]>
   54108:	0114      	ld         al, #+0x1
   54109:	0027      	st         al, @(0x0, y)
   5410A:	0314      	ld         al, #+0x3
   5410B:	6C00      	**prefx    0x6C
   5410C:	9D10      	ld         ah, #+0x6B9D
   5410D:	D700      	**prefx    0xD7
   5410E:	0A9C      	bsr        -0x28F6 <CSRmeshPsRead:0x51818[p]>
   5410F:	0114      	ld         al, #+0x1
   54110:	0027      	st         al, @(0x0, y)
   54111:	0514      	ld         al, #+0x5
   54112:	6C00      	**prefx    0x6C
   54113:	B610      	ld         ah, #+0x6BB6
   54114:	D700      	**prefx    0xD7
   54115:	039C      	bsr        -0x28FD <CSRmeshPsRead:0x51818[p]>
   54116:	6C00      	**prefx    0x6C
   54117:	9D99      	tst        @0x6B9D <g_mesh_context_data>
   54118:	5CF4      	beq        +0x5C <___libcsrmesh_95+0x79:0x54174[p]>
   54119:	0814      	ld         al, #+0x8
   5411A:	0027      	st         al, @(0x0, y)
   5411B:	0414      	ld         al, #+0x4
   5411C:	6C00      	**prefx    0x6C
   5411D:	F110      	ld         ah, #+0x6BF1
   5411E:	1D00      	**prefx    0x1D
   5411F:	F69C      	bsr        +0x1CF6 <___libcsrmesh_373:0x55E15[p]>
   54120:	1014      	ld         al, #+0x10
   54121:	0027      	st         al, @(0x0, y)
   54122:	6C00      	**prefx    0x6C
   54123:	C114      	ld         al, #+0x6BC1
   54124:	6C00      	**prefx    0x6C
   54125:	F110      	ld         ah, #+0x6BF1
   54126:	FB00      	**prefx    0xFB
   54127:	EA00      	**prefx    0xEA
   54128:	AE9C      	bsr        -0x51652 <MemCopyUnPack:0x2AD6[p]>
   54129:	0114      	ld         al, #+0x1
   5412A:	0027      	st         al, @(0x0, y)
   5412B:	0914      	ld         al, #+0x9
   5412C:	6C00      	**prefx    0x6C
   5412D:	BB10      	ld         ah, #+0x6BBB
   5412E:	D700      	**prefx    0xD7
   5412F:	E99C      	bsr        -0x2917 <CSRmeshPsRead:0x51818[p]>
   54130:	0114      	ld         al, #+0x1
   54131:	0027      	st         al, @(0x0, y)
   54132:	0A14      	ld         al, #+0xA
   54133:	6C00      	**prefx    0x6C
   54134:	BC10      	ld         ah, #+0x6BBC
   54135:	D700      	**prefx    0xD7
   54136:	E29C      	bsr        -0x291E <CSRmeshPsRead:0x51818[p]>
   54137:	0C14      	ld         al, #+0xC
   54138:	0027      	st         al, @(0x0, y)
   54139:	0B14      	ld         al, #+0xB
   5413A:	6C00      	**prefx    0x6C
   5413B:	FD10      	ld         ah, #+0x6BFD
   5413C:	1D00      	**prefx    0x1D
   5413D:	D89C      	bsr        +0x1CD8 <___libcsrmesh_373:0x55E15[p]>
   5413E:	1814      	ld         al, #+0x18
   5413F:	0027      	st         al, @(0x0, y)
   54140:	6C00      	**prefx    0x6C
   54141:	D914      	ld         al, #+0x6BD9
   54142:	6C00      	**prefx    0x6C
   54143:	FD10      	ld         ah, #+0x6BFD
   54144:	FB00      	**prefx    0xFB
   54145:	EA00      	**prefx    0xEA
   54146:	909C      	bsr        -0x51670 <MemCopyUnPack:0x2AD6[p]>
   54147:	0414      	ld         al, #+0x4
   54148:	0027      	st         al, @(0x0, y)
   54149:	0C14      	ld         al, #+0xC
   5414A:	6C00      	**prefx    0x6C
   5414B:	F910      	ld         ah, #+0x6BF9
   5414C:	1D00      	**prefx    0x1D
   5414D:	C89C      	bsr        +0x1CC8 <___libcsrmesh_373:0x55E15[p]>
   5414E:	0814      	ld         al, #+0x8
   5414F:	0027      	st         al, @(0x0, y)
   54150:	6C00      	**prefx    0x6C
   54151:	D114      	ld         al, #+0x6BD1
   54152:	6C00      	**prefx    0x6C
   54153:	F910      	ld         ah, #+0x6BF9
   54154:	FB00      	**prefx    0xFB
   54155:	EA00      	**prefx    0xEA
   54156:	809C      	bsr        -0x51680 <MemCopyUnPack:0x2AD6[p]>
   54157:	0214      	ld         al, #+0x2
   54158:	0027      	st         al, @(0x0, y)
   54159:	0614      	ld         al, #+0x6
   5415A:	6C00      	**prefx    0x6C
   5415B:	BD10      	ld         ah, #+0x6BBD
   5415C:	D700      	**prefx    0xD7
   5415D:	BB9C      	bsr        -0x2945 <CSRmeshPsRead:0x51818[p]>
   5415E:	0214      	ld         al, #+0x2
   5415F:	0027      	st         al, @(0x0, y)
   54160:	0714      	ld         al, #+0x7
   54161:	6C00      	**prefx    0x6C
   54162:	BF10      	ld         ah, #+0x6BBF
   54163:	D700      	**prefx    0xD7
   54164:	B49C      	bsr        -0x294C <CSRmeshPsRead:0x51818[p]>
   54165:	0414      	ld         al, #+0x4
   54166:	0027      	st         al, @(0x0, y)
   54167:	0814      	ld         al, #+0x8
   54168:	6C00      	**prefx    0x6C
   54169:	B710      	ld         ah, #+0x6BB7
   5416A:	D700      	**prefx    0xD7
   5416B:	AD9C      	bsr        -0x2953 <CSRmeshPsRead:0x51818[p]>
   5416C:	08E0      	bra        +0x8 <___libcsrmesh_95+0x79:0x54174[p]>
   5416D:	0114      	ld         al, #+0x1
   5416E:	0027      	st         al, @(0x0, y)
   5416F:	0314      	ld         al, #+0x3
   54170:	6C00      	**prefx    0x6C
   54171:	9D10      	ld         ah, #+0x6B9D
   54172:	D700      	**prefx    0xD7
   54173:	919C      	bsr        -0x296F <CSRmeshPsWrite:0x51804[p]>
   54174:	0814      	ld         al, #+0x8
   54175:	0027      	st         al, @(0x0, y)
   54176:	0114      	ld         al, #+0x1
   54177:	E411      	ld         ah, @0xFFE4 <register uy>
   54178:	0130      	add        ah, #+0x1
   54179:	D700      	**prefx    0xD7
   5417A:	9E9C      	bsr        -0x2962 <CSRmeshPsRead:0x51818[p]>
   5417B:	1014      	ld         al, #+0x10
   5417C:	0027      	st         al, @(0x0, y)
   5417D:	6C00      	**prefx    0x6C
   5417E:	9E14      	ld         al, #+0x6B9E
   5417F:	E411      	ld         ah, @0xFFE4 <register uy>
   54180:	0130      	add        ah, #+0x1
   54181:	FB00      	**prefx    0xFB
   54182:	E900      	**prefx    0xE9
   54183:	539C      	bsr        -0x516AD <MemCopyUnPack:0x2AD6[p]>
   54184:	0414      	ld         al, #+0x4
   54185:	0027      	st         al, @(0x0, y)
   54186:	0214      	ld         al, #+0x2
   54187:	E411      	ld         ah, @0xFFE4 <register uy>
   54188:	0130      	add        ah, #+0x1
   54189:	D700      	**prefx    0xD7
   5418A:	8E9C      	bsr        -0x2972 <CSRmeshPsRead:0x51818[p]>
   5418B:	0814      	ld         al, #+0x8
   5418C:	0027      	st         al, @(0x0, y)
   5418D:	6C00      	**prefx    0x6C
   5418E:	AE14      	ld         al, #+0x6BAE
   5418F:	E411      	ld         ah, @0xFFE4 <register uy>
   54190:	0130      	add        ah, #+0x1
   54191:	FB00      	**prefx    0xFB
   54192:	E900      	**prefx    0xE9
   54193:	439C      	bsr        -0x516BD <MemCopyUnPack:0x2AD6[p]>
   54194:	F50F      	leave      #-0xB

0x00054195 <CSRmeshStop>:
   54195:	FE0B      	enter      #-0x2
   54196:	6C00      	**prefx    0x6C
   54197:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   54198:	0284      	cmp        al, #+0x2
   54199:	03F4      	beq        +0x3 <CSRmeshStop+0x7:0x5419C[p]>
   5419A:	0214      	ld         al, #+0x2
   5419B:	11E0      	bra        +0x11 <CSRmeshStop+0x17:0x541AC[p]>
   5419C:	1500      	**prefx    0x15
   5419D:	889C      	bsr        +0x1488 <___libcsrmesh_329:0x55625[p]>
   5419E:	E199      	tst        @0xFFE1 <register al>
   5419F:	09F4      	beq        +0x9 <CSRmeshStop+0x13:0x541A8[p]>
   541A0:	1500      	**prefx    0x15
   541A1:	849C      	bsr        +0x1484 <___libcsrmesh_329:0x55625[p]>
   541A2:	E199      	tst        @0xFFE1 <register al>
   541A3:	05F4      	beq        +0x5 <CSRmeshStop+0x13:0x541A8[p]>
   541A4:	1500      	**prefx    0x15
   541A5:	809C      	bsr        +0x1480 <___libcsrmesh_329:0x55625[p]>
   541A6:	E199      	tst        @0xFFE1 <register al>
   541A7:	05F0      	bne        +0x5 <CSRmeshStop+0x17:0x541AC[p]>
   541A8:	0114      	ld         al, #+0x1
   541A9:	6C00      	**prefx    0x6C
   541AA:	8E25      	st         al, @0x6B8E <g_mesh_data+0x1>
   541AB:	0014      	ld         al, #+0x0
   541AC:	FE0F      	leave      #-0x2

0x000541AD <CSRmeshStart>:
   541AD:	FE0B      	enter      #-0x2
   541AE:	6C00      	**prefx    0x6C
   541AF:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   541B0:	1BF4      	beq        +0x1B <CSRmeshStart+0x1E:0x541CB[p]>
   541B1:	0184      	cmp        al, #+0x1
   541B2:	11F0      	bne        +0x11 <CSRmeshStart+0x16:0x541C3[p]>
   541B3:	1400      	**prefx    0x14
   541B4:	139C      	bsr        +0x1413 <___libcsrmesh_332:0x555C7[p]>
   541B5:	E199      	tst        @0xFFE1 <register al>
   541B6:	09F4      	beq        +0x9 <CSRmeshStart+0x12:0x541BF[p]>
   541B7:	1400      	**prefx    0x14
   541B8:	0F9C      	bsr        +0x140F <___libcsrmesh_332:0x555C7[p]>
   541B9:	E199      	tst        @0xFFE1 <register al>
   541BA:	05F4      	beq        +0x5 <CSRmeshStart+0x12:0x541BF[p]>
   541BB:	1400      	**prefx    0x14
   541BC:	0B9C      	bsr        +0x140B <___libcsrmesh_332:0x555C7[p]>
   541BD:	E199      	tst        @0xFFE1 <register al>
   541BE:	0CF0      	bne        +0xC <CSRmeshStart+0x1D:0x541CA[p]>
   541BF:	0214      	ld         al, #+0x2
   541C0:	6C00      	**prefx    0x6C
   541C1:	8E25      	st         al, @0x6B8E <g_mesh_data+0x1>
   541C2:	05E0      	bra        +0x5 <CSRmeshStart+0x1A:0x541C7[p]>
   541C3:	0284      	cmp        al, #+0x2
   541C4:	03F4      	beq        +0x3 <CSRmeshStart+0x1A:0x541C7[p]>
   541C5:	FF14      	ld         al, #-0x1
   541C6:	04E0      	bra        +0x4 <CSRmeshStart+0x1D:0x541CA[p]>
   541C7:	0014      	ld         al, #+0x0
   541C8:	6C00      	**prefx    0x6C
   541C9:	8D25      	st         al, @0x6B8D <g_mesh_data>
   541CA:	FE0F      	leave      #-0x2
   541CB:	0814      	ld         al, #+0x8
   541CC:	FEE0      	bra        -0x2 <CSRmeshStart+0x1D:0x541CA[p]>

0x000541CD <___libcsrmesh_94>:
   541CD:	FE0B      	enter      #-0x2
   541CE:	E111      	ld         ah, @0xFFE1 <register al>
   541CF:	01C4      	and        al, #0x1
   541D0:	03F4      	beq        +0x3 <___libcsrmesh_94+0x6:0x541D3[p]>
   541D1:	0114      	ld         al, #+0x1
   541D2:	02E0      	bra        +0x2 <___libcsrmesh_94+0x7:0x541D4[p]>
   541D3:	0014      	ld         al, #+0x0
   541D4:	6C00      	**prefx    0x6C
   541D5:	8F25      	st         al, @0x6B8F <g_mesh_data+0x2>
   541D6:	0009      	**unsigned
   541D7:	01A4      	lsr        #0x1
   541D8:	E099      	tst        @0xFFE0 <register ah>
   541D9:	04F4      	beq        +0x4 <___libcsrmesh_94+0x10:0x541DD[p]>
   541DA:	6C00      	**prefx    0x6C
   541DB:	AE14      	ld         al, #+0x6BAE
   541DC:	02E0      	bra        +0x2 <___libcsrmesh_94+0x11:0x541DE[p]>
   541DD:	0014      	ld         al, #+0x0
   541DE:	0600      	**prefx    0x6
   541DF:	A89C      	bsr        +0x5A8 <___libcsrmesh_212:0x54787[p]>
   541E0:	FE0F      	leave      #-0x2

0x000541E1 <CSRmeshInit>:
   541E1:	F90B      	enter      #-0x7
   541E2:	0427      	st         al, @(+0x4, y)
   541E3:	6C00      	**prefx    0x6C
   541E4:	8E99      	tst        @0x6B8E <g_mesh_data+0x1>
   541E5:	11F0      	bne        +0x11 <CSRmeshInit+0x15:0x541F6[p]>
   541E6:	E79C      	bsr        -0x19 <___libcsrmesh_94:0x541CD[p]>
   541E7:	0014      	ld         al, #+0x0
   541E8:	6C00      	**prefx    0x6C
   541E9:	8D25      	st         al, @0x6B8D <g_mesh_data>
   541EA:	0318      	ld         x, #+0x3
   541EB:	002B      	st         x, @(0x0, y)
   541EC:	6C00      	**prefx    0x6C
   541ED:	9814      	ld         al, #+0x6B98
   541EE:	0100      	**prefx    0x1
   541EF:	FF10      	ld         ah, #+0xFF
   541F0:	FB00      	**prefx    0xFB
   541F1:	E900      	**prefx    0xE9
   541F2:	5E9C      	bsr        -0x516A2 <MemSet:0x2B50[p]>
   541F3:	0014      	ld         al, #+0x0
   541F4:	6C00      	**prefx    0x6C
   541F5:	8E25      	st         al, @0x6B8E <g_mesh_data+0x1>
   541F6:	6C00      	**prefx    0x6C
   541F7:	8D15      	ld         al, @0x6B8D <g_mesh_data>
   541F8:	0184      	cmp        al, #+0x1
   541F9:	15F0      	bne        +0x15 <CSRmeshInit+0x2D:0x5420E[p]>
   541FA:	6C00      	**prefx    0x6C
   541FB:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   541FC:	0184      	cmp        al, #+0x1
   541FD:	11F0      	bne        +0x11 <CSRmeshInit+0x2D:0x5420E[p]>
   541FE:	6C00      	**prefx    0x6C
   541FF:	8F19      	ld         x, @0x6B8F <g_mesh_data+0x2>
   54200:	022B      	st         x, @(+0x2, y)
   54201:	0417      	ld         al, @(+0x4, y)
   54202:	CB9C      	bsr        -0x35 <___libcsrmesh_94:0x541CD[p]>
   54203:	6C00      	**prefx    0x6C
   54204:	8F15      	ld         al, @0x6B8F <g_mesh_data+0x2>
   54205:	021B      	ld         x, @(+0x2, y)
   54206:	E189      	cmp        x, @0xFFE1 <register al>
   54207:	03F4      	beq        +0x3 <CSRmeshInit+0x29:0x5420A[p]>
   54208:	0600      	**prefx    0x6
   54209:	6F9C      	bsr        +0x66F <___libcsrmesh_205:0x54878[p]>
   5420A:	0014      	ld         al, #+0x0
   5420B:	6C00      	**prefx    0x6C
   5420C:	8D25      	st         al, @0x6B8D <g_mesh_data>
   5420D:	35E0      	bra        +0x35 <CSRmeshInit+0x61:0x54242[p]>
   5420E:	6C00      	**prefx    0x6C
   5420F:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   54210:	29F0      	bne        +0x29 <CSRmeshInit+0x58:0x54239[p]>
   54211:	D600      	**prefx    0xD6
   54212:	DB9C      	bsr        -0x2A25 <CSRmeshPsInit:0x517ED[p]>
   54213:	0327      	st         al, @(+0x3, y)
   54214:	32F0      	bne        +0x32 <CSRmeshInit+0x65:0x54246[p]>
   54215:	6F18      	ld         x, #+0x6F
   54216:	002B      	st         x, @(0x0, y)
   54217:	6C00      	**prefx    0x6C
   54218:	9D14      	ld         al, #+0x6B9D
   54219:	0010      	ld         ah, #+0x0
   5421A:	FB00      	**prefx    0xFB
   5421B:	E900      	**prefx    0xE9
   5421C:	349C      	bsr        -0x516CC <MemSet:0x2B50[p]>
   5421D:	FF00      	**prefx    0xFF
   5421E:	DD9C      	bsr        -0x123 <___libcsrmesh_95:0x540FB[p]>
   5421F:	0100      	**prefx    0x1
   54220:	119C      	bsr        +0x111 <___libcsrmesh_272:0x54331[p]>
   54221:	0127      	st         al, @(+0x1, y)
   54222:	1000      	**prefx    0x10
   54223:	6C9C      	bsr        +0x106C <___libcsrmesh_238:0x5528F[p]>
   54224:	0327      	st         al, @(+0x3, y)
   54225:	0400      	**prefx    0x4
   54226:	359C      	bsr        +0x435 <___libcsrmesh_118:0x5465B[p]>
   54227:	E111      	ld         ah, @0xFFE1 <register al>
   54228:	0417      	ld         al, @(+0x4, y)
   54229:	0D00      	**prefx    0xD
   5422A:	AB9C      	bsr        +0xCAB <___libcsrmesh_206:0x54ED5[p]>
   5422B:	031B      	ld         x, @(+0x3, y)
   5422C:	01BB      	or         x, @(+0x1, y)
   5422D:	E3B5      	or         al, @0xFFE3 <register uxl>
   5422E:	0327      	st         al, @(+0x3, y)
   5422F:	6C00      	**prefx    0x6C
   54230:	9E14      	ld         al, #+0x6B9E
   54231:	0010      	ld         ah, #+0x0
   54232:	169C      	bsr        +0x16 <___libcsrmesh_215:0x54248[p]>
   54233:	039B      	tst        @(+0x3, y)
   54234:	12F0      	bne        +0x12 <CSRmeshInit+0x65:0x54246[p]>
   54235:	0114      	ld         al, #+0x1
   54236:	6C00      	**prefx    0x6C
   54237:	8E25      	st         al, @0x6B8E <g_mesh_data+0x1>
   54238:	0EE0      	bra        +0xE <CSRmeshInit+0x65:0x54246[p]>
   54239:	FF34      	add        al, #-0x1
   5423A:	0284      	cmp        al, #+0x2
   5423B:	09F8      	bcc        +0x9 <CSRmeshInit+0x63:0x54244[p]>
   5423C:	041B      	ld         x, @(+0x4, y)
   5423D:	01C8      	and        x, #0x1
   5423E:	6C00      	**prefx    0x6C
   5423F:	8F89      	cmp        x, @0x6B8F <g_mesh_data+0x2>
   54240:	04F0      	bne        +0x4 <CSRmeshInit+0x63:0x54244[p]>
   54241:	0014      	ld         al, #+0x0
   54242:	0327      	st         al, @(+0x3, y)
   54243:	03E0      	bra        +0x3 <CSRmeshInit+0x65:0x54246[p]>
   54244:	FF18      	ld         x, #-0x1
   54245:	032B      	st         x, @(+0x3, y)
   54246:	0317      	ld         al, @(+0x3, y)
   54247:	F90F      	leave      #-0x7

0x00054248 <___libcsrmesh_215>:
   54248:	B90B      	enter      #-0x47
   54249:	4427      	st         al, @(+0x44, y)
   5424A:	E099      	tst        @0xFFE0 <register ah>
   5424B:	03F4      	beq        +0x3 <___libcsrmesh_215+0x6:0x5424E[p]>
   5424C:	4323      	st         ah, @(+0x43, y)
   5424D:	04E0      	bra        +0x4 <___libcsrmesh_215+0x9:0x54251[p]>
   5424E:	6C00      	**prefx    0x6C
   5424F:	0C14      	ld         al, #+0x6C0C
   54250:	4327      	st         al, @(+0x43, y)
   54251:	E415      	ld         al, @0xFFE4 <register uy>
   54252:	1134      	add        al, #+0x11
   54253:	1200      	**prefx    0x12
   54254:	609C      	bsr        +0x1260 <___libcsrmesh_311:0x554B4[p]>
   54255:	1014      	ld         al, #+0x10
   54256:	0027      	st         al, @(0x0, y)
   54257:	E415      	ld         al, @0xFFE4 <register uy>
   54258:	1134      	add        al, #+0x11
   54259:	4413      	ld         ah, @(+0x44, y)
   5425A:	1300      	**prefx    0x13
   5425B:	039C      	bsr        +0x1303 <___libcsrmesh_318:0x5555E[p]>
   5425C:	E415      	ld         al, @0xFFE4 <register uy>
   5425D:	1134      	add        al, #+0x11
   5425E:	E411      	ld         ah, @0xFFE4 <register uy>
   5425F:	0130      	add        ah, #+0x1
   54260:	1000      	**prefx    0x10
   54261:	7D9C      	bsr        +0x107D <___libcsrmesh_297:0x552DE[p]>
   54262:	0414      	ld         al, #+0x4
   54263:	0027      	st         al, @(0x0, y)
   54264:	E415      	ld         al, @0xFFE4 <register uy>
   54265:	0D34      	add        al, #+0xD
   54266:	4313      	ld         ah, @(+0x43, y)
   54267:	1100      	**prefx    0x11
   54268:	0D9C      	bsr        +0x110D <___libcsrmesh_308:0x55375[p]>
   54269:	B90F      	leave      #-0x47

0x0005426A <___libcsrmesh_281>:
   5426A:	6600      	**prefx    0x66
   5426B:	7125      	st         al, @0x6671 <L0+0x1D>
   5426C:	6600      	**prefx    0x66
   5426D:	7021      	st         ah, @0x6670 <L0+0x1C>
   5426E:	00E2      	bra        0x0, x

0x0005426F <___libcsrmesh_273>:
   5426F:	0014      	ld         al, #+0x0
   54270:	6C00      	**prefx    0x6C
   54271:	9D99      	tst        @0x6B9D <g_mesh_context_data>
   54272:	02F0      	bne        +0x2 <___libcsrmesh_273+0x5:0x54274[p]>
   54273:	0114      	ld         al, #+0x1
   54274:	00E2      	bra        0x0, x

0x00054275 <___libcsrmesh_274>:
   54275:	6C00      	**prefx    0x6C
   54276:	9D15      	ld         al, @0x6B9D <g_mesh_context_data>
   54277:	02F4      	beq        +0x2 <___libcsrmesh_274+0x4:0x54279[p]>
   54278:	0114      	ld         al, #+0x1
   54279:	00E2      	bra        0x0, x

0x0005427A <___libcsrmesh_270>:
   5427A:	FE0B      	enter      #-0x2
   5427B:	E111      	ld         ah, @0xFFE1 <register al>
   5427C:	1014      	ld         al, #+0x10
   5427D:	6C00      	**prefx    0x6C
   5427E:	C118      	ld         x, #+0x6BC1
   5427F:	FD09      	bc2        
   54280:	FE0F      	leave      #-0x2

0x00054281 <___libcsrmesh_278>:
   54281:	F00B      	enter      #-0x10
   54282:	0014      	ld         al, #+0x0
   54283:	6C00      	**prefx    0x6C
   54284:	9D25      	st         al, @0x6B9D <g_mesh_context_data>
   54285:	0114      	ld         al, #+0x1
   54286:	0027      	st         al, @(0x0, y)
   54287:	0314      	ld         al, #+0x3
   54288:	E411      	ld         ah, @0xFFE4 <register uy>
   54289:	0130      	add        ah, #+0x1
   5428A:	D600      	**prefx    0xD6
   5428B:	8D9C      	bsr        -0x2A73 <CSRmeshPsRead:0x51818[p]>
   5428C:	0117      	ld         al, @(+0x1, y)
   5428D:	6C00      	**prefx    0x6C
   5428E:	9D85      	cmp        al, @0x6B9D <g_mesh_context_data>
   5428F:	08F4      	beq        +0x8 <___libcsrmesh_278+0x16:0x54297[p]>
   54290:	0114      	ld         al, #+0x1
   54291:	0027      	st         al, @(0x0, y)
   54292:	0314      	ld         al, #+0x3
   54293:	6C00      	**prefx    0x6C
   54294:	9D10      	ld         ah, #+0x6B9D
   54295:	D500      	**prefx    0xD5
   54296:	6E9C      	bsr        -0x2A92 <CSRmeshPsWrite:0x51804[p]>
   54297:	1014      	ld         al, #+0x10
   54298:	0027      	st         al, @(0x0, y)
   54299:	6C00      	**prefx    0x6C
   5429A:	C114      	ld         al, #+0x6BC1
   5429B:	0010      	ld         ah, #+0x0
   5429C:	FB00      	**prefx    0xFB
   5429D:	E900      	**prefx    0xE9
   5429E:	B29C      	bsr        -0x5174E <MemSet:0x2B50[p]>
   5429F:	0814      	ld         al, #+0x8
   542A0:	0027      	st         al, @(0x0, y)
   542A1:	6C00      	**prefx    0x6C
   542A2:	D114      	ld         al, #+0x6BD1
   542A3:	0010      	ld         ah, #+0x0
   542A4:	FB00      	**prefx    0xFB
   542A5:	E900      	**prefx    0xE9
   542A6:	AA9C      	bsr        -0x51756 <MemSet:0x2B50[p]>
   542A7:	0814      	ld         al, #+0x8
   542A8:	0027      	st         al, @(0x0, y)
   542A9:	6C00      	**prefx    0x6C
   542AA:	F114      	ld         al, #+0x6BF1
   542AB:	0010      	ld         ah, #+0x0
   542AC:	FB00      	**prefx    0xFB
   542AD:	E900      	**prefx    0xE9
   542AE:	A29C      	bsr        -0x5175E <MemSet:0x2B50[p]>
   542AF:	0014      	ld         al, #+0x0
   542B0:	6C00      	**prefx    0x6C
   542B1:	F925      	st         al, @0x6BF9 <___libgatt_lib_db_962+0x19>
   542B2:	6C00      	**prefx    0x6C
   542B3:	FA25      	st         al, @0x6BFA <___libgatt_lib_db_962+0x1A>
   542B4:	6C00      	**prefx    0x6C
   542B5:	FB25      	st         al, @0x6BFB <___libgatt_lib_db_962+0x1B>
   542B6:	6C00      	**prefx    0x6C
   542B7:	FC25      	st         al, @0x6BFC <___libgatt_lib_db_962+0x1C>
   542B8:	0814      	ld         al, #+0x8
   542B9:	0027      	st         al, @(0x0, y)
   542BA:	0414      	ld         al, #+0x4
   542BB:	E411      	ld         ah, @0xFFE4 <register uy>
   542BC:	0630      	add        ah, #+0x6
   542BD:	1B00      	**prefx    0x1B
   542BE:	579C      	bsr        +0x1B57 <___libcsrmesh_373:0x55E15[p]>
   542BF:	0414      	ld         al, #+0x4
   542C0:	0027      	st         al, @(0x0, y)
   542C1:	0C14      	ld         al, #+0xC
   542C2:	E411      	ld         ah, @0xFFE4 <register uy>
   542C3:	0230      	add        ah, #+0x2
   542C4:	1B00      	**prefx    0x1B
   542C5:	509C      	bsr        +0x1B50 <___libcsrmesh_373:0x55E15[p]>
   542C6:	0814      	ld         al, #+0x8
   542C7:	0027      	st         al, @(0x0, y)
   542C8:	6C00      	**prefx    0x6C
   542C9:	F914      	ld         al, #+0x6BF9
   542CA:	F834      	add        al, #-0x8
   542CB:	E411      	ld         ah, @0xFFE4 <register uy>
   542CC:	0630      	add        ah, #+0x6
   542CD:	FC00      	**prefx    0xFC
   542CE:	1C00      	**prefx    0x1C
   542CF:	629C      	bsr        -0x3E39E <MemCmp:0x15F31[p]>
   542D0:	E199      	tst        @0xFFE1 <register al>
   542D1:	09F4      	beq        +0x9 <___libcsrmesh_278+0x59:0x542DA[p]>
   542D2:	0814      	ld         al, #+0x8
   542D3:	0027      	st         al, @(0x0, y)
   542D4:	0414      	ld         al, #+0x4
   542D5:	6C00      	**prefx    0x6C
   542D6:	F910      	ld         ah, #+0x6BF9
   542D7:	F830      	add        ah, #-0x8
   542D8:	D500      	**prefx    0xD5
   542D9:	169C      	bsr        -0x2AEA <CSRmeshPsSecureWrite:0x517EF[p]>
   542DA:	0414      	ld         al, #+0x4
   542DB:	0027      	st         al, @(0x0, y)
   542DC:	6C00      	**prefx    0x6C
   542DD:	F914      	ld         al, #+0x6BF9
   542DE:	E411      	ld         ah, @0xFFE4 <register uy>
   542DF:	0230      	add        ah, #+0x2
   542E0:	FC00      	**prefx    0xFC
   542E1:	1C00      	**prefx    0x1C
   542E2:	4F9C      	bsr        -0x3E3B1 <MemCmp:0x15F31[p]>
   542E3:	E199      	tst        @0xFFE1 <register al>
   542E4:	08F4      	beq        +0x8 <___libcsrmesh_278+0x6B:0x542EC[p]>
   542E5:	0414      	ld         al, #+0x4
   542E6:	0027      	st         al, @(0x0, y)
   542E7:	0C14      	ld         al, #+0xC
   542E8:	6C00      	**prefx    0x6C
   542E9:	F910      	ld         ah, #+0x6BF9
   542EA:	D500      	**prefx    0xD5
   542EB:	049C      	bsr        -0x2AFC <CSRmeshPsSecureWrite:0x517EF[p]>
   542EC:	F00F      	leave      #-0x10

0x000542ED <___libcsrmesh_282>:
   542ED:	FD0B      	enter      #-0x3
   542EE:	E119      	ld         x, @0xFFE1 <register al>
   542EF:	0AF0      	bne        +0xA <___libcsrmesh_282+0xC:0x542F9[p]>
   542F0:	0814      	ld         al, #+0x8
   542F1:	0027      	st         al, @(0x0, y)
   542F2:	6C00      	**prefx    0x6C
   542F3:	D114      	ld         al, #+0x6BD1
   542F4:	0010      	ld         ah, #+0x0
   542F5:	FB00      	**prefx    0xFB
   542F6:	E800      	**prefx    0xE8
   542F7:	599C      	bsr        -0x517A7 <MemSet:0x2B50[p]>
   542F8:	05E0      	bra        +0x5 <___libcsrmesh_282+0x10:0x542FD[p]>
   542F9:	0814      	ld         al, #+0x8
   542FA:	6C00      	**prefx    0x6C
   542FB:	D110      	ld         ah, #+0x6BD1
   542FC:	FD09      	bc2        
   542FD:	0814      	ld         al, #+0x8
   542FE:	0027      	st         al, @(0x0, y)
   542FF:	6C00      	**prefx    0x6C
   54300:	F914      	ld         al, #+0x6BF9
   54301:	6C00      	**prefx    0x6C
   54302:	D110      	ld         ah, #+0x6BD1
   54303:	FB00      	**prefx    0xFB
   54304:	E800      	**prefx    0xE8
   54305:	A79C      	bsr        -0x51859 <MemCopyPack:0x2AAC[p]>
   54306:	0414      	ld         al, #+0x4
   54307:	0027      	st         al, @(0x0, y)
   54308:	0C14      	ld         al, #+0xC
   54309:	6C00      	**prefx    0x6C
   5430A:	F910      	ld         ah, #+0x6BF9
   5430B:	1B00      	**prefx    0x1B
   5430C:	2D9C      	bsr        +0x1B2D <___libcsrmesh_372:0x55E39[p]>
   5430D:	FD0F      	leave      #-0x3

0x0005430E <___libcsrmesh_283>:
   5430E:	FC0B      	enter      #-0x4
   5430F:	F825      	st         al, @0xFFF8 <(scratchpad)>
   54310:	20F4      	beq        +0x20 <___libcsrmesh_283+0x22:0x54330[p]>
   54311:	1014      	ld         al, #+0x10
   54312:	6C00      	**prefx    0x6C
   54313:	C110      	ld         ah, #+0x6BC1
   54314:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54315:	FD09      	bc2        
   54316:	1014      	ld         al, #+0x10
   54317:	0027      	st         al, @(0x0, y)
   54318:	6C00      	**prefx    0x6C
   54319:	F114      	ld         al, #+0x6BF1
   5431A:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5431B:	FB00      	**prefx    0xFB
   5431C:	E800      	**prefx    0xE8
   5431D:	8F9C      	bsr        -0x51871 <MemCopyPack:0x2AAC[p]>
   5431E:	6500      	**prefx    0x65
   5431F:	6A14      	ld         al, #+0x656A
   54320:	0027      	st         al, @(0x0, y)
   54321:	6600      	**prefx    0x66
   54322:	9C14      	ld         al, #+0x659C
   54323:	0127      	st         al, @(+0x1, y)
   54324:	6C00      	**prefx    0x6C
   54325:	C114      	ld         al, #+0x6BC1
   54326:	1010      	ld         ah, #+0x10
   54327:	1100      	**prefx    0x11
   54328:	D69C      	bsr        +0x10D6 <___libcsrmesh_307:0x553FE[p]>
   54329:	0814      	ld         al, #+0x8
   5432A:	0027      	st         al, @(0x0, y)
   5432B:	0414      	ld         al, #+0x4
   5432C:	6C00      	**prefx    0x6C
   5432D:	F110      	ld         ah, #+0x6BF1
   5432E:	1B00      	**prefx    0x1B
   5432F:	0A9C      	bsr        +0x1B0A <___libcsrmesh_372:0x55E39[p]>
   54330:	FC0F      	leave      #-0x4

0x00054331 <___libcsrmesh_272>:
   54331:	FC0B      	enter      #-0x4
   54332:	0100      	**prefx    0x1
   54333:	6E14      	ld         al, #+0x16E
   54334:	0027      	st         al, @(0x0, y)
   54335:	6500      	**prefx    0x65
   54336:	0614      	ld         al, #+0x6506
   54337:	0010      	ld         ah, #+0x0
   54338:	FB00      	**prefx    0xFB
   54339:	E800      	**prefx    0xE8
   5433A:	169C      	bsr        -0x517EA <MemSet:0x2B50[p]>
   5433B:	6C00      	**prefx    0x6C
   5433C:	9D99      	tst        @0x6B9D <g_mesh_context_data>
   5433D:	0DF4      	beq        +0xD <___libcsrmesh_272+0x19:0x5434A[p]>
   5433E:	6500      	**prefx    0x65
   5433F:	6A14      	ld         al, #+0x656A
   54340:	0027      	st         al, @(0x0, y)
   54341:	6600      	**prefx    0x66
   54342:	9C14      	ld         al, #+0x659C
   54343:	0127      	st         al, @(+0x1, y)
   54344:	6C00      	**prefx    0x6C
   54345:	C114      	ld         al, #+0x6BC1
   54346:	1010      	ld         ah, #+0x10
   54347:	1100      	**prefx    0x11
   54348:	B69C      	bsr        +0x10B6 <___libcsrmesh_307:0x553FE[p]>
   54349:	03E0      	bra        +0x3 <___libcsrmesh_272+0x1B:0x5434C[p]>
   5434A:	FF00      	**prefx    0xFF
   5434B:	369C      	bsr        -0xCA <___libcsrmesh_278:0x54281[p]>
   5434C:	6500      	**prefx    0x65
   5434D:	0614      	ld         al, #+0x6506
   5434E:	0027      	st         al, @(0x0, y)
   5434F:	6500      	**prefx    0x65
   54350:	3814      	ld         al, #+0x6538
   54351:	0127      	st         al, @(+0x1, y)
   54352:	A100      	**prefx    0xA1
   54353:	7E14      	ld         al, #-0x5E82
   54354:	1010      	ld         ah, #+0x10
   54355:	1100      	**prefx    0x11
   54356:	A89C      	bsr        +0x10A8 <___libcsrmesh_307:0x553FE[p]>
   54357:	2014      	ld         al, #+0x20
   54358:	6600      	**prefx    0x66
   54359:	6F25      	st         al, @0x666F <L0+0x1B>
   5435A:	0014      	ld         al, #+0x0
   5435B:	6600      	**prefx    0x66
   5435C:	7325      	st         al, @0x6673 <L0+0x1F>
   5435D:	FC0F      	leave      #-0x4

0x0005435E <___libcsrmesh_268>:
   5435E:	FC0B      	enter      #-0x4
   5435F:	FA25      	st         al, @0xFFFA <(scratchpad)>
   54360:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   54361:	6700      	**prefx    0x67
   54362:	9314      	ld         al, #+0x6693
   54363:	F925      	st         al, @0xFFF9 <(scratchpad)>
   54364:	0314      	ld         al, #+0x3
   54365:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   54366:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   54367:	FD09      	bc2        
   54368:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   54369:	0326      	st         al, @(+0x3, x)
   5436A:	0130      	add        ah, #+0x1
   5436B:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5436C:	0338      	add        x, #+0x3
   5436D:	FA29      	st         x, @0xFFFA <(scratchpad)>
   5436E:	0214      	ld         al, #+0x2
   5436F:	FD09      	bc2        
   54370:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   54371:	0E26      	st         al, @(+0xE, x)
   54372:	0F26      	st         al, @(+0xF, x)
   54373:	6C00      	**prefx    0x6C
   54374:	D118      	ld         x, #+0x6BD1
   54375:	F829      	st         x, @0xFFF8 <(scratchpad)>
   54376:	0814      	ld         al, #+0x8
   54377:	FD09      	bc2        
   54378:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   54379:	F034      	add        al, #-0x10
   5437A:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5437B:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5437C:	0238      	add        x, #+0x2
   5437D:	002B      	st         x, @(0x0, y)
   5437E:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   5437F:	FB34      	add        al, #-0x5
   54380:	0127      	st         al, @(+0x1, y)
   54381:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   54382:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   54383:	1A00      	**prefx    0x1A
   54384:	329C      	bsr        +0x1A32 <___libcsrmesh_371:0x55DB6[p]>
   54385:	FC0F      	leave      #-0x4

0x00054386 <___libcsrmesh_276>:
   54386:	EC0B      	enter      #-0x14
   54387:	0E27      	st         al, @(+0xE, y)
   54388:	0F23      	st         ah, @(+0xF, y)
   54389:	0980      	cmp        ah, #+0x9
   5438A:	0200      	**prefx    0x2
   5438B:	0B2C      	bcz        +0x20B <___libcsrmesh_276+0x210:0x54596[p]>
   5438C:	6C00      	**prefx    0x6C
   5438D:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   5438E:	0284      	cmp        al, #+0x2
   5438F:	0200      	**prefx    0x2
   54390:	06F0      	bne        +0x206 <___libcsrmesh_276+0x210:0x54596[p]>
   54391:	0110      	ld         ah, #+0x1
   54392:	0623      	st         ah, @(+0x6, y)
   54393:	0F17      	ld         al, @(+0xF, y)
   54394:	FF34      	add        al, #-0x1
   54395:	0E1B      	ld         x, @(+0xE, y)
   54396:	E139      	add        x, @0xFFE1 <register al>
   54397:	0D2B      	st         x, @(+0xD, y)
   54398:	0134      	add        al, #+0x1
   54399:	0F27      	st         al, @(+0xF, y)
   5439A:	0012      	ld         ah, @(0x0, x)
   5439B:	0A23      	st         ah, @(+0xA, y)
   5439C:	0014      	ld         al, #+0x0
   5439D:	0727      	st         al, @(+0x7, y)
   5439E:	1417      	ld         al, @(+0x14, y)
   5439F:	0100      	**prefx    0x1
   543A0:	80C4      	and        al, #0x80
   543A1:	05F4      	beq        +0x5 <___libcsrmesh_276+0x20:0x543A6[p]>
   543A2:	141B      	ld         x, @(+0x14, y)
   543A3:	FF00      	**prefx    0xFF
   543A4:	00B8      	or         x, #-0x100
   543A5:	142B      	st         x, @(+0x14, y)
   543A6:	0F13      	ld         ah, @(+0xF, y)
   543A7:	F730      	add        ah, #-0x9
   543A8:	0C23      	st         ah, @(+0xC, y)
   543A9:	0E17      	ld         al, @(+0xE, y)
   543AA:	E035      	add        al, @0xFFE0 <register ah>
   543AB:	F925      	st         al, @0xFFF9 <(scratchpad)>
   543AC:	6600      	**prefx    0x66
   543AD:	6F19      	ld         x, @0x666F <L0+0x1B>
   543AE:	FF2B      	st         x, @(-0x1, y)
   543AF:	0010      	ld         ah, #+0x0
   543B0:	4DE0      	bra        +0x4D <___libcsrmesh_276+0x77:0x543FD[p]>
   543B1:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   543B2:	0590      	smult      #+0x5
   543B3:	FA25      	st         al, @0xFFFA <(scratchpad)>
   543B4:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   543B5:	031A      	ld         x, @(+0x3, x)
   543B6:	FE2B      	st         x, @(-0x2, y)
   543B7:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   543B8:	0016      	ld         al, @(0x0, x)
   543B9:	0010      	ld         ah, #+0x0
   543BA:	18A0      	asl        #0x18
   543BB:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   543BC:	E111      	ld         ah, @0xFFE1 <register al>
   543BD:	FE17      	ld         al, @(-0x2, y)
   543BE:	E0B5      	or         al, @0xFFE0 <register ah>
   543BF:	FE27      	st         al, @(-0x2, y)
   543C0:	0116      	ld         al, @(+0x1, x)
   543C1:	0010      	ld         ah, #+0x0
   543C2:	10A0      	asl        #0x10
   543C3:	FEB7      	or         al, @(-0x2, y)
   543C4:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   543C5:	FE27      	st         al, @(-0x2, y)
   543C6:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   543C7:	0216      	ld         al, @(+0x2, x)
   543C8:	0010      	ld         ah, #+0x0
   543C9:	08A0      	asl        #0x8
   543CA:	FEB7      	or         al, @(-0x2, y)
   543CB:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   543CC:	F825      	st         al, @0xFFF8 <(scratchpad)>
   543CD:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   543CE:	6600      	**prefx    0x66
   543CF:	CE16      	ld         al, @(+0x65CE, x)
   543D0:	E085      	cmp        al, @0xFFE0 <register ah>
   543D1:	2AF0      	bne        +0x2A <___libcsrmesh_276+0x75:0x543FB[p]>
   543D2:	6600      	**prefx    0x66
   543D3:	CF16      	ld         al, @(+0x65CF, x)
   543D4:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   543D5:	26F0      	bne        +0x26 <___libcsrmesh_276+0x75:0x543FB[p]>
   543D6:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   543D7:	0416      	ld         al, @(+0x4, x)
   543D8:	0010      	ld         ah, #+0x0
   543D9:	18A0      	asl        #0x18
   543DA:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   543DB:	FE27      	st         al, @(-0x2, y)
   543DC:	0516      	ld         al, @(+0x5, x)
   543DD:	0010      	ld         ah, #+0x0
   543DE:	10A0      	asl        #0x10
   543DF:	FEB7      	or         al, @(-0x2, y)
   543E0:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   543E1:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   543E2:	07B6      	or         al, @(+0x7, x)
   543E3:	FE27      	st         al, @(-0x2, y)
   543E4:	0616      	ld         al, @(+0x6, x)
   543E5:	0010      	ld         ah, #+0x0
   543E6:	08A0      	asl        #0x8
   543E7:	FEB7      	or         al, @(-0x2, y)
   543E8:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   543E9:	F825      	st         al, @0xFFF8 <(scratchpad)>
   543EA:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   543EB:	6600      	**prefx    0x66
   543EC:	D016      	ld         al, @(+0x65D0, x)
   543ED:	E085      	cmp        al, @0xFFE0 <register ah>
   543EE:	0DF0      	bne        +0xD <___libcsrmesh_276+0x75:0x543FB[p]>
   543EF:	6600      	**prefx    0x66
   543F0:	D116      	ld         al, @(+0x65D1, x)
   543F1:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   543F2:	09F0      	bne        +0x9 <___libcsrmesh_276+0x75:0x543FB[p]>
   543F3:	6600      	**prefx    0x66
   543F4:	D212      	ld         ah, @(+0x65D2, x)
   543F5:	6600      	**prefx    0x66
   543F6:	7319      	ld         x, @0x6673 <L0+0x1F>
   543F7:	0100      	**prefx    0x1
   543F8:	52F0      	bne        +0x152 <___libcsrmesh_276+0x1C4:0x5454A[p]>
   543F9:	0100      	**prefx    0x1
   543FA:	75E0      	bra        +0x175 <___libcsrmesh_276+0x1E9:0x5456F[p]>
   543FB:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   543FC:	0130      	add        ah, #+0x1
   543FD:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   543FE:	FF83      	cmp        ah, @(-0x1, y)
   543FF:	B2FC      	bcs        -0x4E <___libcsrmesh_276+0x2B:0x543B1[p]>
   54400:	0200      	**prefx    0x2
   54401:	99E0      	bra        +0x199 <___libcsrmesh_276+0x214:0x5459A[p]>
   54402:	0F1B      	ld         x, @(+0xF, y)
   54403:	F738      	add        x, #-0x9
   54404:	092B      	st         x, @(+0x9, y)
   54405:	6C00      	**prefx    0x6C
   54406:	D110      	ld         ah, #+0x6BD1
   54407:	0023      	st         ah, @(0x0, y)
   54408:	0814      	ld         al, #+0x8
   54409:	0127      	st         al, @(+0x1, y)
   5440A:	6600      	**prefx    0x66
   5440B:	7418      	ld         x, #+0x6674
   5440C:	022B      	st         x, @(+0x2, y)
   5440D:	0913      	ld         ah, @(+0x9, y)
   5440E:	0323      	st         ah, @(+0x3, y)
   5440F:	6700      	**prefx    0x67
   54410:	9314      	ld         al, #+0x6693
   54411:	0427      	st         al, @(+0x4, y)
   54412:	0818      	ld         x, #+0x8
   54413:	052B      	st         x, @(+0x5, y)
   54414:	6500      	**prefx    0x65
   54415:	6A14      	ld         al, #+0x656A
   54416:	6600      	**prefx    0x66
   54417:	9C10      	ld         ah, #+0x659C
   54418:	1000      	**prefx    0x10
   54419:	809C      	bsr        +0xF80 <___libcsrmesh_304:0x55399[p]>
   5441A:	0C13      	ld         ah, @(+0xC, y)
   5441B:	6600      	**prefx    0x66
   5441C:	7430      	add        ah, #+0x6674
   5441D:	0814      	ld         al, #+0x8
   5441E:	0027      	st         al, @(0x0, y)
   5441F:	6700      	**prefx    0x67
   54420:	9314      	ld         al, #+0x6693
   54421:	FC00      	**prefx    0xFC
   54422:	1B00      	**prefx    0x1B
   54423:	0E9C      	bsr        -0x3E4F2 <MemCmp:0x15F31[p]>
   54424:	E199      	tst        @0xFFE1 <register al>
   54425:	28F4      	beq        +0x28 <___libcsrmesh_276+0xC7:0x5444D[p]>
   54426:	0F1B      	ld         x, @(+0xF, y)
   54427:	F738      	add        x, #-0x9
   54428:	082B      	st         x, @(+0x8, y)
   54429:	A100      	**prefx    0xA1
   5442A:	7610      	ld         ah, #-0x5E8A
   5442B:	0023      	st         ah, @(0x0, y)
   5442C:	0814      	ld         al, #+0x8
   5442D:	0127      	st         al, @(+0x1, y)
   5442E:	6600      	**prefx    0x66
   5442F:	7418      	ld         x, #+0x6674
   54430:	022B      	st         x, @(+0x2, y)
   54431:	0813      	ld         ah, @(+0x8, y)
   54432:	0323      	st         ah, @(+0x3, y)
   54433:	6700      	**prefx    0x67
   54434:	9314      	ld         al, #+0x6693
   54435:	0427      	st         al, @(+0x4, y)
   54436:	0818      	ld         x, #+0x8
   54437:	052B      	st         x, @(+0x5, y)
   54438:	6500      	**prefx    0x65
   54439:	0614      	ld         al, #+0x6506
   5443A:	6500      	**prefx    0x65
   5443B:	3810      	ld         ah, #+0x6538
   5443C:	0F00      	**prefx    0xF
   5443D:	5C9C      	bsr        +0xF5C <___libcsrmesh_304:0x55399[p]>
   5443E:	0C13      	ld         ah, @(+0xC, y)
   5443F:	6600      	**prefx    0x66
   54440:	7430      	add        ah, #+0x6674
   54441:	0814      	ld         al, #+0x8
   54442:	0027      	st         al, @(0x0, y)
   54443:	6700      	**prefx    0x67
   54444:	9314      	ld         al, #+0x6693
   54445:	FC00      	**prefx    0xFC
   54446:	1B00      	**prefx    0x1B
   54447:	EA9C      	bsr        -0x3E516 <MemCmp:0x15F31[p]>
   54448:	E199      	tst        @0xFFE1 <register al>
   54449:	0100      	**prefx    0x1
   5444A:	61F4      	beq        +0x161 <___libcsrmesh_276+0x225:0x545AB[p]>
   5444B:	0100      	**prefx    0x1
   5444C:	59E0      	bra        +0x159 <___libcsrmesh_276+0x21F:0x545A5[p]>
   5444D:	6600      	**prefx    0x66
   5444E:	7319      	ld         x, @0x6673 <L0+0x1F>
   5444F:	0EF4      	beq        +0xE <___libcsrmesh_276+0xD7:0x5445D[p]>
   54450:	6600      	**prefx    0x66
   54451:	7215      	ld         al, @0x6672 <L0+0x1E>
   54452:	01C4      	and        al, #0x1
   54453:	0AF4      	beq        +0xA <___libcsrmesh_276+0xD7:0x5445D[p]>
   54454:	1413      	ld         ah, @(+0x14, y)
   54455:	0C82      	cmp        ah, @(+0xC, x)
   54456:	0728      	ble        +0x7 <___libcsrmesh_276+0xD7:0x5445D[p]>
   54457:	0116      	ld         al, @(+0x1, x)
   54458:	0012      	ld         ah, @(0x0, x)
   54459:	0134      	add        al, #+0x1
   5445A:	0040      	addc       ah, #+0x0
   5445B:	0126      	st         al, @(+0x1, x)
   5445C:	0022      	st         ah, @(0x0, x)
   5445D:	0014      	ld         al, #+0x0
   5445E:	0027      	st         al, @(0x0, y)
   5445F:	6600      	**prefx    0x66
   54460:	7414      	ld         al, #+0x6674
   54461:	0913      	ld         ah, @(+0x9, y)
   54462:	FF00      	**prefx    0xFF
   54463:	FB9C      	bsr        -0x105 <___libcsrmesh_268:0x5435E[p]>
   54464:	E419      	ld         x, @0xFFE4 <register uy>
   54465:	0738      	add        x, #+0x7
   54466:	002B      	st         x, @(0x0, y)
   54467:	0A13      	ld         ah, @(+0xA, y)
   54468:	0123      	st         ah, @(+0x1, y)
   54469:	1417      	ld         al, @(+0x14, y)
   5446A:	0227      	st         al, @(+0x2, y)
   5446B:	FF38      	add        x, #-0x1
   5446C:	032B      	st         x, @(+0x3, y)
   5446D:	6600      	**prefx    0x66
   5446E:	7414      	ld         al, #+0x6674
   5446F:	0913      	ld         ah, @(+0x9, y)
   54470:	0C00      	**prefx    0xC
   54471:	BD9C      	bsr        +0xBBD <___libcsrmesh_239:0x5502E[p]>
   54472:	0110      	ld         ah, #+0x1
   54473:	0B23      	st         ah, @(+0xB, y)
   54474:	0214      	ld         al, #+0x2
   54475:	42E0      	bra        +0x42 <___libcsrmesh_276+0x131:0x544B7[p]>
   54476:	6600      	**prefx    0x66
   54477:	7215      	ld         al, @0x6672 <L0+0x1E>
   54478:	01C4      	and        al, #0x1
   54479:	0AF4      	beq        +0xA <___libcsrmesh_276+0xFD:0x54483[p]>
   5447A:	1413      	ld         ah, @(+0x14, y)
   5447B:	0C82      	cmp        ah, @(+0xC, x)
   5447C:	0728      	ble        +0x7 <___libcsrmesh_276+0xFD:0x54483[p]>
   5447D:	0916      	ld         al, @(+0x9, x)
   5447E:	0812      	ld         ah, @(+0x8, x)
   5447F:	0134      	add        al, #+0x1
   54480:	0040      	addc       ah, #+0x0
   54481:	0926      	st         al, @(+0x9, x)
   54482:	0822      	st         ah, @(+0x8, x)
   54483:	6600      	**prefx    0x66
   54484:	7115      	ld         al, @0x6671 <L0+0x1D>
   54485:	F925      	st         al, @0xFFF9 <(scratchpad)>
   54486:	6600      	**prefx    0x66
   54487:	7019      	ld         x, @0x6670 <L0+0x1C>
   54488:	F829      	st         x, @0xFFF8 <(scratchpad)>
   54489:	E315      	ld         al, @0xFFE3 <register uxl>
   5448A:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   5448B:	1CF4      	beq        +0x1C <___libcsrmesh_276+0x121:0x544A7[p]>
   5448C:	0018      	ld         x, #+0x0
   5448D:	07E0      	bra        +0x7 <___libcsrmesh_276+0x10E:0x54494[p]>
   5448E:	6600      	**prefx    0x66
   5448F:	7316      	ld         al, @(+0x6673, x)
   54490:	A100      	**prefx    0xA1
   54491:	56D6      	xor        al, @(-0x5EAA, x)
   54492:	6600      	**prefx    0x66
   54493:	7326      	st         al, @(+0x6673, x)
   54494:	0138      	add        x, #+0x1
   54495:	0F17      	ld         al, @(+0xF, y)
   54496:	F834      	add        al, #-0x8
   54497:	E189      	cmp        x, @0xFFE1 <register al>
   54498:	F6F0      	bne        -0xA <___libcsrmesh_276+0x108:0x5448E[p]>
   54499:	0A1B      	ld         x, @(+0xA, y)
   5449A:	002B      	st         x, @(0x0, y)
   5449B:	1413      	ld         ah, @(+0x14, y)
   5449C:	0123      	st         ah, @(+0x1, y)
   5449D:	6600      	**prefx    0x66
   5449E:	7414      	ld         al, #+0x6674
   5449F:	0813      	ld         ah, @(+0x8, y)
   544A0:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   544A1:	FE2B      	st         x, @(-0x2, y)
   544A2:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   544A3:	FF2B      	st         x, @(-0x1, y)
   544A4:	FF0E      	ld         xh, @(-0x1, y)
   544A5:	FE9F      	bsr        @(-0x2, y)
   544A6:	0727      	st         al, @(+0x7, y)
   544A7:	0110      	ld         ah, #+0x1
   544A8:	0B23      	st         ah, @(+0xB, y)
   544A9:	FF23      	st         ah, @(-0x1, y)
   544AA:	12E0      	bra        +0x12 <___libcsrmesh_276+0x136:0x544BC[p]>
   544AB:	6600      	**prefx    0x66
   544AC:	7215      	ld         al, @0x6672 <L0+0x1E>
   544AD:	01C4      	and        al, #0x1
   544AE:	0BF4      	beq        +0xB <___libcsrmesh_276+0x133:0x544B9[p]>
   544AF:	0716      	ld         al, @(+0x7, x)
   544B0:	0612      	ld         ah, @(+0x6, x)
   544B1:	0134      	add        al, #+0x1
   544B2:	0040      	addc       ah, #+0x0
   544B3:	0726      	st         al, @(+0x7, x)
   544B4:	0622      	st         ah, @(+0x6, x)
   544B5:	0014      	ld         al, #+0x0
   544B6:	0B27      	st         al, @(+0xB, y)
   544B7:	FF27      	st         al, @(-0x1, y)
   544B8:	04E0      	bra        +0x4 <___libcsrmesh_276+0x136:0x544BC[p]>
   544B9:	0018      	ld         x, #+0x0
   544BA:	0B2B      	st         x, @(+0xB, y)
   544BB:	FF2B      	st         x, @(-0x1, y)
   544BC:	0A9B      	tst        @(+0xA, y)
   544BD:	57F4      	beq        +0x57 <___libcsrmesh_276+0x18E:0x54514[p]>
   544BE:	6600      	**prefx    0x66
   544BF:	6F11      	ld         ah, @0x666F <L0+0x1B>
   544C0:	FE23      	st         ah, @(-0x2, y)
   544C1:	53F4      	beq        +0x53 <___libcsrmesh_276+0x18E:0x54514[p]>
   544C2:	6600      	**prefx    0x66
   544C3:	6E15      	ld         al, @0x666E <L0+0x1A>
   544C4:	FA25      	st         al, @0xFFFA <(scratchpad)>
   544C5:	0590      	smult      #+0x5
   544C6:	6500      	**prefx    0x65
   544C7:	0634      	add        al, #+0x6506
   544C8:	F925      	st         al, @0xFFF9 <(scratchpad)>
   544C9:	0100      	**prefx    0x1
   544CA:	C834      	add        al, #+0xC8
   544CB:	FB25      	st         al, @0xFFFB <(scratchpad)>
   544CC:	0C1B      	ld         x, @(+0xC, y)
   544CD:	6600      	**prefx    0x66
   544CE:	771A      	ld         x, @(+0x6677, x)
   544CF:	112B      	st         x, @(+0x11, y)
   544D0:	0C1B      	ld         x, @(+0xC, y)
   544D1:	6600      	**prefx    0x66
   544D2:	7416      	ld         al, @(+0x6674, x)
   544D3:	0010      	ld         ah, #+0x0
   544D4:	18A0      	asl        #0x18
   544D5:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   544D6:	E111      	ld         ah, @0xFFE1 <register al>
   544D7:	1117      	ld         al, @(+0x11, y)
   544D8:	E0B5      	or         al, @0xFFE0 <register ah>
   544D9:	1027      	st         al, @(+0x10, y)
   544DA:	6600      	**prefx    0x66
   544DB:	7516      	ld         al, @(+0x6675, x)
   544DC:	0010      	ld         ah, #+0x0
   544DD:	10A0      	asl        #0x10
   544DE:	10B7      	or         al, @(+0x10, y)
   544DF:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   544E0:	1027      	st         al, @(+0x10, y)
   544E1:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   544E2:	6600      	**prefx    0x66
   544E3:	7616      	ld         al, @(+0x6676, x)
   544E4:	0010      	ld         ah, #+0x0
   544E5:	08A0      	asl        #0x8
   544E6:	10B7      	or         al, @(+0x10, y)
   544E7:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   544E8:	0126      	st         al, @(+0x1, x)
   544E9:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   544EA:	0022      	st         ah, @(0x0, x)
   544EB:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   544EC:	0100      	**prefx    0x1
   544ED:	CA30      	add        ah, #+0xCA
   544EE:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   544EF:	0C1B      	ld         x, @(+0xC, y)
   544F0:	6600      	**prefx    0x66
   544F1:	7816      	ld         al, @(+0x6678, x)
   544F2:	0010      	ld         ah, #+0x0
   544F3:	18A0      	asl        #0x18
   544F4:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   544F5:	1027      	st         al, @(+0x10, y)
   544F6:	6600      	**prefx    0x66
   544F7:	7916      	ld         al, @(+0x6679, x)
   544F8:	0010      	ld         ah, #+0x0
   544F9:	10A0      	asl        #0x10
   544FA:	10B7      	or         al, @(+0x10, y)
   544FB:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   544FC:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   544FD:	6600      	**prefx    0x66
   544FE:	7BB6      	or         al, @(+0x667B, x)
   544FF:	1027      	st         al, @(+0x10, y)
   54500:	6600      	**prefx    0x66
   54501:	7A16      	ld         al, @(+0x667A, x)
   54502:	0010      	ld         ah, #+0x0
   54503:	08A0      	asl        #0x8
   54504:	10B7      	or         al, @(+0x10, y)
   54505:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   54506:	0126      	st         al, @(+0x1, x)
   54507:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   54508:	0022      	st         ah, @(0x0, x)
   54509:	FF13      	ld         ah, @(-0x1, y)
   5450A:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5450B:	0100      	**prefx    0x1
   5450C:	CC22      	st         ah, @(+0xCC, x)
   5450D:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   5450E:	0134      	add        al, #+0x1
   5450F:	0010      	ld         ah, #+0x0
   54510:	0009      	**unsigned
   54511:	FE97      	udiv       @(-0x2, y)
   54512:	6600      	**prefx    0x66
   54513:	6E21      	st         ah, @0x666E <L0+0x1A>
   54514:	0B9B      	tst        @(+0xB, y)
   54515:	24F4      	beq        +0x24 <___libcsrmesh_276+0x1B3:0x54539[p]>
   54516:	FF1B      	ld         x, @(-0x1, y)
   54517:	0288      	cmp        x, #+0x2
   54518:	05F0      	bne        +0x5 <___libcsrmesh_276+0x197:0x5451D[p]>
   54519:	6C00      	**prefx    0x6C
   5451A:	BC99      	tst        @0x6BBC <g_mesh_context_data+0x1F>
   5451B:	08F0      	bne        +0x8 <___libcsrmesh_276+0x19D:0x54523[p]>
   5451C:	56E0      	bra        +0x56 <___libcsrmesh_276+0x1EC:0x54572[p]>
   5451D:	FF13      	ld         ah, @(-0x1, y)
   5451E:	0180      	cmp        ah, #+0x1
   5451F:	53F0      	bne        +0x53 <___libcsrmesh_276+0x1EC:0x54572[p]>
   54520:	6C00      	**prefx    0x6C
   54521:	B699      	tst        @0x6BB6 <g_mesh_context_data+0x19>
   54522:	50F4      	beq        +0x50 <___libcsrmesh_276+0x1EC:0x54572[p]>
   54523:	079B      	tst        @(+0x7, y)
   54524:	4EF0      	bne        +0x4E <___libcsrmesh_276+0x1EC:0x54572[p]>
   54525:	0A17      	ld         al, @(+0xA, y)
   54526:	0184      	cmp        al, #+0x1
   54527:	4B2C      	bcz        +0x4B <___libcsrmesh_276+0x1EC:0x54572[p]>
   54528:	069B      	tst        @(+0x6, y)
   54529:	49F4      	beq        +0x49 <___libcsrmesh_276+0x1EC:0x54572[p]>
   5452A:	FF34      	add        al, #-0x1
   5452B:	0100      	**prefx    0x1
   5452C:	FFC4      	and        al, #0xFF
   5452D:	0D1B      	ld         x, @(+0xD, y)
   5452E:	0026      	st         al, @(0x0, x)
   5452F:	0F13      	ld         ah, @(+0xF, y)
   54530:	0023      	st         ah, @(0x0, y)
   54531:	0114      	ld         al, #+0x1
   54532:	0127      	st         al, @(+0x1, y)
   54533:	0014      	ld         al, #+0x0
   54534:	0E13      	ld         ah, @(+0xE, y)
   54535:	1100      	**prefx    0x11
   54536:	F79C      	bsr        +0x10F7 <___libcsrmesh_334:0x5562D[p]>
   54537:	0118      	ld         x, #+0x1
   54538:	38E0      	bra        +0x38 <___libcsrmesh_276+0x1EA:0x54570[p]>
   54539:	0A13      	ld         ah, @(+0xA, y)
   5453A:	0180      	cmp        ah, #+0x1
   5453B:	392C      	bcz        +0x39 <___libcsrmesh_276+0x1EE:0x54574[p]>
   5453C:	FF30      	add        ah, #-0x1
   5453D:	0100      	**prefx    0x1
   5453E:	FFC0      	and        ah, #0xFF
   5453F:	0D1B      	ld         x, @(+0xD, y)
   54540:	0022      	st         ah, @(0x0, x)
   54541:	0F13      	ld         ah, @(+0xF, y)
   54542:	0023      	st         ah, @(0x0, y)
   54543:	0214      	ld         al, #+0x2
   54544:	0127      	st         al, @(+0x1, y)
   54545:	0014      	ld         al, #+0x0
   54546:	0E13      	ld         ah, @(+0xE, y)
   54547:	1100      	**prefx    0x11
   54548:	E59C      	bsr        +0x10E5 <___libcsrmesh_334:0x5562D[p]>
   54549:	2BE0      	bra        +0x2B <___libcsrmesh_276+0x1EE:0x54574[p]>
   5454A:	6600      	**prefx    0x66
   5454B:	7215      	ld         al, @0x6672 <L0+0x1E>
   5454C:	01C4      	and        al, #0x1
   5454D:	22F4      	beq        +0x22 <___libcsrmesh_276+0x1E9:0x5456F[p]>
   5454E:	1417      	ld         al, @(+0x14, y)
   5454F:	0C86      	cmp        al, @(+0xC, x)
   54550:	1F28      	ble        +0x1F <___libcsrmesh_276+0x1E9:0x5456F[p]>
   54551:	0180      	cmp        ah, #+0x1
   54552:	08F0      	bne        +0x8 <___libcsrmesh_276+0x1D4:0x5455A[p]>
   54553:	0B16      	ld         al, @(+0xB, x)
   54554:	0A12      	ld         ah, @(+0xA, x)
   54555:	0134      	add        al, #+0x1
   54556:	0040      	addc       ah, #+0x0
   54557:	0B26      	st         al, @(+0xB, x)
   54558:	0A22      	st         ah, @(+0xA, x)
   54559:	16E0      	bra        +0x16 <___libcsrmesh_276+0x1E9:0x5456F[p]>
   5455A:	0280      	cmp        ah, #+0x2
   5455B:	09F0      	bne        +0x9 <___libcsrmesh_276+0x1DE:0x54564[p]>
   5455C:	0316      	ld         al, @(+0x3, x)
   5455D:	0212      	ld         ah, @(+0x2, x)
   5455E:	0134      	add        al, #+0x1
   5455F:	0040      	addc       ah, #+0x0
   54560:	0326      	st         al, @(+0x3, x)
   54561:	0222      	st         ah, @(+0x2, x)
   54562:	0010      	ld         ah, #+0x0
   54563:	10E0      	bra        +0x10 <___libcsrmesh_276+0x1ED:0x54573[p]>
   54564:	E099      	tst        @0xFFE0 <register ah>
   54565:	0AF0      	bne        +0xA <___libcsrmesh_276+0x1E9:0x5456F[p]>
   54566:	0516      	ld         al, @(+0x5, x)
   54567:	0412      	ld         ah, @(+0x4, x)
   54568:	0134      	add        al, #+0x1
   54569:	0040      	addc       ah, #+0x0
   5456A:	0526      	st         al, @(+0x5, x)
   5456B:	0422      	st         ah, @(+0x4, x)
   5456C:	0014      	ld         al, #+0x0
   5456D:	0B27      	st         al, @(+0xB, y)
   5456E:	06E0      	bra        +0x6 <___libcsrmesh_276+0x1EE:0x54574[p]>
   5456F:	0018      	ld         x, #+0x0
   54570:	0B2B      	st         x, @(+0xB, y)
   54571:	03E0      	bra        +0x3 <___libcsrmesh_276+0x1EE:0x54574[p]>
   54572:	0110      	ld         ah, #+0x1
   54573:	0B23      	st         ah, @(+0xB, y)
   54574:	6600      	**prefx    0x66
   54575:	7319      	ld         x, @0x6673 <L0+0x1F>
   54576:	22F4      	beq        +0x22 <___libcsrmesh_276+0x212:0x54598[p]>
   54577:	6600      	**prefx    0x66
   54578:	7215      	ld         al, @0x6672 <L0+0x1E>
   54579:	02C4      	and        al, #0x2
   5457A:	1EF4      	beq        +0x1E <___libcsrmesh_276+0x212:0x54598[p]>
   5457B:	0D1A      	ld         x, @(+0xD, x)
   5457C:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5457D:	1BF4      	beq        +0x1B <___libcsrmesh_276+0x212:0x54598[p]>
   5457E:	2816      	ld         al, @(+0x28, x)
   5457F:	F925      	st         al, @0xFFF9 <(scratchpad)>
   54580:	0014      	ld         al, #+0x0
   54581:	12E0      	bra        +0x12 <___libcsrmesh_276+0x20D:0x54593[p]>
   54582:	1413      	ld         ah, @(+0x14, y)
   54583:	0082      	cmp        ah, @(0x0, x)
   54584:	0D28      	ble        +0xD <___libcsrmesh_276+0x20B:0x54591[p]>
   54585:	0182      	cmp        ah, @(+0x1, x)
   54586:	0B24      	bge        +0xB <___libcsrmesh_276+0x20B:0x54591[p]>
   54587:	02A0      	asl        #0x2
   54588:	E119      	ld         x, @0xFFE1 <register al>
   54589:	F839      	add        x, @0xFFF8 <(scratchpad)>
   5458A:	0316      	ld         al, @(+0x3, x)
   5458B:	0212      	ld         ah, @(+0x2, x)
   5458C:	0134      	add        al, #+0x1
   5458D:	0040      	addc       ah, #+0x0
   5458E:	0326      	st         al, @(+0x3, x)
   5458F:	0222      	st         ah, @(+0x2, x)
   54590:	08E0      	bra        +0x8 <___libcsrmesh_276+0x212:0x54598[p]>
   54591:	0134      	add        al, #+0x1
   54592:	0438      	add        x, #+0x4
   54593:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   54594:	EEFC      	bcs        -0x12 <___libcsrmesh_276+0x1FC:0x54582[p]>
   54595:	03E0      	bra        +0x3 <___libcsrmesh_276+0x212:0x54598[p]>
   54596:	0014      	ld         al, #+0x0
   54597:	0B27      	st         al, @(+0xB, y)
   54598:	0B17      	ld         al, @(+0xB, y)
   54599:	EC0F      	leave      #-0x14
   5459A:	0F17      	ld         al, @(+0xF, y)
   5459B:	6600      	**prefx    0x66
   5459C:	7410      	ld         ah, #+0x6674
   5459D:	0E1B      	ld         x, @(+0xE, y)
   5459E:	FD09      	bc2        
   5459F:	6C00      	**prefx    0x6C
   545A0:	9D99      	tst        @0x6B9D <g_mesh_context_data>
   545A1:	FE00      	**prefx    0xFE
   545A2:	60F0      	bne        -0x1A0 <___libcsrmesh_276+0x7C:0x54402[p]>
   545A3:	FF00      	**prefx    0xFF
   545A4:	82E0      	bra        -0x17E <___libcsrmesh_276+0xA0:0x54426[p]>
   545A5:	6600      	**prefx    0x66
   545A6:	7319      	ld         x, @0x6673 <L0+0x1F>
   545A7:	FF00      	**prefx    0xFF
   545A8:	03F0      	bne        -0xFD <___libcsrmesh_276+0x125:0x544AB[p]>
   545A9:	FF00      	**prefx    0xFF
   545AA:	0FE0      	bra        -0xF1 <___libcsrmesh_276+0x133:0x544B9[p]>
   545AB:	6600      	**prefx    0x66
   545AC:	7319      	ld         x, @0x6673 <L0+0x1F>
   545AD:	FF00      	**prefx    0xFF
   545AE:	C8F0      	bne        -0x138 <___libcsrmesh_276+0xF0:0x54476[p]>
   545AF:	FF00      	**prefx    0xFF
   545B0:	D3E0      	bra        -0x12D <___libcsrmesh_276+0xFD:0x54483[p]>

0x000545B1 <___libcsrmesh_279>:
   545B1:	F70B      	enter      #-0x9
   545B2:	0623      	st         ah, @(+0x6, y)
   545B3:	0184      	cmp        al, #+0x1
   545B4:	1AF0      	bne        +0x1A <___libcsrmesh_279+0x1D:0x545CE[p]>
   545B5:	0014      	ld         al, #+0x0
   545B6:	0027      	st         al, @(0x0, y)
   545B7:	6C00      	**prefx    0x6C
   545B8:	1414      	ld         al, #+0x6C14
   545B9:	FE00      	**prefx    0xFE
   545BA:	A49C      	bsr        -0x25C <___libcsrmesh_268:0x5435E[p]>
   545BB:	6C00      	**prefx    0x6C
   545BC:	D118      	ld         x, #+0x6BD1
   545BD:	002B      	st         x, @(0x0, y)
   545BE:	0814      	ld         al, #+0x8
   545BF:	0127      	st         al, @(+0x1, y)
   545C0:	6C00      	**prefx    0x6C
   545C1:	1418      	ld         x, #+0x6C14
   545C2:	022B      	st         x, @(+0x2, y)
   545C3:	0617      	ld         al, @(+0x6, y)
   545C4:	0327      	st         al, @(+0x3, y)
   545C5:	E335      	add        al, @0xFFE3 <register uxl>
   545C6:	0427      	st         al, @(+0x4, y)
   545C7:	0818      	ld         x, #+0x8
   545C8:	052B      	st         x, @(+0x5, y)
   545C9:	6500      	**prefx    0x65
   545CA:	6A14      	ld         al, #+0x656A
   545CB:	6600      	**prefx    0x66
   545CC:	9C10      	ld         ah, #+0x659C
   545CD:	26E0      	bra        +0x26 <___libcsrmesh_279+0x42:0x545F3[p]>
   545CE:	E199      	tst        @0xFFE1 <register al>
   545CF:	03F0      	bne        +0x3 <___libcsrmesh_279+0x21:0x545D2[p]>
   545D0:	0018      	ld         x, #+0x0
   545D1:	0BE0      	bra        +0xB <___libcsrmesh_279+0x2B:0x545DC[p]>
   545D2:	0284      	cmp        al, #+0x2
   545D3:	0EF4      	beq        +0xE <___libcsrmesh_279+0x30:0x545E1[p]>
   545D4:	FF14      	ld         al, #-0x1
   545D5:	34E0      	bra        +0x34 <___libcsrmesh_279+0x58:0x54609[p]>
   545D6:	6C00      	**prefx    0x6C
   545D7:	1316      	ld         al, @(+0x6C13, x)
   545D8:	A100      	**prefx    0xA1
   545D9:	56D6      	xor        al, @(-0x5EAA, x)
   545DA:	6C00      	**prefx    0x6C
   545DB:	1326      	st         al, @(+0x6C13, x)
   545DC:	0138      	add        x, #+0x1
   545DD:	0617      	ld         al, @(+0x6, y)
   545DE:	0134      	add        al, #+0x1
   545DF:	E189      	cmp        x, @0xFFE1 <register al>
   545E0:	F6F0      	bne        -0xA <___libcsrmesh_279+0x25:0x545D6[p]>
   545E1:	A100      	**prefx    0xA1
   545E2:	7618      	ld         x, #-0x5E8A
   545E3:	002B      	st         x, @(0x0, y)
   545E4:	0814      	ld         al, #+0x8
   545E5:	0127      	st         al, @(+0x1, y)
   545E6:	6C00      	**prefx    0x6C
   545E7:	1418      	ld         x, #+0x6C14
   545E8:	022B      	st         x, @(+0x2, y)
   545E9:	0617      	ld         al, @(+0x6, y)
   545EA:	0327      	st         al, @(+0x3, y)
   545EB:	E335      	add        al, @0xFFE3 <register uxl>
   545EC:	0427      	st         al, @(+0x4, y)
   545ED:	0818      	ld         x, #+0x8
   545EE:	052B      	st         x, @(+0x5, y)
   545EF:	6500      	**prefx    0x65
   545F0:	0614      	ld         al, #+0x6506
   545F1:	6500      	**prefx    0x65
   545F2:	3810      	ld         ah, #+0x6538
   545F3:	0E00      	**prefx    0xE
   545F4:	A59C      	bsr        +0xDA5 <___libcsrmesh_304:0x55399[p]>
   545F5:	0917      	ld         al, @(+0x9, y)
   545F6:	061B      	ld         x, @(+0x6, y)
   545F7:	6C00      	**prefx    0x6C
   545F8:	1C26      	st         al, @(+0x6C1C, x)
   545F9:	E311      	ld         ah, @0xFFE3 <register uxl>
   545FA:	0930      	add        ah, #+0x9
   545FB:	0A9B      	tst        @(+0xA, y)
   545FC:	06F4      	beq        +0x6 <___libcsrmesh_279+0x51:0x54602[p]>
   545FD:	0023      	st         ah, @(0x0, y)
   545FE:	0318      	ld         x, #+0x3
   545FF:	012B      	st         x, @(+0x1, y)
   54600:	0014      	ld         al, #+0x0
   54601:	04E0      	bra        +0x4 <___libcsrmesh_279+0x54:0x54605[p]>
   54602:	0023      	st         ah, @(0x0, y)
   54603:	0014      	ld         al, #+0x0
   54604:	0127      	st         al, @(+0x1, y)
   54605:	6C00      	**prefx    0x6C
   54606:	1410      	ld         ah, #+0x6C14
   54607:	1000      	**prefx    0x10
   54608:	259C      	bsr        +0x1025 <___libcsrmesh_334:0x5562D[p]>
   54609:	F70F      	leave      #-0x9

0x0005460A <___libcsrmesh_271>:
   5460A:	FC0B      	enter      #-0x4
   5460B:	E019      	ld         x, @0xFFE0 <register ah>
   5460C:	E199      	tst        @0xFFE1 <register al>
   5460D:	07F0      	bne        +0x7 <___libcsrmesh_271+0xA:0x54614[p]>
   5460E:	0326      	st         al, @(+0x3, x)
   5460F:	6C00      	**prefx    0x6C
   54610:	BC15      	ld         al, @0x6BBC <g_mesh_context_data+0x1F>
   54611:	0426      	st         al, @(+0x4, x)
   54612:	0014      	ld         al, #+0x0
   54613:	07E0      	bra        +0x7 <___libcsrmesh_271+0x10:0x5461A[p]>
   54614:	0014      	ld         al, #+0x0
   54615:	0426      	st         al, @(+0x4, x)
   54616:	0100      	**prefx    0x1
   54617:	FF14      	ld         al, #+0xFF
   54618:	0326      	st         al, @(+0x3, x)
   54619:	0614      	ld         al, #+0x6
   5461A:	0127      	st         al, @(+0x1, y)
   5461B:	6C00      	**prefx    0x6C
   5461C:	B615      	ld         al, @0x6BB6 <g_mesh_context_data+0x19>
   5461D:	0526      	st         al, @(+0x5, x)
   5461E:	E315      	ld         al, @0xFFE3 <register uxl>
   5461F:	0234      	add        al, #+0x2
   54620:	0027      	st         al, @(0x0, y)
   54621:	E315      	ld         al, @0xFFE3 <register uxl>
   54622:	0138      	add        x, #+0x1
   54623:	E311      	ld         ah, @0xFFE3 <register uxl>
   54624:	1000      	**prefx    0x10
   54625:	AA9C      	bsr        +0xFAA <___libcsrmesh_331:0x555CF[p]>
   54626:	0117      	ld         al, @(+0x1, y)
   54627:	FC0F      	leave      #-0x4

0x00054628 <___libcsrmesh_284>:
   54628:	FB0B      	enter      #-0x5
   54629:	0227      	st         al, @(+0x2, y)
   5462A:	E119      	ld         x, @0xFFE1 <register al>
   5462B:	0512      	ld         ah, @(+0x5, x)
   5462C:	6C00      	**prefx    0x6C
   5462D:	B615      	ld         al, @0x6BB6 <g_mesh_context_data+0x19>
   5462E:	E085      	cmp        al, @0xFFE0 <register ah>
   5462F:	0AF4      	beq        +0xA <___libcsrmesh_284+0x11:0x54639[p]>
   54630:	6C00      	**prefx    0x6C
   54631:	B621      	st         ah, @0x6BB6 <g_mesh_context_data+0x19>
   54632:	0114      	ld         al, #+0x1
   54633:	0027      	st         al, @(0x0, y)
   54634:	0514      	ld         al, #+0x5
   54635:	6C00      	**prefx    0x6C
   54636:	B610      	ld         ah, #+0x6BB6
   54637:	D200      	**prefx    0xD2
   54638:	CC9C      	bsr        -0x2E34 <CSRmeshPsWrite:0x51804[p]>
   54639:	021B      	ld         x, @(+0x2, y)
   5463A:	039A      	tst        @(+0x3, x)
   5463B:	15F0      	bne        +0x15 <___libcsrmesh_284+0x28:0x54650[p]>
   5463C:	0412      	ld         ah, @(+0x4, x)
   5463D:	6C00      	**prefx    0x6C
   5463E:	BC15      	ld         al, @0x6BBC <g_mesh_context_data+0x1F>
   5463F:	E085      	cmp        al, @0xFFE0 <register ah>
   54640:	10F4      	beq        +0x10 <___libcsrmesh_284+0x28:0x54650[p]>
   54641:	6C00      	**prefx    0x6C
   54642:	BC21      	st         ah, @0x6BBC <g_mesh_context_data+0x1F>
   54643:	6C00      	**prefx    0x6C
   54644:	9D99      	tst        @0x6B9D <g_mesh_context_data>
   54645:	08F4      	beq        +0x8 <___libcsrmesh_284+0x25:0x5464D[p]>
   54646:	0118      	ld         x, #+0x1
   54647:	002B      	st         x, @(0x0, y)
   54648:	0A14      	ld         al, #+0xA
   54649:	6C00      	**prefx    0x6C
   5464A:	BC10      	ld         ah, #+0x6BBC
   5464B:	D200      	**prefx    0xD2
   5464C:	B89C      	bsr        -0x2E48 <CSRmeshPsWrite:0x51804[p]>
   5464D:	0014      	ld         al, #+0x0
   5464E:	0127      	st         al, @(+0x1, y)
   5464F:	03E0      	bra        +0x3 <___libcsrmesh_284+0x2A:0x54652[p]>
   54650:	0618      	ld         x, #+0x6
   54651:	012B      	st         x, @(+0x1, y)
   54652:	021B      	ld         x, @(+0x2, y)
   54653:	0112      	ld         ah, @(+0x1, x)
   54654:	0216      	ld         al, @(+0x2, x)
   54655:	0027      	st         al, @(0x0, y)
   54656:	0016      	ld         al, @(0x0, x)
   54657:	0F00      	**prefx    0xF
   54658:	509C      	bsr        +0xF50 <___libcsrmesh_335:0x555A8[p]>
   54659:	0117      	ld         al, @(+0x1, y)
   5465A:	FB0F      	leave      #-0x5

0x0005465B <___libcsrmesh_118>:
   5465B:	6700      	**prefx    0x67
   5465C:	A314      	ld         al, #+0x66A3
   5465D:	00E2      	bra        0x0, x

0x0005465E <___libcsrmesh_119>:
   5465E:	00E2      	bra        0x0, x

0x0005465F <___libcsrmesh_117>:
   5465F:	FE0B      	enter      #-0x2
   54660:	6800      	**prefx    0x68
   54661:	A711      	ld         ah, @0x67A7 <___libgatt_lib_db_704+0x4>
   54662:	E019      	ld         x, @0xFFE0 <register ah>
   54663:	E159      	sub        x, @0xFFE1 <register al>
   54664:	E089      	cmp        x, @0xFFE0 <register ah>
   54665:	03F8      	bcc        +0x3 <___libcsrmesh_117+0x9:0x54668[p]>
   54666:	6800      	**prefx    0x68
   54667:	A729      	st         x, @0x67A7 <___libgatt_lib_db_704+0x4>
   54668:	FE0F      	leave      #-0x2

0x00054669 <___libcsrmesh_116>:
   54669:	FC0B      	enter      #-0x4
   5466A:	E119      	ld         x, @0xFFE1 <register al>
   5466B:	6800      	**prefx    0x68
   5466C:	A715      	ld         al, @0x67A7 <___libgatt_lib_db_704+0x4>
   5466D:	E311      	ld         ah, @0xFFE3 <register uxl>
   5466E:	E131      	add        ah, @0xFFE1 <register al>
   5466F:	0100      	**prefx    0x1
   54670:	0480      	cmp        ah, #+0x104
   54671:	0DF8      	bcc        +0xD <___libcsrmesh_116+0x15:0x5467E[p]>
   54672:	6700      	**prefx    0x67
   54673:	A334      	add        al, #+0x66A3
   54674:	0127      	st         al, @(+0x1, y)
   54675:	6800      	**prefx    0x68
   54676:	A721      	st         ah, @0x67A7 <___libgatt_lib_db_704+0x4>
   54677:	002B      	st         x, @(0x0, y)
   54678:	0010      	ld         ah, #+0x0
   54679:	FB00      	**prefx    0xFB
   5467A:	E500      	**prefx    0xE5
   5467B:	D59C      	bsr        -0x51B2B <MemSet:0x2B50[p]>
   5467C:	019B      	tst        @(+0x1, y)
   5467D:	09F0      	bne        +0x9 <___libcsrmesh_116+0x1D:0x54686[p]>
   5467E:	DF00      	**prefx    0xDF
   5467F:	AD14      	ld         al, #-0x2153
   54680:	A200      	**prefx    0xA2
   54681:	8E10      	ld         ah, #-0x5E72
   54682:	1700      	**prefx    0x17
   54683:	309C      	bsr        +0x1730 <___libcsrmesh_364:0x55DB3[p]>
   54684:	0014      	ld         al, #+0x0
   54685:	0127      	st         al, @(+0x1, y)
   54686:	0117      	ld         al, @(+0x1, y)
   54687:	FC0F      	leave      #-0x4

0x00054688 <___libcsrmesh_203>:
   54688:	FE0B      	enter      #-0x2
   54689:	6800      	**prefx    0x68
   5468A:	F299      	tst        @0x67F2 <___libgatt_lib_db_703+0x19>
   5468B:	0EF4      	beq        +0xE <___libcsrmesh_203+0x11:0x54699[p]>
   5468C:	2814      	ld         al, #+0x28
   5468D:	D29C      	bsr        -0x2E <___libcsrmesh_117:0x5465F[p]>
   5468E:	0014      	ld         al, #+0x0
   5468F:	6800      	**prefx    0x68
   54690:	F425      	st         al, @0x67F4 <___libgatt_lib_db_703+0x1B>
   54691:	6800      	**prefx    0x68
   54692:	F225      	st         al, @0x67F2 <___libgatt_lib_db_703+0x19>
   54693:	6800      	**prefx    0x68
   54694:	F325      	st         al, @0x67F3 <___libgatt_lib_db_703+0x1A>
   54695:	6800      	**prefx    0x68
   54696:	F525      	st         al, @0x67F5 <___libgatt_lib_db_703+0x1C>
   54697:	6800      	**prefx    0x68
   54698:	F625      	st         al, @0x67F6 <___libgatt_lib_db_703+0x1D>
   54699:	FE0F      	leave      #-0x2

0x0005469A <___libcsrmesh_202>:
   5469A:	FE0B      	enter      #-0x2
   5469B:	6800      	**prefx    0x68
   5469C:	DB99      	tst        @0x67DB <___libgatt_lib_db_703+0x2>
   5469D:	08F4      	beq        +0x8 <___libcsrmesh_202+0xB:0x546A5[p]>
   5469E:	1A14      	ld         al, #+0x1A
   5469F:	C09C      	bsr        -0x40 <___libcsrmesh_117:0x5465F[p]>
   546A0:	0014      	ld         al, #+0x0
   546A1:	6800      	**prefx    0x68
   546A2:	DB25      	st         al, @0x67DB <___libgatt_lib_db_703+0x2>
   546A3:	6800      	**prefx    0x68
   546A4:	DC25      	st         al, @0x67DC <___libgatt_lib_db_703+0x3>
   546A5:	FE0F      	leave      #-0x2

0x000546A6 <___libcsrmesh_201>:
   546A6:	FE0B      	enter      #-0x2
   546A7:	6800      	**prefx    0x68
   546A8:	F799      	tst        @0x67F7 <___libgatt_lib_db_703+0x1E>
   546A9:	06F4      	beq        +0x6 <___libcsrmesh_201+0x9:0x546AF[p]>
   546AA:	0A14      	ld         al, #+0xA
   546AB:	B49C      	bsr        -0x4C <___libcsrmesh_117:0x5465F[p]>
   546AC:	0014      	ld         al, #+0x0
   546AD:	6800      	**prefx    0x68
   546AE:	F725      	st         al, @0x67F7 <___libgatt_lib_db_703+0x1E>
   546AF:	FE0F      	leave      #-0x2

0x000546B0 <___libcsrmesh_198>:
   546B0:	FD0B      	enter      #-0x3
   546B1:	6800      	**prefx    0x68
   546B2:	C710      	ld         ah, #+0x67C7
   546B3:	0023      	st         ah, @(0x0, y)
   546B4:	E019      	ld         x, @0xFFE0 <register ah>
   546B5:	0016      	ld         al, @(0x0, x)
   546B6:	A89C      	bsr        -0x58 <___libcsrmesh_119:0x5465E[p]>
   546B7:	2714      	ld         al, #+0x27
   546B8:	B19C      	bsr        -0x4F <___libcsrmesh_116:0x54669[p]>
   546B9:	001B      	ld         x, @(0x0, y)
   546BA:	1126      	st         al, @(+0x11, x)
   546BB:	E111      	ld         ah, @0xFFE1 <register al>
   546BC:	0D30      	add        ah, #+0xD
   546BD:	1222      	st         ah, @(+0x12, x)
   546BE:	0D30      	add        ah, #+0xD
   546BF:	1322      	st         ah, @(+0x13, x)
   546C0:	1238      	add        x, #+0x12
   546C1:	E311      	ld         ah, @0xFFE3 <register uxl>
   546C2:	011B      	ld         x, @(+0x1, y)
   546C3:	020E      	ld         xh, @(+0x2, y)
   546C4:	033C      	add        y, #+0x3
   546C5:	1F00      	**prefx    0x1F
   546C6:	C3E0      	bra        +0x1EC3 <___libcsrmesh_128:0x56589[p]>

0x000546C7 <___libcsrmesh_195>:
   546C7:	FE0B      	enter      #-0x2
   546C8:	0A14      	ld         al, #+0xA
   546C9:	A09C      	bsr        -0x60 <___libcsrmesh_116:0x54669[p]>
   546CA:	6800      	**prefx    0x68
   546CB:	F725      	st         al, @0x67F7 <___libgatt_lib_db_703+0x1E>
   546CC:	FE0F      	leave      #-0x2

0x000546CD <___libcsrmesh_196>:
   546CD:	FE0B      	enter      #-0x2
   546CE:	1A14      	ld         al, #+0x1A
   546CF:	9A9C      	bsr        -0x66 <___libcsrmesh_116:0x54669[p]>
   546D0:	F825      	st         al, @0xFFF8 <(scratchpad)>
   546D1:	6800      	**prefx    0x68
   546D2:	DB14      	ld         al, #+0x67DB
   546D3:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   546D4:	E119      	ld         x, @0xFFE1 <register al>
   546D5:	0022      	st         ah, @(0x0, x)
   546D6:	0D30      	add        ah, #+0xD
   546D7:	0122      	st         ah, @(+0x1, x)
   546D8:	0C10      	ld         ah, #+0xC
   546D9:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   546DA:	0022      	st         ah, @(0x0, x)
   546DB:	6800      	**prefx    0x68
   546DC:	DC19      	ld         x, @0x67DC <___libgatt_lib_db_703+0x3>
   546DD:	0022      	st         ah, @(0x0, x)
   546DE:	FE0F      	leave      #-0x2

0x000546DF <___libcsrmesh_210>:
   546DF:	F60B      	enter      #-0xA
   546E0:	0627      	st         al, @(+0x6, y)
   546E1:	0723      	st         ah, @(+0x7, y)
   546E2:	0314      	ld         al, #+0x3
   546E3:	0027      	st         al, @(0x0, y)
   546E4:	E415      	ld         al, @0xFFE4 <register uy>
   546E5:	0334      	add        al, #+0x3
   546E6:	0100      	**prefx    0x1
   546E7:	FF10      	ld         ah, #+0xFF
   546E8:	FB00      	**prefx    0xFB
   546E9:	E400      	**prefx    0xE4
   546EA:	669C      	bsr        -0x51B9A <MemSet:0x2B50[p]>
   546EB:	0A9B      	tst        @(+0xA, y)
   546EC:	03F4      	beq        +0x3 <___libcsrmesh_210+0x10:0x546EF[p]>
   546ED:	0A17      	ld         al, @(+0xA, y)
   546EE:	0527      	st         al, @(+0x5, y)
   546EF:	6C00      	**prefx    0x6C
   546F0:	9115      	ld         al, @0x6B91 <g_mesh_data+0x4>
   546F1:	F925      	st         al, @0xFFF9 <(scratchpad)>
   546F2:	6C00      	**prefx    0x6C
   546F3:	9015      	ld         al, @0x6B90 <g_mesh_data+0x3>
   546F4:	F825      	st         al, @0xFFF8 <(scratchpad)>
   546F5:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   546F6:	10F4      	beq        +0x10 <___libcsrmesh_210+0x27:0x54706[p]>
   546F7:	0717      	ld         al, @(+0x7, y)
   546F8:	0427      	st         al, @(+0x4, y)
   546F9:	0617      	ld         al, @(+0x6, y)
   546FA:	0327      	st         al, @(+0x3, y)
   546FB:	0314      	ld         al, #+0x3
   546FC:	E411      	ld         ah, @0xFFE4 <register uy>
   546FD:	E419      	ld         x, @0xFFE4 <register uy>
   546FE:	0338      	add        x, #+0x3
   546FF:	FD09      	bc2        
   54700:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   54701:	FE27      	st         al, @(-0x2, y)
   54702:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   54703:	FF27      	st         al, @(-0x1, y)
   54704:	FF0E      	ld         xh, @(-0x1, y)
   54705:	FE9F      	bsr        @(-0x2, y)
   54706:	F60F      	leave      #-0xA

0x00054707 <___libcsrmesh_209>:
   54707:	FC0B      	enter      #-0x4
   54708:	0127      	st         al, @(+0x1, y)
   54709:	0284      	cmp        al, #+0x2
   5470A:	04F4      	beq        +0x4 <___libcsrmesh_209+0x7:0x5470E[p]>
   5470B:	0014      	ld         al, #+0x0
   5470C:	6800      	**prefx    0x68
   5470D:	F925      	st         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   5470E:	6C00      	**prefx    0x6C
   5470F:	8F15      	ld         al, @0x6B8F <g_mesh_data+0x2>
   54710:	0184      	cmp        al, #+0x1
   54711:	03F4      	beq        +0x3 <___libcsrmesh_209+0xD:0x54714[p]>
   54712:	0384      	cmp        al, #+0x3
   54713:	0AF0      	bne        +0xA <___libcsrmesh_209+0x16:0x5471D[p]>
   54714:	6800      	**prefx    0x68
   54715:	F899      	tst        @0x67F8 <___libgatt_lib_db_703+0x1F>
   54716:	07F4      	beq        +0x7 <___libcsrmesh_209+0x16:0x5471D[p]>
   54717:	1014      	ld         al, #+0x10
   54718:	FF00      	**prefx    0xFF
   54719:	469C      	bsr        -0xBA <___libcsrmesh_117:0x5465F[p]>
   5471A:	0014      	ld         al, #+0x0
   5471B:	6800      	**prefx    0x68
   5471C:	F825      	st         al, @0x67F8 <___libgatt_lib_db_703+0x1F>
   5471D:	FF00      	**prefx    0xFF
   5471E:	6A9C      	bsr        -0x96 <___libcsrmesh_203:0x54688[p]>
   5471F:	FF00      	**prefx    0xFF
   54720:	7A9C      	bsr        -0x86 <___libcsrmesh_202:0x5469A[p]>
   54721:	6C00      	**prefx    0x6C
   54722:	8F15      	ld         al, @0x6B8F <g_mesh_data+0x2>
   54723:	0184      	cmp        al, #+0x1
   54724:	03F4      	beq        +0x3 <___libcsrmesh_209+0x20:0x54727[p]>
   54725:	0384      	cmp        al, #+0x3
   54726:	03F0      	bne        +0x3 <___libcsrmesh_209+0x22:0x54729[p]>
   54727:	FF00      	**prefx    0xFF
   54728:	7E9C      	bsr        -0x82 <___libcsrmesh_201:0x546A6[p]>
   54729:	6800      	**prefx    0x68
   5472A:	D899      	tst        @0x67D8 <L0+0x2F>
   5472B:	0BF4      	beq        +0xB <___libcsrmesh_209+0x2F:0x54736[p]>
   5472C:	2714      	ld         al, #+0x27
   5472D:	FF00      	**prefx    0xFF
   5472E:	319C      	bsr        -0xCF <___libcsrmesh_117:0x5465F[p]>
   5472F:	0014      	ld         al, #+0x0
   54730:	6800      	**prefx    0x68
   54731:	D825      	st         al, @0x67D8 <L0+0x2F>
   54732:	6800      	**prefx    0x68
   54733:	D925      	st         al, @0x67D9 <___libgatt_lib_db_703>
   54734:	6800      	**prefx    0x68
   54735:	DA25      	st         al, @0x67DA <___libgatt_lib_db_703+0x1>
   54736:	1600      	**prefx    0x16
   54737:	3B9C      	bsr        +0x163B <CSRSchedDisableRadioEvent:0x55D72[p]>
   54738:	6800      	**prefx    0x68
   54739:	D899      	tst        @0x67D8 <L0+0x2F>
   5473A:	06F0      	bne        +0x6 <___libcsrmesh_209+0x39:0x54740[p]>
   5473B:	0117      	ld         al, @(+0x1, y)
   5473C:	0284      	cmp        al, #+0x2
   5473D:	03F4      	beq        +0x3 <___libcsrmesh_209+0x39:0x54740[p]>
   5473E:	FF00      	**prefx    0xFF
   5473F:	719C      	bsr        -0x8F <___libcsrmesh_198:0x546B0[p]>
   54740:	4E00      	**prefx    0x4E
   54741:	5E14      	ld         al, #+0x4E5E
   54742:	0510      	ld         ah, #+0x5
   54743:	FB00      	**prefx    0xFB
   54744:	269C      	bsr        -0x4DA <___libcsrmesh_281:0x5426A[p]>
   54745:	1600      	**prefx    0x16
   54746:	1A9C      	bsr        +0x161A <CSRSchedEnableRadioEvent:0x55D60[p]>
   54747:	019B      	tst        @(+0x1, y)
   54748:	1FF0      	bne        +0x1F <___libcsrmesh_209+0x60:0x54767[p]>
   54749:	0100      	**prefx    0x1
   5474A:	FF14      	ld         al, #+0xFF
   5474B:	6800      	**prefx    0x68
   5474C:	C625      	st         al, @0x67C6 <L0+0x1D>
   5474D:	6800      	**prefx    0x68
   5474E:	B014      	ld         al, #+0x67B0
   5474F:	1600      	**prefx    0x16
   54750:	339C      	bsr        +0x1633 <___libcsrmesh_363:0x55D83[p]>
   54751:	E199      	tst        @0xFFE1 <register al>
   54752:	15F4      	beq        +0x15 <___libcsrmesh_209+0x60:0x54767[p]>
   54753:	6800      	**prefx    0x68
   54754:	B014      	ld         al, #+0x67B0
   54755:	1600      	**prefx    0x16
   54756:	449C      	bsr        +0x1644 <___libcsrmesh_366:0x55D9A[p]>
   54757:	6C00      	**prefx    0x6C
   54758:	8F15      	ld         al, @0x6B8F <g_mesh_data+0x2>
   54759:	0184      	cmp        al, #+0x1
   5475A:	06F0      	bne        +0x6 <___libcsrmesh_209+0x59:0x54760[p]>
   5475B:	6800      	**prefx    0x68
   5475C:	C614      	ld         al, #+0x67C6
   5475D:	0027      	st         al, @(0x0, y)
   5475E:	0914      	ld         al, #+0x9
   5475F:	04E0      	bra        +0x4 <___libcsrmesh_209+0x5C:0x54763[p]>
   54760:	0014      	ld         al, #+0x0
   54761:	0027      	st         al, @(0x0, y)
   54762:	0A14      	ld         al, #+0xA
   54763:	0100      	**prefx    0x1
   54764:	FF10      	ld         ah, #+0xFF
   54765:	FF00      	**prefx    0xFF
   54766:	799C      	bsr        -0x87 <___libcsrmesh_210:0x546DF[p]>
   54767:	FC0F      	leave      #-0x4

0x00054768 <___libcsrmesh_208>:
   54768:	0114      	ld         al, #+0x1
   54769:	9EE0      	bra        -0x62 <___libcsrmesh_209:0x54707[p]>

0x0005476A <___libcsrmesh_455>:
   5476A:	FE0B      	enter      #-0x2
   5476B:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5476C:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   5476D:	6C00      	**prefx    0x6C
   5476E:	BB11      	ld         ah, @0x6BBB <g_mesh_context_data+0x1E>
   5476F:	6C00      	**prefx    0x6C
   54770:	1514      	ld         al, #+0x6C15
   54771:	F825      	st         al, @0xFFF8 <(scratchpad)>
   54772:	E015      	ld         al, @0xFFE0 <register ah>
   54773:	0100      	**prefx    0x1
   54774:	FFC4      	and        al, #0xFF
   54775:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54776:	0026      	st         al, @(0x0, x)
   54777:	0009      	**unsigned
   54778:	08A4      	lsr        #0x8
   54779:	0122      	st         ah, @(+0x1, x)
   5477A:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5477B:	0230      	add        ah, #+0x2
   5477C:	0214      	ld         al, #+0x2
   5477D:	6800      	**prefx    0x68
   5477E:	EE18      	ld         x, #+0x67EE
   5477F:	FD09      	bc2        
   54780:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   54781:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54782:	0426      	st         al, @(+0x4, x)
   54783:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   54784:	0526      	st         al, @(+0x5, x)
   54785:	0614      	ld         al, #+0x6
   54786:	FE0F      	leave      #-0x2

0x00054787 <___libcsrmesh_212>:
   54787:	FD0B      	enter      #-0x3
   54788:	E119      	ld         x, @0xFFE1 <register al>
   54789:	07F4      	beq        +0x7 <___libcsrmesh_212+0x9:0x54790[p]>
   5478A:	0814      	ld         al, #+0x8
   5478B:	6800      	**prefx    0x68
   5478C:	A810      	ld         ah, #+0x67A8
   5478D:	FD09      	bc2        
   5478E:	0114      	ld         al, #+0x1
   5478F:	0AE0      	bra        +0xA <___libcsrmesh_212+0x12:0x54799[p]>
   54790:	0814      	ld         al, #+0x8
   54791:	0027      	st         al, @(0x0, y)
   54792:	6800      	**prefx    0x68
   54793:	A814      	ld         al, #+0x67A8
   54794:	0010      	ld         ah, #+0x0
   54795:	FB00      	**prefx    0xFB
   54796:	E400      	**prefx    0xE4
   54797:	B99C      	bsr        -0x51C47 <MemSet:0x2B50[p]>
   54798:	0014      	ld         al, #+0x0
   54799:	6800      	**prefx    0x68
   5479A:	B125      	st         al, @0x67B1 <L0+0x8>
   5479B:	FD0F      	leave      #-0x3

0x0005479C <___libcsrmesh_204>:
   5479C:	FE0B      	enter      #-0x2
   5479D:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5479E:	E019      	ld         x, @0xFFE0 <register ah>
   5479F:	6C00      	**prefx    0x6C
   547A0:	9E38      	add        x, #+0x6B9E
   547A1:	0217      	ld         al, @(+0x2, y)
   547A2:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   547A3:	FD09      	bc2        
   547A4:	FE0F      	leave      #-0x2

0x000547A5 <___libcsrmesh_200>:
   547A5:	F30B      	enter      #-0xD
   547A6:	0A27      	st         al, @(+0xA, y)
   547A7:	4214      	ld         al, #+0x42
   547A8:	FF00      	**prefx    0xFF
   547A9:	C09C      	bsr        -0x140 <___libcsrmesh_116:0x54669[p]>
   547AA:	0627      	st         al, @(+0x6, y)
   547AB:	0A17      	ld         al, @(+0xA, y)
   547AC:	0184      	cmp        al, #+0x1
   547AD:	0BF0      	bne        +0xB <___libcsrmesh_200+0x13:0x547B8[p]>
   547AE:	6800      	**prefx    0x68
   547AF:	F219      	ld         x, @0x67F2 <___libgatt_lib_db_703+0x19>
   547B0:	082B      	st         x, @(+0x8, y)
   547B1:	6800      	**prefx    0x68
   547B2:	F415      	ld         al, @0x67F4 <___libgatt_lib_db_703+0x1B>
   547B3:	0727      	st         al, @(+0x7, y)
   547B4:	6800      	**prefx    0x68
   547B5:	D918      	ld         x, #+0x67D9
   547B6:	092B      	st         x, @(+0x9, y)
   547B7:	0AE0      	bra        +0xA <___libcsrmesh_200+0x1C:0x547C1[p]>
   547B8:	6800      	**prefx    0x68
   547B9:	F315      	ld         al, @0x67F3 <___libgatt_lib_db_703+0x1A>
   547BA:	0827      	st         al, @(+0x8, y)
   547BB:	6800      	**prefx    0x68
   547BC:	F619      	ld         x, @0x67F6 <___libgatt_lib_db_703+0x1D>
   547BD:	072B      	st         x, @(+0x7, y)
   547BE:	6800      	**prefx    0x68
   547BF:	DB14      	ld         al, #+0x67DB
   547C0:	0927      	st         al, @(+0x9, y)
   547C1:	6800      	**prefx    0x68
   547C2:	F719      	ld         x, @0x67F7 <___libgatt_lib_db_703+0x1E>
   547C3:	0A14      	ld         al, #+0xA
   547C4:	0613      	ld         ah, @(+0x6, y)
   547C5:	FD09      	bc2        
   547C6:	0617      	ld         al, @(+0x6, y)
   547C7:	0A34      	add        al, #+0xA
   547C8:	091B      	ld         x, @(+0x9, y)
   547C9:	0112      	ld         ah, @(+0x1, x)
   547CA:	0130      	add        ah, #+0x1
   547CB:	1818      	ld         x, #+0x18
   547CC:	002B      	st         x, @(0x0, y)
   547CD:	FB00      	**prefx    0xFB
   547CE:	E300      	**prefx    0xE3
   547CF:	079C      	bsr        -0x51CF9 <MemCopyUnPack:0x2AD6[p]>
   547D0:	0617      	ld         al, @(+0x6, y)
   547D1:	2234      	add        al, #+0x22
   547D2:	091B      	ld         x, @(+0x9, y)
   547D3:	0012      	ld         ah, @(0x0, x)
   547D4:	0130      	add        ah, #+0x1
   547D5:	1818      	ld         x, #+0x18
   547D6:	002B      	st         x, @(0x0, y)
   547D7:	FB00      	**prefx    0xFB
   547D8:	E300      	**prefx    0xE3
   547D9:	FD9C      	bsr        -0x51D03 <MemCopyUnPack:0x2AD6[p]>
   547DA:	6800      	**prefx    0x68
   547DB:	B115      	ld         al, @0x67B1 <L0+0x8>
   547DC:	0184      	cmp        al, #+0x1
   547DD:	07F0      	bne        +0x7 <___libcsrmesh_200+0x3F:0x547E4[p]>
   547DE:	0613      	ld         ah, @(+0x6, y)
   547DF:	3A30      	add        ah, #+0x3A
   547E0:	0814      	ld         al, #+0x8
   547E1:	6800      	**prefx    0x68
   547E2:	A818      	ld         x, #+0x67A8
   547E3:	FD09      	bc2        
   547E4:	0014      	ld         al, #+0x0
   547E5:	0027      	st         al, @(0x0, y)
   547E6:	0127      	st         al, @(+0x1, y)
   547E7:	081B      	ld         x, @(+0x8, y)
   547E8:	022B      	st         x, @(+0x2, y)
   547E9:	0814      	ld         al, #+0x8
   547EA:	0327      	st         al, @(+0x3, y)
   547EB:	071B      	ld         x, @(+0x7, y)
   547EC:	042B      	st         x, @(+0x4, y)
   547ED:	0527      	st         al, @(+0x5, y)
   547EE:	0617      	ld         al, @(+0x6, y)
   547EF:	4210      	ld         ah, #+0x42
   547F0:	0C00      	**prefx    0xC
   547F1:	4A9C      	bsr        +0xC4A <___libcsrmesh_305:0x5543B[p]>
   547F2:	4214      	ld         al, #+0x42
   547F3:	FE00      	**prefx    0xFE
   547F4:	6B9C      	bsr        -0x195 <___libcsrmesh_117:0x5465F[p]>
   547F5:	F30F      	leave      #-0xD

0x000547F6 <___libcsrmesh_452>:
   547F6:	F70B      	enter      #-0x9
   547F7:	0627      	st         al, @(+0x6, y)
   547F8:	0014      	ld         al, #+0x0
   547F9:	0027      	st         al, @(0x0, y)
   547FA:	0127      	st         al, @(+0x1, y)
   547FB:	6800      	**prefx    0x68
   547FC:	DE14      	ld         al, #+0x67DE
   547FD:	0227      	st         al, @(+0x2, y)
   547FE:	0414      	ld         al, #+0x4
   547FF:	0327      	st         al, @(+0x3, y)
   54800:	6800      	**prefx    0x68
   54801:	EE14      	ld         al, #+0x67EE
   54802:	0427      	st         al, @(+0x4, y)
   54803:	0214      	ld         al, #+0x2
   54804:	0527      	st         al, @(+0x5, y)
   54805:	6C00      	**prefx    0x6C
   54806:	D914      	ld         al, #+0x6BD9
   54807:	1810      	ld         ah, #+0x18
   54808:	0C00      	**prefx    0xC
   54809:	329C      	bsr        +0xC32 <___libcsrmesh_305:0x5543B[p]>
   5480A:	069B      	tst        @(+0x6, y)
   5480B:	03F0      	bne        +0x3 <___libcsrmesh_452+0x18:0x5480E[p]>
   5480C:	0010      	ld         ah, #+0x0
   5480D:	0DE0      	bra        +0xD <___libcsrmesh_452+0x24:0x5481A[p]>
   5480E:	0214      	ld         al, #+0x2
   5480F:	0027      	st         al, @(0x0, y)
   54810:	6800      	**prefx    0x68
   54811:	EE14      	ld         al, #+0x67EE
   54812:	0613      	ld         ah, @(+0x6, y)
   54813:	FC00      	**prefx    0xFC
   54814:	1700      	**prefx    0x17
   54815:	1C9C      	bsr        -0x3E8E4 <MemCmp:0x15F31[p]>
   54816:	0010      	ld         ah, #+0x0
   54817:	E199      	tst        @0xFFE1 <register al>
   54818:	02F0      	bne        +0x2 <___libcsrmesh_452+0x24:0x5481A[p]>
   54819:	0110      	ld         ah, #+0x1
   5481A:	E015      	ld         al, @0xFFE0 <register ah>
   5481B:	F70F      	leave      #-0x9

0x0005481C <___libcsrmesh_451>:
   5481C:	F70B      	enter      #-0x9
   5481D:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5481E:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   5481F:	0A13      	ld         ah, @(+0xA, y)
   54820:	E015      	ld         al, @0xFFE0 <register ah>
   54821:	6C00      	**prefx    0x6C
   54822:	1434      	add        al, #+0x6C14
   54823:	0627      	st         al, @(+0x6, y)
   54824:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54825:	0016      	ld         al, @(0x0, x)
   54826:	061B      	ld         x, @(+0x6, y)
   54827:	0026      	st         al, @(0x0, x)
   54828:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   54829:	0016      	ld         al, @(0x0, x)
   5482A:	E019      	ld         x, @0xFFE0 <register ah>
   5482B:	6C00      	**prefx    0x6C
   5482C:	1526      	st         al, @(+0x6C15, x)
   5482D:	6C00      	**prefx    0x6C
   5482E:	1630      	add        ah, #+0x6C16
   5482F:	0414      	ld         al, #+0x4
   54830:	091B      	ld         x, @(+0x9, y)
   54831:	FD09      	bc2        
   54832:	0018      	ld         x, #+0x0
   54833:	002B      	st         x, @(0x0, y)
   54834:	012B      	st         x, @(+0x1, y)
   54835:	6C00      	**prefx    0x6C
   54836:	D914      	ld         al, #+0x6BD9
   54837:	0227      	st         al, @(+0x2, y)
   54838:	1818      	ld         x, #+0x18
   54839:	032B      	st         x, @(+0x3, y)
   5483A:	0617      	ld         al, @(+0x6, y)
   5483B:	0427      	st         al, @(+0x4, y)
   5483C:	0618      	ld         x, #+0x6
   5483D:	052B      	st         x, @(+0x5, y)
   5483E:	0610      	ld         ah, #+0x6
   5483F:	0C00      	**prefx    0xC
   54840:	FB9C      	bsr        +0xBFB <___libcsrmesh_305:0x5543B[p]>
   54841:	0B9B      	tst        @(+0xB, y)
   54842:	03F0      	bne        +0x3 <___libcsrmesh_451+0x29:0x54845[p]>
   54843:	0010      	ld         ah, #+0x0
   54844:	0CE0      	bra        +0xC <___libcsrmesh_451+0x34:0x54850[p]>
   54845:	0614      	ld         al, #+0x6
   54846:	0027      	st         al, @(0x0, y)
   54847:	0B17      	ld         al, @(+0xB, y)
   54848:	0613      	ld         ah, @(+0x6, y)
   54849:	FC00      	**prefx    0xFC
   5484A:	1700      	**prefx    0x17
   5484B:	E69C      	bsr        -0x3E91A <MemCmp:0x15F31[p]>
   5484C:	0010      	ld         ah, #+0x0
   5484D:	E199      	tst        @0xFFE1 <register al>
   5484E:	02F0      	bne        +0x2 <___libcsrmesh_451+0x34:0x54850[p]>
   5484F:	0110      	ld         ah, #+0x1
   54850:	E015      	ld         al, @0xFFE0 <register ah>
   54851:	F70F      	leave      #-0x9

0x00054852 <___libcsrmesh_197>:
   54852:	FC0B      	enter      #-0x4
   54853:	2814      	ld         al, #+0x28
   54854:	FE00      	**prefx    0xFE
   54855:	149C      	bsr        -0x1EC <___libcsrmesh_116:0x54669[p]>
   54856:	6800      	**prefx    0x68
   54857:	F225      	st         al, @0x67F2 <___libgatt_lib_db_703+0x19>
   54858:	E119      	ld         x, @0xFFE1 <register al>
   54859:	0838      	add        x, #+0x8
   5485A:	6800      	**prefx    0x68
   5485B:	F429      	st         x, @0x67F4 <___libgatt_lib_db_703+0x1B>
   5485C:	0838      	add        x, #+0x8
   5485D:	6800      	**prefx    0x68
   5485E:	F329      	st         x, @0x67F3 <___libgatt_lib_db_703+0x1A>
   5485F:	0838      	add        x, #+0x8
   54860:	6800      	**prefx    0x68
   54861:	F529      	st         x, @0x67F5 <___libgatt_lib_db_703+0x1C>
   54862:	2034      	add        al, #+0x20
   54863:	6800      	**prefx    0x68
   54864:	F625      	st         al, @0x67F6 <___libgatt_lib_db_703+0x1D>
   54865:	0014      	ld         al, #+0x0
   54866:	0027      	st         al, @(0x0, y)
   54867:	6800      	**prefx    0x68
   54868:	F219      	ld         x, @0x67F2 <___libgatt_lib_db_703+0x19>
   54869:	003B      	add        x, @(0x0, y)
   5486A:	012B      	st         x, @(+0x1, y)
   5486B:	FB00      	**prefx    0xFB
   5486C:	3B00      	**prefx    0x3B
   5486D:	FD9C      	bsr        -0x4C503 <Random16:0x836A[p]>
   5486E:	0100      	**prefx    0x1
   5486F:	FFC4      	and        al, #0xFF
   54870:	011B      	ld         x, @(+0x1, y)
   54871:	0026      	st         al, @(0x0, x)
   54872:	0017      	ld         al, @(0x0, y)
   54873:	0134      	add        al, #+0x1
   54874:	0027      	st         al, @(0x0, y)
   54875:	0884      	cmp        al, #+0x8
   54876:	F1F0      	bne        -0xF <___libcsrmesh_197+0x15:0x54867[p]>
   54877:	FC0F      	leave      #-0x4

0x00054878 <___libcsrmesh_205>:
   54878:	FE0B      	enter      #-0x2
   54879:	0184      	cmp        al, #+0x1
   5487A:	08F0      	bne        +0x8 <___libcsrmesh_205+0xA:0x54882[p]>
   5487B:	FE00      	**prefx    0xFE
   5487C:	1E9C      	bsr        -0x1E2 <___libcsrmesh_202:0x5469A[p]>
   5487D:	FE00      	**prefx    0xFE
   5487E:	289C      	bsr        -0x1D8 <___libcsrmesh_201:0x546A6[p]>
   5487F:	FE00      	**prefx    0xFE
   54880:	089C      	bsr        -0x1F8 <___libcsrmesh_203:0x54688[p]>
   54881:	06E0      	bra        +0x6 <___libcsrmesh_205+0xF:0x54887[p]>
   54882:	FE00      	**prefx    0xFE
   54883:	4A9C      	bsr        -0x1B6 <___libcsrmesh_196:0x546CD[p]>
   54884:	FE00      	**prefx    0xFE
   54885:	429C      	bsr        -0x1BE <___libcsrmesh_195:0x546C7[p]>
   54886:	CC9C      	bsr        -0x34 <___libcsrmesh_197:0x54852[p]>
   54887:	FE0F      	leave      #-0x2

0x00054888 <___libcsrmesh_453>:
   54888:	FA0B      	enter      #-0x6
   54889:	0227      	st         al, @(+0x2, y)
   5488A:	0323      	st         ah, @(+0x3, y)
   5488B:	0027      	st         al, @(0x0, y)
   5488C:	0010      	ld         ah, #+0x0
   5488D:	0123      	st         ah, @(+0x1, y)
   5488E:	12E0      	bra        +0x12 <___libcsrmesh_453+0x18:0x548A0[p]>
   5488F:	FB00      	**prefx    0xFB
   54890:	3B00      	**prefx    0x3B
   54891:	D99C      	bsr        -0x4C527 <Random16:0x836A[p]>
   54892:	E111      	ld         ah, @0xFFE1 <register al>
   54893:	0100      	**prefx    0x1
   54894:	FFC0      	and        ah, #0xFF
   54895:	001B      	ld         x, @(0x0, y)
   54896:	0022      	st         ah, @(0x0, x)
   54897:	E111      	ld         ah, @0xFFE1 <register al>
   54898:	0009      	**unsigned
   54899:	08A4      	lsr        #0x8
   5489A:	0122      	st         ah, @(+0x1, x)
   5489B:	0117      	ld         al, @(+0x1, y)
   5489C:	0234      	add        al, #+0x2
   5489D:	0127      	st         al, @(+0x1, y)
   5489E:	0238      	add        x, #+0x2
   5489F:	002B      	st         x, @(0x0, y)
   548A0:	0317      	ld         al, @(+0x3, y)
   548A1:	0100      	**prefx    0x1
   548A2:	FEC4      	and        al, #0xFE
   548A3:	011B      	ld         x, @(+0x1, y)
   548A4:	E189      	cmp        x, @0xFFE1 <register al>
   548A5:	EAFC      	bcs        -0x16 <___libcsrmesh_453+0x7:0x5488F[p]>
   548A6:	0313      	ld         ah, @(+0x3, y)
   548A7:	01C0      	and        ah, #0x1
   548A8:	09F4      	beq        +0x9 <___libcsrmesh_453+0x29:0x548B1[p]>
   548A9:	FB00      	**prefx    0xFB
   548AA:	3B00      	**prefx    0x3B
   548AB:	BF9C      	bsr        -0x4C541 <Random16:0x836A[p]>
   548AC:	021B      	ld         x, @(+0x2, y)
   548AD:	013B      	add        x, @(+0x1, y)
   548AE:	0100      	**prefx    0x1
   548AF:	FFC4      	and        al, #0xFF
   548B0:	0026      	st         al, @(0x0, x)
   548B1:	FA0F      	leave      #-0x6

0x000548B2 <___libcsrmesh_456>:
   548B2:	F40B      	enter      #-0xC
   548B3:	0827      	st         al, @(+0x8, y)
   548B4:	0923      	st         ah, @(+0x9, y)
   548B5:	E015      	ld         al, @0xFFE0 <register ah>
   548B6:	6C00      	**prefx    0x6C
   548B7:	1434      	add        al, #+0x6C14
   548B8:	0627      	st         al, @(+0x6, y)
   548B9:	0414      	ld         al, #+0x4
   548BA:	0613      	ld         ah, @(+0x6, y)
   548BB:	6800      	**prefx    0x68
   548BC:	DE18      	ld         x, #+0x67DE
   548BD:	FD09      	bc2        
   548BE:	0917      	ld         al, @(+0x9, y)
   548BF:	6C00      	**prefx    0x6C
   548C0:	1834      	add        al, #+0x6C18
   548C1:	0727      	st         al, @(+0x7, y)
   548C2:	FA00      	**prefx    0xFA
   548C3:	B79C      	bsr        -0x649 <___libcsrmesh_270:0x5427A[p]>
   548C4:	0014      	ld         al, #+0x0
   548C5:	0027      	st         al, @(0x0, y)
   548C6:	0127      	st         al, @(+0x1, y)
   548C7:	6C00      	**prefx    0x6C
   548C8:	D914      	ld         al, #+0x6BD9
   548C9:	0227      	st         al, @(+0x2, y)
   548CA:	1814      	ld         al, #+0x18
   548CB:	0327      	st         al, @(+0x3, y)
   548CC:	0617      	ld         al, @(+0x6, y)
   548CD:	0427      	st         al, @(+0x4, y)
   548CE:	0414      	ld         al, #+0x4
   548CF:	0527      	st         al, @(+0x5, y)
   548D0:	0617      	ld         al, @(+0x6, y)
   548D1:	1410      	ld         ah, #+0x14
   548D2:	0B00      	**prefx    0xB
   548D3:	689C      	bsr        +0xB68 <___libcsrmesh_305:0x5543B[p]>
   548D4:	089B      	tst        @(+0x8, y)
   548D5:	10F4      	beq        +0x10 <___libcsrmesh_456+0x33:0x548E5[p]>
   548D6:	0414      	ld         al, #+0x4
   548D7:	0027      	st         al, @(0x0, y)
   548D8:	0617      	ld         al, @(+0x6, y)
   548D9:	0813      	ld         ah, @(+0x8, y)
   548DA:	FC00      	**prefx    0xFC
   548DB:	1600      	**prefx    0x16
   548DC:	559C      	bsr        -0x3E9AB <MemCmp:0x15F31[p]>
   548DD:	E199      	tst        @0xFFE1 <register al>
   548DE:	03F0      	bne        +0x3 <___libcsrmesh_456+0x2F:0x548E1[p]>
   548DF:	5C14      	ld         al, #+0x5C
   548E0:	03E0      	bra        +0x3 <___libcsrmesh_456+0x31:0x548E3[p]>
   548E1:	0100      	**prefx    0x1
   548E2:	AB14      	ld         al, #+0xAB
   548E3:	6800      	**prefx    0x68
   548E4:	F025      	st         al, @0x67F0 <___libgatt_lib_db_703+0x17>
   548E5:	0814      	ld         al, #+0x8
   548E6:	0713      	ld         ah, @(+0x7, y)
   548E7:	6C00      	**prefx    0x6C
   548E8:	D118      	ld         x, #+0x6BD1
   548E9:	FD09      	bc2        
   548EA:	0917      	ld         al, @(+0x9, y)
   548EB:	6C00      	**prefx    0x6C
   548EC:	2034      	add        al, #+0x6C20
   548ED:	0927      	st         al, @(+0x9, y)
   548EE:	0414      	ld         al, #+0x4
   548EF:	0913      	ld         ah, @(+0x9, y)
   548F0:	6800      	**prefx    0x68
   548F1:	DE18      	ld         x, #+0x67DE
   548F2:	FD09      	bc2        
   548F3:	0027      	st         al, @(0x0, y)
   548F4:	0127      	st         al, @(+0x1, y)
   548F5:	6C00      	**prefx    0x6C
   548F6:	D914      	ld         al, #+0x6BD9
   548F7:	0227      	st         al, @(+0x2, y)
   548F8:	1814      	ld         al, #+0x18
   548F9:	0327      	st         al, @(+0x3, y)
   548FA:	0717      	ld         al, @(+0x7, y)
   548FB:	0427      	st         al, @(+0x4, y)
   548FC:	0414      	ld         al, #+0x4
   548FD:	0527      	st         al, @(+0x5, y)
   548FE:	0717      	ld         al, @(+0x7, y)
   548FF:	0C10      	ld         ah, #+0xC
   54900:	0B00      	**prefx    0xB
   54901:	3A9C      	bsr        +0xB3A <___libcsrmesh_305:0x5543B[p]>
   54902:	089B      	tst        @(+0x8, y)
   54903:	13F4      	beq        +0x13 <___libcsrmesh_456+0x64:0x54916[p]>
   54904:	0817      	ld         al, @(+0x8, y)
   54905:	0434      	add        al, #+0x4
   54906:	0827      	st         al, @(+0x8, y)
   54907:	0414      	ld         al, #+0x4
   54908:	0027      	st         al, @(0x0, y)
   54909:	0717      	ld         al, @(+0x7, y)
   5490A:	0813      	ld         ah, @(+0x8, y)
   5490B:	FC00      	**prefx    0xFC
   5490C:	1600      	**prefx    0x16
   5490D:	249C      	bsr        -0x3E9DC <MemCmp:0x15F31[p]>
   5490E:	E199      	tst        @0xFFE1 <register al>
   5490F:	03F0      	bne        +0x3 <___libcsrmesh_456+0x60:0x54912[p]>
   54910:	5C14      	ld         al, #+0x5C
   54911:	03E0      	bra        +0x3 <___libcsrmesh_456+0x62:0x54914[p]>
   54912:	0100      	**prefx    0x1
   54913:	AB14      	ld         al, #+0xAB
   54914:	6800      	**prefx    0x68
   54915:	F125      	st         al, @0x67F1 <___libgatt_lib_db_703+0x18>
   54916:	F40F      	leave      #-0xC

0x00054917 <___libcsrmesh_211>:
   54917:	FC0B      	enter      #-0x4
   54918:	E119      	ld         x, @0xFFE1 <register al>
   54919:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5491A:	6C00      	**prefx    0x6C
   5491B:	8E15      	ld         al, @0x6B8E <g_mesh_data+0x1>
   5491C:	0284      	cmp        al, #+0x2
   5491D:	03F4      	beq        +0x3 <___libcsrmesh_211+0x9:0x54920[p]>
   5491E:	FF14      	ld         al, #-0x1
   5491F:	3BE0      	bra        +0x3B <___libcsrmesh_211+0x43:0x5495A[p]>
   54920:	6C00      	**prefx    0x6C
   54921:	1429      	st         x, @0x6C14 <mtl_operational_buffer>
   54922:	0188      	cmp        x, #+0x1
   54923:	07F4      	beq        +0x7 <___libcsrmesh_211+0x13:0x5492A[p]>
   54924:	0188      	cmp        x, #+0x1
   54925:	10FC      	bcs        +0x10 <___libcsrmesh_211+0x1E:0x54935[p]>
   54926:	F038      	add        x, #-0x10
   54927:	0988      	cmp        x, #+0x9
   54928:	0DF8      	bcc        +0xD <___libcsrmesh_211+0x1E:0x54935[p]>
   54929:	09E0      	bra        +0x9 <___libcsrmesh_211+0x1B:0x54932[p]>
   5492A:	1014      	ld         al, #+0x10
   5492B:	6C00      	**prefx    0x6C
   5492C:	1510      	ld         ah, #+0x6C15
   5492D:	6C00      	**prefx    0x6C
   5492E:	9E18      	ld         x, #+0x6B9E
   5492F:	FD09      	bc2        
   54930:	1118      	ld         x, #+0x11
   54931:	15E0      	bra        +0x15 <___libcsrmesh_211+0x2F:0x54946[p]>
   54932:	E019      	ld         x, @0xFFE0 <register ah>
   54933:	0138      	add        x, #+0x1
   54934:	12E0      	bra        +0x12 <___libcsrmesh_211+0x2F:0x54946[p]>
   54935:	6C00      	**prefx    0x6C
   54936:	8F15      	ld         al, @0x6B8F <g_mesh_data+0x2>
   54937:	0184      	cmp        al, #+0x1
   54938:	07F0      	bne        +0x7 <___libcsrmesh_211+0x28:0x5493F[p]>
   54939:	0414      	ld         al, #+0x4
   5493A:	6C00      	**prefx    0x6C
   5493B:	1510      	ld         ah, #+0x6C15
   5493C:	6C00      	**prefx    0x6C
   5493D:	0C18      	ld         x, #+0x6C0C
   5493E:	FD09      	bc2        
   5493F:	6C00      	**prefx    0x6C
   54940:	1811      	ld         ah, @0x6C18 <mtl_operational_buffer+0x4>
   54941:	7FC0      	and        ah, #0x7F
   54942:	6C00      	**prefx    0x6C
   54943:	1821      	st         ah, @0x6C18 <mtl_operational_buffer+0x4>
   54944:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54945:	0538      	add        x, #+0x5
   54946:	6800      	**prefx    0x68
   54947:	B215      	ld         al, @0x67B2 <L0+0x9>
   54948:	E111      	ld         ah, @0xFFE1 <register al>
   54949:	0100      	**prefx    0x1
   5494A:	FFC0      	and        ah, #0xFF
   5494B:	6C00      	**prefx    0x6C
   5494C:	1422      	st         ah, @(+0x6C14, x)
   5494D:	0134      	add        al, #+0x1
   5494E:	6800      	**prefx    0x68
   5494F:	B225      	st         al, @0x67B2 <L0+0x9>
   54950:	0138      	add        x, #+0x1
   54951:	6800      	**prefx    0x68
   54952:	B315      	ld         al, @0x67B3 <L0+0xA>
   54953:	0027      	st         al, @(0x0, y)
   54954:	0010      	ld         ah, #+0x0
   54955:	0123      	st         ah, @(+0x1, y)
   54956:	0014      	ld         al, #+0x0
   54957:	E311      	ld         ah, @0xFFE3 <register uxl>
   54958:	FC00      	**prefx    0xFC
   54959:	589C      	bsr        -0x3A8 <___libcsrmesh_279:0x545B1[p]>
   5495A:	FC0F      	leave      #-0x4

0x0005495B <___libcsrmesh_193>:
   5495B:	EB0B      	enter      #-0x15
   5495C:	E119      	ld         x, @0xFFE1 <register al>
   5495D:	1223      	st         ah, @(+0x12, y)
   5495E:	1517      	ld         al, @(+0x15, y)
   5495F:	A200      	**prefx    0xA2
   54960:	BF86      	cmp        al, @(-0x5E41, x)
   54961:	04F4      	beq        +0x4 <___libcsrmesh_193+0xA:0x54965[p]>
   54962:	FF10      	ld         ah, #-0x1
   54963:	0500      	**prefx    0x5
   54964:	F1E0      	bra        +0x4F1 <___libcsrmesh_425+0x4E9:0x54E55[p]>
   54965:	FE38      	add        x, #-0x2
   54966:	1788      	cmp        x, #+0x17
   54967:	0500      	**prefx    0x5
   54968:	F3F8      	bcc        +0x4F3 <___libcsrmesh_425+0x4EF:0x54E5B[p]>
   54969:	A200      	**prefx    0xA2
   5496A:	941A      	ld         x, @(-0x5E6C, x)
   5496B:	FE09      	brxl       

0x0005496C <___libcsrmesh_425>:
   5496C:	6800      	**prefx    0x68
   5496D:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   5496E:	05F4      	beq        +0x5 <___libcsrmesh_425+0x7:0x54973[p]>
   5496F:	0284      	cmp        al, #+0x2
   54970:	0500      	**prefx    0x5
   54971:	E7F0      	bne        +0x4E7 <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54972:	25E0      	bra        +0x25 <___libcsrmesh_425+0x2B:0x54997[p]>
   54973:	121B      	ld         x, @(+0x12, y)
   54974:	0116      	ld         al, @(+0x1, x)
   54975:	01C4      	and        al, #0x1
   54976:	21F4      	beq        +0x21 <___libcsrmesh_425+0x2B:0x54997[p]>
   54977:	0210      	ld         ah, #+0x2
   54978:	6800      	**prefx    0x68
   54979:	F921      	st         ah, @0x67F9 <___libgatt_lib_db_703+0x20>
   5497A:	0014      	ld         al, #+0x0
   5497B:	0027      	st         al, @(0x0, y)
   5497C:	0814      	ld         al, #+0x8
   5497D:	0010      	ld         ah, #+0x0
   5497E:	FD00      	**prefx    0xFD
   5497F:	609C      	bsr        -0x2A0 <___libcsrmesh_210:0x546DF[p]>
   54980:	FD00      	**prefx    0xFD
   54981:	469C      	bsr        -0x2BA <___libcsrmesh_195:0x546C7[p]>
   54982:	121B      	ld         x, @(+0x12, y)
   54983:	0138      	add        x, #+0x1
   54984:	122B      	st         x, @(+0x12, y)
   54985:	0814      	ld         al, #+0x8
   54986:	6800      	**prefx    0x68
   54987:	F711      	ld         ah, @0x67F7 <___libgatt_lib_db_703+0x1E>
   54988:	FD09      	bc2        
   54989:	6800      	**prefx    0x68
   5498A:	F719      	ld         x, @0x67F7 <___libgatt_lib_db_703+0x1E>
   5498B:	0110      	ld         ah, #+0x1
   5498C:	0822      	st         ah, @(+0x8, x)
   5498D:	6800      	**prefx    0x68
   5498E:	F719      	ld         x, @0x67F7 <___libgatt_lib_db_703+0x1E>
   5498F:	6800      	**prefx    0x68
   54990:	B115      	ld         al, @0x67B1 <L0+0x8>
   54991:	0926      	st         al, @(+0x9, x)
   54992:	0018      	ld         x, #+0x0
   54993:	6800      	**prefx    0x68
   54994:	DD29      	st         x, @0x67DD <___libgatt_lib_db_703+0x4>
   54995:	FD00      	**prefx    0xFD
   54996:	379C      	bsr        -0x2C9 <___libcsrmesh_196:0x546CD[p]>
   54997:	0110      	ld         ah, #+0x1
   54998:	6C00      	**prefx    0x6C
   54999:	1921      	st         ah, @0x6C19 <mtl_operational_buffer+0x5>
   5499A:	1023      	st         ah, @(+0x10, y)
   5499B:	0314      	ld         al, #+0x3
   5499C:	0200      	**prefx    0x2
   5499D:	35E0      	bra        +0x235 <___libcsrmesh_425+0x266:0x54BD2[p]>
   5499E:	6800      	**prefx    0x68
   5499F:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   549A0:	FE34      	add        al, #-0x2
   549A1:	0384      	cmp        al, #+0x3
   549A2:	0500      	**prefx    0x5
   549A3:	B8F8      	bcc        +0x4B8 <___libcsrmesh_425+0x4EF:0x54E5B[p]>
   549A4:	121B      	ld         x, @(+0x12, y)
   549A5:	001A      	ld         x, @(0x0, x)
   549A6:	0C2B      	st         x, @(+0xC, y)
   549A7:	0688      	cmp        x, #+0x6
   549A8:	0500      	**prefx    0x5
   549A9:	ABF8      	bcc        +0x4AB <___libcsrmesh_425+0x4E8:0x54E54[p]>
   549AA:	6800      	**prefx    0x68
   549AB:	D899      	tst        @0x67D8 <L0+0x2F>
   549AC:	0500      	**prefx    0x5
   549AD:	ABF4      	beq        +0x4AB <___libcsrmesh_425+0x4EC:0x54E58[p]>
   549AE:	0388      	cmp        x, #+0x3
   549AF:	0BF8      	bcc        +0xB <___libcsrmesh_425+0x4E:0x549BA[p]>
   549B0:	E315      	ld         al, @0xFFE3 <register uxl>
   549B1:	02A0      	asl        #0x2
   549B2:	0134      	add        al, #+0x1
   549B3:	6800      	**prefx    0x68
   549B4:	DA11      	ld         ah, @0x67DA <___libgatt_lib_db_703+0x1>
   549B5:	E131      	add        ah, @0xFFE1 <register al>
   549B6:	0E23      	st         ah, @(+0xE, y)
   549B7:	6800      	**prefx    0x68
   549B8:	DC19      	ld         x, @0x67DC <___libgatt_lib_db_703+0x3>
   549B9:	0BE0      	bra        +0xB <___libcsrmesh_425+0x58:0x549C4[p]>
   549BA:	0C17      	ld         al, @(+0xC, y)
   549BB:	FD34      	add        al, #-0x3
   549BC:	02A0      	asl        #0x2
   549BD:	0134      	add        al, #+0x1
   549BE:	6800      	**prefx    0x68
   549BF:	D919      	ld         x, @0x67D9 <___libgatt_lib_db_703>
   549C0:	E139      	add        x, @0xFFE1 <register al>
   549C1:	0E2B      	st         x, @(+0xE, y)
   549C2:	6800      	**prefx    0x68
   549C3:	DB19      	ld         x, @0x67DB <___libgatt_lib_db_703+0x2>
   549C4:	E139      	add        x, @0xFFE1 <register al>
   549C5:	0114      	ld         al, #+0x1
   549C6:	0CA3      	asl        @(+0xC, y)
   549C7:	F825      	st         al, @0xFFF8 <(scratchpad)>
   549C8:	6800      	**prefx    0x68
   549C9:	DD11      	ld         ah, @0x67DD <___libgatt_lib_db_703+0x4>
   549CA:	E0C5      	and        al, @0xFFE0 <register ah>
   549CB:	18F0      	bne        +0x18 <___libcsrmesh_425+0x77:0x549E3[p]>
   549CC:	0314      	ld         al, #+0x3
   549CD:	6800      	**prefx    0x68
   549CE:	F925      	st         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   549CF:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   549D0:	6800      	**prefx    0x68
   549D1:	DD21      	st         ah, @0x67DD <___libgatt_lib_db_703+0x4>
   549D2:	1213      	ld         ah, @(+0x12, y)
   549D3:	0130      	add        ah, #+0x1
   549D4:	1223      	st         ah, @(+0x12, y)
   549D5:	0814      	ld         al, #+0x8
   549D6:	0027      	st         al, @(0x0, y)
   549D7:	E315      	ld         al, @0xFFE3 <register uxl>
   549D8:	FB00      	**prefx    0xFB
   549D9:	E100      	**prefx    0xE1
   549DA:	D29C      	bsr        -0x51F2E <MemCopyPack:0x2AAC[p]>
   549DB:	6800      	**prefx    0x68
   549DC:	DD15      	ld         al, @0x67DD <___libgatt_lib_db_703+0x4>
   549DD:	3FC4      	and        al, #0x3F
   549DE:	3F84      	cmp        al, #+0x3F
   549DF:	04F0      	bne        +0x4 <___libcsrmesh_425+0x77:0x549E3[p]>
   549E0:	0418      	ld         x, #+0x4
   549E1:	6800      	**prefx    0x68
   549E2:	F929      	st         x, @0x67F9 <___libgatt_lib_db_703+0x20>
   549E3:	0C13      	ld         ah, @(+0xC, y)
   549E4:	6C00      	**prefx    0x6C
   549E5:	1921      	st         ah, @0x6C19 <mtl_operational_buffer+0x5>
   549E6:	0814      	ld         al, #+0x8
   549E7:	0027      	st         al, @(0x0, y)
   549E8:	6C00      	**prefx    0x6C
   549E9:	1A14      	ld         al, #+0x6C1A
   549EA:	0E13      	ld         ah, @(+0xE, y)
   549EB:	FB00      	**prefx    0xFB
   549EC:	E100      	**prefx    0xE1
   549ED:	E99C      	bsr        -0x51F17 <MemCopyUnPack:0x2AD6[p]>
   549EE:	0918      	ld         x, #+0x9
   549EF:	102B      	st         x, @(+0x10, y)
   549F0:	0510      	ld         ah, #+0x5
   549F1:	0400      	**prefx    0x4
   549F2:	31E0      	bra        +0x431 <___libcsrmesh_425+0x4B7:0x54E23[p]>
   549F3:	6800      	**prefx    0x68
   549F4:	F911      	ld         ah, @0x67F9 <___libgatt_lib_db_703+0x20>
   549F5:	E015      	ld         al, @0xFFE0 <register ah>
   549F6:	FC34      	add        al, #-0x4
   549F7:	0284      	cmp        al, #+0x2
   549F8:	0400      	**prefx    0x4
   549F9:	5FF8      	bcc        +0x45F <___libcsrmesh_425+0x4EC:0x54E58[p]>
   549FA:	0480      	cmp        ah, #+0x4
   549FB:	0EF0      	bne        +0xE <___libcsrmesh_425+0x9D:0x54A09[p]>
   549FC:	0514      	ld         al, #+0x5
   549FD:	6800      	**prefx    0x68
   549FE:	F925      	st         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   549FF:	FE00      	**prefx    0xFE
   54A00:	529C      	bsr        -0x1AE <___libcsrmesh_197:0x54852[p]>
   54A01:	0814      	ld         al, #+0x8
   54A02:	6800      	**prefx    0x68
   54A03:	F511      	ld         ah, @0x67F5 <___libgatt_lib_db_703+0x1C>
   54A04:	121B      	ld         x, @(+0x12, y)
   54A05:	FD09      	bc2        
   54A06:	0114      	ld         al, #+0x1
   54A07:	FE00      	**prefx    0xFE
   54A08:	9D9C      	bsr        -0x263 <___libcsrmesh_200:0x547A5[p]>
   54A09:	6800      	**prefx    0x68
   54A0A:	F419      	ld         x, @0x67F4 <___libgatt_lib_db_703+0x1B>
   54A0B:	0814      	ld         al, #+0x8
   54A0C:	6C00      	**prefx    0x6C
   54A0D:	1910      	ld         ah, #+0x6C19
   54A0E:	FD09      	bc2        
   54A0F:	0818      	ld         x, #+0x8
   54A10:	102B      	st         x, @(+0x10, y)
   54A11:	0710      	ld         ah, #+0x7
   54A12:	0400      	**prefx    0x4
   54A13:	10E0      	bra        +0x410 <___libcsrmesh_425+0x4B7:0x54E23[p]>
   54A14:	6800      	**prefx    0x68
   54A15:	F911      	ld         ah, @0x67F9 <___libgatt_lib_db_703+0x20>
   54A16:	E015      	ld         al, @0xFFE0 <register ah>
   54A17:	FB34      	add        al, #-0x5
   54A18:	0284      	cmp        al, #+0x2
   54A19:	0400      	**prefx    0x4
   54A1A:	3EF8      	bcc        +0x43E <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54A1B:	0580      	cmp        ah, #+0x5
   54A1C:	1AF0      	bne        +0x1A <___libcsrmesh_425+0xCA:0x54A36[p]>
   54A1D:	0814      	ld         al, #+0x8
   54A1E:	6800      	**prefx    0x68
   54A1F:	F311      	ld         ah, @0x67F3 <___libgatt_lib_db_703+0x1A>
   54A20:	121B      	ld         x, @(+0x12, y)
   54A21:	FD09      	bc2        
   54A22:	FE00      	**prefx    0xFE
   54A23:	829C      	bsr        -0x27E <___libcsrmesh_200:0x547A5[p]>
   54A24:	0814      	ld         al, #+0x8
   54A25:	0027      	st         al, @(0x0, y)
   54A26:	6800      	**prefx    0x68
   54A27:	F615      	ld         al, @0x67F6 <___libgatt_lib_db_703+0x1D>
   54A28:	6800      	**prefx    0x68
   54A29:	F511      	ld         ah, @0x67F5 <___libgatt_lib_db_703+0x1C>
   54A2A:	FC00      	**prefx    0xFC
   54A2B:	1500      	**prefx    0x15
   54A2C:	059C      	bsr        -0x3EAFB <MemCmp:0x15F31[p]>
   54A2D:	E199      	tst        @0xFFE1 <register al>
   54A2E:	05F4      	beq        +0x5 <___libcsrmesh_425+0xC7:0x54A33[p]>
   54A2F:	0014      	ld         al, #+0x0
   54A30:	FD00      	**prefx    0xFD
   54A31:	D69C      	bsr        -0x32A <___libcsrmesh_209:0x54707[p]>
   54A32:	04E0      	bra        +0x4 <___libcsrmesh_425+0xCA:0x54A36[p]>
   54A33:	0618      	ld         x, #+0x6
   54A34:	6800      	**prefx    0x68
   54A35:	F929      	st         x, @0x67F9 <___libgatt_lib_db_703+0x20>
   54A36:	6800      	**prefx    0x68
   54A37:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54A38:	0684      	cmp        al, #+0x6
   54A39:	0400      	**prefx    0x4
   54A3A:	1EF0      	bne        +0x41E <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54A3B:	6800      	**prefx    0x68
   54A3C:	F219      	ld         x, @0x67F2 <___libgatt_lib_db_703+0x19>
   54A3D:	0814      	ld         al, #+0x8
   54A3E:	6C00      	**prefx    0x6C
   54A3F:	1910      	ld         ah, #+0x6C19
   54A40:	FD09      	bc2        
   54A41:	0810      	ld         ah, #+0x8
   54A42:	1023      	st         ah, @(+0x10, y)
   54A43:	0914      	ld         al, #+0x9
   54A44:	0200      	**prefx    0x2
   54A45:	8DE0      	bra        +0x18D <___libcsrmesh_425+0x266:0x54BD2[p]>
   54A46:	6800      	**prefx    0x68
   54A47:	F911      	ld         ah, @0x67F9 <___libgatt_lib_db_703+0x20>
   54A48:	E015      	ld         al, @0xFFE0 <register ah>
   54A49:	FA34      	add        al, #-0x6
   54A4A:	0284      	cmp        al, #+0x2
   54A4B:	0400      	**prefx    0x4
   54A4C:	0CF8      	bcc        +0x40C <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54A4D:	0680      	cmp        ah, #+0x6
   54A4E:	35F0      	bne        +0x35 <___libcsrmesh_425+0x117:0x54A83[p]>
   54A4F:	0018      	ld         x, #+0x0
   54A50:	6C00      	**prefx    0x6C
   54A51:	BB29      	st         x, @0x6BBB <g_mesh_context_data+0x1E>
   54A52:	0710      	ld         ah, #+0x7
   54A53:	6800      	**prefx    0x68
   54A54:	F921      	st         ah, @0x67F9 <___libgatt_lib_db_703+0x20>
   54A55:	FC00      	**prefx    0xFC
   54A56:	329C      	bsr        -0x3CE <___libcsrmesh_203:0x54688[p]>
   54A57:	1300      	**prefx    0x13
   54A58:	1A9C      	bsr        +0x131A <CSRSchedDisableRadioEvent:0x55D72[p]>
   54A59:	1014      	ld         al, #+0x10
   54A5A:	FC00      	**prefx    0xFC
   54A5B:	0E9C      	bsr        -0x3F2 <___libcsrmesh_116:0x54669[p]>
   54A5C:	6800      	**prefx    0x68
   54A5D:	F825      	st         al, @0x67F8 <___libgatt_lib_db_703+0x1F>
   54A5E:	1A14      	ld         al, #+0x1A
   54A5F:	FC00      	**prefx    0xFC
   54A60:	099C      	bsr        -0x3F7 <___libcsrmesh_116:0x54669[p]>
   54A61:	0627      	st         al, @(+0x6, y)
   54A62:	0D34      	add        al, #+0xD
   54A63:	0727      	st         al, @(+0x7, y)
   54A64:	E415      	ld         al, @0xFFE4 <register uy>
   54A65:	0634      	add        al, #+0x6
   54A66:	0027      	st         al, @(0x0, y)
   54A67:	6800      	**prefx    0x68
   54A68:	D815      	ld         al, @0x67D8 <L0+0x2F>
   54A69:	6800      	**prefx    0x68
   54A6A:	DB10      	ld         ah, #+0x67DB
   54A6B:	1B00      	**prefx    0x1B
   54A6C:	119C      	bsr        +0x1B11 <___libcsrmesh_127:0x5657D[p]>
   54A6D:	061B      	ld         x, @(+0x6, y)
   54A6E:	0138      	add        x, #+0x1
   54A6F:	082B      	st         x, @(+0x8, y)
   54A70:	1810      	ld         ah, #+0x18
   54A71:	0023      	st         ah, @(0x0, y)
   54A72:	6C00      	**prefx    0x6C
   54A73:	D914      	ld         al, #+0x6BD9
   54A74:	E311      	ld         ah, @0xFFE3 <register uxl>
   54A75:	FB00      	**prefx    0xFB
   54A76:	E000      	**prefx    0xE0
   54A77:	5F9C      	bsr        -0x51FA1 <MemCopyUnPack:0x2AD6[p]>
   54A78:	0C14      	ld         al, #+0xC
   54A79:	0027      	st         al, @(0x0, y)
   54A7A:	0B14      	ld         al, #+0xB
   54A7B:	0813      	ld         ah, @(+0x8, y)
   54A7C:	1400      	**prefx    0x14
   54A7D:	BC9C      	bsr        +0x13BC <___libcsrmesh_372:0x55E39[p]>
   54A7E:	1A14      	ld         al, #+0x1A
   54A7F:	FC00      	**prefx    0xFC
   54A80:	DF9C      	bsr        -0x421 <___libcsrmesh_117:0x5465F[p]>
   54A81:	1300      	**prefx    0x13
   54A82:	DE9C      	bsr        +0x12DE <CSRSchedEnableRadioEvent:0x55D60[p]>
   54A83:	6800      	**prefx    0x68
   54A84:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54A85:	0784      	cmp        al, #+0x7
   54A86:	33F0      	bne        +0x33 <___libcsrmesh_425+0x14D:0x54AB9[p]>
   54A87:	6800      	**prefx    0x68
   54A88:	F819      	ld         x, @0x67F8 <___libgatt_lib_db_703+0x1F>
   54A89:	112B      	st         x, @(+0x11, y)
   54A8A:	0010      	ld         ah, #+0x0
   54A8B:	0023      	st         ah, @(0x0, y)
   54A8C:	0123      	st         ah, @(+0x1, y)
   54A8D:	6C00      	**prefx    0x6C
   54A8E:	D914      	ld         al, #+0x6BD9
   54A8F:	0227      	st         al, @(+0x2, y)
   54A90:	1818      	ld         x, #+0x18
   54A91:	032B      	st         x, @(+0x3, y)
   54A92:	E411      	ld         ah, @0xFFE4 <register uy>
   54A93:	0630      	add        ah, #+0x6
   54A94:	0423      	st         ah, @(+0x4, y)
   54A95:	0214      	ld         al, #+0x2
   54A96:	0527      	st         al, @(+0x5, y)
   54A97:	6800      	**prefx    0x68
   54A98:	B414      	ld         al, #+0x67B4
   54A99:	0810      	ld         ah, #+0x8
   54A9A:	0A00      	**prefx    0xA
   54A9B:	A09C      	bsr        +0x9A0 <___libcsrmesh_305:0x5543B[p]>
   54A9C:	0018      	ld         x, #+0x0
   54A9D:	002B      	st         x, @(0x0, y)
   54A9E:	012B      	st         x, @(+0x1, y)
   54A9F:	6C00      	**prefx    0x6C
   54AA0:	D910      	ld         ah, #+0x6BD9
   54AA1:	0223      	st         ah, @(+0x2, y)
   54AA2:	1814      	ld         al, #+0x18
   54AA3:	0327      	st         al, @(+0x3, y)
   54AA4:	111B      	ld         x, @(+0x11, y)
   54AA5:	042B      	st         x, @(+0x4, y)
   54AA6:	1010      	ld         ah, #+0x10
   54AA7:	0523      	st         ah, @(+0x5, y)
   54AA8:	6800      	**prefx    0x68
   54AA9:	BC14      	ld         al, #+0x67BC
   54AAA:	0A10      	ld         ah, #+0xA
   54AAB:	0A00      	**prefx    0xA
   54AAC:	8F9C      	bsr        +0x98F <___libcsrmesh_305:0x5543B[p]>
   54AAD:	121B      	ld         x, @(+0x12, y)
   54AAE:	0116      	ld         al, @(+0x1, x)
   54AAF:	07D7      	xor        al, @(+0x7, y)
   54AB0:	08A0      	asl        #0x8
   54AB1:	0012      	ld         ah, @(0x0, x)
   54AB2:	06D3      	xor        ah, @(+0x6, y)
   54AB3:	E0B5      	or         al, @0xFFE0 <register ah>
   54AB4:	6C00      	**prefx    0x6C
   54AB5:	BB25      	st         al, @0x6BBB <g_mesh_context_data+0x1E>
   54AB6:	0010      	ld         ah, #+0x0
   54AB7:	6800      	**prefx    0x68
   54AB8:	DD21      	st         ah, @0x67DD <___libgatt_lib_db_703+0x4>
   54AB9:	6C00      	**prefx    0x6C
   54ABA:	BB99      	tst        @0x6BBB <g_mesh_context_data+0x1E>
   54ABB:	0400      	**prefx    0x4
   54ABC:	9CF4      	beq        +0x39C <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54ABD:	0014      	ld         al, #+0x0
   54ABE:	1027      	st         al, @(+0x10, y)
   54ABF:	0B18      	ld         x, #+0xB
   54AC0:	0300      	**prefx    0x3
   54AC1:	67E0      	bra        +0x367 <___libcsrmesh_425+0x4BC:0x54E28[p]>
   54AC2:	6800      	**prefx    0x68
   54AC3:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54AC4:	F934      	add        al, #-0x7
   54AC5:	0384      	cmp        al, #+0x3
   54AC6:	0400      	**prefx    0x4
   54AC7:	91F8      	bcc        +0x391 <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54AC8:	121B      	ld         x, @(+0x12, y)
   54AC9:	001A      	ld         x, @(0x0, x)
   54ACA:	0B2B      	st         x, @(+0xB, y)
   54ACB:	0288      	cmp        x, #+0x2
   54ACC:	49F8      	bcc        +0x49 <___libcsrmesh_425+0x1A9:0x54B15[p]>
   54ACD:	0114      	ld         al, #+0x1
   54ACE:	E3A1      	asl        @0xFFE3 <register uxl>
   54ACF:	E119      	ld         x, @0xFFE1 <register al>
   54AD0:	6800      	**prefx    0x68
   54AD1:	DD11      	ld         ah, @0x67DD <___libgatt_lib_db_703+0x4>
   54AD2:	E0C5      	and        al, @0xFFE0 <register ah>
   54AD3:	42F0      	bne        +0x42 <___libcsrmesh_425+0x1A9:0x54B15[p]>
   54AD4:	0814      	ld         al, #+0x8
   54AD5:	6800      	**prefx    0x68
   54AD6:	F925      	st         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54AD7:	E0B9      	or         x, @0xFFE0 <register ah>
   54AD8:	6800      	**prefx    0x68
   54AD9:	DD29      	st         x, @0x67DD <___libgatt_lib_db_703+0x4>
   54ADA:	0B17      	ld         al, @(+0xB, y)
   54ADB:	03A0      	asl        #0x3
   54ADC:	E111      	ld         ah, @0xFFE1 <register al>
   54ADD:	6800      	**prefx    0x68
   54ADE:	C830      	add        ah, #+0x67C8
   54ADF:	121B      	ld         x, @(+0x12, y)
   54AE0:	0138      	add        x, #+0x1
   54AE1:	122B      	st         x, @(+0x12, y)
   54AE2:	0814      	ld         al, #+0x8
   54AE3:	FD09      	bc2        
   54AE4:	6800      	**prefx    0x68
   54AE5:	DD15      	ld         al, @0x67DD <___libgatt_lib_db_703+0x4>
   54AE6:	03C4      	and        al, #0x3
   54AE7:	0384      	cmp        al, #+0x3
   54AE8:	2DF0      	bne        +0x2D <___libcsrmesh_425+0x1A9:0x54B15[p]>
   54AE9:	0014      	ld         al, #+0x0
   54AEA:	6800      	**prefx    0x68
   54AEB:	F811      	ld         ah, @0x67F8 <___libgatt_lib_db_703+0x1F>
   54AEC:	E019      	ld         x, @0xFFE0 <register ah>
   54AED:	E139      	add        x, @0xFFE1 <register al>
   54AEE:	F829      	st         x, @0xFFF8 <(scratchpad)>
   54AEF:	E119      	ld         x, @0xFFE1 <register al>
   54AF0:	6800      	**prefx    0x68
   54AF1:	C812      	ld         ah, @(+0x67C8, x)
   54AF2:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54AF3:	00D2      	xor        ah, @(0x0, x)
   54AF4:	E119      	ld         x, @0xFFE1 <register al>
   54AF5:	6800      	**prefx    0x68
   54AF6:	C822      	st         ah, @(+0x67C8, x)
   54AF7:	0134      	add        al, #+0x1
   54AF8:	1084      	cmp        al, #+0x10
   54AF9:	F1F0      	bne        -0xF <___libcsrmesh_425+0x17E:0x54AEA[p]>
   54AFA:	6C00      	**prefx    0x6C
   54AFB:	BB15      	ld         al, @0x6BBB <g_mesh_context_data+0x1E>
   54AFC:	0500      	**prefx    0x5
   54AFD:	1E9C      	bsr        +0x51E <___libcsrmesh_245:0x5501B[p]>
   54AFE:	6800      	**prefx    0x68
   54AFF:	C814      	ld         al, #+0x67C8
   54B00:	F800      	**prefx    0xF8
   54B01:	0D9C      	bsr        -0x7F3 <___libcsrmesh_283:0x5430E[p]>
   54B02:	0014      	ld         al, #+0x0
   54B03:	F800      	**prefx    0xF8
   54B04:	E99C      	bsr        -0x817 <___libcsrmesh_282:0x542ED[p]>
   54B05:	0014      	ld         al, #+0x0
   54B06:	6800      	**prefx    0x68
   54B07:	C625      	st         al, @0x67C6 <L0+0x1D>
   54B08:	0214      	ld         al, #+0x2
   54B09:	FC00      	**prefx    0xFC
   54B0A:	FD9C      	bsr        -0x403 <___libcsrmesh_209:0x54707[p]>
   54B0B:	0918      	ld         x, #+0x9
   54B0C:	6800      	**prefx    0x68
   54B0D:	F929      	st         x, @0x67F9 <___libgatt_lib_db_703+0x20>
   54B0E:	6800      	**prefx    0x68
   54B0F:	C610      	ld         ah, #+0x67C6
   54B10:	0023      	st         ah, @(0x0, y)
   54B11:	0914      	ld         al, #+0x9
   54B12:	0010      	ld         ah, #+0x0
   54B13:	FC00      	**prefx    0xFC
   54B14:	CB9C      	bsr        -0x435 <___libcsrmesh_210:0x546DF[p]>
   54B15:	0B17      	ld         al, @(+0xB, y)
   54B16:	6C00      	**prefx    0x6C
   54B17:	1925      	st         al, @0x6C19 <mtl_operational_buffer+0x5>
   54B18:	0118      	ld         x, #+0x1
   54B19:	102B      	st         x, @(+0x10, y)
   54B1A:	0D10      	ld         ah, #+0xD
   54B1B:	0300      	**prefx    0x3
   54B1C:	07E0      	bra        +0x307 <___libcsrmesh_425+0x4B7:0x54E23[p]>
   54B1D:	6800      	**prefx    0x68
   54B1E:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54B1F:	0984      	cmp        al, #+0x9
   54B20:	0300      	**prefx    0x3
   54B21:	37F4      	beq        +0x337 <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54B22:	121B      	ld         x, @(+0x12, y)
   54B23:	001A      	ld         x, @(0x0, x)
   54B24:	062B      	st         x, @(+0x6, y)
   54B25:	121B      	ld         x, @(+0x12, y)
   54B26:	0216      	ld         al, @(+0x2, x)
   54B27:	08A0      	asl        #0x8
   54B28:	0112      	ld         ah, @(+0x1, x)
   54B29:	0100      	**prefx    0x1
   54B2A:	FFC0      	and        ah, #0xFF
   54B2B:	E0B5      	or         al, @0xFFE0 <register ah>
   54B2C:	0727      	st         al, @(+0x7, y)
   54B2D:	E411      	ld         ah, @0xFFE4 <register uy>
   54B2E:	0630      	add        ah, #+0x6
   54B2F:	0023      	st         ah, @(0x0, y)
   54B30:	2314      	ld         al, #+0x23
   54B31:	0010      	ld         ah, #+0x0
   54B32:	FC00      	**prefx    0xFC
   54B33:	AC9C      	bsr        -0x454 <___libcsrmesh_210:0x546DF[p]>
   54B34:	0300      	**prefx    0x3
   54B35:	23E0      	bra        +0x323 <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54B36:	F700      	**prefx    0xF7
   54B37:	3E9C      	bsr        -0x8C2 <___libcsrmesh_274:0x54275[p]>
   54B38:	E199      	tst        @0xFFE1 <register al>
   54B39:	0300      	**prefx    0x3
   54B3A:	1EF4      	beq        +0x31E <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54B3B:	121B      	ld         x, @(+0x12, y)
   54B3C:	0238      	add        x, #+0x2
   54B3D:	122B      	st         x, @(+0x12, y)
   54B3E:	0010      	ld         ah, #+0x0
   54B3F:	0023      	st         ah, @(0x0, y)
   54B40:	0123      	st         ah, @(+0x1, y)
   54B41:	6C00      	**prefx    0x6C
   54B42:	D914      	ld         al, #+0x6BD9
   54B43:	0227      	st         al, @(+0x2, y)
   54B44:	1818      	ld         x, #+0x18
   54B45:	032B      	st         x, @(+0x3, y)
   54B46:	6C00      	**prefx    0x6C
   54B47:	1410      	ld         ah, #+0x6C14
   54B48:	0423      	st         ah, @(+0x4, y)
   54B49:	0614      	ld         al, #+0x6
   54B4A:	0527      	st         al, @(+0x5, y)
   54B4B:	1217      	ld         al, @(+0x12, y)
   54B4C:	0610      	ld         ah, #+0x6
   54B4D:	0900      	**prefx    0x9
   54B4E:	ED9C      	bsr        +0x8ED <___libcsrmesh_305:0x5543B[p]>
   54B4F:	121B      	ld         x, @(+0x12, y)
   54B50:	0638      	add        x, #+0x6
   54B51:	0610      	ld         ah, #+0x6
   54B52:	0023      	st         ah, @(0x0, y)
   54B53:	6C00      	**prefx    0x6C
   54B54:	1414      	ld         al, #+0x6C14
   54B55:	E311      	ld         ah, @0xFFE3 <register uxl>
   54B56:	FC00      	**prefx    0xFC
   54B57:	1400      	**prefx    0x14
   54B58:	D99C      	bsr        -0x3EC27 <MemCmp:0x15F31[p]>
   54B59:	E199      	tst        @0xFFE1 <register al>
   54B5A:	0300      	**prefx    0x3
   54B5B:	FDF0      	bne        +0x2FD <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54B5C:	FC00      	**prefx    0xFC
   54B5D:	0B9C      	bsr        -0x3F5 <___libcsrmesh_208:0x54768[p]>
   54B5E:	F700      	**prefx    0xF7
   54B5F:	229C      	bsr        -0x8DE <___libcsrmesh_278:0x54281[p]>
   54B60:	0014      	ld         al, #+0x0
   54B61:	0027      	st         al, @(0x0, y)
   54B62:	1314      	ld         al, #+0x13
   54B63:	0010      	ld         ah, #+0x0
   54B64:	FB00      	**prefx    0xFB
   54B65:	7A9C      	bsr        -0x486 <___libcsrmesh_210:0x546DF[p]>
   54B66:	0100      	**prefx    0x1
   54B67:	BAE0      	bra        +0xBA <___libcsrmesh_425+0x2B5:0x54C21[p]>
   54B68:	6800      	**prefx    0x68
   54B69:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54B6A:	0984      	cmp        al, #+0x9
   54B6B:	06F4      	beq        +0x6 <___libcsrmesh_425+0x205:0x54B71[p]>
   54B6C:	0C84      	cmp        al, #+0xC
   54B6D:	04F4      	beq        +0x4 <___libcsrmesh_425+0x205:0x54B71[p]>
   54B6E:	0D84      	cmp        al, #+0xD
   54B6F:	0300      	**prefx    0x3
   54B70:	E8F0      	bne        +0x2E8 <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54B71:	121B      	ld         x, @(+0x12, y)
   54B72:	0438      	add        x, #+0x4
   54B73:	0414      	ld         al, #+0x4
   54B74:	6800      	**prefx    0x68
   54B75:	DE10      	ld         ah, #+0x67DE
   54B76:	FD09      	bc2        
   54B77:	1217      	ld         al, @(+0x12, y)
   54B78:	0234      	add        al, #+0x2
   54B79:	FC00      	**prefx    0xFC
   54B7A:	7C9C      	bsr        -0x384 <___libcsrmesh_452:0x547F6[p]>
   54B7B:	E199      	tst        @0xFFE1 <register al>
   54B7C:	0300      	**prefx    0x3
   54B7D:	DEF4      	beq        +0x2DE <___libcsrmesh_425+0x4EF:0x54E5B[p]>
   54B7E:	6800      	**prefx    0x68
   54B7F:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54B80:	0984      	cmp        al, #+0x9
   54B81:	4EF0      	bne        +0x4E <___libcsrmesh_425+0x263:0x54BCF[p]>
   54B82:	0018      	ld         x, #+0x0
   54B83:	002B      	st         x, @(0x0, y)
   54B84:	2614      	ld         al, #+0x26
   54B85:	0010      	ld         ah, #+0x0
   54B86:	FB00      	**prefx    0xFB
   54B87:	589C      	bsr        -0x4A8 <___libcsrmesh_210:0x546DF[p]>
   54B88:	0010      	ld         ah, #+0x0
   54B89:	6800      	**prefx    0x68
   54B8A:	F021      	st         ah, @0x67F0 <___libgatt_lib_db_703+0x17>
   54B8B:	6800      	**prefx    0x68
   54B8C:	F121      	st         ah, @0x67F1 <___libgatt_lib_db_703+0x18>
   54B8D:	1217      	ld         al, @(+0x12, y)
   54B8E:	0834      	add        al, #+0x8
   54B8F:	1227      	st         al, @(+0x12, y)
   54B90:	FD00      	**prefx    0xFD
   54B91:	219C      	bsr        -0x2DF <___libcsrmesh_456:0x548B2[p]>
   54B92:	6800      	**prefx    0x68
   54B93:	F015      	ld         al, @0x67F0 <___libgatt_lib_db_703+0x17>
   54B94:	0100      	**prefx    0x1
   54B95:	AB84      	cmp        al, #+0xAB
   54B96:	08F0      	bne        +0x8 <___libcsrmesh_425+0x232:0x54B9E[p]>
   54B97:	0018      	ld         x, #+0x0
   54B98:	6800      	**prefx    0x68
   54B99:	DD29      	st         x, @0x67DD <___libgatt_lib_db_703+0x4>
   54B9A:	0C10      	ld         ah, #+0xC
   54B9B:	6800      	**prefx    0x68
   54B9C:	F921      	st         ah, @0x67F9 <___libgatt_lib_db_703+0x20>
   54B9D:	09E0      	bra        +0x9 <___libcsrmesh_425+0x23A:0x54BA6[p]>
   54B9E:	6800      	**prefx    0x68
   54B9F:	F115      	ld         al, @0x67F1 <___libgatt_lib_db_703+0x18>
   54BA0:	0100      	**prefx    0x1
   54BA1:	AB84      	cmp        al, #+0xAB
   54BA2:	04F0      	bne        +0x4 <___libcsrmesh_425+0x23A:0x54BA6[p]>
   54BA3:	0D14      	ld         al, #+0xD
   54BA4:	6800      	**prefx    0x68
   54BA5:	F925      	st         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54BA6:	6C00      	**prefx    0x6C
   54BA7:	BB11      	ld         ah, @0x6BBB <g_mesh_context_data+0x1E>
   54BA8:	E019      	ld         x, @0xFFE0 <register ah>
   54BA9:	0100      	**prefx    0x1
   54BAA:	FFC8      	and        x, #0xFF
   54BAB:	6C00      	**prefx    0x6C
   54BAC:	1529      	st         x, @0x6C15 <mtl_operational_buffer+0x1>
   54BAD:	0009      	**unsigned
   54BAE:	08A4      	lsr        #0x8
   54BAF:	6C00      	**prefx    0x6C
   54BB0:	1621      	st         ah, @0x6C16 <mtl_operational_buffer+0x2>
   54BB1:	0214      	ld         al, #+0x2
   54BB2:	6C00      	**prefx    0x6C
   54BB3:	1710      	ld         ah, #+0x6C17
   54BB4:	6800      	**prefx    0x68
   54BB5:	EE18      	ld         x, #+0x67EE
   54BB6:	FD09      	bc2        
   54BB7:	6800      	**prefx    0x68
   54BB8:	E214      	ld         al, #+0x67E2
   54BB9:	0410      	ld         ah, #+0x4
   54BBA:	FD00      	**prefx    0xFD
   54BBB:	CD9C      	bsr        -0x333 <___libcsrmesh_453:0x54888[p]>
   54BBC:	0414      	ld         al, #+0x4
   54BBD:	6C00      	**prefx    0x6C
   54BBE:	1910      	ld         ah, #+0x6C19
   54BBF:	6800      	**prefx    0x68
   54BC0:	E218      	ld         x, #+0x67E2
   54BC1:	FD09      	bc2        
   54BC2:	6800      	**prefx    0x68
   54BC3:	E210      	ld         ah, #+0x67E2
   54BC4:	0023      	st         ah, @(0x0, y)
   54BC5:	0914      	ld         al, #+0x9
   54BC6:	0127      	st         al, @(+0x1, y)
   54BC7:	0018      	ld         x, #+0x0
   54BC8:	022B      	st         x, @(+0x2, y)
   54BC9:	6800      	**prefx    0x68
   54BCA:	F014      	ld         al, #+0x67F0
   54BCB:	6800      	**prefx    0x68
   54BCC:	F110      	ld         ah, #+0x67F1
   54BCD:	FC00      	**prefx    0xFC
   54BCE:	4E9C      	bsr        -0x3B2 <___libcsrmesh_451:0x5481C[p]>
   54BCF:	0E10      	ld         ah, #+0xE
   54BD0:	1023      	st         ah, @(+0x10, y)
   54BD1:	1114      	ld         al, #+0x11
   54BD2:	0F27      	st         al, @(+0xF, y)
   54BD3:	0200      	**prefx    0x2
   54BD4:	55E0      	bra        +0x255 <___libcsrmesh_425+0x4BD:0x54E29[p]>
   54BD5:	6800      	**prefx    0x68
   54BD6:	F911      	ld         ah, @0x67F9 <___libgatt_lib_db_703+0x20>
   54BD7:	0A80      	cmp        ah, #+0xA
   54BD8:	06F4      	beq        +0x6 <___libcsrmesh_425+0x272:0x54BDE[p]>
   54BD9:	0C80      	cmp        ah, #+0xC
   54BDA:	04F4      	beq        +0x4 <___libcsrmesh_425+0x272:0x54BDE[p]>
   54BDB:	0D80      	cmp        ah, #+0xD
   54BDC:	0200      	**prefx    0x2
   54BDD:	7BF0      	bne        +0x27B <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54BDE:	121B      	ld         x, @(+0x12, y)
   54BDF:	0216      	ld         al, @(+0x2, x)
   54BE0:	6800      	**prefx    0x68
   54BE1:	EE85      	cmp        al, @0x67EE <___libgatt_lib_db_703+0x15>
   54BE2:	0200      	**prefx    0x2
   54BE3:	71F0      	bne        +0x271 <___libcsrmesh_425+0x4E8:0x54E54[p]>
   54BE4:	0316      	ld         al, @(+0x3, x)
   54BE5:	6800      	**prefx    0x68
   54BE6:	EF85      	cmp        al, @0x67EF <___libgatt_lib_db_703+0x16>
   54BE7:	0200      	**prefx    0x2
   54BE8:	6CF0      	bne        +0x26C <___libcsrmesh_425+0x4E8:0x54E54[p]>
   54BE9:	0A80      	cmp        ah, #+0xA
   54BEA:	0200      	**prefx    0x2
   54BEB:	3AF0      	bne        +0x23A <___libcsrmesh_425+0x4B9:0x54E25[p]>
   54BEC:	0438      	add        x, #+0x4
   54BED:	0414      	ld         al, #+0x4
   54BEE:	6800      	**prefx    0x68
   54BEF:	E210      	ld         ah, #+0x67E2
   54BF0:	FD09      	bc2        
   54BF1:	0010      	ld         ah, #+0x0
   54BF2:	0A23      	st         ah, @(+0xA, y)
   54BF3:	0A17      	ld         al, @(+0xA, y)
   54BF4:	6100      	**prefx    0x61
   54BF5:	D034      	add        al, #+0x60D0
   54BF6:	0A13      	ld         ah, @(+0xA, y)
   54BF7:	6100      	**prefx    0x61
   54BF8:	D130      	add        ah, #+0x60D1
   54BF9:	6800      	**prefx    0x68
   54BFA:	E218      	ld         x, #+0x67E2
   54BFB:	002B      	st         x, @(0x0, y)
   54BFC:	0018      	ld         x, #+0x0
   54BFD:	012B      	st         x, @(+0x1, y)
   54BFE:	121B      	ld         x, @(+0x12, y)
   54BFF:	0838      	add        x, #+0x8
   54C00:	022B      	st         x, @(+0x2, y)
   54C01:	FC00      	**prefx    0xFC
   54C02:	1A9C      	bsr        -0x3E6 <___libcsrmesh_451:0x5481C[p]>
   54C03:	E199      	tst        @0xFFE1 <register al>
   54C04:	06F0      	bne        +0x6 <___libcsrmesh_425+0x29E:0x54C0A[p]>
   54C05:	0A13      	ld         ah, @(+0xA, y)
   54C06:	0230      	add        ah, #+0x2
   54C07:	0A23      	st         ah, @(+0xA, y)
   54C08:	0880      	cmp        ah, #+0x8
   54C09:	EAF0      	bne        -0x16 <___libcsrmesh_425+0x287:0x54BF3[p]>
   54C0A:	0A1B      	ld         x, @(+0xA, y)
   54C0B:	6100      	**prefx    0x61
   54C0C:	D012      	ld         ah, @(+0x60D0, x)
   54C0D:	6800      	**prefx    0x68
   54C0E:	F021      	st         ah, @0x67F0 <___libgatt_lib_db_703+0x17>
   54C0F:	6100      	**prefx    0x61
   54C10:	D116      	ld         al, @(+0x60D1, x)
   54C11:	6800      	**prefx    0x68
   54C12:	F125      	st         al, @0x67F1 <___libgatt_lib_db_703+0x18>
   54C13:	0888      	cmp        x, #+0x8
   54C14:	5BF4      	beq        +0x5B <___libcsrmesh_425+0x303:0x54C6F[p]>
   54C15:	5C80      	cmp        ah, #+0x5C
   54C16:	0FF0      	bne        +0xF <___libcsrmesh_425+0x2B9:0x54C25[p]>
   54C17:	5C84      	cmp        al, #+0x5C
   54C18:	0DF0      	bne        +0xD <___libcsrmesh_425+0x2B9:0x54C25[p]>
   54C19:	0010      	ld         ah, #+0x0
   54C1A:	0023      	st         ah, @(0x0, y)
   54C1B:	2514      	ld         al, #+0x25
   54C1C:	FB00      	**prefx    0xFB
   54C1D:	C29C      	bsr        -0x53E <___libcsrmesh_210:0x546DF[p]>
   54C1E:	0914      	ld         al, #+0x9
   54C1F:	6800      	**prefx    0x68
   54C20:	F925      	st         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54C21:	0018      	ld         x, #+0x0
   54C22:	0D2B      	st         x, @(+0xD, y)
   54C23:	0200      	**prefx    0x2
   54C24:	32E0      	bra        +0x232 <___libcsrmesh_425+0x4EA:0x54E56[p]>
   54C25:	6C00      	**prefx    0x6C
   54C26:	BB11      	ld         ah, @0x6BBB <g_mesh_context_data+0x1E>
   54C27:	E015      	ld         al, @0xFFE0 <register ah>
   54C28:	0100      	**prefx    0x1
   54C29:	FFC4      	and        al, #0xFF
   54C2A:	6C00      	**prefx    0x6C
   54C2B:	1525      	st         al, @0x6C15 <mtl_operational_buffer+0x1>
   54C2C:	0009      	**unsigned
   54C2D:	08A4      	lsr        #0x8
   54C2E:	6C00      	**prefx    0x6C
   54C2F:	1621      	st         ah, @0x6C16 <mtl_operational_buffer+0x2>
   54C30:	6800      	**prefx    0x68
   54C31:	EE19      	ld         x, @0x67EE <___libgatt_lib_db_703+0x15>
   54C32:	6C00      	**prefx    0x6C
   54C33:	1729      	st         x, @0x6C17 <mtl_operational_buffer+0x3>
   54C34:	6800      	**prefx    0x68
   54C35:	EF11      	ld         ah, @0x67EF <___libgatt_lib_db_703+0x16>
   54C36:	6C00      	**prefx    0x6C
   54C37:	1821      	st         ah, @0x6C18 <mtl_operational_buffer+0x4>
   54C38:	0014      	ld         al, #+0x0
   54C39:	0027      	st         al, @(0x0, y)
   54C3A:	0127      	st         al, @(+0x1, y)
   54C3B:	6800      	**prefx    0x68
   54C3C:	E218      	ld         x, #+0x67E2
   54C3D:	022B      	st         x, @(+0x2, y)
   54C3E:	0410      	ld         ah, #+0x4
   54C3F:	0323      	st         ah, @(+0x3, y)
   54C40:	6C00      	**prefx    0x6C
   54C41:	1914      	ld         al, #+0x6C19
   54C42:	0427      	st         al, @(+0x4, y)
   54C43:	0218      	ld         x, #+0x2
   54C44:	052B      	st         x, @(+0x5, y)
   54C45:	6C00      	**prefx    0x6C
   54C46:	D914      	ld         al, #+0x6BD9
   54C47:	1810      	ld         ah, #+0x18
   54C48:	0800      	**prefx    0x8
   54C49:	F29C      	bsr        +0x7F2 <___libcsrmesh_305:0x5543B[p]>
   54C4A:	6800      	**prefx    0x68
   54C4B:	F119      	ld         x, @0x67F1 <___libgatt_lib_db_703+0x18>
   54C4C:	0100      	**prefx    0x1
   54C4D:	AB88      	cmp        x, #+0xAB
   54C4E:	04F0      	bne        +0x4 <___libcsrmesh_425+0x2E6:0x54C52[p]>
   54C4F:	0100      	**prefx    0x1
   54C50:	F014      	ld         al, #+0xF0
   54C51:	02E0      	bra        +0x2 <___libcsrmesh_425+0x2E7:0x54C53[p]>
   54C52:	0014      	ld         al, #+0x0
   54C53:	6800      	**prefx    0x68
   54C54:	F011      	ld         ah, @0x67F0 <___libgatt_lib_db_703+0x17>
   54C55:	0100      	**prefx    0x1
   54C56:	AB80      	cmp        ah, #+0xAB
   54C57:	02F0      	bne        +0x2 <___libcsrmesh_425+0x2ED:0x54C59[p]>
   54C58:	0FB4      	or         al, #+0xF
   54C59:	6C00      	**prefx    0x6C
   54C5A:	1B25      	st         al, @0x6C1B <mtl_operational_buffer+0x7>
   54C5B:	0100      	**prefx    0x1
   54C5C:	AB80      	cmp        ah, #+0xAB
   54C5D:	06F0      	bne        +0x6 <___libcsrmesh_425+0x2F7:0x54C63[p]>
   54C5E:	0010      	ld         ah, #+0x0
   54C5F:	6800      	**prefx    0x68
   54C60:	DD21      	st         ah, @0x67DD <___libgatt_lib_db_703+0x4>
   54C61:	0C14      	ld         al, #+0xC
   54C62:	06E0      	bra        +0x6 <___libcsrmesh_425+0x2FC:0x54C68[p]>
   54C63:	0100      	**prefx    0x1
   54C64:	AB88      	cmp        x, #+0xAB
   54C65:	0200      	**prefx    0x2
   54C66:	BFF0      	bne        +0x1BF <___libcsrmesh_425+0x4B9:0x54E25[p]>
   54C67:	0D14      	ld         al, #+0xD
   54C68:	6800      	**prefx    0x68
   54C69:	F925      	st         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54C6A:	0718      	ld         x, #+0x7
   54C6B:	102B      	st         x, @(+0x10, y)
   54C6C:	1610      	ld         ah, #+0x16
   54C6D:	0200      	**prefx    0x2
   54C6E:	B5E0      	bra        +0x1B5 <___libcsrmesh_425+0x4B7:0x54E23[p]>
   54C6F:	0014      	ld         al, #+0x0
   54C70:	0027      	st         al, @(0x0, y)
   54C71:	2714      	ld         al, #+0x27
   54C72:	0100      	**prefx    0x1
   54C73:	FF10      	ld         ah, #+0xFF
   54C74:	FA00      	**prefx    0xFA
   54C75:	6A9C      	bsr        -0x596 <___libcsrmesh_210:0x546DF[p]>
   54C76:	0918      	ld         x, #+0x9
   54C77:	6800      	**prefx    0x68
   54C78:	F929      	st         x, @0x67F9 <___libgatt_lib_db_703+0x20>
   54C79:	0200      	**prefx    0x2
   54C7A:	DAE0      	bra        +0x1DA <___libcsrmesh_425+0x4E8:0x54E54[p]>
   54C7B:	6800      	**prefx    0x68
   54C7C:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54C7D:	F434      	add        al, #-0xC
   54C7E:	0284      	cmp        al, #+0x2
   54C7F:	0200      	**prefx    0x2
   54C80:	D8F8      	bcc        +0x1D8 <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54C81:	1213      	ld         ah, @(+0x12, y)
   54C82:	0230      	add        ah, #+0x2
   54C83:	0214      	ld         al, #+0x2
   54C84:	0027      	st         al, @(0x0, y)
   54C85:	6800      	**prefx    0x68
   54C86:	EE14      	ld         al, #+0x67EE
   54C87:	FC00      	**prefx    0xFC
   54C88:	1300      	**prefx    0x13
   54C89:	A89C      	bsr        -0x3ED58 <MemCmp:0x15F31[p]>
   54C8A:	E199      	tst        @0xFFE1 <register al>
   54C8B:	0200      	**prefx    0x2
   54C8C:	CCF0      	bne        +0x1CC <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54C8D:	121B      	ld         x, @(+0x12, y)
   54C8E:	041A      	ld         x, @(+0x4, x)
   54C8F:	092B      	st         x, @(+0x9, y)
   54C90:	0288      	cmp        x, #+0x2
   54C91:	45F8      	bcc        +0x45 <___libcsrmesh_425+0x36A:0x54CD6[p]>
   54C92:	0114      	ld         al, #+0x1
   54C93:	E3A1      	asl        @0xFFE3 <register uxl>
   54C94:	E119      	ld         x, @0xFFE1 <register al>
   54C95:	6800      	**prefx    0x68
   54C96:	DD11      	ld         ah, @0x67DD <___libgatt_lib_db_703+0x4>
   54C97:	E0C5      	and        al, @0xFFE0 <register ah>
   54C98:	3EF0      	bne        +0x3E <___libcsrmesh_425+0x36A:0x54CD6[p]>
   54C99:	E0B9      	or         x, @0xFFE0 <register ah>
   54C9A:	6800      	**prefx    0x68
   54C9B:	DD29      	st         x, @0x67DD <___libgatt_lib_db_703+0x4>
   54C9C:	0917      	ld         al, @(+0x9, y)
   54C9D:	03A0      	asl        #0x3
   54C9E:	E111      	ld         ah, @0xFFE1 <register al>
   54C9F:	6800      	**prefx    0x68
   54CA0:	C830      	add        ah, #+0x67C8
   54CA1:	1217      	ld         al, @(+0x12, y)
   54CA2:	0534      	add        al, #+0x5
   54CA3:	1227      	st         al, @(+0x12, y)
   54CA4:	0814      	ld         al, #+0x8
   54CA5:	121B      	ld         x, @(+0x12, y)
   54CA6:	FD09      	bc2        
   54CA7:	6800      	**prefx    0x68
   54CA8:	DD15      	ld         al, @0x67DD <___libgatt_lib_db_703+0x4>
   54CA9:	03C4      	and        al, #0x3
   54CAA:	0384      	cmp        al, #+0x3
   54CAB:	2BF0      	bne        +0x2B <___libcsrmesh_425+0x36A:0x54CD6[p]>
   54CAC:	0414      	ld         al, #+0x4
   54CAD:	6C00      	**prefx    0x6C
   54CAE:	1410      	ld         ah, #+0x6C14
   54CAF:	6800      	**prefx    0x68
   54CB0:	DE18      	ld         x, #+0x67DE
   54CB1:	FD09      	bc2        
   54CB2:	0414      	ld         al, #+0x4
   54CB3:	6C00      	**prefx    0x6C
   54CB4:	1810      	ld         ah, #+0x6C18
   54CB5:	6800      	**prefx    0x68
   54CB6:	E218      	ld         x, #+0x67E2
   54CB7:	FD09      	bc2        
   54CB8:	0018      	ld         x, #+0x0
   54CB9:	002B      	st         x, @(0x0, y)
   54CBA:	012B      	st         x, @(+0x1, y)
   54CBB:	6C00      	**prefx    0x6C
   54CBC:	D910      	ld         ah, #+0x6BD9
   54CBD:	0223      	st         ah, @(+0x2, y)
   54CBE:	1814      	ld         al, #+0x18
   54CBF:	0327      	st         al, @(+0x3, y)
   54CC0:	6C00      	**prefx    0x6C
   54CC1:	1418      	ld         x, #+0x6C14
   54CC2:	042B      	st         x, @(+0x4, y)
   54CC3:	1010      	ld         ah, #+0x10
   54CC4:	0523      	st         ah, @(+0x5, y)
   54CC5:	E315      	ld         al, @0xFFE3 <register uxl>
   54CC6:	0810      	ld         ah, #+0x8
   54CC7:	0700      	**prefx    0x7
   54CC8:	739C      	bsr        +0x773 <___libcsrmesh_305:0x5543B[p]>
   54CC9:	0118      	ld         x, #+0x1
   54CCA:	6800      	**prefx    0x68
   54CCB:	C716      	ld         al, @(+0x67C7, x)
   54CCC:	6C00      	**prefx    0x6C
   54CCD:	13D6      	xor        al, @(+0x6C13, x)
   54CCE:	6800      	**prefx    0x68
   54CCF:	C726      	st         al, @(+0x67C7, x)
   54CD0:	0138      	add        x, #+0x1
   54CD1:	1188      	cmp        x, #+0x11
   54CD2:	F8F0      	bne        -0x8 <___libcsrmesh_425+0x35E:0x54CCA[p]>
   54CD3:	0D18      	ld         x, #+0xD
   54CD4:	6800      	**prefx    0x68
   54CD5:	F929      	st         x, @0x67F9 <___libgatt_lib_db_703+0x20>
   54CD6:	0917      	ld         al, @(+0x9, y)
   54CD7:	0010      	ld         ah, #+0x0
   54CD8:	FB00      	**prefx    0xFB
   54CD9:	919C      	bsr        -0x56F <___libcsrmesh_455:0x5476A[p]>
   54CDA:	1027      	st         al, @(+0x10, y)
   54CDB:	1410      	ld         ah, #+0x14
   54CDC:	0100      	**prefx    0x1
   54CDD:	46E0      	bra        +0x146 <___libcsrmesh_425+0x4B7:0x54E23[p]>
   54CDE:	6800      	**prefx    0x68
   54CDF:	F115      	ld         al, @0x67F1 <___libgatt_lib_db_703+0x18>
   54CE0:	0100      	**prefx    0x1
   54CE1:	AB84      	cmp        al, #+0xAB
   54CE2:	0100      	**prefx    0x1
   54CE3:	75F0      	bne        +0x175 <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54CE4:	6800      	**prefx    0x68
   54CE5:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54CE6:	0D84      	cmp        al, #+0xD
   54CE7:	0100      	**prefx    0x1
   54CE8:	70F0      	bne        +0x170 <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54CE9:	1213      	ld         ah, @(+0x12, y)
   54CEA:	0230      	add        ah, #+0x2
   54CEB:	0214      	ld         al, #+0x2
   54CEC:	0027      	st         al, @(0x0, y)
   54CED:	6800      	**prefx    0x68
   54CEE:	EE14      	ld         al, #+0x67EE
   54CEF:	FC00      	**prefx    0xFC
   54CF0:	1200      	**prefx    0x12
   54CF1:	409C      	bsr        -0x3EDC0 <MemCmp:0x15F31[p]>
   54CF2:	E199      	tst        @0xFFE1 <register al>
   54CF3:	0100      	**prefx    0x1
   54CF4:	67F0      	bne        +0x167 <___libcsrmesh_425+0x4EF:0x54E5B[p]>
   54CF5:	0414      	ld         al, #+0x4
   54CF6:	6C00      	**prefx    0x6C
   54CF7:	1410      	ld         ah, #+0x6C14
   54CF8:	6800      	**prefx    0x68
   54CF9:	E218      	ld         x, #+0x67E2
   54CFA:	FD09      	bc2        
   54CFB:	0414      	ld         al, #+0x4
   54CFC:	6C00      	**prefx    0x6C
   54CFD:	1810      	ld         ah, #+0x6C18
   54CFE:	6800      	**prefx    0x68
   54CFF:	DE18      	ld         x, #+0x67DE
   54D00:	FD09      	bc2        
   54D01:	0018      	ld         x, #+0x0
   54D02:	002B      	st         x, @(0x0, y)
   54D03:	012B      	st         x, @(+0x1, y)
   54D04:	6C00      	**prefx    0x6C
   54D05:	D910      	ld         ah, #+0x6BD9
   54D06:	0223      	st         ah, @(+0x2, y)
   54D07:	1814      	ld         al, #+0x18
   54D08:	0327      	st         al, @(+0x3, y)
   54D09:	6C00      	**prefx    0x6C
   54D0A:	1418      	ld         x, #+0x6C14
   54D0B:	042B      	st         x, @(+0x4, y)
   54D0C:	0810      	ld         ah, #+0x8
   54D0D:	0523      	st         ah, @(+0x5, y)
   54D0E:	E315      	ld         al, @0xFFE3 <register uxl>
   54D0F:	0700      	**prefx    0x7
   54D10:	2B9C      	bsr        +0x72B <___libcsrmesh_305:0x5543B[p]>
   54D11:	0114      	ld         al, #+0x1
   54D12:	121B      	ld         x, @(+0x12, y)
   54D13:	E139      	add        x, @0xFFE1 <register al>
   54D14:	F829      	st         x, @0xFFF8 <(scratchpad)>
   54D15:	E119      	ld         x, @0xFFE1 <register al>
   54D16:	6C00      	**prefx    0x6C
   54D17:	1312      	ld         ah, @(+0x6C13, x)
   54D18:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54D19:	03D2      	xor        ah, @(+0x3, x)
   54D1A:	E119      	ld         x, @0xFFE1 <register al>
   54D1B:	6800      	**prefx    0x68
   54D1C:	E522      	st         ah, @(+0x67E5, x)
   54D1D:	0134      	add        al, #+0x1
   54D1E:	0984      	cmp        al, #+0x9
   54D1F:	F3F0      	bne        -0xD <___libcsrmesh_425+0x3A6:0x54D12[p]>
   54D20:	0E14      	ld         al, #+0xE
   54D21:	6800      	**prefx    0x68
   54D22:	F925      	st         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54D23:	1014      	ld         al, #+0x10
   54D24:	0010      	ld         ah, #+0x0
   54D25:	FA00      	**prefx    0xFA
   54D26:	449C      	bsr        -0x5BC <___libcsrmesh_455:0x5476A[p]>
   54D27:	1027      	st         al, @(+0x10, y)
   54D28:	1418      	ld         x, #+0x14
   54D29:	0100      	**prefx    0x1
   54D2A:	FEE0      	bra        +0xFE <___libcsrmesh_425+0x4BC:0x54E28[p]>
   54D2B:	6800      	**prefx    0x68
   54D2C:	F911      	ld         ah, @0x67F9 <___libgatt_lib_db_703+0x20>
   54D2D:	E015      	ld         al, @0xFFE0 <register ah>
   54D2E:	F334      	add        al, #-0xD
   54D2F:	0184      	cmp        al, #+0x1
   54D30:	042C      	bcz        +0x4 <___libcsrmesh_425+0x3C8:0x54D34[p]>
   54D31:	0980      	cmp        ah, #+0x9
   54D32:	0100      	**prefx    0x1
   54D33:	25F0      	bne        +0x125 <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54D34:	1213      	ld         ah, @(+0x12, y)
   54D35:	0230      	add        ah, #+0x2
   54D36:	0214      	ld         al, #+0x2
   54D37:	0027      	st         al, @(0x0, y)
   54D38:	6800      	**prefx    0x68
   54D39:	EE14      	ld         al, #+0x67EE
   54D3A:	FC00      	**prefx    0xFC
   54D3B:	1200      	**prefx    0x12
   54D3C:	F59C      	bsr        -0x3EE0B <MemCmp:0x15F31[p]>
   54D3D:	E199      	tst        @0xFFE1 <register al>
   54D3E:	0100      	**prefx    0x1
   54D3F:	19F0      	bne        +0x119 <___libcsrmesh_425+0x4EC:0x54E58[p]>
   54D40:	6800      	**prefx    0x68
   54D41:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54D42:	F334      	add        al, #-0xD
   54D43:	0184      	cmp        al, #+0x1
   54D44:	032C      	bcz        +0x3 <___libcsrmesh_425+0x3DB:0x54D47[p]>
   54D45:	0100      	**prefx    0x1
   54D46:	DAE0      	bra        +0xDA <___libcsrmesh_425+0x4B4:0x54E20[p]>
   54D47:	6C00      	**prefx    0x6C
   54D48:	BB11      	ld         ah, @0x6BBB <g_mesh_context_data+0x1E>
   54D49:	E015      	ld         al, @0xFFE0 <register ah>
   54D4A:	0100      	**prefx    0x1
   54D4B:	FFC4      	and        al, #0xFF
   54D4C:	6C00      	**prefx    0x6C
   54D4D:	1425      	st         al, @0x6C14 <mtl_operational_buffer>
   54D4E:	0009      	**unsigned
   54D4F:	08A4      	lsr        #0x8
   54D50:	6C00      	**prefx    0x6C
   54D51:	1521      	st         ah, @0x6C15 <mtl_operational_buffer+0x1>
   54D52:	6800      	**prefx    0x68
   54D53:	F015      	ld         al, @0x67F0 <___libgatt_lib_db_703+0x17>
   54D54:	0100      	**prefx    0x1
   54D55:	AB84      	cmp        al, #+0xAB
   54D56:	08F0      	bne        +0x8 <___libcsrmesh_425+0x3F2:0x54D5E[p]>
   54D57:	1014      	ld         al, #+0x10
   54D58:	6C00      	**prefx    0x6C
   54D59:	1610      	ld         ah, #+0x6C16
   54D5A:	6800      	**prefx    0x68
   54D5B:	C818      	ld         x, #+0x67C8
   54D5C:	FD09      	bc2        
   54D5D:	05E0      	bra        +0x5 <___libcsrmesh_425+0x3F6:0x54D62[p]>
   54D5E:	6C00      	**prefx    0x6C
   54D5F:	1614      	ld         al, #+0x6C16
   54D60:	F500      	**prefx    0xF5
   54D61:	199C      	bsr        -0xAE7 <___libcsrmesh_270:0x5427A[p]>
   54D62:	6800      	**prefx    0x68
   54D63:	F115      	ld         al, @0x67F1 <___libgatt_lib_db_703+0x18>
   54D64:	0100      	**prefx    0x1
   54D65:	AB84      	cmp        al, #+0xAB
   54D66:	07F0      	bne        +0x7 <___libcsrmesh_425+0x401:0x54D6D[p]>
   54D67:	0814      	ld         al, #+0x8
   54D68:	6C00      	**prefx    0x6C
   54D69:	2610      	ld         ah, #+0x6C26
   54D6A:	6800      	**prefx    0x68
   54D6B:	E618      	ld         x, #+0x67E6
   54D6C:	06E0      	bra        +0x6 <___libcsrmesh_425+0x406:0x54D72[p]>
   54D6D:	0814      	ld         al, #+0x8
   54D6E:	6C00      	**prefx    0x6C
   54D6F:	2610      	ld         ah, #+0x6C26
   54D70:	6C00      	**prefx    0x6C
   54D71:	D118      	ld         x, #+0x6BD1
   54D72:	FD09      	bc2        
   54D73:	0414      	ld         al, #+0x4
   54D74:	6C00      	**prefx    0x6C
   54D75:	2E10      	ld         ah, #+0x6C2E
   54D76:	6800      	**prefx    0x68
   54D77:	DE18      	ld         x, #+0x67DE
   54D78:	FD09      	bc2        
   54D79:	0414      	ld         al, #+0x4
   54D7A:	6C00      	**prefx    0x6C
   54D7B:	3210      	ld         ah, #+0x6C32
   54D7C:	6800      	**prefx    0x68
   54D7D:	E218      	ld         x, #+0x67E2
   54D7E:	FD09      	bc2        
   54D7F:	0018      	ld         x, #+0x0
   54D80:	002B      	st         x, @(0x0, y)
   54D81:	012B      	st         x, @(+0x1, y)
   54D82:	6C00      	**prefx    0x6C
   54D83:	D910      	ld         ah, #+0x6BD9
   54D84:	0223      	st         ah, @(+0x2, y)
   54D85:	1814      	ld         al, #+0x18
   54D86:	0327      	st         al, @(+0x3, y)
   54D87:	6C00      	**prefx    0x6C
   54D88:	1918      	ld         x, #+0x6C19
   54D89:	042B      	st         x, @(+0x4, y)
   54D8A:	0610      	ld         ah, #+0x6
   54D8B:	0523      	st         ah, @(+0x5, y)
   54D8C:	6C00      	**prefx    0x6C
   54D8D:	1414      	ld         al, #+0x6C14
   54D8E:	2210      	ld         ah, #+0x22
   54D8F:	0700      	**prefx    0x7
   54D90:	AB9C      	bsr        +0x6AB <___libcsrmesh_305:0x5543B[p]>
   54D91:	1217      	ld         al, @(+0x12, y)
   54D92:	0434      	add        al, #+0x4
   54D93:	1227      	st         al, @(+0x12, y)
   54D94:	0618      	ld         x, #+0x6
   54D95:	002B      	st         x, @(0x0, y)
   54D96:	6C00      	**prefx    0x6C
   54D97:	1914      	ld         al, #+0x6C19
   54D98:	1213      	ld         ah, @(+0x12, y)
   54D99:	FC00      	**prefx    0xFC
   54D9A:	1200      	**prefx    0x12
   54D9B:	969C      	bsr        -0x3EE6A <MemCmp:0x15F31[p]>
   54D9C:	E199      	tst        @0xFFE1 <register al>
   54D9D:	14F0      	bne        +0x14 <___libcsrmesh_425+0x445:0x54DB1[p]>
   54D9E:	6800      	**prefx    0x68
   54D9F:	F015      	ld         al, @0x67F0 <___libgatt_lib_db_703+0x17>
   54DA0:	0100      	**prefx    0x1
   54DA1:	AB84      	cmp        al, #+0xAB
   54DA2:	05F0      	bne        +0x5 <___libcsrmesh_425+0x43B:0x54DA7[p]>
   54DA3:	6800      	**prefx    0x68
   54DA4:	C814      	ld         al, #+0x67C8
   54DA5:	F500      	**prefx    0xF5
   54DA6:	689C      	bsr        -0xA98 <___libcsrmesh_283:0x5430E[p]>
   54DA7:	6800      	**prefx    0x68
   54DA8:	F115      	ld         al, @0x67F1 <___libgatt_lib_db_703+0x18>
   54DA9:	0100      	**prefx    0x1
   54DAA:	AB84      	cmp        al, #+0xAB
   54DAB:	0DF0      	bne        +0xD <___libcsrmesh_425+0x44C:0x54DB8[p]>
   54DAC:	6800      	**prefx    0x68
   54DAD:	E614      	ld         al, #+0x67E6
   54DAE:	F500      	**prefx    0xF5
   54DAF:	3E9C      	bsr        -0xAC2 <___libcsrmesh_282:0x542ED[p]>
   54DB0:	08E0      	bra        +0x8 <___libcsrmesh_425+0x44C:0x54DB8[p]>
   54DB1:	0010      	ld         ah, #+0x0
   54DB2:	0023      	st         ah, @(0x0, y)
   54DB3:	2814      	ld         al, #+0x28
   54DB4:	0100      	**prefx    0x1
   54DB5:	FF10      	ld         ah, #+0xFF
   54DB6:	F900      	**prefx    0xF9
   54DB7:	289C      	bsr        -0x6D8 <___libcsrmesh_210:0x546DF[p]>
   54DB8:	0914      	ld         al, #+0x9
   54DB9:	6800      	**prefx    0x68
   54DBA:	F925      	st         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54DBB:	0018      	ld         x, #+0x0
   54DBC:	6800      	**prefx    0x68
   54DBD:	C629      	st         x, @0x67C6 <L0+0x1D>
   54DBE:	6800      	**prefx    0x68
   54DBF:	C610      	ld         ah, #+0x67C6
   54DC0:	0023      	st         ah, @(0x0, y)
   54DC1:	2814      	ld         al, #+0x28
   54DC2:	0010      	ld         ah, #+0x0
   54DC3:	F900      	**prefx    0xF9
   54DC4:	1B9C      	bsr        -0x6E5 <___libcsrmesh_210:0x546DF[p]>
   54DC5:	0414      	ld         al, #+0x4
   54DC6:	6C00      	**prefx    0x6C
   54DC7:	1410      	ld         ah, #+0x6C14
   54DC8:	6800      	**prefx    0x68
   54DC9:	E218      	ld         x, #+0x67E2
   54DCA:	FD09      	bc2        
   54DCB:	0414      	ld         al, #+0x4
   54DCC:	6C00      	**prefx    0x6C
   54DCD:	1810      	ld         ah, #+0x6C18
   54DCE:	6800      	**prefx    0x68
   54DCF:	DE18      	ld         x, #+0x67DE
   54DD0:	FD09      	bc2        
   54DD1:	6800      	**prefx    0x68
   54DD2:	F015      	ld         al, @0x67F0 <___libgatt_lib_db_703+0x17>
   54DD3:	0100      	**prefx    0x1
   54DD4:	AB84      	cmp        al, #+0xAB
   54DD5:	08F0      	bne        +0x8 <___libcsrmesh_425+0x471:0x54DDD[p]>
   54DD6:	1014      	ld         al, #+0x10
   54DD7:	6C00      	**prefx    0x6C
   54DD8:	1C10      	ld         ah, #+0x6C1C
   54DD9:	6800      	**prefx    0x68
   54DDA:	C818      	ld         x, #+0x67C8
   54DDB:	FD09      	bc2        
   54DDC:	05E0      	bra        +0x5 <___libcsrmesh_425+0x475:0x54DE1[p]>
   54DDD:	6C00      	**prefx    0x6C
   54DDE:	1C14      	ld         al, #+0x6C1C
   54DDF:	F500      	**prefx    0xF5
   54DE0:	9A9C      	bsr        -0xB66 <___libcsrmesh_270:0x5427A[p]>
   54DE1:	6800      	**prefx    0x68
   54DE2:	F115      	ld         al, @0x67F1 <___libgatt_lib_db_703+0x18>
   54DE3:	0100      	**prefx    0x1
   54DE4:	AB84      	cmp        al, #+0xAB
   54DE5:	07F0      	bne        +0x7 <___libcsrmesh_425+0x480:0x54DEC[p]>
   54DE6:	0814      	ld         al, #+0x8
   54DE7:	6C00      	**prefx    0x6C
   54DE8:	2C10      	ld         ah, #+0x6C2C
   54DE9:	6800      	**prefx    0x68
   54DEA:	E618      	ld         x, #+0x67E6
   54DEB:	06E0      	bra        +0x6 <___libcsrmesh_425+0x485:0x54DF1[p]>
   54DEC:	0814      	ld         al, #+0x8
   54DED:	6C00      	**prefx    0x6C
   54DEE:	2C10      	ld         ah, #+0x6C2C
   54DEF:	6C00      	**prefx    0x6C
   54DF0:	D118      	ld         x, #+0x6BD1
   54DF1:	FD09      	bc2        
   54DF2:	6C00      	**prefx    0x6C
   54DF3:	BB11      	ld         ah, @0x6BBB <g_mesh_context_data+0x1E>
   54DF4:	E015      	ld         al, @0xFFE0 <register ah>
   54DF5:	0100      	**prefx    0x1
   54DF6:	FFC4      	and        al, #0xFF
   54DF7:	6C00      	**prefx    0x6C
   54DF8:	3425      	st         al, @0x6C34 <mtl_operational_buffer+0x20>
   54DF9:	0009      	**unsigned
   54DFA:	08A4      	lsr        #0x8
   54DFB:	6C00      	**prefx    0x6C
   54DFC:	3521      	st         ah, @0x6C35 <mtl_operational_buffer+0x21>
   54DFD:	0018      	ld         x, #+0x0
   54DFE:	002B      	st         x, @(0x0, y)
   54DFF:	012B      	st         x, @(+0x1, y)
   54E00:	6C00      	**prefx    0x6C
   54E01:	D910      	ld         ah, #+0x6BD9
   54E02:	0223      	st         ah, @(+0x2, y)
   54E03:	1814      	ld         al, #+0x18
   54E04:	0327      	st         al, @(+0x3, y)
   54E05:	6C00      	**prefx    0x6C
   54E06:	1918      	ld         x, #+0x6C19
   54E07:	042B      	st         x, @(+0x4, y)
   54E08:	0610      	ld         ah, #+0x6
   54E09:	0523      	st         ah, @(+0x5, y)
   54E0A:	6C00      	**prefx    0x6C
   54E0B:	1414      	ld         al, #+0x6C14
   54E0C:	2210      	ld         ah, #+0x22
   54E0D:	0600      	**prefx    0x6
   54E0E:	2D9C      	bsr        +0x62D <___libcsrmesh_305:0x5543B[p]>
   54E0F:	6C00      	**prefx    0x6C
   54E10:	BB11      	ld         ah, @0x6BBB <g_mesh_context_data+0x1E>
   54E11:	E015      	ld         al, @0xFFE0 <register ah>
   54E12:	0100      	**prefx    0x1
   54E13:	FFC4      	and        al, #0xFF
   54E14:	6C00      	**prefx    0x6C
   54E15:	1525      	st         al, @0x6C15 <mtl_operational_buffer+0x1>
   54E16:	0009      	**unsigned
   54E17:	08A4      	lsr        #0x8
   54E18:	6C00      	**prefx    0x6C
   54E19:	1621      	st         ah, @0x6C16 <mtl_operational_buffer+0x2>
   54E1A:	0214      	ld         al, #+0x2
   54E1B:	6C00      	**prefx    0x6C
   54E1C:	1710      	ld         ah, #+0x6C17
   54E1D:	6800      	**prefx    0x68
   54E1E:	EE18      	ld         x, #+0x67EE
   54E1F:	FD09      	bc2        
   54E20:	0A18      	ld         x, #+0xA
   54E21:	102B      	st         x, @(+0x10, y)
   54E22:	1710      	ld         ah, #+0x17
   54E23:	0F23      	st         ah, @(+0xF, y)
   54E24:	05E0      	bra        +0x5 <___libcsrmesh_425+0x4BD:0x54E29[p]>
   54E25:	0714      	ld         al, #+0x7
   54E26:	1027      	st         al, @(+0x10, y)
   54E27:	1618      	ld         x, #+0x16
   54E28:	0F2B      	st         x, @(+0xF, y)
   54E29:	6800      	**prefx    0x68
   54E2A:	B014      	ld         al, #+0x67B0
   54E2B:	0F00      	**prefx    0xF
   54E2C:	579C      	bsr        +0xF57 <___libcsrmesh_363:0x55D83[p]>
   54E2D:	E199      	tst        @0xFFE1 <register al>
   54E2E:	05F4      	beq        +0x5 <___libcsrmesh_425+0x4C7:0x54E33[p]>
   54E2F:	6800      	**prefx    0x68
   54E30:	B014      	ld         al, #+0x67B0
   54E31:	0F00      	**prefx    0xF
   54E32:	689C      	bsr        +0xF68 <___libcsrmesh_366:0x55D9A[p]>
   54E33:	0F17      	ld         al, @(+0xF, y)
   54E34:	1013      	ld         ah, @(+0x10, y)
   54E35:	FB00      	**prefx    0xFB
   54E36:	E19C      	bsr        -0x51F <___libcsrmesh_211:0x54917[p]>
   54E37:	0D27      	st         al, @(+0xD, y)
   54E38:	14F0      	bne        +0x14 <___libcsrmesh_425+0x4E0:0x54E4C[p]>
   54E39:	6800      	**prefx    0x68
   54E3A:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54E3B:	0984      	cmp        al, #+0x9
   54E3C:	1AF4      	beq        +0x1A <___libcsrmesh_425+0x4EA:0x54E56[p]>
   54E3D:	4F00      	**prefx    0x4F
   54E3E:	B610      	ld         ah, #+0x4EB6
   54E3F:	0123      	st         ah, @(+0x1, y)
   54E40:	0514      	ld         al, #+0x5
   54E41:	0027      	st         al, @(0x0, y)
   54E42:	6800      	**prefx    0x68
   54E43:	B018      	ld         x, #+0x67B0
   54E44:	022B      	st         x, @(+0x2, y)
   54E45:	0200      	**prefx    0x2
   54E46:	C910      	ld         ah, #+0x1C9
   54E47:	C400      	**prefx    0xC4
   54E48:	8014      	ld         al, #-0x3C80
   54E49:	0F00      	**prefx    0xF
   54E4A:	5B9C      	bsr        +0xF5B <___libcsrmesh_365:0x55DA5[p]>
   54E4B:	0BE0      	bra        +0xB <___libcsrmesh_425+0x4EA:0x54E56[p]>
   54E4C:	6800      	**prefx    0x68
   54E4D:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54E4E:	0984      	cmp        al, #+0x9
   54E4F:	07F8      	bcc        +0x7 <___libcsrmesh_425+0x4EA:0x54E56[p]>
   54E50:	0014      	ld         al, #+0x0
   54E51:	F900      	**prefx    0xF9
   54E52:	B59C      	bsr        -0x74B <___libcsrmesh_209:0x54707[p]>
   54E53:	03E0      	bra        +0x3 <___libcsrmesh_425+0x4EA:0x54E56[p]>
   54E54:	0010      	ld         ah, #+0x0
   54E55:	0D23      	st         ah, @(+0xD, y)
   54E56:	0D17      	ld         al, @(+0xD, y)
   54E57:	EB0F      	leave      #-0x15
   54E58:	0014      	ld         al, #+0x0
   54E59:	0D27      	st         al, @(+0xD, y)
   54E5A:	FCE0      	bra        -0x4 <___libcsrmesh_425+0x4EA:0x54E56[p]>
   54E5B:	FF18      	ld         x, #-0x1
   54E5C:	FE00      	**prefx    0xFE
   54E5D:	C5E0      	bra        -0x23B <___libcsrmesh_425+0x2B6:0x54C22[p]>

0x00054E5E <___libcsrmesh_207>:
   54E5E:	F90B      	enter      #-0x7
   54E5F:	0327      	st         al, @(+0x3, y)
   54E60:	0423      	st         ah, @(+0x4, y)
   54E61:	E119      	ld         x, @0xFFE1 <register al>
   54E62:	001A      	ld         x, @(0x0, x)
   54E63:	022B      	st         x, @(+0x2, y)
   54E64:	1380      	cmp        ah, #+0x13
   54E65:	4FF8      	bcc        +0x4F <___libcsrmesh_207+0x56:0x54EB4[p]>
   54E66:	6C00      	**prefx    0x6C
   54E67:	9515      	ld         al, @0x6B95 <g_mesh_data+0x8>
   54E68:	F925      	st         al, @0xFFF9 <(scratchpad)>
   54E69:	6C00      	**prefx    0x6C
   54E6A:	9419      	ld         x, @0x6B94 <g_mesh_data+0x7>
   54E6B:	F829      	st         x, @0xFFF8 <(scratchpad)>
   54E6C:	E315      	ld         al, @0xFFE3 <register uxl>
   54E6D:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   54E6E:	0CF4      	beq        +0xC <___libcsrmesh_207+0x1C:0x54E7A[p]>
   54E6F:	0717      	ld         al, @(+0x7, y)
   54E70:	0027      	st         al, @(0x0, y)
   54E71:	081B      	ld         x, @(+0x8, y)
   54E72:	012B      	st         x, @(+0x1, y)
   54E73:	0317      	ld         al, @(+0x3, y)
   54E74:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   54E75:	FE2B      	st         x, @(-0x2, y)
   54E76:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54E77:	FF2B      	st         x, @(-0x1, y)
   54E78:	FF0E      	ld         xh, @(-0x1, y)
   54E79:	FE9F      	bsr        @(-0x2, y)
   54E7A:	6C00      	**prefx    0x6C
   54E7B:	8F15      	ld         al, @0x6B8F <g_mesh_data+0x2>
   54E7C:	38F4      	beq        +0x38 <___libcsrmesh_207+0x56:0x54EB4[p]>
   54E7D:	0184      	cmp        al, #+0x1
   54E7E:	36F0      	bne        +0x36 <___libcsrmesh_207+0x56:0x54EB4[p]>
   54E7F:	0217      	ld         al, @(+0x2, y)
   54E80:	F034      	add        al, #-0x10
   54E81:	0984      	cmp        al, #+0x9
   54E82:	15F8      	bcc        +0x15 <___libcsrmesh_207+0x39:0x54E97[p]>
   54E83:	0317      	ld         al, @(+0x3, y)
   54E84:	0134      	add        al, #+0x1
   54E85:	F825      	st         al, @0xFFF8 <(scratchpad)>
   54E86:	031B      	ld         x, @(+0x3, y)
   54E87:	0116      	ld         al, @(+0x1, x)
   54E88:	0100      	**prefx    0x1
   54E89:	FFC4      	and        al, #0xFF
   54E8A:	F925      	st         al, @0xFFF9 <(scratchpad)>
   54E8B:	0216      	ld         al, @(+0x2, x)
   54E8C:	08A0      	asl        #0x8
   54E8D:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   54E8E:	6C00      	**prefx    0x6C
   54E8F:	BB85      	cmp        al, @0x6BBB <g_mesh_context_data+0x1E>
   54E90:	24F0      	bne        +0x24 <___libcsrmesh_207+0x56:0x54EB4[p]>
   54E91:	041B      	ld         x, @(+0x4, y)
   54E92:	FF38      	add        x, #-0x1
   54E93:	002B      	st         x, @(0x0, y)
   54E94:	0217      	ld         al, @(+0x2, y)
   54E95:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   54E96:	1AE0      	bra        +0x1A <___libcsrmesh_207+0x52:0x54EB0[p]>
   54E97:	031B      	ld         x, @(+0x3, y)
   54E98:	0416      	ld         al, @(+0x4, x)
   54E99:	6C00      	**prefx    0x6C
   54E9A:	0FD5      	xor        al, @0x6C0F <L0>
   54E9B:	7FC4      	and        al, #0x7F
   54E9C:	18F0      	bne        +0x18 <___libcsrmesh_207+0x56:0x54EB4[p]>
   54E9D:	E315      	ld         al, @0xFFE3 <register uxl>
   54E9E:	0134      	add        al, #+0x1
   54E9F:	0318      	ld         x, #+0x3
   54EA0:	002B      	st         x, @(0x0, y)
   54EA1:	6C00      	**prefx    0x6C
   54EA2:	0C10      	ld         ah, #+0x6C0C
   54EA3:	FC00      	**prefx    0xFC
   54EA4:	1100      	**prefx    0x11
   54EA5:	8C9C      	bsr        -0x3EF74 <MemCmp:0x15F31[p]>
   54EA6:	E199      	tst        @0xFFE1 <register al>
   54EA7:	0DF0      	bne        +0xD <___libcsrmesh_207+0x56:0x54EB4[p]>
   54EA8:	0317      	ld         al, @(+0x3, y)
   54EA9:	0534      	add        al, #+0x5
   54EAA:	0327      	st         al, @(+0x3, y)
   54EAB:	041B      	ld         x, @(+0x4, y)
   54EAC:	FB38      	add        x, #-0x5
   54EAD:	002B      	st         x, @(0x0, y)
   54EAE:	0217      	ld         al, @(+0x2, y)
   54EAF:	0313      	ld         ah, @(+0x3, y)
   54EB0:	FB00      	**prefx    0xFB
   54EB1:	AA9C      	bsr        -0x556 <___libcsrmesh_193:0x5495B[p]>
   54EB2:	0114      	ld         al, #+0x1
   54EB3:	02E0      	bra        +0x2 <___libcsrmesh_207+0x57:0x54EB5[p]>
   54EB4:	0014      	ld         al, #+0x0
   54EB5:	F90F      	leave      #-0x7

0x00054EB6 <___libcsrmesh_213>:
   54EB6:	FC0B      	enter      #-0x4
   54EB7:	0127      	st         al, @(+0x1, y)
   54EB8:	E415      	ld         al, @0xFFE4 <register uy>
   54EB9:	0134      	add        al, #+0x1
   54EBA:	6800      	**prefx    0x68
   54EBB:	B010      	ld         ah, #+0x67B0
   54EBC:	0F00      	**prefx    0xF
   54EBD:	D19C      	bsr        +0xED1 <___libcsrmesh_362:0x55D8E[p]>
   54EBE:	E199      	tst        @0xFFE1 <register al>
   54EBF:	15F4      	beq        +0x15 <___libcsrmesh_213+0x1E:0x54ED4[p]>
   54EC0:	6800      	**prefx    0x68
   54EC1:	F915      	ld         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54EC2:	0984      	cmp        al, #+0x9
   54EC3:	07F8      	bcc        +0x7 <___libcsrmesh_213+0x14:0x54ECA[p]>
   54EC4:	0014      	ld         al, #+0x0
   54EC5:	F800      	**prefx    0xF8
   54EC6:	419C      	bsr        -0x7BF <___libcsrmesh_209:0x54707[p]>
   54EC7:	F400      	**prefx    0xF4
   54EC8:	B99C      	bsr        -0xC47 <___libcsrmesh_278:0x54281[p]>
   54EC9:	0BE0      	bra        +0xB <___libcsrmesh_213+0x1E:0x54ED4[p]>
   54ECA:	0914      	ld         al, #+0x9
   54ECB:	6800      	**prefx    0x68
   54ECC:	F925      	st         al, @0x67F9 <___libgatt_lib_db_703+0x20>
   54ECD:	0014      	ld         al, #+0x0
   54ECE:	0027      	st         al, @(0x0, y)
   54ECF:	2814      	ld         al, #+0x28
   54ED0:	0100      	**prefx    0x1
   54ED1:	FF10      	ld         ah, #+0xFF
   54ED2:	F800      	**prefx    0xF8
   54ED3:	0C9C      	bsr        -0x7F4 <___libcsrmesh_210:0x546DF[p]>
   54ED4:	FC0F      	leave      #-0x4

0x00054ED5 <___libcsrmesh_206>:
   54ED5:	FB0B      	enter      #-0x5
   54ED6:	0127      	st         al, @(+0x1, y)
   54ED7:	0223      	st         ah, @(+0x2, y)
   54ED8:	5214      	ld         al, #+0x52
   54ED9:	0027      	st         al, @(0x0, y)
   54EDA:	6800      	**prefx    0x68
   54EDB:	A814      	ld         al, #+0x67A8
   54EDC:	0010      	ld         ah, #+0x0
   54EDD:	FB00      	**prefx    0xFB
   54EDE:	DC00      	**prefx    0xDC
   54EDF:	719C      	bsr        -0x5238F <MemSet:0x2B50[p]>
   54EE0:	6800      	**prefx    0x68
   54EE1:	B014      	ld         al, #+0x67B0
   54EE2:	0F00      	**prefx    0xF
   54EE3:	A69C      	bsr        +0xEA6 <___libcsrmesh_367:0x55D89[p]>
   54EE4:	0818      	ld         x, #+0x8
   54EE5:	002B      	st         x, @(0x0, y)
   54EE6:	6800      	**prefx    0x68
   54EE7:	B414      	ld         al, #+0x67B4
   54EE8:	A200      	**prefx    0xA2
   54EE9:	AB10      	ld         ah, #-0x5E55
   54EEA:	FC00      	**prefx    0xFC
   54EEB:	1100      	**prefx    0x11
   54EEC:	8A9C      	bsr        -0x3EF76 <StrNCopy:0x15F76[p]>
   54EED:	0A14      	ld         al, #+0xA
   54EEE:	0027      	st         al, @(0x0, y)
   54EEF:	6800      	**prefx    0x68
   54EF0:	BC14      	ld         al, #+0x67BC
   54EF1:	A200      	**prefx    0xA2
   54EF2:	B410      	ld         ah, #-0x5E4C
   54EF3:	FC00      	**prefx    0xFC
   54EF4:	1100      	**prefx    0x11
   54EF5:	819C      	bsr        -0x3EF7F <StrNCopy:0x15F76[p]>
   54EF6:	0018      	ld         x, #+0x0
   54EF7:	6800      	**prefx    0x68
   54EF8:	B229      	st         x, @0x67B2 <L0+0x9>
   54EF9:	7F14      	ld         al, #+0x7F
   54EFA:	6800      	**prefx    0x68
   54EFB:	B325      	st         al, @0x67B3 <L0+0xA>
   54EFC:	011B      	ld         x, @(+0x1, y)
   54EFD:	0188      	cmp        x, #+0x1
   54EFE:	05F4      	beq        +0x5 <___libcsrmesh_206+0x2E:0x54F03[p]>
   54EFF:	0388      	cmp        x, #+0x3
   54F00:	03F4      	beq        +0x3 <___libcsrmesh_206+0x2E:0x54F03[p]>
   54F01:	0114      	ld         al, #+0x1
   54F02:	0AE0      	bra        +0xA <___libcsrmesh_206+0x37:0x54F0C[p]>
   54F03:	F300      	**prefx    0xF3
   54F04:	6B9C      	bsr        -0xC95 <___libcsrmesh_273:0x5426F[p]>
   54F05:	E199      	tst        @0xFFE1 <register al>
   54F06:	03F4      	beq        +0x3 <___libcsrmesh_206+0x34:0x54F09[p]>
   54F07:	0018      	ld         x, #+0x0
   54F08:	02E0      	bra        +0x2 <___libcsrmesh_206+0x35:0x54F0A[p]>
   54F09:	0918      	ld         x, #+0x9
   54F0A:	6800      	**prefx    0x68
   54F0B:	F929      	st         x, @0x67F9 <___libgatt_lib_db_703+0x20>
   54F0C:	021B      	ld         x, @(+0x2, y)
   54F0D:	6800      	**prefx    0x68
   54F0E:	C729      	st         x, @0x67C7 <L0+0x1E>
   54F0F:	E199      	tst        @0xFFE1 <register al>
   54F10:	03F4      	beq        +0x3 <___libcsrmesh_206+0x3E:0x54F13[p]>
   54F11:	F800      	**prefx    0xF8
   54F12:	9E9C      	bsr        -0x862 <___libcsrmesh_198:0x546B0[p]>
   54F13:	4E00      	**prefx    0x4E
   54F14:	5E14      	ld         al, #+0x4E5E
   54F15:	0510      	ld         ah, #+0x5
   54F16:	F300      	**prefx    0xF3
   54F17:	539C      	bsr        -0xCAD <___libcsrmesh_281:0x5426A[p]>
   54F18:	4700      	**prefx    0x47
   54F19:	6814      	ld         al, #+0x4768
   54F1A:	6C00      	**prefx    0x6C
   54F1B:	9725      	st         al, @0x6B97 <g_mesh_data+0xA>
   54F1C:	0518      	ld         x, #+0x5
   54F1D:	6C00      	**prefx    0x6C
   54F1E:	9629      	st         x, @0x6B96 <g_mesh_data+0x9>
   54F1F:	0113      	ld         ah, @(+0x1, y)
   54F20:	0009      	**unsigned
   54F21:	01A4      	lsr        #0x1
   54F22:	E099      	tst        @0xFFE0 <register ah>
   54F23:	04F4      	beq        +0x4 <___libcsrmesh_206+0x52:0x54F27[p]>
   54F24:	6C00      	**prefx    0x6C
   54F25:	AE14      	ld         al, #+0x6BAE
   54F26:	02E0      	bra        +0x2 <___libcsrmesh_206+0x53:0x54F28[p]>
   54F27:	0014      	ld         al, #+0x0
   54F28:	F800      	**prefx    0xF8
   54F29:	5E9C      	bsr        -0x7A2 <___libcsrmesh_212:0x54787[p]>
   54F2A:	0014      	ld         al, #+0x0
   54F2B:	FB0F      	leave      #-0x5

0x00054F2C <___libcsrmesh_237>:
   54F2C:	FE0B      	enter      #-0x2
   54F2D:	E111      	ld         ah, @0xFFE1 <register al>
   54F2E:	7F84      	cmp        al, #+0x7F
   54F2F:	032C      	bcz        +0x3 <___libcsrmesh_237+0x6:0x54F32[p]>
   54F30:	0018      	ld         x, #+0x0
   54F31:	0AE0      	bra        +0xA <___libcsrmesh_237+0xF:0x54F3B[p]>
   54F32:	6800      	**prefx    0x68
   54F33:	0219      	ld         x, @0x6802 <___libgatt_lib_db_702+0x5>
   54F34:	05E0      	bra        +0x5 <___libcsrmesh_237+0xD:0x54F39[p]>
   54F35:	0216      	ld         al, @(+0x2, x)
   54F36:	E085      	cmp        al, @0xFFE0 <register ah>
   54F37:	04F4      	beq        +0x4 <___libcsrmesh_237+0xF:0x54F3B[p]>
   54F38:	061A      	ld         x, @(+0x6, x)
   54F39:	E399      	tst        @0xFFE3 <register uxl>
   54F3A:	FBF0      	bne        -0x5 <___libcsrmesh_237+0x9:0x54F35[p]>
   54F3B:	E315      	ld         al, @0xFFE3 <register uxl>
   54F3C:	FE0F      	leave      #-0x2

0x00054F3D <___libcsrmesh_236>:
   54F3D:	FE0B      	enter      #-0x2
   54F3E:	6800      	**prefx    0x68
   54F3F:	0219      	ld         x, @0x6802 <___libgatt_lib_db_702+0x5>
   54F40:	0014      	ld         al, #+0x0
   54F41:	F825      	st         al, @0xFFF8 <(scratchpad)>
   54F42:	0100      	**prefx    0x1
   54F43:	FF14      	ld         al, #+0xFF
   54F44:	0BE0      	bra        +0xB <___libcsrmesh_236+0x12:0x54F4F[p]>
   54F45:	0512      	ld         ah, @(+0x5, x)
   54F46:	06F4      	beq        +0x6 <___libcsrmesh_236+0xF:0x54F4C[p]>
   54F47:	E085      	cmp        al, @0xFFE0 <register ah>
   54F48:	04FC      	bcs        +0x4 <___libcsrmesh_236+0xF:0x54F4C[p]>
   54F49:	0114      	ld         al, #+0x1
   54F4A:	F825      	st         al, @0xFFF8 <(scratchpad)>
   54F4B:	02E0      	bra        +0x2 <___libcsrmesh_236+0x10:0x54F4D[p]>
   54F4C:	E111      	ld         ah, @0xFFE1 <register al>
   54F4D:	061A      	ld         x, @(+0x6, x)
   54F4E:	E015      	ld         al, @0xFFE0 <register ah>
   54F4F:	E399      	tst        @0xFFE3 <register uxl>
   54F50:	F5F0      	bne        -0xB <___libcsrmesh_236+0x8:0x54F45[p]>
   54F51:	F899      	tst        @0xFFF8 <(scratchpad)>
   54F52:	02F0      	bne        +0x2 <___libcsrmesh_236+0x17:0x54F54[p]>
   54F53:	0014      	ld         al, #+0x0
   54F54:	FE0F      	leave      #-0x2

0x00054F55 <___libcsrmesh_247>:
   54F55:	FE0B      	enter      #-0x2
   54F56:	6C00      	**prefx    0x6C
   54F57:	BD18      	ld         x, #+0x6BBD
   54F58:	0126      	st         al, @(+0x1, x)
   54F59:	0100      	**prefx    0x1
   54F5A:	FFC0      	and        ah, #0xFF
   54F5B:	0022      	st         ah, @(0x0, x)
   54F5C:	FE0F      	leave      #-0x2

0x00054F5D <___libcsrmesh_246>:
   54F5D:	6800      	**prefx    0x68
   54F5E:	0325      	st         al, @0x6803 <___libgatt_lib_db_702+0x6>
   54F5F:	00E2      	bra        0x0, x

0x00054F60 <___libcsrmesh_233>:
   54F60:	6C00      	**prefx    0x6C
   54F61:	1B14      	ld         al, #+0x6C1B
   54F62:	00E2      	bra        0x0, x

0x00054F63 <___libcsrmesh_235>:
   54F63:	6800      	**prefx    0x68
   54F64:	0315      	ld         al, @0x6803 <___libgatt_lib_db_702+0x6>
   54F65:	00E2      	bra        0x0, x

0x00054F66 <___libcsrmesh_232>:
   54F66:	FE0B      	enter      #-0x2
   54F67:	F825      	st         al, @0xFFF8 <(scratchpad)>
   54F68:	2EF4      	beq        +0x2E <___libcsrmesh_232+0x30:0x54F96[p]>
   54F69:	E119      	ld         x, @0xFFE1 <register al>
   54F6A:	0216      	ld         al, @(+0x2, x)
   54F6B:	0100      	**prefx    0x1
   54F6C:	8084      	cmp        al, #+0x80
   54F6D:	03F8      	bcc        +0x3 <___libcsrmesh_232+0xA:0x54F70[p]>
   54F6E:	039A      	tst        @(+0x3, x)
   54F6F:	03F4      	beq        +0x3 <___libcsrmesh_232+0xC:0x54F72[p]>
   54F70:	E099      	tst        @0xFFE0 <register ah>
   54F71:	25F4      	beq        +0x25 <___libcsrmesh_232+0x30:0x54F96[p]>
   54F72:	6800      	**prefx    0x68
   54F73:	0219      	ld         x, @0x6802 <___libgatt_lib_db_702+0x5>
   54F74:	05F0      	bne        +0x5 <___libcsrmesh_232+0x13:0x54F79[p]>
   54F75:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   54F76:	6800      	**prefx    0x68
   54F77:	0225      	st         al, @0x6802 <___libgatt_lib_db_702+0x5>
   54F78:	0AE0      	bra        +0xA <___libcsrmesh_232+0x1C:0x54F82[p]>
   54F79:	F929      	st         x, @0xFFF9 <(scratchpad)>
   54F7A:	061A      	ld         x, @(+0x6, x)
   54F7B:	FEF0      	bne        -0x2 <___libcsrmesh_232+0x13:0x54F79[p]>
   54F7C:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   54F7D:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   54F7E:	0626      	st         al, @(+0x6, x)
   54F7F:	0014      	ld         al, #+0x0
   54F80:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54F81:	0626      	st         al, @(+0x6, x)
   54F82:	E099      	tst        @0xFFE0 <register ah>
   54F83:	11F0      	bne        +0x11 <___libcsrmesh_232+0x2E:0x54F94[p]>
   54F84:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54F85:	021A      	ld         x, @(+0x2, x)
   54F86:	E311      	ld         ah, @0xFFE3 <register uxl>
   54F87:	0009      	**unsigned
   54F88:	04A4      	lsr        #0x4
   54F89:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   54F8A:	E315      	ld         al, @0xFFE3 <register uxl>
   54F8B:	0FC4      	and        al, #0xF
   54F8C:	F925      	st         al, @0xFFF9 <(scratchpad)>
   54F8D:	0114      	ld         al, #+0x1
   54F8E:	F9A1      	asl        @0xFFF9 <(scratchpad)>
   54F8F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   54F90:	6800      	**prefx    0x68
   54F91:	FAB6      	or         al, @(+0x67FA, x)
   54F92:	6800      	**prefx    0x68
   54F93:	FA26      	st         al, @(+0x67FA, x)
   54F94:	0014      	ld         al, #+0x0
   54F95:	02E0      	bra        +0x2 <___libcsrmesh_232+0x31:0x54F97[p]>
   54F96:	FF14      	ld         al, #-0x1
   54F97:	FE0F      	leave      #-0x2

0x00054F98 <___libcsrmesh_241>:
   54F98:	F50B      	enter      #-0xB
   54F99:	0727      	st         al, @(+0x7, y)
   54F9A:	0823      	st         ah, @(+0x8, y)
   54F9B:	0C80      	cmp        ah, #+0xC
   54F9C:	7DF8      	bcc        +0x7D <___libcsrmesh_241+0x81:0x55019[p]>
   54F9D:	6C00      	**prefx    0x6C
   54F9E:	BB15      	ld         al, @0x6BBB <g_mesh_context_data+0x1E>
   54F9F:	0787      	cmp        al, @(+0x7, y)
   54FA0:	79F4      	beq        +0x79 <___libcsrmesh_241+0x81:0x55019[p]>
   54FA1:	6C00      	**prefx    0x6C
   54FA2:	1410      	ld         ah, #+0x6C14
   54FA3:	0223      	st         ah, @(+0x2, y)
   54FA4:	6C00      	**prefx    0x6C
   54FA5:	BE15      	ld         al, @0x6BBE <g_mesh_context_data+0x21>
   54FA6:	FB25      	st         al, @0xFFFB <(scratchpad)>
   54FA7:	6C00      	**prefx    0x6C
   54FA8:	BD11      	ld         ah, @0x6BBD <g_mesh_context_data+0x20>
   54FA9:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   54FAA:	6800      	**prefx    0x68
   54FAB:	0555      	sub        al, @0x6805 <___libgatt_lib_db_702+0x8>
   54FAC:	6800      	**prefx    0x68
   54FAD:	0461      	subc       ah, @0x6804 <___libgatt_lib_db_702+0x7>
   54FAE:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   54FAF:	14F0      	bne        +0x14 <___libcsrmesh_241+0x2B:0x54FC3[p]>
   54FB0:	0200      	**prefx    0x2
   54FB1:	0084      	cmp        al, #+0x200
   54FB2:	11F0      	bne        +0x11 <___libcsrmesh_241+0x2B:0x54FC3[p]>
   54FB3:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   54FB4:	6800      	**prefx    0x68
   54FB5:	0525      	st         al, @0x6805 <___libgatt_lib_db_702+0x8>
   54FB6:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   54FB7:	6800      	**prefx    0x68
   54FB8:	0421      	st         ah, @0x6804 <___libgatt_lib_db_702+0x7>
   54FB9:	6800      	**prefx    0x68
   54FBA:	0799      	tst        @0x6807 <___libgatt_lib_db_702+0xA>
   54FBB:	08F4      	beq        +0x8 <___libcsrmesh_241+0x2B:0x54FC3[p]>
   54FBC:	0214      	ld         al, #+0x2
   54FBD:	0027      	st         al, @(0x0, y)
   54FBE:	0614      	ld         al, #+0x6
   54FBF:	6C00      	**prefx    0x6C
   54FC0:	BD10      	ld         ah, #+0x6BBD
   54FC1:	C800      	**prefx    0xC8
   54FC2:	429C      	bsr        -0x37BE <CSRmeshPsWrite:0x51804[p]>
   54FC3:	6C00      	**prefx    0x6C
   54FC4:	C015      	ld         al, @0x6BC0 <g_mesh_context_data+0x23>
   54FC5:	6C00      	**prefx    0x6C
   54FC6:	BF11      	ld         ah, @0x6BBF <g_mesh_context_data+0x22>
   54FC7:	FE00      	**prefx    0xFE
   54FC8:	0034      	add        al, #-0x200
   54FC9:	FF40      	addc       ah, #-0x1
   54FCA:	E119      	ld         x, @0xFFE1 <register al>
   54FCB:	6C00      	**prefx    0x6C
   54FCC:	BD15      	ld         al, @0x6BBD <g_mesh_context_data+0x20>
   54FCD:	E085      	cmp        al, @0xFFE0 <register ah>
   54FCE:	16F0      	bne        +0x16 <___libcsrmesh_241+0x4C:0x54FE4[p]>
   54FCF:	6C00      	**prefx    0x6C
   54FD0:	BE15      	ld         al, @0x6BBE <g_mesh_context_data+0x21>
   54FD1:	E385      	cmp        al, @0xFFE3 <register uxl>
   54FD2:	12F0      	bne        +0x12 <___libcsrmesh_241+0x4C:0x54FE4[p]>
   54FD3:	0310      	ld         ah, #+0x3
   54FD4:	0023      	st         ah, @(0x0, y)
   54FD5:	E415      	ld         al, @0xFFE4 <register uy>
   54FD6:	0434      	add        al, #+0x4
   54FD7:	0100      	**prefx    0x1
   54FD8:	FF10      	ld         ah, #+0xFF
   54FD9:	FB00      	**prefx    0xFB
   54FDA:	DB00      	**prefx    0xDB
   54FDB:	759C      	bsr        -0x5248B <MemSet:0x2B50[p]>
   54FDC:	0014      	ld         al, #+0x0
   54FDD:	0327      	st         al, @(+0x3, y)
   54FDE:	3710      	ld         ah, #+0x37
   54FDF:	0423      	st         ah, @(+0x4, y)
   54FE0:	0527      	st         al, @(+0x5, y)
   54FE1:	E415      	ld         al, @0xFFE4 <register uy>
   54FE2:	0334      	add        al, #+0x3
   54FE3:	0627      	st         al, @(+0x6, y)
   54FE4:	6C00      	**prefx    0x6C
   54FE5:	BE15      	ld         al, @0x6BBE <g_mesh_context_data+0x21>
   54FE6:	6C00      	**prefx    0x6C
   54FE7:	BD11      	ld         ah, @0x6BBD <g_mesh_context_data+0x20>
   54FE8:	0134      	add        al, #+0x1
   54FE9:	0040      	addc       ah, #+0x0
   54FEA:	E119      	ld         x, @0xFFE1 <register al>
   54FEB:	0100      	**prefx    0x1
   54FEC:	FFC0      	and        ah, #0xFF
   54FED:	6C00      	**prefx    0x6C
   54FEE:	BD21      	st         ah, @0x6BBD <g_mesh_context_data+0x20>
   54FEF:	6C00      	**prefx    0x6C
   54FF0:	BE25      	st         al, @0x6BBE <g_mesh_context_data+0x21>
   54FF1:	E415      	ld         al, @0xFFE4 <register uy>
   54FF2:	0234      	add        al, #+0x2
   54FF3:	E311      	ld         ah, @0xFFE3 <register uxl>
   54FF4:	FC00      	**prefx    0xFC
   54FF5:	1000      	**prefx    0x10
   54FF6:	E99C      	bsr        -0x3F017 <BufWriteUint16:0x15FDF[p]>
   54FF7:	6C00      	**prefx    0x6C
   54FF8:	BD11      	ld         ah, @0x6BBD <g_mesh_context_data+0x20>
   54FF9:	0100      	**prefx    0x1
   54FFA:	FFC0      	and        ah, #0xFF
   54FFB:	E415      	ld         al, @0xFFE4 <register uy>
   54FFC:	0234      	add        al, #+0x2
   54FFD:	FC00      	**prefx    0xFC
   54FFE:	1000      	**prefx    0x10
   54FFF:	D59C      	bsr        -0x3F02B <BufWriteUint8:0x15FD4[p]>
   55000:	E415      	ld         al, @0xFFE4 <register uy>
   55001:	0234      	add        al, #+0x2
   55002:	6C00      	**prefx    0x6C
   55003:	BB11      	ld         ah, @0x6BBB <g_mesh_context_data+0x1E>
   55004:	FC00      	**prefx    0xFC
   55005:	1000      	**prefx    0x10
   55006:	D99C      	bsr        -0x3F027 <BufWriteUint16:0x15FDF[p]>
   55007:	E415      	ld         al, @0xFFE4 <register uy>
   55008:	0234      	add        al, #+0x2
   55009:	0713      	ld         ah, @(+0x7, y)
   5500A:	FC00      	**prefx    0xFC
   5500B:	1000      	**prefx    0x10
   5500C:	D39C      	bsr        -0x3F02D <BufWriteUint16:0x15FDF[p]>
   5500D:	0813      	ld         ah, @(+0x8, y)
   5500E:	0730      	add        ah, #+0x7
   5500F:	0823      	st         ah, @(+0x8, y)
   55010:	0B17      	ld         al, @(+0xB, y)
   55011:	0027      	st         al, @(0x0, y)
   55012:	0C13      	ld         ah, @(+0xC, y)
   55013:	0123      	st         ah, @(+0x1, y)
   55014:	0114      	ld         al, #+0x1
   55015:	0813      	ld         ah, @(+0x8, y)
   55016:	F600      	**prefx    0xF6
   55017:	9A9C      	bsr        -0xA66 <___libcsrmesh_279:0x545B1[p]>
   55018:	02E0      	bra        +0x2 <___libcsrmesh_241+0x82:0x5501A[p]>
   55019:	FF14      	ld         al, #-0x1
   5501A:	F50F      	leave      #-0xB

0x0005501B <___libcsrmesh_245>:
   5501B:	FD0B      	enter      #-0x3
   5501C:	6C00      	**prefx    0x6C
   5501D:	9D18      	ld         x, #+0x6B9D
   5501E:	0110      	ld         ah, #+0x1
   5501F:	0022      	st         ah, @(0x0, x)
   55020:	1E26      	st         al, @(+0x1E, x)
   55021:	0023      	st         ah, @(0x0, y)
   55022:	0314      	ld         al, #+0x3
   55023:	E311      	ld         ah, @0xFFE3 <register uxl>
   55024:	C800      	**prefx    0xC8
   55025:	DF9C      	bsr        -0x3821 <CSRmeshPsWrite:0x51804[p]>
   55026:	0114      	ld         al, #+0x1
   55027:	0027      	st         al, @(0x0, y)
   55028:	0914      	ld         al, #+0x9
   55029:	6C00      	**prefx    0x6C
   5502A:	BB10      	ld         ah, #+0x6BBB
   5502B:	C800      	**prefx    0xC8
   5502C:	D89C      	bsr        -0x3828 <CSRmeshPsWrite:0x51804[p]>
   5502D:	FD0F      	leave      #-0x3

0x0005502E <___libcsrmesh_239>:
   5502E:	DD0B      	enter      #-0x23
   5502F:	1027      	st         al, @(+0x10, y)
   55030:	1D23      	st         ah, @(+0x1D, y)
   55031:	6800      	**prefx    0x68
   55032:	0611      	ld         ah, @0x6806 <___libgatt_lib_db_702+0x9>
   55033:	1823      	st         ah, @(+0x18, y)
   55034:	1D17      	ld         al, @(+0x1D, y)
   55035:	F834      	add        al, #-0x8
   55036:	0B84      	cmp        al, #+0xB
   55037:	0200      	**prefx    0x2
   55038:	20F8      	bcc        +0x220 <___libcsrmesh_239+0x22A:0x55258[p]>
   55039:	0010      	ld         ah, #+0x0
   5503A:	231B      	ld         x, @(+0x23, y)
   5503B:	0022      	st         ah, @(0x0, x)
   5503C:	6C00      	**prefx    0x6C
   5503D:	9315      	ld         al, @0x6B93 <g_mesh_data+0x6>
   5503E:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5503F:	6C00      	**prefx    0x6C
   55040:	9219      	ld         x, @0x6B92 <g_mesh_data+0x5>
   55041:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55042:	E315      	ld         al, @0xFFE3 <register uxl>
   55043:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   55044:	0FF4      	beq        +0xF <___libcsrmesh_239+0x25:0x55053[p]>
   55045:	1D13      	ld         ah, @(+0x1D, y)
   55046:	0023      	st         ah, @(0x0, y)
   55047:	2417      	ld         al, @(+0x24, y)
   55048:	0127      	st         al, @(+0x1, y)
   55049:	251B      	ld         x, @(+0x25, y)
   5504A:	022B      	st         x, @(+0x2, y)
   5504B:	0014      	ld         al, #+0x0
   5504C:	1013      	ld         ah, @(+0x10, y)
   5504D:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5504E:	FE2B      	st         x, @(-0x2, y)
   5504F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55050:	FF2B      	st         x, @(-0x1, y)
   55051:	FF0E      	ld         xh, @(-0x1, y)
   55052:	FE9F      	bsr        @(-0x2, y)
   55053:	E415      	ld         al, @0xFFE4 <register uy>
   55054:	1034      	add        al, #+0x10
   55055:	FC00      	**prefx    0xFC
   55056:	0F00      	**prefx    0xF
   55057:	6A9C      	bsr        -0x3F096 <BufReadUint16:0x15FC1[p]>
   55058:	1C27      	st         al, @(+0x1C, y)
   55059:	0010      	ld         ah, #+0x0
   5505A:	0323      	st         ah, @(+0x3, y)
   5505B:	0427      	st         al, @(+0x4, y)
   5505C:	E415      	ld         al, @0xFFE4 <register uy>
   5505D:	1034      	add        al, #+0x10
   5505E:	FC00      	**prefx    0xFC
   5505F:	0F00      	**prefx    0xF
   55060:	559C      	bsr        -0x3F0AB <BufReadUint8:0x15FB5[p]>
   55061:	0010      	ld         ah, #+0x0
   55062:	10A0      	asl        #0x10
   55063:	1CB7      	or         al, @(+0x1C, y)
   55064:	0427      	st         al, @(+0x4, y)
   55065:	0323      	st         ah, @(+0x3, y)
   55066:	E415      	ld         al, @0xFFE4 <register uy>
   55067:	1034      	add        al, #+0x10
   55068:	FC00      	**prefx    0xFC
   55069:	0F00      	**prefx    0xF
   5506A:	579C      	bsr        -0x3F0A9 <BufReadUint16:0x15FC1[p]>
   5506B:	0527      	st         al, @(+0x5, y)
   5506C:	E415      	ld         al, @0xFFE4 <register uy>
   5506D:	1034      	add        al, #+0x10
   5506E:	FC00      	**prefx    0xFC
   5506F:	0F00      	**prefx    0xF
   55070:	519C      	bsr        -0x3F0AF <BufReadUint16:0x15FC1[p]>
   55071:	0627      	st         al, @(+0x6, y)
   55072:	101B      	ld         x, @(+0x10, y)
   55073:	0016      	ld         al, @(0x0, x)
   55074:	0100      	**prefx    0x1
   55075:	80C4      	and        al, #0x80
   55076:	16F4      	beq        +0x16 <___libcsrmesh_239+0x5E:0x5508C[p]>
   55077:	E415      	ld         al, @0xFFE4 <register uy>
   55078:	1034      	add        al, #+0x10
   55079:	FC00      	**prefx    0xFC
   5507A:	0F00      	**prefx    0xF
   5507B:	3A9C      	bsr        -0x3F0C6 <BufReadUint8:0x15FB5[p]>
   5507C:	1B27      	st         al, @(+0x1B, y)
   5507D:	E415      	ld         al, @0xFFE4 <register uy>
   5507E:	1034      	add        al, #+0x10
   5507F:	FC00      	**prefx    0xFC
   55080:	0F00      	**prefx    0xF
   55081:	349C      	bsr        -0x3F0CC <BufReadUint8:0x15FB5[p]>
   55082:	E119      	ld         x, @0xFFE1 <register al>
   55083:	0100      	**prefx    0x1
   55084:	FFC8      	and        x, #0xFF
   55085:	1B17      	ld         al, @(+0x1B, y)
   55086:	08A0      	asl        #0x8
   55087:	E139      	add        x, @0xFFE1 <register al>
   55088:	072B      	st         x, @(+0x7, y)
   55089:	0214      	ld         al, #+0x2
   5508A:	1727      	st         al, @(+0x17, y)
   5508B:	0BE0      	bra        +0xB <___libcsrmesh_239+0x68:0x55096[p]>
   5508C:	E415      	ld         al, @0xFFE4 <register uy>
   5508D:	1034      	add        al, #+0x10
   5508E:	FC00      	**prefx    0xFC
   5508F:	0F00      	**prefx    0xF
   55090:	259C      	bsr        -0x3F0DB <BufReadUint8:0x15FB5[p]>
   55091:	0100      	**prefx    0x1
   55092:	FFC4      	and        al, #0xFF
   55093:	0727      	st         al, @(+0x7, y)
   55094:	0118      	ld         x, #+0x1
   55095:	172B      	st         x, @(+0x17, y)
   55096:	189B      	tst        @(+0x18, y)
   55097:	0100      	**prefx    0x1
   55098:	8BF4      	beq        +0x8B <___libcsrmesh_239+0xF5:0x55123[p]>
   55099:	181B      	ld         x, @(+0x18, y)
   5509A:	011A      	ld         x, @(+0x1, x)
   5509B:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5509C:	0100      	**prefx    0x1
   5509D:	86F4      	beq        +0x86 <___libcsrmesh_239+0xF5:0x55123[p]>
   5509E:	0513      	ld         ah, @(+0x5, y)
   5509F:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   550A0:	0100      	**prefx    0x1
   550A1:	82F4      	beq        +0x82 <___libcsrmesh_239+0xF5:0x55123[p]>
   550A2:	0014      	ld         al, #+0x0
   550A3:	7CE0      	bra        +0x7C <___libcsrmesh_239+0xF1:0x5511F[p]>
   550A4:	1217      	ld         al, @(+0x12, y)
   550A5:	02A0      	asl        #0x2
   550A6:	181B      	ld         x, @(+0x18, y)
   550A7:	021A      	ld         x, @(+0x2, x)
   550A8:	E335      	add        al, @0xFFE3 <register uxl>
   550A9:	2027      	st         al, @(+0x20, y)
   550AA:	E119      	ld         x, @0xFFE1 <register al>
   550AB:	0116      	ld         al, @(+0x1, x)
   550AC:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   550AD:	70F0      	bne        +0x70 <___libcsrmesh_239+0xEF:0x5511D[p]>
   550AE:	0413      	ld         ah, @(+0x4, y)
   550AF:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   550B0:	0317      	ld         al, @(+0x3, y)
   550B1:	FA25      	st         al, @0xFFFA <(scratchpad)>
   550B2:	031A      	ld         x, @(+0x3, x)
   550B3:	FE2B      	st         x, @(-0x2, y)
   550B4:	201B      	ld         x, @(+0x20, y)
   550B5:	021A      	ld         x, @(+0x2, x)
   550B6:	FF2B      	st         x, @(-0x1, y)
   550B7:	E189      	cmp        x, @0xFFE1 <register al>
   550B8:	022C      	bcz        +0x2 <___libcsrmesh_239+0x8C:0x550BA[p]>
   550B9:	06E0      	bra        +0x6 <___libcsrmesh_239+0x91:0x550BF[p]>
   550BA:	E189      	cmp        x, @0xFFE1 <register al>
   550BB:	32F0      	bne        +0x32 <___libcsrmesh_239+0xBF:0x550ED[p]>
   550BC:	FE17      	ld         al, @(-0x2, y)
   550BD:	FB85      	cmp        al, @0xFFFB <(scratchpad)>
   550BE:	2F2C      	bcz        +0x2F <___libcsrmesh_239+0xBF:0x550ED[p]>
   550BF:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   550C0:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   550C1:	0034      	add        al, #+0x0
   550C2:	0100      	**prefx    0x1
   550C3:	0040      	addc       ah, #+0x100
   550C4:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   550C5:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   550C6:	FE57      	sub        al, @(-0x2, y)
   550C7:	FF63      	subc       ah, @(-0x1, y)
   550C8:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   550C9:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   550CA:	0100      	**prefx    0x1
   550CB:	FFC0      	and        ah, #0xFF
   550CC:	04F0      	bne        +0x4 <___libcsrmesh_239+0xA2:0x550D0[p]>
   550CD:	0200      	**prefx    0x2
   550CE:	0184      	cmp        al, #+0x201
   550CF:	33FC      	bcs        +0x33 <___libcsrmesh_239+0xD4:0x55102[p]>
   550D0:	181B      	ld         x, @(+0x18, y)
   550D1:	001A      	ld         x, @(0x0, x)
   550D2:	F929      	st         x, @0xFFF9 <(scratchpad)>
   550D3:	0010      	ld         ah, #+0x0
   550D4:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   550D5:	FF83      	cmp        ah, @(-0x1, y)
   550D6:	04F0      	bne        +0x4 <___libcsrmesh_239+0xAC:0x550DA[p]>
   550D7:	FE8B      	cmp        x, @(-0x2, y)
   550D8:	022C      	bcz        +0x2 <___libcsrmesh_239+0xAC:0x550DA[p]>
   550D9:	41E0      	bra        +0x41 <___libcsrmesh_239+0xEC:0x5511A[p]>
   550DA:	FE17      	ld         al, @(-0x2, y)
   550DB:	FF13      	ld         ah, @(-0x1, y)
   550DC:	F955      	sub        al, @0xFFF9 <(scratchpad)>
   550DD:	F861      	subc       ah, @0xFFF8 <(scratchpad)>
   550DE:	F925      	st         al, @0xFFF9 <(scratchpad)>
   550DF:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   550E0:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   550E1:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   550E2:	022C      	bcz        +0x2 <___libcsrmesh_239+0xB6:0x550E4[p]>
   550E3:	37E0      	bra        +0x37 <___libcsrmesh_239+0xEC:0x5511A[p]>
   550E4:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   550E5:	F889      	cmp        x, @0xFFF8 <(scratchpad)>
   550E6:	0100      	**prefx    0x1
   550E7:	71F0      	bne        +0x171 <___libcsrmesh_239+0x22A:0x55258[p]>
   550E8:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   550E9:	F981      	cmp        ah, @0xFFF9 <(scratchpad)>
   550EA:	0100      	**prefx    0x1
   550EB:	6D2C      	bcz        +0x16D <___libcsrmesh_239+0x22A:0x55258[p]>
   550EC:	2EE0      	bra        +0x2E <___libcsrmesh_239+0xEC:0x5511A[p]>
   550ED:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   550EE:	FF87      	cmp        al, @(-0x1, y)
   550EF:	022C      	bcz        +0x2 <___libcsrmesh_239+0xC3:0x550F1[p]>
   550F0:	09E0      	bra        +0x9 <___libcsrmesh_239+0xCB:0x550F9[p]>
   550F1:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   550F2:	FF8B      	cmp        x, @(-0x1, y)
   550F3:	0100      	**prefx    0x1
   550F4:	64F0      	bne        +0x164 <___libcsrmesh_239+0x22A:0x55258[p]>
   550F5:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   550F6:	FE83      	cmp        ah, @(-0x2, y)
   550F7:	0100      	**prefx    0x1
   550F8:	602C      	bcz        +0x160 <___libcsrmesh_239+0x22A:0x55258[p]>
   550F9:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   550FA:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   550FB:	FE57      	sub        al, @(-0x2, y)
   550FC:	FF63      	subc       ah, @(-0x1, y)
   550FD:	E099      	tst        @0xFFE0 <register ah>
   550FE:	0AF0      	bne        +0xA <___libcsrmesh_239+0xDA:0x55108[p]>
   550FF:	0200      	**prefx    0x2
   55100:	0084      	cmp        al, #+0x200
   55101:	07F8      	bcc        +0x7 <___libcsrmesh_239+0xDA:0x55108[p]>
   55102:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   55103:	201B      	ld         x, @(+0x20, y)
   55104:	0322      	st         ah, @(+0x3, x)
   55105:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   55106:	0226      	st         al, @(+0x2, x)
   55107:	13E0      	bra        +0x13 <___libcsrmesh_239+0xEC:0x5511A[p]>
   55108:	FE17      	ld         al, @(-0x2, y)
   55109:	FF13      	ld         ah, @(-0x1, y)
   5510A:	FB55      	sub        al, @0xFFFB <(scratchpad)>
   5510B:	FA61      	subc       ah, @0xFFFA <(scratchpad)>
   5510C:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5510D:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5510E:	0100      	**prefx    0x1
   5510F:	FFC0      	and        ah, #0xFF
   55110:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55111:	181B      	ld         x, @(+0x18, y)
   55112:	001A      	ld         x, @(0x0, x)
   55113:	0014      	ld         al, #+0x0
   55114:	E085      	cmp        al, @0xFFE0 <register ah>
   55115:	0100      	**prefx    0x1
   55116:	42F0      	bne        +0x142 <___libcsrmesh_239+0x22A:0x55258[p]>
   55117:	F889      	cmp        x, @0xFFF8 <(scratchpad)>
   55118:	0100      	**prefx    0x1
   55119:	3F2C      	bcz        +0x13F <___libcsrmesh_239+0x22A:0x55258[p]>
   5511A:	0110      	ld         ah, #+0x1
   5511B:	1A23      	st         ah, @(+0x1A, y)
   5511C:	0AE0      	bra        +0xA <___libcsrmesh_239+0xF8:0x55126[p]>
   5511D:	1217      	ld         al, @(+0x12, y)
   5511E:	0134      	add        al, #+0x1
   5511F:	1227      	st         al, @(+0x12, y)
   55120:	121B      	ld         x, @(+0x12, y)
   55121:	F989      	cmp        x, @0xFFF9 <(scratchpad)>
   55122:	82FC      	bcs        -0x7E <___libcsrmesh_239+0x76:0x550A4[p]>
   55123:	0010      	ld         ah, #+0x0
   55124:	1A23      	st         ah, @(+0x1A, y)
   55125:	1223      	st         ah, @(+0x12, y)
   55126:	6800      	**prefx    0x68
   55127:	0215      	ld         al, @0x6802 <___libgatt_lib_db_702+0x5>
   55128:	1627      	st         al, @(+0x16, y)
   55129:	181B      	ld         x, @(+0x18, y)
   5512A:	031A      	ld         x, @(+0x3, x)
   5512B:	142B      	st         x, @(+0x14, y)
   5512C:	189B      	tst        @(+0x18, y)
   5512D:	21F4      	beq        +0x21 <___libcsrmesh_239+0x120:0x5514E[p]>
   5512E:	E399      	tst        @0xFFE3 <register uxl>
   5512F:	1FF4      	beq        +0x1F <___libcsrmesh_239+0x120:0x5514E[p]>
   55130:	1A9B      	tst        @(+0x1A, y)
   55131:	1DF4      	beq        +0x1D <___libcsrmesh_239+0x120:0x5514E[p]>
   55132:	1217      	ld         al, @(+0x12, y)
   55133:	02A0      	asl        #0x2
   55134:	181B      	ld         x, @(+0x18, y)
   55135:	0212      	ld         ah, @(+0x2, x)
   55136:	E131      	add        ah, @0xFFE1 <register al>
   55137:	E019      	ld         x, @0xFFE0 <register ah>
   55138:	031A      	ld         x, @(+0x3, x)
   55139:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5513A:	E019      	ld         x, @0xFFE0 <register ah>
   5513B:	0212      	ld         ah, @(+0x2, x)
   5513C:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5513D:	141B      	ld         x, @(+0x14, y)
   5513E:	E139      	add        x, @0xFFE1 <register al>
   5513F:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   55140:	0356      	sub        al, @(+0x3, x)
   55141:	0262      	subc       ah, @(+0x2, x)
   55142:	E099      	tst        @0xFFE0 <register ah>
   55143:	04F0      	bne        +0x4 <___libcsrmesh_239+0x119:0x55147[p]>
   55144:	0200      	**prefx    0x2
   55145:	0084      	cmp        al, #+0x200
   55146:	08FC      	bcs        +0x8 <___libcsrmesh_239+0x120:0x5514E[p]>
   55147:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   55148:	0322      	st         ah, @(+0x3, x)
   55149:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5514A:	0226      	st         al, @(+0x2, x)
   5514B:	0118      	ld         x, #+0x1
   5514C:	132B      	st         x, @(+0x13, y)
   5514D:	03E0      	bra        +0x3 <___libcsrmesh_239+0x122:0x55150[p]>
   5514E:	0010      	ld         ah, #+0x0
   5514F:	1323      	st         ah, @(+0x13, y)
   55150:	FF14      	ld         al, #-0x1
   55151:	1927      	st         al, @(+0x19, y)
   55152:	0018      	ld         x, #+0x0
   55153:	152B      	st         x, @(+0x15, y)
   55154:	112B      	st         x, @(+0x11, y)
   55155:	0100      	**prefx    0x1
   55156:	F1E0      	bra        +0xF1 <___libcsrmesh_239+0x219:0x55247[p]>
   55157:	061B      	ld         x, @(+0x6, y)
   55158:	3AF4      	beq        +0x3A <___libcsrmesh_239+0x164:0x55192[p]>
   55159:	0010      	ld         ah, #+0x0
   5515A:	6C00      	**prefx    0x6C
   5515B:	BB15      	ld         al, @0x6BBB <g_mesh_context_data+0x1E>
   5515C:	E385      	cmp        al, @0xFFE3 <register uxl>
   5515D:	02F0      	bne        +0x2 <___libcsrmesh_239+0x131:0x5515F[p]>
   5515E:	0110      	ld         ah, #+0x1
   5515F:	231B      	ld         x, @(+0x23, y)
   55160:	0022      	st         ah, @(0x0, x)
   55161:	31F0      	bne        +0x31 <___libcsrmesh_239+0x164:0x55192[p]>
   55162:	0613      	ld         ah, @(+0x6, y)
   55163:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   55164:	6C00      	**prefx    0x6C
   55165:	0A15      	ld         al, @0x6C0A <___libgatt_lib_db_962+0x2A>
   55166:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55167:	6C00      	**prefx    0x6C
   55168:	0919      	ld         x, @0x6C09 <___libgatt_lib_db_962+0x29>
   55169:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5516A:	0010      	ld         ah, #+0x0
   5516B:	1123      	st         ah, @(+0x11, y)
   5516C:	0BE0      	bra        +0xB <___libcsrmesh_239+0x149:0x55177[p]>
   5516D:	F899      	tst        @0xFFF8 <(scratchpad)>
   5516E:	08F4      	beq        +0x8 <___libcsrmesh_239+0x148:0x55176[p]>
   5516F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55170:	E039      	add        x, @0xFFE0 <register ah>
   55171:	0016      	ld         al, @(0x0, x)
   55172:	FA85      	cmp        al, @0xFFFA <(scratchpad)>
   55173:	03F0      	bne        +0x3 <___libcsrmesh_239+0x148:0x55176[p]>
   55174:	0114      	ld         al, #+0x1
   55175:	1127      	st         al, @(+0x11, y)
   55176:	0130      	add        ah, #+0x1
   55177:	F981      	cmp        ah, @0xFFF9 <(scratchpad)>
   55178:	F5FC      	bcs        -0xB <___libcsrmesh_239+0x13F:0x5516D[p]>
   55179:	1113      	ld         ah, @(+0x11, y)
   5517A:	231B      	ld         x, @(+0x23, y)
   5517B:	0022      	st         ah, @(0x0, x)
   5517C:	16F0      	bne        +0x16 <___libcsrmesh_239+0x164:0x55192[p]>
   5517D:	0617      	ld         al, @(+0x6, y)
   5517E:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5517F:	161B      	ld         x, @(+0x16, y)
   55180:	051A      	ld         x, @(+0x5, x)
   55181:	FA29      	st         x, @0xFFFA <(scratchpad)>
   55182:	0014      	ld         al, #+0x0
   55183:	0BE0      	bra        +0xB <___libcsrmesh_239+0x160:0x5518E[p]>
   55184:	161B      	ld         x, @(+0x16, y)
   55185:	041A      	ld         x, @(+0x4, x)
   55186:	E311      	ld         ah, @0xFFE3 <register uxl>
   55187:	E131      	add        ah, @0xFFE1 <register al>
   55188:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   55189:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5518A:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5518B:	0082      	cmp        ah, @(0x0, x)
   5518C:	06F4      	beq        +0x6 <___libcsrmesh_239+0x164:0x55192[p]>
   5518D:	0134      	add        al, #+0x1
   5518E:	FA85      	cmp        al, @0xFFFA <(scratchpad)>
   5518F:	F5FC      	bcs        -0xB <___libcsrmesh_239+0x156:0x55184[p]>
   55190:	0100      	**prefx    0x1
   55191:	B3E0      	bra        +0xB3 <___libcsrmesh_239+0x216:0x55244[p]>
   55192:	189B      	tst        @(+0x18, y)
   55193:	73F4      	beq        +0x73 <___libcsrmesh_239+0x1D8:0x55206[p]>
   55194:	181B      	ld         x, @(+0x18, y)
   55195:	011A      	ld         x, @(+0x1, x)
   55196:	F929      	st         x, @0xFFF9 <(scratchpad)>
   55197:	6FF4      	beq        +0x6F <___libcsrmesh_239+0x1D8:0x55206[p]>
   55198:	159B      	tst        @(+0x15, y)
   55199:	6DF0      	bne        +0x6D <___libcsrmesh_239+0x1D8:0x55206[p]>
   5519A:	0513      	ld         ah, @(+0x5, y)
   5519B:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   5519C:	6AF4      	beq        +0x6A <___libcsrmesh_239+0x1D8:0x55206[p]>
   5519D:	1A9B      	tst        @(+0x1A, y)
   5519E:	3EF0      	bne        +0x3E <___libcsrmesh_239+0x1AE:0x551DC[p]>
   5519F:	0014      	ld         al, #+0x0
   551A0:	F825      	st         al, @0xFFF8 <(scratchpad)>
   551A1:	0CE0      	bra        +0xC <___libcsrmesh_239+0x17F:0x551AD[p]>
   551A2:	181B      	ld         x, @(+0x18, y)
   551A3:	021A      	ld         x, @(+0x2, x)
   551A4:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   551A5:	02A0      	asl        #0x2
   551A6:	E335      	add        al, @0xFFE3 <register uxl>
   551A7:	E119      	ld         x, @0xFFE1 <register al>
   551A8:	009A      	tst        @(0x0, x)
   551A9:	07F4      	beq        +0x7 <___libcsrmesh_239+0x182:0x551B0[p]>
   551AA:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   551AB:	0130      	add        ah, #+0x1
   551AC:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   551AD:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   551AE:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   551AF:	F3FC      	bcs        -0xD <___libcsrmesh_239+0x174:0x551A2[p]>
   551B0:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   551B1:	122B      	st         x, @(+0x12, y)
   551B2:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   551B3:	02A0      	asl        #0x2
   551B4:	F825      	st         al, @0xFFF8 <(scratchpad)>
   551B5:	181B      	ld         x, @(+0x18, y)
   551B6:	0212      	ld         ah, @(+0x2, x)
   551B7:	E131      	add        ah, @0xFFE1 <register al>
   551B8:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   551B9:	E019      	ld         x, @0xFFE0 <register ah>
   551BA:	0126      	st         al, @(+0x1, x)
   551BB:	181B      	ld         x, @(+0x18, y)
   551BC:	021A      	ld         x, @(+0x2, x)
   551BD:	E311      	ld         ah, @0xFFE3 <register uxl>
   551BE:	F831      	add        ah, @0xFFF8 <(scratchpad)>
   551BF:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   551C0:	0313      	ld         ah, @(+0x3, y)
   551C1:	0417      	ld         al, @(+0x4, y)
   551C2:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   551C3:	0326      	st         al, @(+0x3, x)
   551C4:	0222      	st         ah, @(+0x2, x)
   551C5:	149B      	tst        @(+0x14, y)
   551C6:	16F4      	beq        +0x16 <___libcsrmesh_239+0x1AE:0x551DC[p]>
   551C7:	141B      	ld         x, @(+0x14, y)
   551C8:	F839      	add        x, @0xFFF8 <(scratchpad)>
   551C9:	F929      	st         x, @0xFFF9 <(scratchpad)>
   551CA:	181B      	ld         x, @(+0x18, y)
   551CB:	0216      	ld         al, @(+0x2, x)
   551CC:	F835      	add        al, @0xFFF8 <(scratchpad)>
   551CD:	E119      	ld         x, @0xFFE1 <register al>
   551CE:	0116      	ld         al, @(+0x1, x)
   551CF:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   551D0:	0126      	st         al, @(+0x1, x)
   551D1:	181B      	ld         x, @(+0x18, y)
   551D2:	0216      	ld         al, @(+0x2, x)
   551D3:	F835      	add        al, @0xFFF8 <(scratchpad)>
   551D4:	E119      	ld         x, @0xFFE1 <register al>
   551D5:	0212      	ld         ah, @(+0x2, x)
   551D6:	0316      	ld         al, @(+0x3, x)
   551D7:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   551D8:	0326      	st         al, @(+0x3, x)
   551D9:	0222      	st         ah, @(+0x2, x)
   551DA:	0110      	ld         ah, #+0x1
   551DB:	1323      	st         ah, @(+0x13, y)
   551DC:	1217      	ld         al, @(+0x12, y)
   551DD:	02A0      	asl        #0x2
   551DE:	FA25      	st         al, @0xFFFA <(scratchpad)>
   551DF:	181B      	ld         x, @(+0x18, y)
   551E0:	0116      	ld         al, @(+0x1, x)
   551E1:	FF34      	add        al, #-0x1
   551E2:	0212      	ld         ah, @(+0x2, x)
   551E3:	FA31      	add        ah, @0xFFFA <(scratchpad)>
   551E4:	E019      	ld         x, @0xFFE0 <register ah>
   551E5:	0086      	cmp        al, @(0x0, x)
   551E6:	04F0      	bne        +0x4 <___libcsrmesh_239+0x1BC:0x551EA[p]>
   551E7:	0110      	ld         ah, #+0x1
   551E8:	1523      	st         ah, @(+0x15, y)
   551E9:	1DE0      	bra        +0x1D <___libcsrmesh_239+0x1D8:0x55206[p]>
   551EA:	0014      	ld         al, #+0x0
   551EB:	F925      	st         al, @0xFFF9 <(scratchpad)>
   551EC:	0CE0      	bra        +0xC <___libcsrmesh_239+0x1CA:0x551F8[p]>
   551ED:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   551EE:	02A0      	asl        #0x2
   551EF:	E119      	ld         x, @0xFFE1 <register al>
   551F0:	F839      	add        x, @0xFFF8 <(scratchpad)>
   551F1:	0016      	ld         al, @(0x0, x)
   551F2:	03F4      	beq        +0x3 <___libcsrmesh_239+0x1C7:0x551F5[p]>
   551F3:	FF34      	add        al, #-0x1
   551F4:	0026      	st         al, @(0x0, x)
   551F5:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   551F6:	0138      	add        x, #+0x1
   551F7:	F929      	st         x, @0xFFF9 <(scratchpad)>
   551F8:	181B      	ld         x, @(+0x18, y)
   551F9:	0116      	ld         al, @(+0x1, x)
   551FA:	0212      	ld         ah, @(+0x2, x)
   551FB:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   551FC:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   551FD:	E189      	cmp        x, @0xFFE1 <register al>
   551FE:	EFFC      	bcs        -0x11 <___libcsrmesh_239+0x1BF:0x551ED[p]>
   551FF:	FA31      	add        ah, @0xFFFA <(scratchpad)>
   55200:	FF34      	add        al, #-0x1
   55201:	E019      	ld         x, @0xFFE0 <register ah>
   55202:	0026      	st         al, @(0x0, x)
   55203:	0110      	ld         ah, #+0x1
   55204:	1523      	st         ah, @(+0x15, y)
   55205:	1323      	st         ah, @(+0x13, y)
   55206:	161B      	ld         x, @(+0x16, y)
   55207:	0116      	ld         al, @(+0x1, x)
   55208:	00B6      	or         al, @(0x0, x)
   55209:	3BF4      	beq        +0x3B <___libcsrmesh_239+0x216:0x55244[p]>
   5520A:	E411      	ld         ah, @0xFFE4 <register uy>
   5520B:	0330      	add        ah, #+0x3
   5520C:	0823      	st         ah, @(+0x8, y)
   5520D:	6C00      	**prefx    0x6C
   5520E:	BB11      	ld         ah, @0x6BBB <g_mesh_context_data+0x1E>
   5520F:	0E23      	st         ah, @(+0xE, y)
   55210:	0014      	ld         al, #+0x0
   55211:	0927      	st         al, @(+0x9, y)
   55212:	101B      	ld         x, @(+0x10, y)
   55213:	0A2B      	st         x, @(+0xA, y)
   55214:	1D17      	ld         al, @(+0x1D, y)
   55215:	F934      	add        al, #-0x7
   55216:	1D27      	st         al, @(+0x1D, y)
   55217:	1757      	sub        al, @(+0x17, y)
   55218:	0B27      	st         al, @(+0xB, y)
   55219:	1D1B      	ld         x, @(+0x1D, y)
   5521A:	0738      	add        x, #+0x7
   5521B:	1D2B      	st         x, @(+0x1D, y)
   5521C:	2417      	ld         al, @(+0x24, y)
   5521D:	0C27      	st         al, @(+0xC, y)
   5521E:	251B      	ld         x, @(+0x25, y)
   5521F:	0D2B      	st         x, @(+0xD, y)
   55220:	0517      	ld         al, @(+0x5, y)
   55221:	E085      	cmp        al, @0xFFE0 <register ah>
   55222:	04F0      	bne        +0x4 <___libcsrmesh_239+0x1F8:0x55226[p]>
   55223:	0010      	ld         ah, #+0x0
   55224:	261B      	ld         x, @(+0x26, y)
   55225:	0022      	st         ah, @(0x0, x)
   55226:	2617      	ld         al, @(+0x26, y)
   55227:	0F27      	st         al, @(+0xF, y)
   55228:	111B      	ld         x, @(+0x11, y)
   55229:	0188      	cmp        x, #+0x1
   5522A:	07F0      	bne        +0x7 <___libcsrmesh_239+0x203:0x55231[p]>
   5522B:	161B      	ld         x, @(+0x16, y)
   5522C:	0216      	ld         al, @(+0x2, x)
   5522D:	6C00      	**prefx    0x6C
   5522E:	0B85      	cmp        al, @0x6C0B <___libgatt_lib_db_962+0x2B>
   5522F:	04F0      	bne        +0x4 <___libcsrmesh_239+0x205:0x55233[p]>
   55230:	08E0      	bra        +0x8 <___libcsrmesh_239+0x20A:0x55238[p]>
   55231:	119B      	tst        @(+0x11, y)
   55232:	06F4      	beq        +0x6 <___libcsrmesh_239+0x20A:0x55238[p]>
   55233:	6C00      	**prefx    0x6C
   55234:	0B15      	ld         al, @0x6C0B <___libgatt_lib_db_962+0x2B>
   55235:	0100      	**prefx    0x1
   55236:	FF84      	cmp        al, #+0xFF
   55237:	0DF0      	bne        +0xD <___libcsrmesh_239+0x216:0x55244[p]>
   55238:	161B      	ld         x, @(+0x16, y)
   55239:	011A      	ld         x, @(+0x1, x)
   5523A:	1F2B      	st         x, @(+0x1F, y)
   5523B:	161B      	ld         x, @(+0x16, y)
   5523C:	001A      	ld         x, @(0x0, x)
   5523D:	1E2B      	st         x, @(+0x1E, y)
   5523E:	E415      	ld         al, @0xFFE4 <register uy>
   5523F:	0834      	add        al, #+0x8
   55240:	1E0E      	ld         xh, @(+0x1E, y)
   55241:	1F9F      	bsr        @(+0x1F, y)
   55242:	1927      	st         al, @(+0x19, y)
   55243:	07F4      	beq        +0x7 <___libcsrmesh_239+0x21C:0x5524A[p]>
   55244:	161B      	ld         x, @(+0x16, y)
   55245:	061A      	ld         x, @(+0x6, x)
   55246:	162B      	st         x, @(+0x16, y)
   55247:	169B      	tst        @(+0x16, y)
   55248:	FF00      	**prefx    0xFF
   55249:	0EF0      	bne        -0xF2 <___libcsrmesh_239+0x129:0x55157[p]>
   5524A:	139B      	tst        @(+0x13, y)
   5524B:	0FF4      	beq        +0xF <___libcsrmesh_239+0x22C:0x5525A[p]>
   5524C:	1217      	ld         al, @(+0x12, y)
   5524D:	02A0      	asl        #0x2
   5524E:	E111      	ld         ah, @0xFFE1 <register al>
   5524F:	1417      	ld         al, @(+0x14, y)
   55250:	E035      	add        al, @0xFFE0 <register ah>
   55251:	0027      	st         al, @(0x0, y)
   55252:	0418      	ld         x, #+0x4
   55253:	012B      	st         x, @(+0x1, y)
   55254:	0E14      	ld         al, #+0xE
   55255:	C600      	**prefx    0xC6
   55256:	A39C      	bsr        -0x3A5D <CSRmeshPsWriteWithOffset:0x517F9[p]>
   55257:	03E0      	bra        +0x3 <___libcsrmesh_239+0x22C:0x5525A[p]>
   55258:	FF10      	ld         ah, #-0x1
   55259:	1923      	st         ah, @(+0x19, y)
   5525A:	1917      	ld         al, @(+0x19, y)
   5525B:	DD0F      	leave      #-0x23

0x0005525C <___libcsrmesh_234>:
   5525C:	6800      	**prefx    0x68
   5525D:	FA30      	add        ah, #+0x67FA
   5525E:	FB00      	**prefx    0xFB
   5525F:	D800      	**prefx    0xD8
   55260:	76E0      	bra        -0x5278A <MemCopyUnPack:0x2AD6[p]>

0x00055261 <___libcsrmesh_459>:
   55261:	FC0B      	enter      #-0x4
   55262:	0114      	ld         al, #+0x1
   55263:	0027      	st         al, @(0x0, y)
   55264:	0D14      	ld         al, #+0xD
   55265:	E411      	ld         ah, @0xFFE4 <register uy>
   55266:	0130      	add        ah, #+0x1
   55267:	C600      	**prefx    0xC6
   55268:	B09C      	bsr        -0x3A50 <CSRmeshPsRead:0x51818[p]>
   55269:	019B      	tst        @(+0x1, y)
   5526A:	24F4      	beq        +0x24 <___libcsrmesh_459+0x2D:0x5528E[p]>
   5526B:	0014      	ld         al, #+0x0
   5526C:	6800      	**prefx    0x68
   5526D:	0425      	st         al, @0x6804 <___libgatt_lib_db_702+0x7>
   5526E:	6800      	**prefx    0x68
   5526F:	0525      	st         al, @0x6805 <___libgatt_lib_db_702+0x8>
   55270:	0127      	st         al, @(+0x1, y)
   55271:	0114      	ld         al, #+0x1
   55272:	0027      	st         al, @(0x0, y)
   55273:	0D14      	ld         al, #+0xD
   55274:	E411      	ld         ah, @0xFFE4 <register uy>
   55275:	0130      	add        ah, #+0x1
   55276:	C600      	**prefx    0xC6
   55277:	8D9C      	bsr        -0x3A73 <CSRmeshPsWrite:0x51804[p]>
   55278:	0214      	ld         al, #+0x2
   55279:	0027      	st         al, @(0x0, y)
   5527A:	0614      	ld         al, #+0x6
   5527B:	6800      	**prefx    0x68
   5527C:	0410      	ld         ah, #+0x6804
   5527D:	C600      	**prefx    0xC6
   5527E:	869C      	bsr        -0x3A7A <CSRmeshPsWrite:0x51804[p]>
   5527F:	6C00      	**prefx    0x6C
   55280:	BF18      	ld         x, #+0x6BBF
   55281:	0014      	ld         al, #+0x0
   55282:	6C00      	**prefx    0x6C
   55283:	BF25      	st         al, @0x6BBF <g_mesh_context_data+0x22>
   55284:	0126      	st         al, @(+0x1, x)
   55285:	0214      	ld         al, #+0x2
   55286:	0027      	st         al, @(0x0, y)
   55287:	0714      	ld         al, #+0x7
   55288:	E311      	ld         ah, @0xFFE3 <register uxl>
   55289:	C500      	**prefx    0xC5
   5528A:	7A9C      	bsr        -0x3A86 <CSRmeshPsWrite:0x51804[p]>
   5528B:	0014      	ld         al, #+0x0
   5528C:	6800      	**prefx    0x68
   5528D:	0725      	st         al, @0x6807 <___libgatt_lib_db_702+0xA>
   5528E:	FC0F      	leave      #-0x4

0x0005528F <___libcsrmesh_238>:
   5528F:	FC0B      	enter      #-0x4
   55290:	0E14      	ld         al, #+0xE
   55291:	0027      	st         al, @(0x0, y)
   55292:	6800      	**prefx    0x68
   55293:	FA14      	ld         al, #+0x67FA
   55294:	0010      	ld         ah, #+0x0
   55295:	FB00      	**prefx    0xFB
   55296:	D900      	**prefx    0xD9
   55297:	B99C      	bsr        -0x52747 <MemSet:0x2B50[p]>
   55298:	6C00      	**prefx    0x6C
   55299:	9D99      	tst        @0x6B9D <g_mesh_context_data>
   5529A:	13F4      	beq        +0x13 <___libcsrmesh_238+0x1E:0x552AD[p]>
   5529B:	6C00      	**prefx    0x6C
   5529C:	BE15      	ld         al, @0x6BBE <g_mesh_context_data+0x21>
   5529D:	6C00      	**prefx    0x6C
   5529E:	BD11      	ld         ah, @0x6BBD <g_mesh_context_data+0x20>
   5529F:	6800      	**prefx    0x68
   552A0:	0525      	st         al, @0x6805 <___libgatt_lib_db_702+0x8>
   552A1:	6800      	**prefx    0x68
   552A2:	0421      	st         ah, @0x6804 <___libgatt_lib_db_702+0x7>
   552A3:	0200      	**prefx    0x2
   552A4:	0034      	add        al, #+0x200
   552A5:	0040      	addc       ah, #+0x0
   552A6:	6C00      	**prefx    0x6C
   552A7:	BE25      	st         al, @0x6BBE <g_mesh_context_data+0x21>
   552A8:	0100      	**prefx    0x1
   552A9:	FFC0      	and        ah, #0xFF
   552AA:	6C00      	**prefx    0x6C
   552AB:	BD21      	st         ah, @0x6BBD <g_mesh_context_data+0x20>
   552AC:	1CE0      	bra        +0x1C <___libcsrmesh_238+0x39:0x552C8[p]>
   552AD:	FB00      	**prefx    0xFB
   552AE:	3100      	**prefx    0x31
   552AF:	BB9C      	bsr        -0x4CF45 <Random16:0x836A[p]>
   552B0:	0127      	st         al, @(+0x1, y)
   552B1:	FB00      	**prefx    0xFB
   552B2:	3100      	**prefx    0x31
   552B3:	B79C      	bsr        -0x4CF49 <Random16:0x836A[p]>
   552B4:	E119      	ld         x, @0xFFE1 <register al>
   552B5:	0010      	ld         ah, #+0x0
   552B6:	0117      	ld         al, @(+0x1, y)
   552B7:	10A0      	asl        #0x10
   552B8:	E3B5      	or         al, @0xFFE3 <register uxl>
   552B9:	0100      	**prefx    0x1
   552BA:	FFC0      	and        ah, #0xFF
   552BB:	6C00      	**prefx    0x6C
   552BC:	BD21      	st         ah, @0x6BBD <g_mesh_context_data+0x20>
   552BD:	6C00      	**prefx    0x6C
   552BE:	BE25      	st         al, @0x6BBE <g_mesh_context_data+0x21>
   552BF:	6800      	**prefx    0x68
   552C0:	0421      	st         ah, @0x6804 <___libgatt_lib_db_702+0x7>
   552C1:	6800      	**prefx    0x68
   552C2:	0418      	ld         x, #+0x6804
   552C3:	0126      	st         al, @(+0x1, x)
   552C4:	6C00      	**prefx    0x6C
   552C5:	BF21      	st         ah, @0x6BBF <g_mesh_context_data+0x22>
   552C6:	6C00      	**prefx    0x6C
   552C7:	C025      	st         al, @0x6BC0 <g_mesh_context_data+0x23>
   552C8:	3214      	ld         al, #+0x32
   552C9:	6800      	**prefx    0x68
   552CA:	0325      	st         al, @0x6803 <___libgatt_lib_db_702+0x6>
   552CB:	0014      	ld         al, #+0x0
   552CC:	6800      	**prefx    0x68
   552CD:	0225      	st         al, @0x6802 <___libgatt_lib_db_702+0x5>
   552CE:	6C00      	**prefx    0x6C
   552CF:	0925      	st         al, @0x6C09 <___libgatt_lib_db_962+0x29>
   552D0:	6C00      	**prefx    0x6C
   552D1:	0A25      	st         al, @0x6C0A <___libgatt_lib_db_962+0x2A>
   552D2:	0100      	**prefx    0x1
   552D3:	FF14      	ld         al, #+0xFF
   552D4:	6C00      	**prefx    0x6C
   552D5:	0B25      	st         al, @0x6C0B <___libgatt_lib_db_962+0x2B>
   552D6:	0C00      	**prefx    0xC
   552D7:	989C      	bsr        +0xB98 <ConfigModelInit:0x55E6F[p]>
   552D8:	1300      	**prefx    0x13
   552D9:	DE9C      	bsr        +0x12DE <GroupModelInit:0x565B7[p]>
   552DA:	1000      	**prefx    0x10
   552DB:	0C9C      	bsr        +0x100C <BearerModelInit:0x562E7[p]>
   552DC:	0014      	ld         al, #+0x0
   552DD:	FC0F      	leave      #-0x4

0x000552DE <___libcsrmesh_297>:
   552DE:	F20B      	enter      #-0xE
   552DF:	0A27      	st         al, @(+0xA, y)
   552E0:	0B23      	st         ah, @(+0xB, y)
   552E1:	3F14      	ld         al, #+0x3F
   552E2:	0A1B      	ld         x, @(+0xA, y)
   552E3:	3056      	sub        al, @(+0x30, x)
   552E4:	0827      	st         al, @(+0x8, y)
   552E5:	311A      	ld         x, @(+0x31, x)
   552E6:	092B      	st         x, @(+0x9, y)
   552E7:	0100      	**prefx    0x1
   552E8:	8014      	ld         al, #+0x80
   552E9:	0527      	st         al, @(+0x5, y)
   552EA:	0118      	ld         x, #+0x1
   552EB:	002B      	st         x, @(0x0, y)
   552EC:	012B      	st         x, @(+0x1, y)
   552ED:	0014      	ld         al, #+0x0
   552EE:	0227      	st         al, @(+0x2, y)
   552EF:	0A1B      	ld         x, @(+0xA, y)
   552F0:	032B      	st         x, @(+0x3, y)
   552F1:	0427      	st         al, @(+0x4, y)
   552F2:	E411      	ld         ah, @0xFFE4 <register uy>
   552F3:	0530      	add        ah, #+0x5
   552F4:	1700      	**prefx    0x17
   552F5:	469C      	bsr        +0x1746 <___libcsrmesh_286:0x56A3B[p]>
   552F6:	0A1B      	ld         x, @(+0xA, y)
   552F7:	3012      	ld         ah, @(+0x30, x)
   552F8:	0817      	ld         al, @(+0x8, y)
   552F9:	0784      	cmp        al, #+0x7
   552FA:	052C      	bcz        +0x5 <___libcsrmesh_297+0x21:0x552FF[p]>
   552FB:	0009      	**unsigned
   552FC:	02A4      	lsr        #0x2
   552FD:	0723      	st         ah, @(+0x7, y)
   552FE:	1BE0      	bra        +0x1B <___libcsrmesh_297+0x3B:0x55319[p]>
   552FF:	0018      	ld         x, #+0x0
   55300:	052B      	st         x, @(+0x5, y)
   55301:	0114      	ld         al, #+0x1
   55302:	0027      	st         al, @(0x0, y)
   55303:	081B      	ld         x, @(+0x8, y)
   55304:	012B      	st         x, @(+0x1, y)
   55305:	0014      	ld         al, #+0x0
   55306:	0227      	st         al, @(+0x2, y)
   55307:	0A1B      	ld         x, @(+0xA, y)
   55308:	032B      	st         x, @(+0x3, y)
   55309:	0427      	st         al, @(+0x4, y)
   5530A:	E411      	ld         ah, @0xFFE4 <register uy>
   5530B:	0530      	add        ah, #+0x5
   5530C:	1700      	**prefx    0x17
   5530D:	2E9C      	bsr        +0x172E <___libcsrmesh_286:0x56A3B[p]>
   5530E:	0A13      	ld         ah, @(+0xA, y)
   5530F:	1030      	add        ah, #+0x10
   55310:	0A17      	ld         al, @(+0xA, y)
   55311:	1900      	**prefx    0x19
   55312:	729C      	bsr        +0x1972 <___libcsrmesh_294:0x56C84[p]>
   55313:	0014      	ld         al, #+0x0
   55314:	0A1B      	ld         x, @(+0xA, y)
   55315:	3026      	st         al, @(+0x30, x)
   55316:	4018      	ld         x, #+0x40
   55317:	082B      	st         x, @(+0x8, y)
   55318:	0727      	st         al, @(+0x7, y)
   55319:	0A1B      	ld         x, @(+0xA, y)
   5531A:	3016      	ld         al, @(+0x30, x)
   5531B:	03C4      	and        al, #0x3
   5531C:	1AF4      	beq        +0x1A <___libcsrmesh_297+0x58:0x55336[p]>
   5531D:	0418      	ld         x, #+0x4
   5531E:	E159      	sub        x, @0xFFE1 <register al>
   5531F:	062B      	st         x, @(+0x6, y)
   55320:	0014      	ld         al, #+0x0
   55321:	0527      	st         al, @(+0x5, y)
   55322:	0118      	ld         x, #+0x1
   55323:	002B      	st         x, @(0x0, y)
   55324:	0617      	ld         al, @(+0x6, y)
   55325:	0127      	st         al, @(+0x1, y)
   55326:	0018      	ld         x, #+0x0
   55327:	022B      	st         x, @(+0x2, y)
   55328:	0A17      	ld         al, @(+0xA, y)
   55329:	0327      	st         al, @(+0x3, y)
   5532A:	042B      	st         x, @(+0x4, y)
   5532B:	0014      	ld         al, #+0x0
   5532C:	E411      	ld         ah, @0xFFE4 <register uy>
   5532D:	0530      	add        ah, #+0x5
   5532E:	1700      	**prefx    0x17
   5532F:	0C9C      	bsr        +0x170C <___libcsrmesh_286:0x56A3B[p]>
   55330:	071B      	ld         x, @(+0x7, y)
   55331:	0138      	add        x, #+0x1
   55332:	072B      	st         x, @(+0x7, y)
   55333:	0817      	ld         al, @(+0x8, y)
   55334:	0657      	sub        al, @(+0x6, y)
   55335:	0827      	st         al, @(+0x8, y)
   55336:	0813      	ld         ah, @(+0x8, y)
   55337:	0009      	**unsigned
   55338:	02A4      	lsr        #0x2
   55339:	E015      	ld         al, @0xFFE0 <register ah>
   5533A:	01A0      	asl        #0x1
   5533B:	E119      	ld         x, @0xFFE1 <register al>
   5533C:	0717      	ld         al, @(+0x7, y)
   5533D:	0834      	add        al, #+0x8
   5533E:	0727      	st         al, @(+0x7, y)
   5533F:	01A0      	asl        #0x1
   55340:	0A37      	add        al, @(+0xA, y)
   55341:	002B      	st         x, @(0x0, y)
   55342:	0010      	ld         ah, #+0x0
   55343:	FB00      	**prefx    0xFB
   55344:	D800      	**prefx    0xD8
   55345:	0B9C      	bsr        -0x527F5 <MemSet:0x2B50[p]>
   55346:	0917      	ld         al, @(+0x9, y)
   55347:	03A0      	asl        #0x3
   55348:	0A1B      	ld         x, @(+0xA, y)
   55349:	2FB6      	or         al, @(+0x2F, x)
   5534A:	2F26      	st         al, @(+0x2F, x)
   5534B:	E311      	ld         ah, @0xFFE3 <register uxl>
   5534C:	1030      	add        ah, #+0x10
   5534D:	E315      	ld         al, @0xFFE3 <register uxl>
   5534E:	1900      	**prefx    0x19
   5534F:	359C      	bsr        +0x1935 <___libcsrmesh_294:0x56C84[p]>
   55350:	0014      	ld         al, #+0x0
   55351:	FA25      	st         al, @0xFFFA <(scratchpad)>
   55352:	0A1B      	ld         x, @(+0xA, y)
   55353:	FA39      	add        x, @0xFFFA <(scratchpad)>
   55354:	0116      	ld         al, @(+0x1, x)
   55355:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55356:	001A      	ld         x, @(0x0, x)
   55357:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55358:	E315      	ld         al, @0xFFE3 <register uxl>
   55359:	08A0      	asl        #0x8
   5535A:	FB25      	st         al, @0xFFFB <(scratchpad)>
   5535B:	E311      	ld         ah, @0xFFE3 <register uxl>
   5535C:	0009      	**unsigned
   5535D:	08A4      	lsr        #0x8
   5535E:	FBB1      	or         ah, @0xFFFB <(scratchpad)>
   5535F:	0B1B      	ld         x, @(+0xB, y)
   55360:	0022      	st         ah, @(0x0, x)
   55361:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   55362:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   55363:	0009      	**unsigned
   55364:	08A4      	lsr        #0x8
   55365:	E119      	ld         x, @0xFFE1 <register al>
   55366:	0100      	**prefx    0x1
   55367:	FFC8      	and        x, #0xFF
   55368:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   55369:	08A0      	asl        #0x8
   5536A:	E3B5      	or         al, @0xFFE3 <register uxl>
   5536B:	0B1B      	ld         x, @(+0xB, y)
   5536C:	0126      	st         al, @(+0x1, x)
   5536D:	0238      	add        x, #+0x2
   5536E:	0B2B      	st         x, @(+0xB, y)
   5536F:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   55370:	0234      	add        al, #+0x2
   55371:	FA25      	st         al, @0xFFFA <(scratchpad)>
   55372:	1084      	cmp        al, #+0x10
   55373:	DFF0      	bne        -0x21 <___libcsrmesh_297+0x74:0x55352[p]>
   55374:	F20F      	leave      #-0xE

0x00055375 <___libcsrmesh_308>:
   55375:	FE0B      	enter      #-0x2
   55376:	FA25      	st         al, @0xFFFA <(scratchpad)>
   55377:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   55378:	0217      	ld         al, @(+0x2, y)
   55379:	FF27      	st         al, @(-0x1, y)
   5537A:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5537B:	E139      	add        x, @0xFFE1 <register al>
   5537C:	FA29      	st         x, @0xFFFA <(scratchpad)>
   5537D:	0014      	ld         al, #+0x0
   5537E:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5537F:	13E0      	bra        +0x13 <___libcsrmesh_308+0x1D:0x55392[p]>
   55380:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   55381:	001A      	ld         x, @(0x0, x)
   55382:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55383:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   55384:	01A0      	asl        #0x1
   55385:	E119      	ld         x, @0xFFE1 <register al>
   55386:	FB39      	add        x, @0xFFFB <(scratchpad)>
   55387:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   55388:	0009      	**unsigned
   55389:	08A4      	lsr        #0x8
   5538A:	0022      	st         ah, @(0x0, x)
   5538B:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5538C:	0100      	**prefx    0x1
   5538D:	FFC4      	and        al, #0xFF
   5538E:	0126      	st         al, @(+0x1, x)
   5538F:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55390:	0138      	add        x, #+0x1
   55391:	F929      	st         x, @0xFFF9 <(scratchpad)>
   55392:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   55393:	FF34      	add        al, #-0x1
   55394:	FA25      	st         al, @0xFFFA <(scratchpad)>
   55395:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55396:	FF8B      	cmp        x, @(-0x1, y)
   55397:	E9FC      	bcs        -0x17 <___libcsrmesh_308+0xB:0x55380[p]>
   55398:	FE0F      	leave      #-0x2

0x00055399 <___libcsrmesh_304>:
   55399:	FB0B      	enter      #-0x5
   5539A:	E119      	ld         x, @0xFFE1 <register al>
   5539B:	0123      	st         ah, @(+0x1, y)
   5539C:	3214      	ld         al, #+0x32
   5539D:	6800      	**prefx    0x68
   5539E:	0810      	ld         ah, #+0x6808
   5539F:	FD09      	bc2        
   553A0:	0617      	ld         al, @(+0x6, y)
   553A1:	0027      	st         al, @(0x0, y)
   553A2:	6800      	**prefx    0x68
   553A3:	0814      	ld         al, #+0x6808
   553A4:	0513      	ld         ah, @(+0x5, y)
   553A5:	0200      	**prefx    0x2
   553A6:	B89C      	bsr        +0x1B8 <___libcsrmesh_318:0x5555E[p]>
   553A7:	0817      	ld         al, @(+0x8, y)
   553A8:	0027      	st         al, @(0x0, y)
   553A9:	6800      	**prefx    0x68
   553AA:	0814      	ld         al, #+0x6808
   553AB:	0713      	ld         ah, @(+0x7, y)
   553AC:	0200      	**prefx    0x2
   553AD:	B19C      	bsr        +0x1B1 <___libcsrmesh_318:0x5555E[p]>
   553AE:	6800      	**prefx    0x68
   553AF:	0814      	ld         al, #+0x6808
   553B0:	5234      	add        al, #+0x52
   553B1:	0227      	st         al, @(+0x2, y)
   553B2:	6800      	**prefx    0x68
   553B3:	0814      	ld         al, #+0x6808
   553B4:	0213      	ld         ah, @(+0x2, y)
   553B5:	FF00      	**prefx    0xFF
   553B6:	289C      	bsr        -0xD8 <___libcsrmesh_297:0x552DE[p]>
   553B7:	2014      	ld         al, #+0x20
   553B8:	0027      	st         al, @(0x0, y)
   553B9:	6800      	**prefx    0x68
   553BA:	3A14      	ld         al, #+0x683A
   553BB:	0213      	ld         ah, @(+0x2, y)
   553BC:	FB00      	**prefx    0xFB
   553BD:	D700      	**prefx    0xD7
   553BE:	189C      	bsr        -0x528E8 <MemCopyUnPack:0x2AD6[p]>
   553BF:	3214      	ld         al, #+0x32
   553C0:	6800      	**prefx    0x68
   553C1:	0810      	ld         ah, #+0x6808
   553C2:	011B      	ld         x, @(+0x1, y)
   553C3:	FD09      	bc2        
   553C4:	2014      	ld         al, #+0x20
   553C5:	0027      	st         al, @(0x0, y)
   553C6:	6800      	**prefx    0x68
   553C7:	0814      	ld         al, #+0x6808
   553C8:	6800      	**prefx    0x68
   553C9:	3A10      	ld         ah, #+0x683A
   553CA:	0200      	**prefx    0x2
   553CB:	939C      	bsr        +0x193 <___libcsrmesh_318:0x5555E[p]>
   553CC:	6800      	**prefx    0x68
   553CD:	0814      	ld         al, #+0x6808
   553CE:	0213      	ld         ah, @(+0x2, y)
   553CF:	FF00      	**prefx    0xFF
   553D0:	0E9C      	bsr        -0xF2 <___libcsrmesh_297:0x552DE[p]>
   553D1:	0A13      	ld         ah, @(+0xA, y)
   553D2:	0009      	**unsigned
   553D3:	01A4      	lsr        #0x1
   553D4:	1014      	ld         al, #+0x10
   553D5:	E055      	sub        al, @0xFFE0 <register ah>
   553D6:	0237      	add        al, @(+0x2, y)
   553D7:	0227      	st         al, @(+0x2, y)
   553D8:	0023      	st         ah, @(0x0, y)
   553D9:	0913      	ld         ah, @(+0x9, y)
   553DA:	9B9C      	bsr        -0x65 <___libcsrmesh_308:0x55375[p]>
   553DB:	FB0F      	leave      #-0x5

0x000553DC <CSRmeshCalculateSHA256Hash>:
   553DC:	FB0B      	enter      #-0x5
   553DD:	0127      	st         al, @(+0x1, y)
   553DE:	0223      	st         ah, @(+0x2, y)
   553DF:	6800      	**prefx    0x68
   553E0:	0814      	ld         al, #+0x6808
   553E1:	0100      	**prefx    0x1
   553E2:	D29C      	bsr        +0xD2 <___libcsrmesh_311:0x554B4[p]>
   553E3:	0010      	ld         ah, #+0x0
   553E4:	0BE0      	bra        +0xB <CSRmeshCalculateSHA256Hash+0x13:0x553EF[p]>
   553E5:	0117      	ld         al, @(+0x1, y)
   553E6:	E035      	add        al, @0xFFE0 <register ah>
   553E7:	E119      	ld         x, @0xFFE1 <register al>
   553E8:	0016      	ld         al, @(0x0, x)
   553E9:	0100      	**prefx    0x1
   553EA:	FFC4      	and        al, #0xFF
   553EB:	E019      	ld         x, @0xFFE0 <register ah>
   553EC:	6800      	**prefx    0x68
   553ED:	3A26      	st         al, @(+0x683A, x)
   553EE:	0130      	add        ah, #+0x1
   553EF:	0283      	cmp        ah, @(+0x2, y)
   553F0:	F5FC      	bcs        -0xB <CSRmeshCalculateSHA256Hash+0x9:0x553E5[p]>
   553F1:	0217      	ld         al, @(+0x2, y)
   553F2:	0027      	st         al, @(0x0, y)
   553F3:	6800      	**prefx    0x68
   553F4:	0814      	ld         al, #+0x6808
   553F5:	0113      	ld         ah, @(+0x1, y)
   553F6:	0100      	**prefx    0x1
   553F7:	679C      	bsr        +0x167 <___libcsrmesh_318:0x5555E[p]>
   553F8:	6800      	**prefx    0x68
   553F9:	0814      	ld         al, #+0x6808
   553FA:	0513      	ld         ah, @(+0x5, y)
   553FB:	FF00      	**prefx    0xFF
   553FC:	E29C      	bsr        -0x11E <___libcsrmesh_297:0x552DE[p]>
   553FD:	FB0F      	leave      #-0x5

0x000553FE <___libcsrmesh_307>:
   553FE:	FB0B      	enter      #-0x5
   553FF:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55400:	0223      	st         ah, @(+0x2, y)
   55401:	0010      	ld         ah, #+0x0
   55402:	0AE0      	bra        +0xA <___libcsrmesh_307+0xE:0x5540C[p]>
   55403:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   55404:	E035      	add        al, @0xFFE0 <register ah>
   55405:	E119      	ld         x, @0xFFE1 <register al>
   55406:	0016      	ld         al, @(0x0, x)
   55407:	36D4      	xor        al, #0x36
   55408:	E019      	ld         x, @0xFFE0 <register ah>
   55409:	6800      	**prefx    0x68
   5540A:	3A26      	st         al, @(+0x683A, x)
   5540B:	0130      	add        ah, #+0x1
   5540C:	0283      	cmp        ah, @(+0x2, y)
   5540D:	F6FC      	bcs        -0xA <___libcsrmesh_307+0x5:0x55403[p]>
   5540E:	0517      	ld         al, @(+0x5, y)
   5540F:	0100      	**prefx    0x1
   55410:	A49C      	bsr        +0xA4 <___libcsrmesh_311:0x554B4[p]>
   55411:	021B      	ld         x, @(+0x2, y)
   55412:	002B      	st         x, @(0x0, y)
   55413:	0517      	ld         al, @(+0x5, y)
   55414:	6800      	**prefx    0x68
   55415:	3A10      	ld         ah, #+0x683A
   55416:	0100      	**prefx    0x1
   55417:	479C      	bsr        +0x147 <___libcsrmesh_318:0x5555E[p]>
   55418:	4014      	ld         al, #+0x40
   55419:	0257      	sub        al, @(+0x2, y)
   5541A:	0127      	st         al, @(+0x1, y)
   5541B:	0027      	st         al, @(0x0, y)
   5541C:	0517      	ld         al, @(+0x5, y)
   5541D:	3610      	ld         ah, #+0x36
   5541E:	0100      	**prefx    0x1
   5541F:	339C      	bsr        +0x133 <___libcsrmesh_317:0x55552[p]>
   55420:	0018      	ld         x, #+0x0
   55421:	07E0      	bra        +0x7 <___libcsrmesh_307+0x2A:0x55428[p]>
   55422:	6800      	**prefx    0x68
   55423:	3A16      	ld         al, @(+0x683A, x)
   55424:	6AD4      	xor        al, #0x6A
   55425:	6800      	**prefx    0x68
   55426:	3A26      	st         al, @(+0x683A, x)
   55427:	0138      	add        x, #+0x1
   55428:	028B      	cmp        x, @(+0x2, y)
   55429:	F9FC      	bcs        -0x7 <___libcsrmesh_307+0x24:0x55422[p]>
   5542A:	0617      	ld         al, @(+0x6, y)
   5542B:	0100      	**prefx    0x1
   5542C:	889C      	bsr        +0x88 <___libcsrmesh_311:0x554B4[p]>
   5542D:	021B      	ld         x, @(+0x2, y)
   5542E:	002B      	st         x, @(0x0, y)
   5542F:	0617      	ld         al, @(+0x6, y)
   55430:	6800      	**prefx    0x68
   55431:	3A10      	ld         ah, #+0x683A
   55432:	0100      	**prefx    0x1
   55433:	2B9C      	bsr        +0x12B <___libcsrmesh_318:0x5555E[p]>
   55434:	0117      	ld         al, @(+0x1, y)
   55435:	0027      	st         al, @(0x0, y)
   55436:	0617      	ld         al, @(+0x6, y)
   55437:	5C10      	ld         ah, #+0x5C
   55438:	0100      	**prefx    0x1
   55439:	199C      	bsr        +0x119 <___libcsrmesh_317:0x55552[p]>
   5543A:	FB0F      	leave      #-0x5

0x0005543B <___libcsrmesh_305>:
   5543B:	FA0B      	enter      #-0x6
   5543C:	0227      	st         al, @(+0x2, y)
   5543D:	0323      	st         ah, @(+0x3, y)
   5543E:	0813      	ld         ah, @(+0x8, y)
   5543F:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   55440:	0014      	ld         al, #+0x0
   55441:	09E0      	bra        +0x9 <___libcsrmesh_305+0xF:0x5544A[p]>
   55442:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55443:	E139      	add        x, @0xFFE1 <register al>
   55444:	0012      	ld         ah, @(0x0, x)
   55445:	36D0      	xor        ah, #0x36
   55446:	E119      	ld         x, @0xFFE1 <register al>
   55447:	6800      	**prefx    0x68
   55448:	3A22      	st         ah, @(+0x683A, x)
   55449:	0134      	add        al, #+0x1
   5544A:	0987      	cmp        al, @(+0x9, y)
   5544B:	F7FC      	bcs        -0x9 <___libcsrmesh_305+0x7:0x55442[p]>
   5544C:	6800      	**prefx    0x68
   5544D:	0814      	ld         al, #+0x6808
   5544E:	669C      	bsr        +0x66 <___libcsrmesh_311:0x554B4[p]>
   5544F:	0917      	ld         al, @(+0x9, y)
   55450:	0027      	st         al, @(0x0, y)
   55451:	6800      	**prefx    0x68
   55452:	0814      	ld         al, #+0x6808
   55453:	6800      	**prefx    0x68
   55454:	3A10      	ld         ah, #+0x683A
   55455:	0100      	**prefx    0x1
   55456:	089C      	bsr        +0x108 <___libcsrmesh_318:0x5555E[p]>
   55457:	4018      	ld         x, #+0x40
   55458:	095B      	sub        x, @(+0x9, y)
   55459:	012B      	st         x, @(+0x1, y)
   5545A:	002B      	st         x, @(0x0, y)
   5545B:	6800      	**prefx    0x68
   5545C:	0814      	ld         al, #+0x6808
   5545D:	3610      	ld         ah, #+0x36
   5545E:	0100      	**prefx    0x1
   5545F:	F39C      	bsr        +0xF3 <___libcsrmesh_317:0x55552[p]>
   55460:	069B      	tst        @(+0x6, y)
   55461:	08F4      	beq        +0x8 <___libcsrmesh_305+0x2E:0x55469[p]>
   55462:	0713      	ld         ah, @(+0x7, y)
   55463:	0023      	st         ah, @(0x0, y)
   55464:	6800      	**prefx    0x68
   55465:	0814      	ld         al, #+0x6808
   55466:	0613      	ld         ah, @(+0x6, y)
   55467:	0100      	**prefx    0x1
   55468:	F69C      	bsr        +0xF6 <___libcsrmesh_318:0x5555E[p]>
   55469:	0317      	ld         al, @(+0x3, y)
   5546A:	0027      	st         al, @(0x0, y)
   5546B:	6800      	**prefx    0x68
   5546C:	0814      	ld         al, #+0x6808
   5546D:	0213      	ld         ah, @(+0x2, y)
   5546E:	0100      	**prefx    0x1
   5546F:	EF9C      	bsr        +0xEF <___libcsrmesh_318:0x5555E[p]>
   55470:	6800      	**prefx    0x68
   55471:	0814      	ld         al, #+0x6808
   55472:	6800      	**prefx    0x68
   55473:	5A10      	ld         ah, #+0x685A
   55474:	FE00      	**prefx    0xFE
   55475:	699C      	bsr        -0x197 <___libcsrmesh_297:0x552DE[p]>
   55476:	0018      	ld         x, #+0x0
   55477:	07E0      	bra        +0x7 <___libcsrmesh_305+0x43:0x5547E[p]>
   55478:	6800      	**prefx    0x68
   55479:	3A12      	ld         ah, @(+0x683A, x)
   5547A:	6AD0      	xor        ah, #0x6A
   5547B:	6800      	**prefx    0x68
   5547C:	3A22      	st         ah, @(+0x683A, x)
   5547D:	0138      	add        x, #+0x1
   5547E:	098B      	cmp        x, @(+0x9, y)
   5547F:	F9FC      	bcs        -0x7 <___libcsrmesh_305+0x3D:0x55478[p]>
   55480:	6800      	**prefx    0x68
   55481:	0814      	ld         al, #+0x6808
   55482:	329C      	bsr        +0x32 <___libcsrmesh_311:0x554B4[p]>
   55483:	0917      	ld         al, @(+0x9, y)
   55484:	0027      	st         al, @(0x0, y)
   55485:	6800      	**prefx    0x68
   55486:	0814      	ld         al, #+0x6808
   55487:	6800      	**prefx    0x68
   55488:	3A10      	ld         ah, #+0x683A
   55489:	0100      	**prefx    0x1
   5548A:	D49C      	bsr        +0xD4 <___libcsrmesh_318:0x5555E[p]>
   5548B:	011B      	ld         x, @(+0x1, y)
   5548C:	002B      	st         x, @(0x0, y)
   5548D:	6800      	**prefx    0x68
   5548E:	0814      	ld         al, #+0x6808
   5548F:	5C10      	ld         ah, #+0x5C
   55490:	0100      	**prefx    0x1
   55491:	C19C      	bsr        +0xC1 <___libcsrmesh_317:0x55552[p]>
   55492:	2010      	ld         ah, #+0x20
   55493:	0023      	st         ah, @(0x0, y)
   55494:	6800      	**prefx    0x68
   55495:	3A14      	ld         al, #+0x683A
   55496:	6800      	**prefx    0x68
   55497:	5A10      	ld         ah, #+0x685A
   55498:	FB00      	**prefx    0xFB
   55499:	D600      	**prefx    0xD6
   5549A:	3C9C      	bsr        -0x529C4 <MemCopyUnPack:0x2AD6[p]>
   5549B:	2014      	ld         al, #+0x20
   5549C:	0027      	st         al, @(0x0, y)
   5549D:	6800      	**prefx    0x68
   5549E:	0814      	ld         al, #+0x6808
   5549F:	6800      	**prefx    0x68
   554A0:	3A10      	ld         ah, #+0x683A
   554A1:	0100      	**prefx    0x1
   554A2:	BC9C      	bsr        +0xBC <___libcsrmesh_318:0x5555E[p]>
   554A3:	6800      	**prefx    0x68
   554A4:	0814      	ld         al, #+0x6808
   554A5:	6800      	**prefx    0x68
   554A6:	5A10      	ld         ah, #+0x685A
   554A7:	FE00      	**prefx    0xFE
   554A8:	369C      	bsr        -0x1CA <___libcsrmesh_297:0x552DE[p]>
   554A9:	0B13      	ld         ah, @(+0xB, y)
   554AA:	0009      	**unsigned
   554AB:	01A4      	lsr        #0x1
   554AC:	6800      	**prefx    0x68
   554AD:	6A14      	ld         al, #+0x686A
   554AE:	E055      	sub        al, @0xFFE0 <register ah>
   554AF:	0023      	st         ah, @(0x0, y)
   554B0:	0A13      	ld         ah, @(+0xA, y)
   554B1:	FF00      	**prefx    0xFF
   554B2:	C39C      	bsr        -0x13D <___libcsrmesh_308:0x55375[p]>
   554B3:	FA0F      	leave      #-0x6

0x000554B4 <___libcsrmesh_311>:
   554B4:	FE0B      	enter      #-0x2
   554B5:	F825      	st         al, @0xFFF8 <(scratchpad)>
   554B6:	0014      	ld         al, #+0x0
   554B7:	F925      	st         al, @0xFFF9 <(scratchpad)>
   554B8:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   554B9:	F939      	add        x, @0xFFF9 <(scratchpad)>
   554BA:	FA29      	st         x, @0xFFFA <(scratchpad)>
   554BB:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   554BC:	A200      	**prefx    0xA2
   554BD:	D812      	ld         ah, @(-0x5E28, x)
   554BE:	A200      	**prefx    0xA2
   554BF:	D916      	ld         al, @(-0x5E27, x)
   554C0:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   554C1:	0126      	st         al, @(+0x1, x)
   554C2:	0022      	st         ah, @(0x0, x)
   554C3:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   554C4:	0238      	add        x, #+0x2
   554C5:	F929      	st         x, @0xFFF9 <(scratchpad)>
   554C6:	1088      	cmp        x, #+0x10
   554C7:	F1F0      	bne        -0xF <___libcsrmesh_311+0x4:0x554B8[p]>
   554C8:	0014      	ld         al, #+0x0
   554C9:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   554CA:	3126      	st         al, @(+0x31, x)
   554CB:	3026      	st         al, @(+0x30, x)
   554CC:	FE0F      	leave      #-0x2

0x000554CD <___libcsrmesh_316>:
   554CD:	F10B      	enter      #-0xF
   554CE:	0B27      	st         al, @(+0xB, y)
   554CF:	0C23      	st         ah, @(+0xC, y)
   554D0:	E119      	ld         x, @0xFFE1 <register al>
   554D1:	3012      	ld         ah, @(+0x30, x)
   554D2:	109B      	tst        @(+0x10, y)
   554D3:	04F0      	bne        +0x4 <___libcsrmesh_316+0xA:0x554D7[p]>
   554D4:	0114      	ld         al, #+0x1
   554D5:	0827      	st         al, @(+0x8, y)
   554D6:	03E0      	bra        +0x3 <___libcsrmesh_316+0xC:0x554D9[p]>
   554D7:	0F1B      	ld         x, @(+0xF, y)
   554D8:	082B      	st         x, @(+0x8, y)
   554D9:	0B1B      	ld         x, @(+0xB, y)
   554DA:	3116      	ld         al, @(+0x31, x)
   554DB:	0F37      	add        al, @(+0xF, y)
   554DC:	3126      	st         al, @(+0x31, x)
   554DD:	309A      	tst        @(+0x30, x)
   554DE:	04F0      	bne        +0x4 <___libcsrmesh_316+0x15:0x554E2[p]>
   554DF:	0014      	ld         al, #+0x0
   554E0:	0927      	st         al, @(+0x9, y)
   554E1:	28E0      	bra        +0x28 <___libcsrmesh_316+0x3C:0x55509[p]>
   554E2:	4014      	ld         al, #+0x40
   554E3:	E055      	sub        al, @0xFFE0 <register ah>
   554E4:	0F1B      	ld         x, @(+0xF, y)
   554E5:	0A2B      	st         x, @(+0xA, y)
   554E6:	E189      	cmp        x, @0xFFE1 <register al>
   554E7:	022C      	bcz        +0x2 <___libcsrmesh_316+0x1C:0x554E9[p]>
   554E8:	0A27      	st         al, @(+0xA, y)
   554E9:	0817      	ld         al, @(+0x8, y)
   554EA:	0027      	st         al, @(0x0, y)
   554EB:	0A1B      	ld         x, @(+0xA, y)
   554EC:	012B      	st         x, @(+0x1, y)
   554ED:	1017      	ld         al, @(+0x10, y)
   554EE:	0227      	st         al, @(+0x2, y)
   554EF:	0B1B      	ld         x, @(+0xB, y)
   554F0:	032B      	st         x, @(+0x3, y)
   554F1:	1117      	ld         al, @(+0x11, y)
   554F2:	0427      	st         al, @(+0x4, y)
   554F3:	0014      	ld         al, #+0x0
   554F4:	0C13      	ld         ah, @(+0xC, y)
   554F5:	1500      	**prefx    0x15
   554F6:	459C      	bsr        +0x1545 <___libcsrmesh_286:0x56A3B[p]>
   554F7:	0F1B      	ld         x, @(+0xF, y)
   554F8:	0A5B      	sub        x, @(+0xA, y)
   554F9:	0F2B      	st         x, @(+0xF, y)
   554FA:	1017      	ld         al, @(+0x10, y)
   554FB:	0A93      	smult      @(+0xA, y)
   554FC:	0927      	st         al, @(+0x9, y)
   554FD:	0B1B      	ld         x, @(+0xB, y)
   554FE:	3016      	ld         al, @(+0x30, x)
   554FF:	4084      	cmp        al, #+0x40
   55500:	09F0      	bne        +0x9 <___libcsrmesh_316+0x3C:0x55509[p]>
   55501:	E311      	ld         ah, @0xFFE3 <register uxl>
   55502:	1030      	add        ah, #+0x10
   55503:	E315      	ld         al, @0xFFE3 <register uxl>
   55504:	1700      	**prefx    0x17
   55505:	7F9C      	bsr        +0x177F <___libcsrmesh_294:0x56C84[p]>
   55506:	0014      	ld         al, #+0x0
   55507:	0B1B      	ld         x, @(+0xB, y)
   55508:	3026      	st         al, @(+0x30, x)
   55509:	109B      	tst        @(+0x10, y)
   5550A:	03F0      	bne        +0x3 <___libcsrmesh_316+0x40:0x5550D[p]>
   5550B:	0F1B      	ld         x, @(+0xF, y)
   5550C:	2DE0      	bra        +0x2D <___libcsrmesh_316+0x6C:0x55539[p]>
   5550D:	0F17      	ld         al, @(+0xF, y)
   5550E:	0727      	st         al, @(+0x7, y)
   5550F:	091B      	ld         x, @(+0x9, y)
   55510:	052B      	st         x, @(+0x5, y)
   55511:	11E0      	bra        +0x11 <___libcsrmesh_316+0x55:0x55522[p]>
   55512:	0C17      	ld         al, @(+0xC, y)
   55513:	0027      	st         al, @(0x0, y)
   55514:	081B      	ld         x, @(+0x8, y)
   55515:	012B      	st         x, @(+0x1, y)
   55516:	1117      	ld         al, @(+0x11, y)
   55517:	0227      	st         al, @(+0x2, y)
   55518:	0B17      	ld         al, @(+0xB, y)
   55519:	0513      	ld         ah, @(+0x5, y)
   5551A:	1700      	**prefx    0x17
   5551B:	329C      	bsr        +0x1732 <___libcsrmesh_293:0x56C4D[p]>
   5551C:	071B      	ld         x, @(+0x7, y)
   5551D:	C038      	add        x, #-0x40
   5551E:	072B      	st         x, @(+0x7, y)
   5551F:	0517      	ld         al, @(+0x5, y)
   55520:	4034      	add        al, #+0x40
   55521:	0527      	st         al, @(+0x5, y)
   55522:	071B      	ld         x, @(+0x7, y)
   55523:	4088      	cmp        x, #+0x40
   55524:	EEF8      	bcc        -0x12 <___libcsrmesh_316+0x45:0x55512[p]>
   55525:	0F13      	ld         ah, @(+0xF, y)
   55526:	0009      	**unsigned
   55527:	06A4      	lsr        #0x6
   55528:	E019      	ld         x, @0xFFE0 <register ah>
   55529:	E015      	ld         al, @0xFFE0 <register ah>
   5552A:	06A0      	asl        #0x6
   5552B:	0937      	add        al, @(+0x9, y)
   5552C:	0927      	st         al, @(+0x9, y)
   5552D:	E315      	ld         al, @0xFFE3 <register uxl>
   5552E:	13E0      	bra        +0x13 <___libcsrmesh_316+0x74:0x55541[p]>
   5552F:	0C1B      	ld         x, @(+0xC, y)
   55530:	093B      	add        x, @(+0x9, y)
   55531:	0012      	ld         ah, @(0x0, x)
   55532:	0100      	**prefx    0x1
   55533:	FFC0      	and        ah, #0xFF
   55534:	0B17      	ld         al, @(+0xB, y)
   55535:	1700      	**prefx    0x17
   55536:	019C      	bsr        +0x1701 <___libcsrmesh_292:0x56C37[p]>
   55537:	061B      	ld         x, @(+0x6, y)
   55538:	C038      	add        x, #-0x40
   55539:	062B      	st         x, @(+0x6, y)
   5553A:	0617      	ld         al, @(+0x6, y)
   5553B:	4084      	cmp        al, #+0x40
   5553C:	F3F8      	bcc        -0xD <___libcsrmesh_316+0x62:0x5552F[p]>
   5553D:	0F13      	ld         ah, @(+0xF, y)
   5553E:	0009      	**unsigned
   5553F:	06A4      	lsr        #0x6
   55540:	E015      	ld         al, @0xFFE0 <register ah>
   55541:	C090      	smult      #-0x40
   55542:	E119      	ld         x, @0xFFE1 <register al>
   55543:	0F3B      	add        x, @(+0xF, y)
   55544:	0817      	ld         al, @(+0x8, y)
   55545:	0027      	st         al, @(0x0, y)
   55546:	012B      	st         x, @(+0x1, y)
   55547:	101B      	ld         x, @(+0x10, y)
   55548:	022B      	st         x, @(+0x2, y)
   55549:	0B17      	ld         al, @(+0xB, y)
   5554A:	0327      	st         al, @(+0x3, y)
   5554B:	111B      	ld         x, @(+0x11, y)
   5554C:	042B      	st         x, @(+0x4, y)
   5554D:	0917      	ld         al, @(+0x9, y)
   5554E:	0C13      	ld         ah, @(+0xC, y)
   5554F:	1500      	**prefx    0x15
   55550:	EB9C      	bsr        +0x14EB <___libcsrmesh_286:0x56A3B[p]>
   55551:	F10F      	leave      #-0xF

0x00055552 <___libcsrmesh_317>:
   55552:	FA0B      	enter      #-0x6
   55553:	0323      	st         ah, @(+0x3, y)
   55554:	061B      	ld         x, @(+0x6, y)
   55555:	002B      	st         x, @(0x0, y)
   55556:	0018      	ld         x, #+0x0
   55557:	012B      	st         x, @(+0x1, y)
   55558:	022B      	st         x, @(+0x2, y)
   55559:	E411      	ld         ah, @0xFFE4 <register uy>
   5555A:	0330      	add        ah, #+0x3
   5555B:	FF00      	**prefx    0xFF
   5555C:	719C      	bsr        -0x8F <___libcsrmesh_316:0x554CD[p]>
   5555D:	FA0F      	leave      #-0x6

0x0005555E <___libcsrmesh_318>:
   5555E:	FB0B      	enter      #-0x5
   5555F:	051B      	ld         x, @(+0x5, y)
   55560:	002B      	st         x, @(0x0, y)
   55561:	0118      	ld         x, #+0x1
   55562:	012B      	st         x, @(+0x1, y)
   55563:	0018      	ld         x, #+0x0
   55564:	022B      	st         x, @(+0x2, y)
   55565:	FF00      	**prefx    0xFF
   55566:	679C      	bsr        -0x99 <___libcsrmesh_316:0x554CD[p]>
   55567:	FB0F      	leave      #-0x5

0x00055568 <___libcsrmesh_337>:
   55568:	FE0B      	enter      #-0x2
   55569:	E119      	ld         x, @0xFFE1 <register al>
   5556A:	6C00      	**prefx    0x6C
   5556B:	4315      	ld         al, @0x6C43 <g_gatt_bearer_data+0x3>
   5556C:	0184      	cmp        al, #+0x1
   5556D:	03F4      	beq        +0x3 <___libcsrmesh_337+0x8:0x55570[p]>
   5556E:	FF14      	ld         al, #-0x1
   5556F:	09E0      	bra        +0x9 <___libcsrmesh_337+0x10:0x55578[p]>
   55570:	6C00      	**prefx    0x6C
   55571:	4A29      	st         x, @0x6C4A <g_gatt_bearer_data+0xA>
   55572:	6C00      	**prefx    0x6C
   55573:	4921      	st         ah, @0x6C49 <g_gatt_bearer_data+0x9>
   55574:	0217      	ld         al, @(+0x2, y)
   55575:	6C00      	**prefx    0x6C
   55576:	4825      	st         al, @0x6C48 <g_gatt_bearer_data+0x8>
   55577:	0014      	ld         al, #+0x0
   55578:	FE0F      	leave      #-0x2

0x00055579 <___libcsrmesh_330>:
   55579:	FE0B      	enter      #-0x2
   5557A:	031B      	ld         x, @(+0x3, y)
   5557B:	FA29      	st         x, @0xFFFA <(scratchpad)>
   5557C:	081B      	ld         x, @(+0x8, y)
   5557D:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5557E:	071B      	ld         x, @(+0x7, y)
   5557F:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55580:	0513      	ld         ah, @(+0x5, y)
   55581:	291B      	ld         x, @(+0x29, y)
   55582:	0184      	cmp        al, #+0x1
   55583:	05F4      	beq        +0x5 <___libcsrmesh_330+0xF:0x55588[p]>
   55584:	0284      	cmp        al, #+0x2
   55585:	15F4      	beq        +0x15 <___libcsrmesh_330+0x21:0x5559A[p]>
   55586:	FF14      	ld         al, #-0x1
   55587:	16E0      	bra        +0x16 <___libcsrmesh_330+0x24:0x5559D[p]>
   55588:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   55589:	6C00      	**prefx    0x6C
   5558A:	3925      	st         al, @0x6C39 <g_le_bearer_data+0x3>
   5558B:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5558C:	6C00      	**prefx    0x6C
   5558D:	3E29      	st         x, @0x6C3E <g_le_bearer_data+0x8>
   5558E:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5558F:	6C00      	**prefx    0x6C
   55590:	3D25      	st         al, @0x6C3D <g_le_bearer_data+0x7>
   55591:	6C00      	**prefx    0x6C
   55592:	3B15      	ld         al, @0x6C3B <g_le_bearer_data+0x5>
   55593:	E085      	cmp        al, @0xFFE0 <register ah>
   55594:	08F4      	beq        +0x8 <___libcsrmesh_330+0x23:0x5559C[p]>
   55595:	6C00      	**prefx    0x6C
   55596:	3B21      	st         ah, @0x6C3B <g_le_bearer_data+0x5>
   55597:	6C00      	**prefx    0x6C
   55598:	3C21      	st         ah, @0x6C3C <g_le_bearer_data+0x6>
   55599:	03E0      	bra        +0x3 <___libcsrmesh_330+0x23:0x5559C[p]>
   5559A:	6C00      	**prefx    0x6C
   5559B:	4329      	st         x, @0x6C43 <g_gatt_bearer_data+0x3>
   5559C:	0014      	ld         al, #+0x0
   5559D:	FE0F      	leave      #-0x2

0x0005559E <___libcsrmesh_336>:
   5559E:	FE0B      	enter      #-0x2
   5559F:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   555A0:	F825      	st         al, @0xFFF8 <(scratchpad)>
   555A1:	0614      	ld         al, #+0x6
   555A2:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   555A3:	6C00      	**prefx    0x6C
   555A4:	3918      	ld         x, #+0x6C39
   555A5:	FD09      	bc2        
   555A6:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   555A7:	FE0F      	leave      #-0x2

0x000555A8 <___libcsrmesh_335>:
   555A8:	FE0B      	enter      #-0x2
   555A9:	F825      	st         al, @0xFFF8 <(scratchpad)>
   555AA:	0217      	ld         al, @(+0x2, y)
   555AB:	F925      	st         al, @0xFFF9 <(scratchpad)>
   555AC:	6C00      	**prefx    0x6C
   555AD:	3618      	ld         x, #+0x6C36
   555AE:	0114      	ld         al, #+0x1
   555AF:	0026      	st         al, @(0x0, x)
   555B0:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   555B1:	01C4      	and        al, #0x1
   555B2:	0126      	st         al, @(+0x1, x)
   555B3:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   555B4:	01C4      	and        al, #0x1
   555B5:	0226      	st         al, @(+0x2, x)
   555B6:	6C00      	**prefx    0x6C
   555B7:	4018      	ld         x, #+0x6C40
   555B8:	0009      	**unsigned
   555B9:	01A4      	lsr        #0x1
   555BA:	01C0      	and        ah, #0x1
   555BB:	0022      	st         ah, @(0x0, x)
   555BC:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   555BD:	0009      	**unsigned
   555BE:	01A4      	lsr        #0x1
   555BF:	01C0      	and        ah, #0x1
   555C0:	0122      	st         ah, @(+0x1, x)
   555C1:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   555C2:	0009      	**unsigned
   555C3:	01A4      	lsr        #0x1
   555C4:	01C0      	and        ah, #0x1
   555C5:	0222      	st         ah, @(+0x2, x)
   555C6:	FE0F      	leave      #-0x2

0x000555C7 <___libcsrmesh_332>:
   555C7:	FD0B      	enter      #-0x3
   555C8:	0014      	ld         al, #+0x0
   555C9:	0027      	st         al, @(0x0, y)
   555CA:	0314      	ld         al, #+0x3
   555CB:	0310      	ld         ah, #+0x3
   555CC:	DC9C      	bsr        -0x24 <___libcsrmesh_335:0x555A8[p]>
   555CD:	0014      	ld         al, #+0x0
   555CE:	FD0F      	leave      #-0x3

0x000555CF <___libcsrmesh_331>:
   555CF:	FE0B      	enter      #-0x2
   555D0:	F925      	st         al, @0xFFF9 <(scratchpad)>
   555D1:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   555D2:	0217      	ld         al, @(+0x2, y)
   555D3:	FA25      	st         al, @0xFFFA <(scratchpad)>
   555D4:	0014      	ld         al, #+0x0
   555D5:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   555D6:	0026      	st         al, @(0x0, x)
   555D7:	E019      	ld         x, @0xFFE0 <register ah>
   555D8:	0026      	st         al, @(0x0, x)
   555D9:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   555DA:	0026      	st         al, @(0x0, x)
   555DB:	6C00      	**prefx    0x6C
   555DC:	3610      	ld         ah, #+0x6C36
   555DD:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   555DE:	0016      	ld         al, @(0x0, x)
   555DF:	E019      	ld         x, @0xFFE0 <register ah>
   555E0:	00B6      	or         al, @(0x0, x)
   555E1:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   555E2:	0026      	st         al, @(0x0, x)
   555E3:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   555E4:	0016      	ld         al, @(0x0, x)
   555E5:	E019      	ld         x, @0xFFE0 <register ah>
   555E6:	01B6      	or         al, @(+0x1, x)
   555E7:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   555E8:	0026      	st         al, @(0x0, x)
   555E9:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   555EA:	0016      	ld         al, @(0x0, x)
   555EB:	E019      	ld         x, @0xFFE0 <register ah>
   555EC:	02B6      	or         al, @(+0x2, x)
   555ED:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   555EE:	0026      	st         al, @(0x0, x)
   555EF:	6C00      	**prefx    0x6C
   555F0:	4018      	ld         x, #+0x6C40
   555F1:	FB29      	st         x, @0xFFFB <(scratchpad)>
   555F2:	0016      	ld         al, @(0x0, x)
   555F3:	01A0      	asl        #0x1
   555F4:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   555F5:	00B6      	or         al, @(0x0, x)
   555F6:	0026      	st         al, @(0x0, x)
   555F7:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   555F8:	0116      	ld         al, @(+0x1, x)
   555F9:	01A0      	asl        #0x1
   555FA:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   555FB:	00B6      	or         al, @(0x0, x)
   555FC:	0026      	st         al, @(0x0, x)
   555FD:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   555FE:	0216      	ld         al, @(+0x2, x)
   555FF:	01A0      	asl        #0x1
   55600:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   55601:	00B6      	or         al, @(0x0, x)
   55602:	0026      	st         al, @(0x0, x)
   55603:	FE0F      	leave      #-0x2

0x00055604 <___libcsrmesh_333>:
   55604:	FA0B      	enter      #-0x6
   55605:	0227      	st         al, @(+0x2, y)
   55606:	0323      	st         ah, @(+0x3, y)
   55607:	0184      	cmp        al, #+0x1
   55608:	05F0      	bne        +0x5 <___libcsrmesh_333+0x9:0x5560D[p]>
   55609:	6C00      	**prefx    0x6C
   5560A:	3699      	tst        @0x6C36 <g_le_bearer_data>
   5560B:	08F0      	bne        +0x8 <___libcsrmesh_333+0xF:0x55613[p]>
   5560C:	18E0      	bra        +0x18 <___libcsrmesh_333+0x20:0x55624[p]>
   5560D:	0217      	ld         al, @(+0x2, y)
   5560E:	0284      	cmp        al, #+0x2
   5560F:	15F0      	bne        +0x15 <___libcsrmesh_333+0x20:0x55624[p]>
   55610:	6C00      	**prefx    0x6C
   55611:	4099      	tst        @0x6C40 <g_gatt_bearer_data>
   55612:	12F4      	beq        +0x12 <___libcsrmesh_333+0x20:0x55624[p]>
   55613:	0717      	ld         al, @(+0x7, y)
   55614:	0027      	st         al, @(0x0, y)
   55615:	0317      	ld         al, @(+0x3, y)
   55616:	0613      	ld         ah, @(+0x6, y)
   55617:	ED00      	**prefx    0xED
   55618:	6E9C      	bsr        -0x1292 <___libcsrmesh_276:0x54386[p]>
   55619:	0217      	ld         al, @(+0x2, y)
   5561A:	0284      	cmp        al, #+0x2
   5561B:	09F0      	bne        +0x9 <___libcsrmesh_333+0x20:0x55624[p]>
   5561C:	0617      	ld         al, @(+0x6, y)
   5561D:	0027      	st         al, @(0x0, y)
   5561E:	0114      	ld         al, #+0x1
   5561F:	0127      	st         al, @(+0x1, y)
   55620:	0014      	ld         al, #+0x0
   55621:	0313      	ld         ah, @(+0x3, y)
   55622:	0100      	**prefx    0x1
   55623:	519C      	bsr        +0x151 <___libcsrmesh_349:0x55774[p]>
   55624:	FA0F      	leave      #-0x6

0x00055625 <___libcsrmesh_329>:
   55625:	FE0B      	enter      #-0x2
   55626:	699C      	bsr        +0x69 <___libcsrmesh_353:0x5568F[p]>
   55627:	6C00      	**prefx    0x6C
   55628:	4918      	ld         x, #+0x6C49
   55629:	0014      	ld         al, #+0x0
   5562A:	0026      	st         al, @(0x0, x)
   5562B:	0126      	st         al, @(+0x1, x)
   5562C:	FE0F      	leave      #-0x2

0x0005562D <___libcsrmesh_334>:
   5562D:	FA0B      	enter      #-0x6
   5562E:	E119      	ld         x, @0xFFE1 <register al>
   5562F:	0323      	st         ah, @(+0x3, y)
   55630:	6C00      	**prefx    0x6C
   55631:	3699      	tst        @0x6C36 <g_le_bearer_data>
   55632:	2DF4      	beq        +0x2D <___libcsrmesh_334+0x32:0x5565F[p]>
   55633:	6C00      	**prefx    0x6C
   55634:	3999      	tst        @0x6C39 <g_le_bearer_data+0x3>
   55635:	2AF4      	beq        +0x2A <___libcsrmesh_334+0x32:0x5565F[p]>
   55636:	0717      	ld         al, @(+0x7, y)
   55637:	0384      	cmp        al, #+0x3
   55638:	10F4      	beq        +0x10 <___libcsrmesh_334+0x1B:0x55648[p]>
   55639:	E199      	tst        @0xFFE1 <register al>
   5563A:	1BF4      	beq        +0x1B <___libcsrmesh_334+0x28:0x55655[p]>
   5563B:	0184      	cmp        al, #+0x1
   5563C:	04F0      	bne        +0x4 <___libcsrmesh_334+0x13:0x55640[p]>
   5563D:	6C00      	**prefx    0x6C
   5563E:	3799      	tst        @0x6C37 <g_le_bearer_data+0x1>
   5563F:	16F0      	bne        +0x16 <___libcsrmesh_334+0x28:0x55655[p]>
   55640:	0717      	ld         al, @(+0x7, y)
   55641:	FF34      	add        al, #-0x1
   55642:	0284      	cmp        al, #+0x2
   55643:	1CF8      	bcc        +0x1C <___libcsrmesh_334+0x32:0x5565F[p]>
   55644:	6C00      	**prefx    0x6C
   55645:	3899      	tst        @0x6C38 <g_le_bearer_data+0x2>
   55646:	0FF0      	bne        +0xF <___libcsrmesh_334+0x28:0x55655[p]>
   55647:	18E0      	bra        +0x18 <___libcsrmesh_334+0x32:0x5565F[p]>
   55648:	0617      	ld         al, @(+0x6, y)
   55649:	0027      	st         al, @(0x0, y)
   5564A:	E315      	ld         al, @0xFFE3 <register uxl>
   5564B:	0313      	ld         ah, @(+0x3, y)
   5564C:	0400      	**prefx    0x4
   5564D:	DB9C      	bsr        +0x3DB <CSRSchedSendPriorityMsg:0x55A28[p]>
   5564E:	0884      	cmp        al, #+0x8
   5564F:	03F0      	bne        +0x3 <___libcsrmesh_334+0x25:0x55652[p]>
   55650:	0C18      	ld         x, #+0xC
   55651:	0FE0      	bra        +0xF <___libcsrmesh_334+0x33:0x55660[p]>
   55652:	E199      	tst        @0xFFE1 <register al>
   55653:	0FF4      	beq        +0xF <___libcsrmesh_334+0x35:0x55662[p]>
   55654:	0BE0      	bra        +0xB <___libcsrmesh_334+0x32:0x5565F[p]>
   55655:	0617      	ld         al, @(+0x6, y)
   55656:	0027      	st         al, @(0x0, y)
   55657:	0717      	ld         al, @(+0x7, y)
   55658:	0127      	st         al, @(+0x1, y)
   55659:	E315      	ld         al, @0xFFE3 <register uxl>
   5565A:	0313      	ld         ah, @(+0x3, y)
   5565B:	0100      	**prefx    0x1
   5565C:	189C      	bsr        +0x118 <___libcsrmesh_349:0x55774[p]>
   5565D:	0184      	cmp        al, #+0x1
   5565E:	04F4      	beq        +0x4 <___libcsrmesh_334+0x35:0x55662[p]>
   5565F:	FF18      	ld         x, #-0x1
   55660:	022B      	st         x, @(+0x2, y)
   55661:	03E0      	bra        +0x3 <___libcsrmesh_334+0x37:0x55664[p]>
   55662:	0014      	ld         al, #+0x0
   55663:	0227      	st         al, @(+0x2, y)
   55664:	6C00      	**prefx    0x6C
   55665:	4099      	tst        @0x6C40 <g_gatt_bearer_data>
   55666:	27F4      	beq        +0x27 <___libcsrmesh_334+0x60:0x5568D[p]>
   55667:	6C00      	**prefx    0x6C
   55668:	4315      	ld         al, @0x6C43 <g_gatt_bearer_data+0x3>
   55669:	0184      	cmp        al, #+0x1
   5566A:	23F0      	bne        +0x23 <___libcsrmesh_334+0x60:0x5568D[p]>
   5566B:	079B      	tst        @(+0x7, y)
   5566C:	0EF4      	beq        +0xE <___libcsrmesh_334+0x4D:0x5567A[p]>
   5566D:	071B      	ld         x, @(+0x7, y)
   5566E:	0188      	cmp        x, #+0x1
   5566F:	04F0      	bne        +0x4 <___libcsrmesh_334+0x46:0x55673[p]>
   55670:	6C00      	**prefx    0x6C
   55671:	4199      	tst        @0x6C41 <g_gatt_bearer_data+0x1>
   55672:	08F0      	bne        +0x8 <___libcsrmesh_334+0x4D:0x5567A[p]>
   55673:	0717      	ld         al, @(+0x7, y)
   55674:	FF34      	add        al, #-0x1
   55675:	0284      	cmp        al, #+0x2
   55676:	17F8      	bcc        +0x17 <___libcsrmesh_334+0x60:0x5568D[p]>
   55677:	6C00      	**prefx    0x6C
   55678:	4299      	tst        @0x6C42 <g_gatt_bearer_data+0x2>
   55679:	14F4      	beq        +0x14 <___libcsrmesh_334+0x60:0x5568D[p]>
   5567A:	6C00      	**prefx    0x6C
   5567B:	4A19      	ld         x, @0x6C4A <g_gatt_bearer_data+0xA>
   5567C:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5567D:	6C00      	**prefx    0x6C
   5567E:	4915      	ld         al, @0x6C49 <g_gatt_bearer_data+0x9>
   5567F:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55680:	E3B5      	or         al, @0xFFE3 <register uxl>
   55681:	0CF4      	beq        +0xC <___libcsrmesh_334+0x60:0x5568D[p]>
   55682:	061B      	ld         x, @(+0x6, y)
   55683:	002B      	st         x, @(0x0, y)
   55684:	6C00      	**prefx    0x6C
   55685:	4815      	ld         al, @0x6C48 <g_gatt_bearer_data+0x8>
   55686:	0313      	ld         ah, @(+0x3, y)
   55687:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55688:	FE2B      	st         x, @(-0x2, y)
   55689:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5568A:	FF2B      	st         x, @(-0x1, y)
   5568B:	FF0E      	ld         xh, @(-0x1, y)
   5568C:	FE9F      	bsr        @(-0x2, y)
   5568D:	0217      	ld         al, @(+0x2, y)
   5568E:	FA0F      	leave      #-0x6

0x0005568F <___libcsrmesh_353>:
   5568F:	FE0B      	enter      #-0x2
   55690:	6800      	**prefx    0x68
   55691:	6A19      	ld         x, @0x686A <tx_mesg_queue>
   55692:	0014      	ld         al, #+0x0
   55693:	06E0      	bra        +0x6 <___libcsrmesh_353+0xA:0x55699[p]>
   55694:	0010      	ld         ah, #+0x0
   55695:	0022      	st         ah, @(0x0, x)
   55696:	0122      	st         ah, @(+0x1, x)
   55697:	0134      	add        al, #+0x1
   55698:	1238      	add        x, #+0x12
   55699:	6C00      	**prefx    0x6C
   5569A:	3C85      	cmp        al, @0x6C3C <g_le_bearer_data+0x6>
   5569B:	F9FC      	bcs        -0x7 <___libcsrmesh_353+0x5:0x55694[p]>
   5569C:	0014      	ld         al, #+0x0
   5569D:	6800      	**prefx    0x68
   5569E:	6B25      	st         al, @0x686B <tx_mesg_queue+0x1>
   5569F:	FE0F      	leave      #-0x2

0x000556A0 <___libcsrmesh_350>:
   556A0:	FE0B      	enter      #-0x2
   556A1:	6C00      	**prefx    0x6C
   556A2:	3C15      	ld         al, @0x6C3C <g_le_bearer_data+0x6>
   556A3:	F925      	st         al, @0xFFF9 <(scratchpad)>
   556A4:	6800      	**prefx    0x68
   556A5:	6A19      	ld         x, @0x686A <tx_mesg_queue>
   556A6:	F829      	st         x, @0xFFF8 <(scratchpad)>
   556A7:	0014      	ld         al, #+0x0
   556A8:	0CE0      	bra        +0xC <___libcsrmesh_350+0x14:0x556B4[p]>
   556A9:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   556AA:	1290      	smult      #+0x12
   556AB:	F835      	add        al, @0xFFF8 <(scratchpad)>
   556AC:	E119      	ld         x, @0xFFE1 <register al>
   556AD:	009A      	tst        @(0x0, x)
   556AE:	04EC      	bmi        +0x4 <___libcsrmesh_350+0x12:0x556B2[p]>
   556AF:	03F4      	beq        +0x3 <___libcsrmesh_350+0x12:0x556B2[p]>
   556B0:	0014      	ld         al, #+0x0
   556B1:	07E0      	bra        +0x7 <___libcsrmesh_350+0x18:0x556B8[p]>
   556B2:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   556B3:	0134      	add        al, #+0x1
   556B4:	FA25      	st         al, @0xFFFA <(scratchpad)>
   556B5:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   556B6:	F3FC      	bcs        -0xD <___libcsrmesh_350+0x9:0x556A9[p]>
   556B7:	0114      	ld         al, #+0x1
   556B8:	FE0F      	leave      #-0x2

0x000556B9 <___libcsrmesh_352>:
   556B9:	FE0B      	enter      #-0x2
   556BA:	6C00      	**prefx    0x6C
   556BB:	3C15      	ld         al, @0x6C3C <g_le_bearer_data+0x6>
   556BC:	FA25      	st         al, @0xFFFA <(scratchpad)>
   556BD:	6800      	**prefx    0x68
   556BE:	6A19      	ld         x, @0x686A <tx_mesg_queue>
   556BF:	F929      	st         x, @0xFFF9 <(scratchpad)>
   556C0:	0014      	ld         al, #+0x0
   556C1:	FB25      	st         al, @0xFFFB <(scratchpad)>
   556C2:	F825      	st         al, @0xFFF8 <(scratchpad)>
   556C3:	0EE0      	bra        +0xE <___libcsrmesh_352+0x18:0x556D1[p]>
   556C4:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   556C5:	1290      	smult      #+0x12
   556C6:	F935      	add        al, @0xFFF9 <(scratchpad)>
   556C7:	E119      	ld         x, @0xFFE1 <register al>
   556C8:	009A      	tst        @(0x0, x)
   556C9:	05EC      	bmi        +0x5 <___libcsrmesh_352+0x15:0x556CE[p]>
   556CA:	04F4      	beq        +0x4 <___libcsrmesh_352+0x15:0x556CE[p]>
   556CB:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   556CC:	0134      	add        al, #+0x1
   556CD:	F825      	st         al, @0xFFF8 <(scratchpad)>
   556CE:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   556CF:	0138      	add        x, #+0x1
   556D0:	FB29      	st         x, @0xFFFB <(scratchpad)>
   556D1:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   556D2:	FA85      	cmp        al, @0xFFFA <(scratchpad)>
   556D3:	F1FC      	bcs        -0xF <___libcsrmesh_352+0xB:0x556C4[p]>
   556D4:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   556D5:	FE0F      	leave      #-0x2

0x000556D6 <___libcsrmesh_355>:
   556D6:	6800      	**prefx    0x68
   556D7:	6A25      	st         al, @0x686A <tx_mesg_queue>
   556D8:	00E2      	bra        0x0, x

0x000556D9 <___libcsrmesh_354>:
   556D9:	6800      	**prefx    0x68
   556DA:	6A15      	ld         al, @0x686A <tx_mesg_queue>
   556DB:	00E2      	bra        0x0, x

0x000556DC <___libcsrmesh_351>:
   556DC:	FB0B      	enter      #-0x5
   556DD:	0127      	st         al, @(+0x1, y)
   556DE:	0223      	st         ah, @(+0x2, y)
   556DF:	C19C      	bsr        -0x3F <___libcsrmesh_350:0x556A0[p]>
   556E0:	E199      	tst        @0xFFE1 <register al>
   556E1:	04F4      	beq        +0x4 <___libcsrmesh_351+0x9:0x556E5[p]>
   556E2:	0014      	ld         al, #+0x0
   556E3:	F825      	st         al, @0xFFF8 <(scratchpad)>
   556E4:	4EE0      	bra        +0x4E <___libcsrmesh_351+0x56:0x55732[p]>
   556E5:	6C00      	**prefx    0x6C
   556E6:	3C19      	ld         x, @0x6C3C <g_le_bearer_data+0x6>
   556E7:	F929      	st         x, @0xFFF9 <(scratchpad)>
   556E8:	6800      	**prefx    0x68
   556E9:	6A15      	ld         al, @0x686A <tx_mesg_queue>
   556EA:	FA25      	st         al, @0xFFFA <(scratchpad)>
   556EB:	6800      	**prefx    0x68
   556EC:	6B19      	ld         x, @0x686B <tx_mesg_queue+0x1>
   556ED:	FB29      	st         x, @0xFFFB <(scratchpad)>
   556EE:	0014      	ld         al, #+0x0
   556EF:	12E0      	bra        +0x12 <___libcsrmesh_351+0x25:0x55701[p]>
   556F0:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   556F1:	1290      	smult      #+0x12
   556F2:	FA35      	add        al, @0xFFFA <(scratchpad)>
   556F3:	E119      	ld         x, @0xFFE1 <register al>
   556F4:	009A      	tst        @(0x0, x)
   556F5:	03EC      	bmi        +0x3 <___libcsrmesh_351+0x1C:0x556F8[p]>
   556F6:	02F4      	beq        +0x2 <___libcsrmesh_351+0x1C:0x556F8[p]>
   556F7:	0DE0      	bra        +0xD <___libcsrmesh_351+0x28:0x55704[p]>
   556F8:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   556F9:	0138      	add        x, #+0x1
   556FA:	E315      	ld         al, @0xFFE3 <register uxl>
   556FB:	0010      	ld         ah, #+0x0
   556FC:	0009      	**unsigned
   556FD:	F995      	udiv       @0xFFF9 <(scratchpad)>
   556FE:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   556FF:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   55700:	0134      	add        al, #+0x1
   55701:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55702:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   55703:	EDFC      	bcs        -0x13 <___libcsrmesh_351+0x14:0x556F0[p]>
   55704:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   55705:	6800      	**prefx    0x68
   55706:	6B25      	st         al, @0x686B <tx_mesg_queue+0x1>
   55707:	6800      	**prefx    0x68
   55708:	6B15      	ld         al, @0x686B <tx_mesg_queue+0x1>
   55709:	1290      	smult      #+0x12
   5570A:	FA35      	add        al, @0xFFFA <(scratchpad)>
   5570B:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5570C:	E119      	ld         x, @0xFFE1 <register al>
   5570D:	1116      	ld         al, @(+0x11, x)
   5570E:	021B      	ld         x, @(+0x2, y)
   5570F:	0026      	st         al, @(0x0, x)
   55710:	0DF0      	bne        +0xD <___libcsrmesh_351+0x41:0x5571D[p]>
   55711:	0117      	ld         al, @(+0x1, y)
   55712:	0334      	add        al, #+0x3
   55713:	0127      	st         al, @(+0x1, y)
   55714:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55715:	011A      	ld         x, @(+0x1, x)
   55716:	002B      	st         x, @(0x0, y)
   55717:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55718:	0238      	add        x, #+0x2
   55719:	E311      	ld         ah, @0xFFE3 <register uxl>
   5571A:	FB00      	**prefx    0xFB
   5571B:	D400      	**prefx    0xD4
   5571C:	BA9C      	bsr        -0x52C46 <MemCopyUnPack:0x2AD6[p]>
   5571D:	6800      	**prefx    0x68
   5571E:	6B15      	ld         al, @0x686B <tx_mesg_queue+0x1>
   5571F:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55720:	1290      	smult      #+0x12
   55721:	E119      	ld         x, @0xFFE1 <register al>
   55722:	6800      	**prefx    0x68
   55723:	6A39      	add        x, @0x686A <tx_mesg_queue>
   55724:	0116      	ld         al, @(+0x1, x)
   55725:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55726:	0012      	ld         ah, @(0x0, x)
   55727:	FF30      	add        ah, #-0x1
   55728:	0022      	st         ah, @(0x0, x)
   55729:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5572A:	0138      	add        x, #+0x1
   5572B:	E315      	ld         al, @0xFFE3 <register uxl>
   5572C:	0010      	ld         ah, #+0x0
   5572D:	0009      	**unsigned
   5572E:	6C00      	**prefx    0x6C
   5572F:	3C95      	udiv       @0x6C3C <g_le_bearer_data+0x6>
   55730:	6800      	**prefx    0x68
   55731:	6B21      	st         ah, @0x686B <tx_mesg_queue+0x1>
   55732:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   55733:	FB0F      	leave      #-0x5

0x00055734 <___libcsrmesh_347>:
   55734:	DB0B      	enter      #-0x25
   55735:	2027      	st         al, @(+0x20, y)
   55736:	2123      	st         ah, @(+0x21, y)
   55737:	0014      	ld         al, #+0x0
   55738:	1D27      	st         al, @(+0x1D, y)
   55739:	35E0      	bra        +0x35 <___libcsrmesh_347+0x3A:0x5576E[p]>
   5573A:	1D17      	ld         al, @(+0x1D, y)
   5573B:	1290      	smult      #+0x12
   5573C:	1F27      	st         al, @(+0x1F, y)
   5573D:	6800      	**prefx    0x68
   5573E:	6A19      	ld         x, @0x686A <tx_mesg_queue>
   5573F:	E139      	add        x, @0xFFE1 <register al>
   55740:	1E2B      	st         x, @(+0x1E, y)
   55741:	2117      	ld         al, @(+0x21, y)
   55742:	0186      	cmp        al, @(+0x1, x)
   55743:	28F0      	bne        +0x28 <___libcsrmesh_347+0x37:0x5576B[p]>
   55744:	E419      	ld         x, @0xFFE4 <register uy>
   55745:	0138      	add        x, #+0x1
   55746:	222B      	st         x, @(+0x22, y)
   55747:	1C14      	ld         al, #+0x1C
   55748:	0027      	st         al, @(0x0, y)
   55749:	E315      	ld         al, @0xFFE3 <register uxl>
   5574A:	0010      	ld         ah, #+0x0
   5574B:	FB00      	**prefx    0xFB
   5574C:	D400      	**prefx    0xD4
   5574D:	039C      	bsr        -0x52BFD <MemSet:0x2B50[p]>
   5574E:	1E1B      	ld         x, @(+0x1E, y)
   5574F:	0238      	add        x, #+0x2
   55750:	2117      	ld         al, @(+0x21, y)
   55751:	0027      	st         al, @(0x0, y)
   55752:	2217      	ld         al, @(+0x22, y)
   55753:	E311      	ld         ah, @0xFFE3 <register uxl>
   55754:	FB00      	**prefx    0xFB
   55755:	D400      	**prefx    0xD4
   55756:	809C      	bsr        -0x52C80 <MemCopyUnPack:0x2AD6[p]>
   55757:	2113      	ld         ah, @(+0x21, y)
   55758:	F730      	add        ah, #-0x9
   55759:	221B      	ld         x, @(+0x22, y)
   5575A:	E039      	add        x, @0xFFE0 <register ah>
   5575B:	2033      	add        ah, @(+0x20, y)
   5575C:	0814      	ld         al, #+0x8
   5575D:	0027      	st         al, @(0x0, y)
   5575E:	E315      	ld         al, @0xFFE3 <register uxl>
   5575F:	FC00      	**prefx    0xFC
   55760:	0800      	**prefx    0x8
   55761:	D09C      	bsr        -0x3F830 <MemCmp:0x15F31[p]>
   55762:	E199      	tst        @0xFFE1 <register al>
   55763:	08F0      	bne        +0x8 <___libcsrmesh_347+0x37:0x5576B[p]>
   55764:	6800      	**prefx    0x68
   55765:	6A19      	ld         x, @0x686A <tx_mesg_queue>
   55766:	1F3B      	add        x, @(+0x1F, y)
   55767:	009A      	tst        @(0x0, x)
   55768:	03F4      	beq        +0x3 <___libcsrmesh_347+0x37:0x5576B[p]>
   55769:	0114      	ld         al, #+0x1
   5576A:	09E0      	bra        +0x9 <___libcsrmesh_347+0x3F:0x55773[p]>
   5576B:	1D1B      	ld         x, @(+0x1D, y)
   5576C:	0138      	add        x, #+0x1
   5576D:	1D2B      	st         x, @(+0x1D, y)
   5576E:	1D17      	ld         al, @(+0x1D, y)
   5576F:	6C00      	**prefx    0x6C
   55770:	3C85      	cmp        al, @0x6C3C <g_le_bearer_data+0x6>
   55771:	C9FC      	bcs        -0x37 <___libcsrmesh_347+0x6:0x5573A[p]>
   55772:	0014      	ld         al, #+0x0
   55773:	DB0F      	leave      #-0x25

0x00055774 <___libcsrmesh_349>:
   55774:	FB0B      	enter      #-0x5
   55775:	0223      	st         ah, @(+0x2, y)
   55776:	E199      	tst        @0xFFE1 <register al>
   55777:	6FF0      	bne        +0x6F <___libcsrmesh_349+0x72:0x557E6[p]>
   55778:	0517      	ld         al, @(+0x5, y)
   55779:	1C84      	cmp        al, #+0x1C
   5577A:	6CF8      	bcc        +0x6C <___libcsrmesh_349+0x72:0x557E6[p]>
   5577B:	E015      	ld         al, @0xFFE0 <register ah>
   5577C:	0513      	ld         ah, @(+0x5, y)
   5577D:	B79C      	bsr        -0x49 <___libcsrmesh_347:0x55734[p]>
   5577E:	E199      	tst        @0xFFE1 <register al>
   5577F:	67F0      	bne        +0x67 <___libcsrmesh_349+0x72:0x557E6[p]>
   55780:	6C00      	**prefx    0x6C
   55781:	3C19      	ld         x, @0x6C3C <g_le_bearer_data+0x6>
   55782:	FB29      	st         x, @0xFFFB <(scratchpad)>
   55783:	6C00      	**prefx    0x6C
   55784:	3F15      	ld         al, @0x6C3F <g_le_bearer_data+0x9>
   55785:	0134      	add        al, #+0x1
   55786:	0010      	ld         ah, #+0x0
   55787:	0009      	**unsigned
   55788:	FB95      	udiv       @0xFFFB <(scratchpad)>
   55789:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   5578A:	6C00      	**prefx    0x6C
   5578B:	3F21      	st         ah, @0x6C3F <g_le_bearer_data+0x9>
   5578C:	6800      	**prefx    0x68
   5578D:	6A15      	ld         al, @0x686A <tx_mesg_queue>
   5578E:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5578F:	0018      	ld         x, #+0x0
   55790:	FF2B      	st         x, @(-0x1, y)
   55791:	15E0      	bra        +0x15 <___libcsrmesh_349+0x32:0x557A6[p]>
   55792:	FF17      	ld         al, @(-0x1, y)
   55793:	1290      	smult      #+0x12
   55794:	F835      	add        al, @0xFFF8 <(scratchpad)>
   55795:	E119      	ld         x, @0xFFE1 <register al>
   55796:	001A      	ld         x, @(0x0, x)
   55797:	14EC      	bmi        +0x14 <___libcsrmesh_349+0x37:0x557AB[p]>
   55798:	13F4      	beq        +0x13 <___libcsrmesh_349+0x37:0x557AB[p]>
   55799:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5579A:	1290      	smult      #+0x12
   5579B:	F835      	add        al, @0xFFF8 <(scratchpad)>
   5579C:	FE27      	st         al, @(-0x2, y)
   5579D:	E315      	ld         al, @0xFFE3 <register uxl>
   5579E:	FE1B      	ld         x, @(-0x2, y)
   5579F:	0086      	cmp        al, @(0x0, x)
   557A0:	0324      	bge        +0x3 <___libcsrmesh_349+0x2F:0x557A3[p]>
   557A1:	FF1B      	ld         x, @(-0x1, y)
   557A2:	F929      	st         x, @0xFFF9 <(scratchpad)>
   557A3:	FF17      	ld         al, @(-0x1, y)
   557A4:	0134      	add        al, #+0x1
   557A5:	FF27      	st         al, @(-0x1, y)
   557A6:	FF1B      	ld         x, @(-0x1, y)
   557A7:	FB89      	cmp        x, @0xFFFB <(scratchpad)>
   557A8:	EAFC      	bcs        -0x16 <___libcsrmesh_349+0x1E:0x55792[p]>
   557A9:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   557AA:	FF27      	st         al, @(-0x1, y)
   557AB:	FF1B      	ld         x, @(-0x1, y)
   557AC:	6C00      	**prefx    0x6C
   557AD:	3F29      	st         x, @0x6C3F <g_le_bearer_data+0x9>
   557AE:	FF17      	ld         al, @(-0x1, y)
   557AF:	1290      	smult      #+0x12
   557B0:	0127      	st         al, @(+0x1, y)
   557B1:	F835      	add        al, @0xFFF8 <(scratchpad)>
   557B2:	0234      	add        al, #+0x2
   557B3:	0F18      	ld         x, #+0xF
   557B4:	002B      	st         x, @(0x0, y)
   557B5:	0010      	ld         ah, #+0x0
   557B6:	FB00      	**prefx    0xFB
   557B7:	D400      	**prefx    0xD4
   557B8:	989C      	bsr        -0x52C68 <MemSet:0x2B50[p]>
   557B9:	6800      	**prefx    0x68
   557BA:	6A19      	ld         x, @0x686A <tx_mesg_queue>
   557BB:	013B      	add        x, @(+0x1, y)
   557BC:	0014      	ld         al, #+0x0
   557BD:	1126      	st         al, @(+0x11, x)
   557BE:	0238      	add        x, #+0x2
   557BF:	0517      	ld         al, @(+0x5, y)
   557C0:	0027      	st         al, @(0x0, y)
   557C1:	E315      	ld         al, @0xFFE3 <register uxl>
   557C2:	0213      	ld         ah, @(+0x2, y)
   557C3:	FB00      	**prefx    0xFB
   557C4:	D300      	**prefx    0xD3
   557C5:	E79C      	bsr        -0x52D19 <MemCopyPack:0x2AAC[p]>
   557C6:	6800      	**prefx    0x68
   557C7:	6A11      	ld         ah, @0x686A <tx_mesg_queue>
   557C8:	0133      	add        ah, @(+0x1, y)
   557C9:	0517      	ld         al, @(+0x5, y)
   557CA:	E019      	ld         x, @0xFFE0 <register ah>
   557CB:	0126      	st         al, @(+0x1, x)
   557CC:	061B      	ld         x, @(+0x6, y)
   557CD:	FF38      	add        x, #-0x1
   557CE:	0288      	cmp        x, #+0x2
   557CF:	06F8      	bcc        +0x6 <___libcsrmesh_349+0x61:0x557D5[p]>
   557D0:	6C00      	**prefx    0x6C
   557D1:	3D15      	ld         al, @0x6C3D <g_le_bearer_data+0x7>
   557D2:	0100      	**prefx    0x1
   557D3:	FFC4      	and        al, #0xFF
   557D4:	09E0      	bra        +0x9 <___libcsrmesh_349+0x69:0x557DD[p]>
   557D5:	021B      	ld         x, @(+0x2, y)
   557D6:	053B      	add        x, @(+0x5, y)
   557D7:	FF9A      	tst        @(-0x1, x)
   557D8:	03F0      	bne        +0x3 <___libcsrmesh_349+0x67:0x557DB[p]>
   557D9:	0114      	ld         al, #+0x1
   557DA:	03E0      	bra        +0x3 <___libcsrmesh_349+0x69:0x557DD[p]>
   557DB:	6C00      	**prefx    0x6C
   557DC:	3E15      	ld         al, @0x6C3E <g_le_bearer_data+0x8>
   557DD:	E019      	ld         x, @0xFFE0 <register ah>
   557DE:	0026      	st         al, @(0x0, x)
   557DF:	249C      	bsr        +0x24 <IsCSRSchedRunning:0x55803[p]>
   557E0:	E199      	tst        @0xFFE1 <register al>
   557E1:	03F0      	bne        +0x3 <___libcsrmesh_349+0x70:0x557E4[p]>
   557E2:	0300      	**prefx    0x3
   557E3:	779C      	bsr        +0x377 <CSRSchedStart:0x55B5A[p]>
   557E4:	0114      	ld         al, #+0x1
   557E5:	02E0      	bra        +0x2 <___libcsrmesh_349+0x73:0x557E7[p]>
   557E6:	0014      	ld         al, #+0x0
   557E7:	FB0F      	leave      #-0x5

0x000557E8 <CSRSchedGetScanDutyCycle>:
   557E8:	FC0B      	enter      #-0x4
   557E9:	6900      	**prefx    0x69
   557EA:	2918      	ld         x, #+0x6929
   557EB:	0016      	ld         al, @(0x0, x)
   557EC:	0400      	**prefx    0x4
   557ED:	E890      	smult      #+0x3E8
   557EE:	FA25      	st         al, @0xFFFA <(scratchpad)>
   557EF:	011A      	ld         x, @(+0x1, x)
   557F0:	E315      	ld         al, @0xFFE3 <register uxl>
   557F1:	0009      	**unsigned
   557F2:	0400      	**prefx    0x4
   557F3:	E890      	umult      #0x3E8
   557F4:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   557F5:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   557F6:	F831      	add        ah, @0xFFF8 <(scratchpad)>
   557F7:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   557F8:	6900      	**prefx    0x69
   557F9:	2718      	ld         x, #+0x6927
   557FA:	0012      	ld         ah, @(0x0, x)
   557FB:	011A      	ld         x, @(+0x1, x)
   557FC:	012B      	st         x, @(+0x1, y)
   557FD:	0023      	st         ah, @(0x0, y)
   557FE:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   557FF:	FC00      	**prefx    0xFC
   55800:	1500      	**prefx    0x15
   55801:	039C      	bsr        -0x3EAFD <__udivhi3:0x16D04[p]>
   55802:	FC0F      	leave      #-0x4

0x00055803 <IsCSRSchedRunning>:
   55803:	6900      	**prefx    0x69
   55804:	3315      	ld         al, @0x6933 <g_scheduler_data+0xC>
   55805:	02F4      	beq        +0x2 <IsCSRSchedRunning+0x4:0x55807[p]>
   55806:	0114      	ld         al, #+0x1
   55807:	00E2      	bra        0x0, x

0x00055808 <___libcsrmesh_404>:
   55808:	FD0B      	enter      #-0x3
   55809:	0014      	ld         al, #+0x0
   5580A:	0027      	st         al, @(0x0, y)
   5580B:	0010      	ld         ah, #+0x0
   5580C:	FB00      	**prefx    0xFB
   5580D:	E300      	**prefx    0xE3
   5580E:	089C      	bsr        -0x51CF8 <LsStartStopScan:0x3B16[p]>
   5580F:	0014      	ld         al, #+0x0
   55810:	0027      	st         al, @(0x0, y)
   55811:	0010      	ld         ah, #+0x0
   55812:	FB00      	**prefx    0xFB
   55813:	E300      	**prefx    0xE3
   55814:	049C      	bsr        -0x51CFC <LsStartStopAdvertise:0x3B18[p]>
   55815:	6900      	**prefx    0x69
   55816:	3314      	ld         al, #+0x6933
   55817:	0600      	**prefx    0x6
   55818:	829C      	bsr        +0x582 <___libcsrmesh_366:0x55D9A[p]>
   55819:	FD0F      	leave      #-0x3

0x0005581A <___libcsrmesh_405>:
   5581A:	FC0B      	enter      #-0x4
   5581B:	6900      	**prefx    0x69
   5581C:	4399      	tst        @0x6943 <g_scheduler_data+0x1C>
   5581D:	3DF4      	beq        +0x3D <___libcsrmesh_405+0x40:0x5585A[p]>
   5581E:	6900      	**prefx    0x69
   5581F:	3E15      	ld         al, @0x693E <g_scheduler_data+0x17>
   55820:	0184      	cmp        al, #+0x1
   55821:	39F4      	beq        +0x39 <___libcsrmesh_405+0x40:0x5585A[p]>
   55822:	6900      	**prefx    0x69
   55823:	4415      	ld         al, @0x6944 <g_scheduler_data+0x1D>
   55824:	0184      	cmp        al, #+0x1
   55825:	06F0      	bne        +0x6 <___libcsrmesh_405+0x11:0x5582B[p]>
   55826:	6900      	**prefx    0x69
   55827:	3915      	ld         al, @0x6939 <g_scheduler_data+0x12>
   55828:	6900      	**prefx    0x69
   55829:	3AB5      	or         al, @0x693A <g_scheduler_data+0x13>
   5582A:	30F4      	beq        +0x30 <___libcsrmesh_405+0x40:0x5585A[p]>
   5582B:	6900      	**prefx    0x69
   5582C:	4099      	tst        @0x6940 <g_scheduler_data+0x19>
   5582D:	2DF0      	bne        +0x2D <___libcsrmesh_405+0x40:0x5585A[p]>
   5582E:	6900      	**prefx    0x69
   5582F:	2915      	ld         al, @0x6929 <g_scheduler_data+0x2>
   55830:	6900      	**prefx    0x69
   55831:	2AB5      	or         al, @0x692A <g_scheduler_data+0x3>
   55832:	03F0      	bne        +0x3 <___libcsrmesh_405+0x1B:0x55835[p]>
   55833:	0414      	ld         al, #+0x4
   55834:	29E0      	bra        +0x29 <___libcsrmesh_405+0x43:0x5585D[p]>
   55835:	0114      	ld         al, #+0x1
   55836:	0110      	ld         ah, #+0x1
   55837:	FB00      	**prefx    0xFB
   55838:	E400      	**prefx    0xE4
   55839:	AC9C      	bsr        -0x51C54 <GapSetDefaultSecurity:0x3BE5[p]>
   5583A:	0114      	ld         al, #+0x1
   5583B:	FB00      	**prefx    0xFB
   5583C:	E300      	**prefx    0xE3
   5583D:	7B9C      	bsr        -0x51C85 <GapSetScanDiscoveryMode:0x3BB8[p]>
   5583E:	6900      	**prefx    0x69
   5583F:	2911      	ld         ah, @0x6929 <g_scheduler_data+0x2>
   55840:	6900      	**prefx    0x69
   55841:	2A15      	ld         al, @0x692A <g_scheduler_data+0x3>
   55842:	0127      	st         al, @(+0x1, y)
   55843:	0023      	st         ah, @(0x0, y)
   55844:	6900      	**prefx    0x69
   55845:	2815      	ld         al, @0x6928 <g_scheduler_data+0x1>
   55846:	6900      	**prefx    0x69
   55847:	2711      	ld         ah, @0x6927 <g_scheduler_data>
   55848:	FB00      	**prefx    0xFB
   55849:	E400      	**prefx    0xE4
   5584A:	979C      	bsr        -0x51C69 <GapSetScanInterval:0x3BE1[p]>
   5584B:	E199      	tst        @0xFFE1 <register al>
   5584C:	10F0      	bne        +0x10 <___libcsrmesh_405+0x42:0x5585C[p]>
   5584D:	FB00      	**prefx    0xFB
   5584E:	E300      	**prefx    0xE3
   5584F:	6C9C      	bsr        -0x51C94 <GapSetScanType:0x3BBB[p]>
   55850:	0014      	ld         al, #+0x0
   55851:	0027      	st         al, @(0x0, y)
   55852:	0114      	ld         al, #+0x1
   55853:	0010      	ld         ah, #+0x0
   55854:	FB00      	**prefx    0xFB
   55855:	E300      	**prefx    0xE3
   55856:	C09C      	bsr        -0x51D40 <LsStartStopScan:0x3B16[p]>
   55857:	E199      	tst        @0xFFE1 <register al>
   55858:	05F4      	beq        +0x5 <___libcsrmesh_405+0x43:0x5585D[p]>
   55859:	03E0      	bra        +0x3 <___libcsrmesh_405+0x42:0x5585C[p]>
   5585A:	0514      	ld         al, #+0x5
   5585B:	02E0      	bra        +0x2 <___libcsrmesh_405+0x43:0x5585D[p]>
   5585C:	FF14      	ld         al, #-0x1
   5585D:	FC0F      	leave      #-0x4

0x0005585E <CSRSchedEnableListening>:
   5585E:	FD0B      	enter      #-0x3
   5585F:	6900      	**prefx    0x69
   55860:	4325      	st         al, @0x6943 <g_scheduler_data+0x1C>
   55861:	0184      	cmp        al, #+0x1
   55862:	03F0      	bne        +0x3 <CSRSchedEnableListening+0x7:0x55865[p]>
   55863:	B79C      	bsr        -0x49 <___libcsrmesh_405:0x5581A[p]>
   55864:	0CE0      	bra        +0xC <CSRSchedEnableListening+0x12:0x55870[p]>
   55865:	0014      	ld         al, #+0x0
   55866:	0027      	st         al, @(0x0, y)
   55867:	0010      	ld         ah, #+0x0
   55868:	FB00      	**prefx    0xFB
   55869:	E300      	**prefx    0xE3
   5586A:	AC9C      	bsr        -0x51D54 <LsStartStopScan:0x3B16[p]>
   5586B:	E199      	tst        @0xFFE1 <register al>
   5586C:	03F4      	beq        +0x3 <CSRSchedEnableListening+0x11:0x5586F[p]>
   5586D:	FF14      	ld         al, #-0x1
   5586E:	02E0      	bra        +0x2 <CSRSchedEnableListening+0x12:0x55870[p]>
   5586F:	0014      	ld         al, #+0x0
   55870:	FD0F      	leave      #-0x3

0x00055871 <CSRSchedSetScanDutyCycle>:
   55871:	F50B      	enter      #-0xB
   55872:	E119      	ld         x, @0xFFE1 <register al>
   55873:	0400      	**prefx    0x4
   55874:	E884      	cmp        al, #+0x3E8
   55875:	042C      	bcz        +0x4 <CSRSchedSetScanDutyCycle+0x8:0x55879[p]>
   55876:	0714      	ld         al, #+0x7
   55877:	0100      	**prefx    0x1
   55878:	C0E0      	bra        +0xC0 <CSRSchedSetScanDutyCycle+0xC7:0x55938[p]>
   55879:	E015      	ld         al, @0xFFE0 <register ah>
   5587A:	FC34      	add        al, #-0x4
   5587B:	4000      	**prefx    0x40
   5587C:	FD84      	cmp        al, #+0x3FFD
   5587D:	03F8      	bcc        +0x3 <CSRSchedSetScanDutyCycle+0xF:0x55880[p]>
   5587E:	6900      	**prefx    0x69
   5587F:	2B21      	st         ah, @0x692B <g_scheduler_data+0x4>
   55880:	E315      	ld         al, @0xFFE3 <register uxl>
   55881:	0009      	**unsigned
   55882:	0800      	**prefx    0x8
   55883:	D090      	umult      #0x7D0
   55884:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   55885:	0018      	ld         x, #+0x0
   55886:	002B      	st         x, @(0x0, y)
   55887:	0400      	**prefx    0x4
   55888:	E810      	ld         ah, #+0x3E8
   55889:	0123      	st         ah, @(+0x1, y)
   5588A:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5588B:	FC00      	**prefx    0xFC
   5588C:	1400      	**prefx    0x14
   5588D:	779C      	bsr        -0x3EB89 <__udivhi3:0x16D04[p]>
   5588E:	0427      	st         al, @(+0x4, y)
   5588F:	0323      	st         ah, @(+0x3, y)
   55890:	6900      	**prefx    0x69
   55891:	2B15      	ld         al, @0x692B <g_scheduler_data+0x4>
   55892:	0727      	st         al, @(+0x7, y)
   55893:	0590      	smult      #+0x5
   55894:	0827      	st         al, @(+0x8, y)
   55895:	0018      	ld         x, #+0x0
   55896:	052B      	st         x, @(+0x5, y)
   55897:	0800      	**prefx    0x8
   55898:	D010      	ld         ah, #+0x7D0
   55899:	0623      	st         ah, @(+0x6, y)
   5589A:	022B      	st         x, @(+0x2, y)
   5589B:	1BE0      	bra        +0x1B <CSRSchedSetScanDutyCycle+0x45:0x558B6[p]>
   5589C:	0014      	ld         al, #+0x0
   5589D:	0027      	st         al, @(0x0, y)
   5589E:	0518      	ld         x, #+0x5
   5589F:	012B      	st         x, @(+0x1, y)
   558A0:	0413      	ld         ah, @(+0x4, y)
   558A1:	E015      	ld         al, @0xFFE0 <register ah>
   558A2:	031B      	ld         x, @(+0x3, y)
   558A3:	E311      	ld         ah, @0xFFE3 <register uxl>
   558A4:	FC00      	**prefx    0xFC
   558A5:	1400      	**prefx    0x14
   558A6:	5E9C      	bsr        -0x3EBA2 <__udivhi3:0x16D04[p]>
   558A7:	0427      	st         al, @(+0x4, y)
   558A8:	0323      	st         ah, @(+0x3, y)
   558A9:	0010      	ld         ah, #+0x0
   558AA:	0023      	st         ah, @(0x0, y)
   558AB:	0514      	ld         al, #+0x5
   558AC:	0127      	st         al, @(+0x1, y)
   558AD:	061B      	ld         x, @(+0x6, y)
   558AE:	E315      	ld         al, @0xFFE3 <register uxl>
   558AF:	051B      	ld         x, @(+0x5, y)
   558B0:	E311      	ld         ah, @0xFFE3 <register uxl>
   558B1:	FC00      	**prefx    0xFC
   558B2:	1400      	**prefx    0x14
   558B3:	519C      	bsr        -0x3EBAF <__udivhi3:0x16D04[p]>
   558B4:	0627      	st         al, @(+0x6, y)
   558B5:	0523      	st         ah, @(+0x5, y)
   558B6:	0010      	ld         ah, #+0x0
   558B7:	0317      	ld         al, @(+0x3, y)
   558B8:	E181      	cmp        ah, @0xFFE1 <register al>
   558B9:	06F0      	bne        +0x6 <CSRSchedSetScanDutyCycle+0x4E:0x558BF[p]>
   558BA:	081B      	ld         x, @(+0x8, y)
   558BB:	0413      	ld         ah, @(+0x4, y)
   558BC:	E089      	cmp        x, @0xFFE0 <register ah>
   558BD:	022C      	bcz        +0x2 <CSRSchedSetScanDutyCycle+0x4E:0x558BF[p]>
   558BE:	13E0      	bra        +0x13 <CSRSchedSetScanDutyCycle+0x60:0x558D1[p]>
   558BF:	0014      	ld         al, #+0x0
   558C0:	0027      	st         al, @(0x0, y)
   558C1:	0518      	ld         x, #+0x5
   558C2:	012B      	st         x, @(+0x1, y)
   558C3:	0413      	ld         ah, @(+0x4, y)
   558C4:	E015      	ld         al, @0xFFE0 <register ah>
   558C5:	031B      	ld         x, @(+0x3, y)
   558C6:	E311      	ld         ah, @0xFFE3 <register uxl>
   558C7:	FC00      	**prefx    0xFC
   558C8:	1500      	**prefx    0x15
   558C9:	6A9C      	bsr        -0x3EA96 <__umodhi3:0x16E33[p]>
   558CA:	E1B1      	or         ah, @0xFFE1 <register al>
   558CB:	06F0      	bne        +0x6 <CSRSchedSetScanDutyCycle+0x60:0x558D1[p]>
   558CC:	0213      	ld         ah, @(+0x2, y)
   558CD:	0130      	add        ah, #+0x1
   558CE:	0223      	st         ah, @(+0x2, y)
   558CF:	0480      	cmp        ah, #+0x4
   558D0:	CCF0      	bne        -0x34 <CSRSchedSetScanDutyCycle+0x2B:0x5589C[p]>
   558D1:	0717      	ld         al, @(+0x7, y)
   558D2:	01A0      	asl        #0x1
   558D3:	F825      	st         al, @0xFFF8 <(scratchpad)>
   558D4:	0018      	ld         x, #+0x0
   558D5:	0DE0      	bra        +0xD <CSRSchedSetScanDutyCycle+0x71:0x558E2[p]>
   558D6:	0417      	ld         al, @(+0x4, y)
   558D7:	0313      	ld         ah, @(+0x3, y)
   558D8:	0009      	**unsigned
   558D9:	01A4      	lsr        #0x1
   558DA:	0427      	st         al, @(+0x4, y)
   558DB:	0323      	st         ah, @(+0x3, y)
   558DC:	0617      	ld         al, @(+0x6, y)
   558DD:	0513      	ld         ah, @(+0x5, y)
   558DE:	0009      	**unsigned
   558DF:	01A4      	lsr        #0x1
   558E0:	0627      	st         al, @(+0x6, y)
   558E1:	0523      	st         ah, @(+0x5, y)
   558E2:	0317      	ld         al, @(+0x3, y)
   558E3:	E189      	cmp        x, @0xFFE1 <register al>
   558E4:	06F0      	bne        +0x6 <CSRSchedSetScanDutyCycle+0x79:0x558EA[p]>
   558E5:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   558E6:	0417      	ld         al, @(+0x4, y)
   558E7:	E181      	cmp        ah, @0xFFE1 <register al>
   558E8:	022C      	bcz        +0x2 <CSRSchedSetScanDutyCycle+0x79:0x558EA[p]>
   558E9:	09E0      	bra        +0x9 <CSRSchedSetScanDutyCycle+0x81:0x558F2[p]>
   558EA:	0413      	ld         ah, @(+0x4, y)
   558EB:	E015      	ld         al, @0xFFE0 <register ah>
   558EC:	01C4      	and        al, #0x1
   558ED:	05F0      	bne        +0x5 <CSRSchedSetScanDutyCycle+0x81:0x558F2[p]>
   558EE:	0613      	ld         ah, @(+0x6, y)
   558EF:	E015      	ld         al, @0xFFE0 <register ah>
   558F0:	01C4      	and        al, #0x1
   558F1:	E5F4      	beq        -0x1B <CSRSchedSetScanDutyCycle+0x65:0x558D6[p]>
   558F2:	0517      	ld         al, @(+0x5, y)
   558F3:	0200      	**prefx    0x2
   558F4:	7190      	smult      #+0x271
   558F5:	E119      	ld         x, @0xFFE1 <register al>
   558F6:	0617      	ld         al, @(+0x6, y)
   558F7:	0009      	**unsigned
   558F8:	0200      	**prefx    0x2
   558F9:	7190      	umult      #0x271
   558FA:	FB25      	st         al, @0xFFFB <(scratchpad)>
   558FB:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   558FC:	FA39      	add        x, @0xFFFA <(scratchpad)>
   558FD:	FA29      	st         x, @0xFFFA <(scratchpad)>
   558FE:	6900      	**prefx    0x69
   558FF:	2715      	ld         al, @0x6927 <g_scheduler_data>
   55900:	E385      	cmp        al, @0xFFE3 <register uxl>
   55901:	18F0      	bne        +0x18 <CSRSchedSetScanDutyCycle+0xA8:0x55919[p]>
   55902:	6900      	**prefx    0x69
   55903:	2815      	ld         al, @0x6928 <g_scheduler_data+0x1>
   55904:	FB85      	cmp        al, @0xFFFB <(scratchpad)>
   55905:	14F0      	bne        +0x14 <CSRSchedSetScanDutyCycle+0xA8:0x55919[p]>
   55906:	0317      	ld         al, @(+0x3, y)
   55907:	0200      	**prefx    0x2
   55908:	7190      	smult      #+0x271
   55909:	E119      	ld         x, @0xFFE1 <register al>
   5590A:	0417      	ld         al, @(+0x4, y)
   5590B:	0009      	**unsigned
   5590C:	0200      	**prefx    0x2
   5590D:	7190      	umult      #0x271
   5590E:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5590F:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   55910:	F839      	add        x, @0xFFF8 <(scratchpad)>
   55911:	6900      	**prefx    0x69
   55912:	2915      	ld         al, @0x6929 <g_scheduler_data+0x2>
   55913:	E385      	cmp        al, @0xFFE3 <register uxl>
   55914:	05F0      	bne        +0x5 <CSRSchedSetScanDutyCycle+0xA8:0x55919[p]>
   55915:	6900      	**prefx    0x69
   55916:	2A15      	ld         al, @0x692A <g_scheduler_data+0x3>
   55917:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   55918:	1FF4      	beq        +0x1F <CSRSchedSetScanDutyCycle+0xC6:0x55937[p]>
   55919:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   5591A:	6900      	**prefx    0x69
   5591B:	2829      	st         x, @0x6928 <g_scheduler_data+0x1>
   5591C:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   5591D:	6900      	**prefx    0x69
   5591E:	2721      	st         ah, @0x6927 <g_scheduler_data>
   5591F:	0317      	ld         al, @(+0x3, y)
   55920:	0200      	**prefx    0x2
   55921:	7190      	smult      #+0x271
   55922:	E119      	ld         x, @0xFFE1 <register al>
   55923:	0417      	ld         al, @(+0x4, y)
   55924:	0009      	**unsigned
   55925:	0200      	**prefx    0x2
   55926:	7190      	umult      #0x271
   55927:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   55928:	F839      	add        x, @0xFFF8 <(scratchpad)>
   55929:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5592A:	6900      	**prefx    0x69
   5592B:	2A25      	st         al, @0x692A <g_scheduler_data+0x3>
   5592C:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5592D:	6900      	**prefx    0x69
   5592E:	2921      	st         ah, @0x6929 <g_scheduler_data+0x2>
   5592F:	0014      	ld         al, #+0x0
   55930:	0027      	st         al, @(0x0, y)
   55931:	0010      	ld         ah, #+0x0
   55932:	FB00      	**prefx    0xFB
   55933:	E200      	**prefx    0xE2
   55934:	E29C      	bsr        -0x51E1E <LsStartStopScan:0x3B16[p]>
   55935:	FF00      	**prefx    0xFF
   55936:	E49C      	bsr        -0x11C <___libcsrmesh_405:0x5581A[p]>
   55937:	0014      	ld         al, #+0x0
   55938:	F50F      	leave      #-0xB

0x00055939 <CSRSchedHandleIncomingData>:
   55939:	F60B      	enter      #-0xA
   5593A:	0627      	st         al, @(+0x6, y)
   5593B:	0723      	st         ah, @(+0x7, y)
   5593C:	FF34      	add        al, #-0x1
   5593D:	0184      	cmp        al, #+0x1
   5593E:	022C      	bcz        +0x2 <CSRSchedHandleIncomingData+0x7:0x55940[p]>
   5593F:	47E0      	bra        +0x47 <CSRSchedHandleIncomingData+0x4D:0x55986[p]>
   55940:	6900      	**prefx    0x69
   55941:	4499      	tst        @0x6944 <g_scheduler_data+0x1D>
   55942:	3CF4      	beq        +0x3C <CSRSchedHandleIncomingData+0x45:0x5597E[p]>
   55943:	0613      	ld         ah, @(+0x6, y)
   55944:	0180      	cmp        ah, #+0x1
   55945:	39F0      	bne        +0x39 <CSRSchedHandleIncomingData+0x45:0x5597E[p]>
   55946:	FB00      	**prefx    0xFB
   55947:	D200      	**prefx    0xD2
   55948:	1E9C      	bsr        -0x52DE2 <TimeGet32:0x2B66[p]>
   55949:	0527      	st         al, @(+0x5, y)
   5594A:	0423      	st         ah, @(+0x4, y)
   5594B:	6900      	**prefx    0x69
   5594C:	4825      	st         al, @0x6948 <g_scheduler_data+0x21>
   5594D:	E019      	ld         x, @0xFFE0 <register ah>
   5594E:	6900      	**prefx    0x69
   5594F:	4729      	st         x, @0x6947 <g_scheduler_data+0x20>
   55950:	6900      	**prefx    0x69
   55951:	4611      	ld         ah, @0x6946 <g_scheduler_data+0x1F>
   55952:	0323      	st         ah, @(+0x3, y)
   55953:	6900      	**prefx    0x69
   55954:	4515      	ld         al, @0x6945 <g_scheduler_data+0x1E>
   55955:	0227      	st         al, @(+0x2, y)
   55956:	0413      	ld         ah, @(+0x4, y)
   55957:	E085      	cmp        al, @0xFFE0 <register ah>
   55958:	022C      	bcz        +0x2 <CSRSchedHandleIncomingData+0x21:0x5595A[p]>
   55959:	09E0      	bra        +0x9 <CSRSchedHandleIncomingData+0x29:0x55962[p]>
   5595A:	0217      	ld         al, @(+0x2, y)
   5595B:	041B      	ld         x, @(+0x4, y)
   5595C:	E385      	cmp        al, @0xFFE3 <register uxl>
   5595D:	0EF0      	bne        +0xE <CSRSchedHandleIncomingData+0x32:0x5596B[p]>
   5595E:	0313      	ld         ah, @(+0x3, y)
   5595F:	0517      	ld         al, @(+0x5, y)
   55960:	E181      	cmp        ah, @0xFFE1 <register al>
   55961:	0A2C      	bcz        +0xA <CSRSchedHandleIncomingData+0x32:0x5596B[p]>
   55962:	0213      	ld         ah, @(+0x2, y)
   55963:	FFD0      	xor        ah, #0xFFFF
   55964:	0317      	ld         al, @(+0x3, y)
   55965:	FFD4      	xor        al, #0xFFFF
   55966:	0134      	add        al, #+0x1
   55967:	0040      	addc       ah, #+0x0
   55968:	0537      	add        al, @(+0x5, y)
   55969:	0443      	addc       ah, @(+0x4, y)
   5596A:	05E0      	bra        +0x5 <CSRSchedHandleIncomingData+0x36:0x5596F[p]>
   5596B:	0517      	ld         al, @(+0x5, y)
   5596C:	0413      	ld         ah, @(+0x4, y)
   5596D:	0357      	sub        al, @(+0x3, y)
   5596E:	0263      	subc       ah, @(+0x2, y)
   5596F:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55970:	6900      	**prefx    0x69
   55971:	3915      	ld         al, @0x6939 <g_scheduler_data+0x12>
   55972:	E085      	cmp        al, @0xFFE0 <register ah>
   55973:	07FC      	bcs        +0x7 <CSRSchedHandleIncomingData+0x41:0x5597A[p]>
   55974:	E085      	cmp        al, @0xFFE0 <register ah>
   55975:	09F0      	bne        +0x9 <CSRSchedHandleIncomingData+0x45:0x5597E[p]>
   55976:	6900      	**prefx    0x69
   55977:	3A15      	ld         al, @0x693A <g_scheduler_data+0x13>
   55978:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   55979:	05F8      	bcc        +0x5 <CSRSchedHandleIncomingData+0x45:0x5597E[p]>
   5597A:	FF00      	**prefx    0xFF
   5597B:	8D9C      	bsr        -0x173 <___libcsrmesh_404:0x55808[p]>
   5597C:	FF14      	ld         al, #-0x1
   5597D:	0AE0      	bra        +0xA <CSRSchedHandleIncomingData+0x4E:0x55987[p]>
   5597E:	0A17      	ld         al, @(+0xA, y)
   5597F:	0027      	st         al, @(0x0, y)
   55980:	0B1B      	ld         x, @(+0xB, y)
   55981:	012B      	st         x, @(+0x1, y)
   55982:	0617      	ld         al, @(+0x6, y)
   55983:	0713      	ld         ah, @(+0x7, y)
   55984:	FC00      	**prefx    0xFC
   55985:	7F9C      	bsr        -0x381 <___libcsrmesh_333:0x55604[p]>
   55986:	0014      	ld         al, #+0x0
   55987:	F60F      	leave      #-0xA

0x00055988 <___libcsrmesh_407>:
   55988:	F20B      	enter      #-0xE
   55989:	0A27      	st         al, @(+0xA, y)
   5598A:	0B23      	st         ah, @(+0xB, y)
   5598B:	E199      	tst        @0xFFE1 <register al>
   5598C:	07F0      	bne        +0x7 <___libcsrmesh_407+0xB:0x55993[p]>
   5598D:	0314      	ld         al, #+0x3
   5598E:	6900      	**prefx    0x69
   5598F:	0810      	ld         ah, #+0x6908
   55990:	A200      	**prefx    0xA2
   55991:	E818      	ld         x, #-0x5E18
   55992:	FD09      	bc2        
   55993:	0010      	ld         ah, #+0x0
   55994:	0023      	st         ah, @(0x0, y)
   55995:	0014      	ld         al, #+0x0
   55996:	FB00      	**prefx    0xFB
   55997:	E100      	**prefx    0xE1
   55998:	7E9C      	bsr        -0x51E82 <LsStartStopScan:0x3B16[p]>
   55999:	0014      	ld         al, #+0x0
   5599A:	0027      	st         al, @(0x0, y)
   5599B:	0010      	ld         ah, #+0x0
   5599C:	FB00      	**prefx    0xFB
   5599D:	E100      	**prefx    0xE1
   5599E:	7A9C      	bsr        -0x51E86 <LsStartStopAdvertise:0x3B18[p]>
   5599F:	0927      	st         al, @(+0x9, y)
   559A0:	6900      	**prefx    0x69
   559A1:	3015      	ld         al, @0x6930 <g_scheduler_data+0x9>
   559A2:	6900      	**prefx    0x69
   559A3:	2F11      	ld         ah, @0x692F <g_scheduler_data+0x8>
   559A4:	0127      	st         al, @(+0x1, y)
   559A5:	0023      	st         ah, @(0x0, y)
   559A6:	FB00      	**prefx    0xFB
   559A7:	E200      	**prefx    0xE2
   559A8:	359C      	bsr        -0x51DCB <GapSetAdvInterval:0x3BDD[p]>
   559A9:	6900      	**prefx    0x69
   559AA:	4115      	ld         al, @0x6941 <g_scheduler_data+0x1A>
   559AB:	0184      	cmp        al, #+0x1
   559AC:	3CF0      	bne        +0x3C <___libcsrmesh_407+0x60:0x559E8[p]>
   559AD:	FB00      	**prefx    0xFB
   559AE:	D200      	**prefx    0xD2
   559AF:	B79C      	bsr        -0x52E49 <TimeGet32:0x2B66[p]>
   559B0:	0827      	st         al, @(+0x8, y)
   559B1:	0723      	st         ah, @(+0x7, y)
   559B2:	FB00      	**prefx    0xFB
   559B3:	2A00      	**prefx    0x2A
   559B4:	B69C      	bsr        -0x4D64A <Random16:0x836A[p]>
   559B5:	FF27      	st         al, @(-0x1, y)
   559B6:	0817      	ld         al, @(+0x8, y)
   559B7:	FFD7      	xor        al, @(-0x1, y)
   559B8:	0100      	**prefx    0x1
   559B9:	FFC4      	and        al, #0xFF
   559BA:	0527      	st         al, @(+0x5, y)
   559BB:	F2F4      	beq        -0xE <___libcsrmesh_407+0x25:0x559AD[p]>
   559BC:	0100      	**prefx    0x1
   559BD:	FF84      	cmp        al, #+0xFF
   559BE:	EFF4      	beq        -0x11 <___libcsrmesh_407+0x25:0x559AD[p]>
   559BF:	FF17      	ld         al, @(-0x1, y)
   559C0:	0009      	**unsigned
   559C1:	4990      	umult      #0x49
   559C2:	F925      	st         al, @0xFFF9 <(scratchpad)>
   559C3:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   559C4:	0817      	ld         al, @(+0x8, y)
   559C5:	0713      	ld         ah, @(+0x7, y)
   559C6:	0009      	**unsigned
   559C7:	08A4      	lsr        #0x8
   559C8:	FB25      	st         al, @0xFFFB <(scratchpad)>
   559C9:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   559CA:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   559CB:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   559CC:	FBD5      	xor        al, @0xFFFB <(scratchpad)>
   559CD:	FAD1      	xor        ah, @0xFFFA <(scratchpad)>
   559CE:	E119      	ld         x, @0xFFE1 <register al>
   559CF:	0100      	**prefx    0x1
   559D0:	FFC0      	and        ah, #0xFF
   559D1:	0323      	st         ah, @(+0x3, y)
   559D2:	0427      	st         al, @(+0x4, y)
   559D3:	E015      	ld         al, @0xFFE0 <register ah>
   559D4:	E3B5      	or         al, @0xFFE3 <register uxl>
   559D5:	D8F4      	beq        -0x28 <___libcsrmesh_407+0x25:0x559AD[p]>
   559D6:	0100      	**prefx    0x1
   559D7:	FF80      	cmp        ah, #+0xFF
   559D8:	03F0      	bne        +0x3 <___libcsrmesh_407+0x53:0x559DB[p]>
   559D9:	FF88      	cmp        x, #-0x1
   559DA:	D3F4      	beq        -0x2D <___libcsrmesh_407+0x25:0x559AD[p]>
   559DB:	FF17      	ld         al, @(-0x1, y)
   559DC:	4000      	**prefx    0x40
   559DD:	FFC4      	and        al, #0x3FFF
   559DE:	0627      	st         al, @(+0x6, y)
   559DF:	CEF4      	beq        -0x32 <___libcsrmesh_407+0x25:0x559AD[p]>
   559E0:	4000      	**prefx    0x40
   559E1:	FF84      	cmp        al, #+0x3FFF
   559E2:	CBF4      	beq        -0x35 <___libcsrmesh_407+0x25:0x559AD[p]>
   559E3:	E415      	ld         al, @0xFFE4 <register uy>
   559E4:	0334      	add        al, #+0x3
   559E5:	FB00      	**prefx    0xFB
   559E6:	E200      	**prefx    0xE2
   559E7:	049C      	bsr        -0x51DFC <GapSetRandomAddress:0x3BEB[p]>
   559E8:	0114      	ld         al, #+0x1
   559E9:	0110      	ld         ah, #+0x1
   559EA:	FB00      	**prefx    0xFB
   559EB:	E200      	**prefx    0xE2
   559EC:	F99C      	bsr        -0x51E07 <GapSetDefaultSecurity:0x3BE5[p]>
   559ED:	0314      	ld         al, #+0x3
   559EE:	FB00      	**prefx    0xFB
   559EF:	E200      	**prefx    0xE2
   559F0:	C59C      	bsr        -0x51E3B <GapSetAdvDiscoveryMode:0x3BB5[p]>
   559F1:	0010      	ld         ah, #+0x0
   559F2:	0023      	st         ah, @(0x0, y)
   559F3:	0014      	ld         al, #+0x0
   559F4:	FB00      	**prefx    0xFB
   559F5:	E100      	**prefx    0xE1
   559F6:	089C      	bsr        -0x51EF8 <LsStoreAdvScanData:0x3AFE[p]>
   559F7:	0114      	ld         al, #+0x1
   559F8:	0027      	st         al, @(0x0, y)
   559F9:	0014      	ld         al, #+0x0
   559FA:	0010      	ld         ah, #+0x0
   559FB:	FB00      	**prefx    0xFB
   559FC:	E100      	**prefx    0xE1
   559FD:	019C      	bsr        -0x51EFF <LsStoreAdvScanData:0x3AFE[p]>
   559FE:	0A9B      	tst        @(+0xA, y)
   559FF:	0AF0      	bne        +0xA <___libcsrmesh_407+0x81:0x55A09[p]>
   55A00:	0B13      	ld         ah, @(+0xB, y)
   55A01:	0330      	add        ah, #+0x3
   55A02:	E015      	ld         al, @0xFFE0 <register ah>
   55A03:	6900      	**prefx    0x69
   55A04:	0810      	ld         ah, #+0x6908
   55A05:	FB00      	**prefx    0xFB
   55A06:	E100      	**prefx    0xE1
   55A07:	E09C      	bsr        -0x51F20 <LsStoreAdvDataNoAdFlags:0x3AE7[p]>
   55A08:	0927      	st         al, @(+0x9, y)
   55A09:	099B      	tst        @(+0x9, y)
   55A0A:	1CF0      	bne        +0x1C <___libcsrmesh_407+0x9E:0x55A26[p]>
   55A0B:	0714      	ld         al, #+0x7
   55A0C:	FB00      	**prefx    0xFB
   55A0D:	E200      	**prefx    0xE2
   55A0E:	B29C      	bsr        -0x51E4E <GapSetAdvChanMask:0x3BC0[p]>
   55A0F:	5A00      	**prefx    0x5A
   55A10:	4A14      	ld         al, #+0x5A4A
   55A11:	0127      	st         al, @(+0x1, y)
   55A12:	0510      	ld         ah, #+0x5
   55A13:	0023      	st         ah, @(0x0, y)
   55A14:	6900      	**prefx    0x69
   55A15:	3314      	ld         al, #+0x6933
   55A16:	0227      	st         al, @(+0x2, y)
   55A17:	0010      	ld         ah, #+0x0
   55A18:	3B00      	**prefx    0x3B
   55A19:	9814      	ld         al, #+0x3A98
   55A1A:	0400      	**prefx    0x4
   55A1B:	8A9C      	bsr        +0x38A <___libcsrmesh_365:0x55DA5[p]>
   55A1C:	6900      	**prefx    0x69
   55A1D:	4111      	ld         ah, @0x6941 <g_scheduler_data+0x1A>
   55A1E:	0023      	st         ah, @(0x0, y)
   55A1F:	0114      	ld         al, #+0x1
   55A20:	0010      	ld         ah, #+0x0
   55A21:	FB00      	**prefx    0xFB
   55A22:	E100      	**prefx    0xE1
   55A23:	F59C      	bsr        -0x51F0B <LsStartStopAdvertise:0x3B18[p]>
   55A24:	E199      	tst        @0xFFE1 <register al>
   55A25:	02F4      	beq        +0x2 <___libcsrmesh_407+0x9F:0x55A27[p]>
   55A26:	FF14      	ld         al, #-0x1
   55A27:	F20F      	leave      #-0xE

0x00055A28 <CSRSchedSendPriorityMsg>:
   55A28:	FE0B      	enter      #-0x2
   55A29:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55A2A:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   55A2B:	0217      	ld         al, @(+0x2, y)
   55A2C:	FA25      	st         al, @0xFFFA <(scratchpad)>
   55A2D:	6900      	**prefx    0x69
   55A2E:	4099      	tst        @0x6940 <g_scheduler_data+0x19>
   55A2F:	14F0      	bne        +0x14 <CSRSchedSendPriorityMsg+0x1B:0x55A43[p]>
   55A30:	F899      	tst        @0xFFF8 <(scratchpad)>
   55A31:	0CF0      	bne        +0xC <CSRSchedSendPriorityMsg+0x15:0x55A3D[p]>
   55A32:	0314      	ld         al, #+0x3
   55A33:	6900      	**prefx    0x69
   55A34:	0810      	ld         ah, #+0x6908
   55A35:	A200      	**prefx    0xA2
   55A36:	E818      	ld         x, #-0x5E18
   55A37:	FD09      	bc2        
   55A38:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   55A39:	6900      	**prefx    0x69
   55A3A:	0B10      	ld         ah, #+0x690B
   55A3B:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55A3C:	FD09      	bc2        
   55A3D:	6900      	**prefx    0x69
   55A3E:	3E99      	tst        @0x693E <g_scheduler_data+0x17>
   55A3F:	06F4      	beq        +0x6 <CSRSchedSendPriorityMsg+0x1D:0x55A45[p]>
   55A40:	0114      	ld         al, #+0x1
   55A41:	6900      	**prefx    0x69
   55A42:	3F25      	st         al, @0x693F <g_scheduler_data+0x18>
   55A43:	0814      	ld         al, #+0x8
   55A44:	05E0      	bra        +0x5 <CSRSchedSendPriorityMsg+0x21:0x55A49[p]>
   55A45:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   55A46:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   55A47:	FF00      	**prefx    0xFF
   55A48:	409C      	bsr        -0xC0 <___libcsrmesh_407:0x55988[p]>
   55A49:	FE0F      	leave      #-0x2

0x00055A4A <___libcsrmesh_400>:
   55A4A:	F70B      	enter      #-0x9
   55A4B:	6900      	**prefx    0x69
   55A4C:	3385      	cmp        al, @0x6933 <g_scheduler_data+0xC>
   55A4D:	6AF0      	bne        +0x6A <___libcsrmesh_400+0x6D:0x55AB7[p]>
   55A4E:	0014      	ld         al, #+0x0
   55A4F:	6900      	**prefx    0x69
   55A50:	3325      	st         al, @0x6933 <g_scheduler_data+0xC>
   55A51:	6900      	**prefx    0x69
   55A52:	4B15      	ld         al, @0x694B <g_scheduler_data+0x24>
   55A53:	0384      	cmp        al, #+0x3
   55A54:	05F0      	bne        +0x5 <___libcsrmesh_400+0xF:0x55A59[p]>
   55A55:	FB00      	**prefx    0xFB
   55A56:	1000      	**prefx    0x10
   55A57:	399C      	bsr        -0x4EFC7 <GattCancelConnectReq:0x6A90[p]>
   55A58:	08E0      	bra        +0x8 <___libcsrmesh_400+0x16:0x55A60[p]>
   55A59:	0018      	ld         x, #+0x0
   55A5A:	002B      	st         x, @(0x0, y)
   55A5B:	0014      	ld         al, #+0x0
   55A5C:	0010      	ld         ah, #+0x0
   55A5D:	FB00      	**prefx    0xFB
   55A5E:	E100      	**prefx    0xE1
   55A5F:	B99C      	bsr        -0x51F47 <LsStartStopAdvertise:0x3B18[p]>
   55A60:	6900      	**prefx    0x69
   55A61:	4B15      	ld         al, @0x694B <g_scheduler_data+0x24>
   55A62:	0384      	cmp        al, #+0x3
   55A63:	03F4      	beq        +0x3 <___libcsrmesh_400+0x1C:0x55A66[p]>
   55A64:	0184      	cmp        al, #+0x1
   55A65:	13F0      	bne        +0x13 <___libcsrmesh_400+0x2E:0x55A78[p]>
   55A66:	0014      	ld         al, #+0x0
   55A67:	6900      	**prefx    0x69
   55A68:	4B25      	st         al, @0x694B <g_scheduler_data+0x24>
   55A69:	6A00      	**prefx    0x6A
   55A6A:	9819      	ld         x, @0x6998 <___libgatt_lib_db_710+0x11>
   55A6B:	062B      	st         x, @(+0x6, y)
   55A6C:	6A00      	**prefx    0x6A
   55A6D:	9715      	ld         al, @0x6997 <___libgatt_lib_db_710+0x10>
   55A6E:	0527      	st         al, @(+0x5, y)
   55A6F:	E3B5      	or         al, @0xFFE3 <register uxl>
   55A70:	08F4      	beq        +0x8 <___libcsrmesh_400+0x2E:0x55A78[p]>
   55A71:	FB00      	**prefx    0xFB
   55A72:	D100      	**prefx    0xD1
   55A73:	F39C      	bsr        -0x52F0D <TimeGet32:0x2B66[p]>
   55A74:	0027      	st         al, @(0x0, y)
   55A75:	0114      	ld         al, #+0x1
   55A76:	050E      	ld         xh, @(+0x5, y)
   55A77:	069F      	bsr        @(+0x6, y)
   55A78:	FE00      	**prefx    0xFE
   55A79:	A19C      	bsr        -0x25F <___libcsrmesh_405:0x5581A[p]>
   55A7A:	6900      	**prefx    0x69
   55A7B:	3015      	ld         al, @0x6930 <g_scheduler_data+0x9>
   55A7C:	0427      	st         al, @(+0x4, y)
   55A7D:	6900      	**prefx    0x69
   55A7E:	2F19      	ld         x, @0x692F <g_scheduler_data+0x8>
   55A7F:	032B      	st         x, @(+0x3, y)
   55A80:	FC00      	**prefx    0xFC
   55A81:	389C      	bsr        -0x3C8 <___libcsrmesh_352:0x556B9[p]>
   55A82:	6900      	**prefx    0x69
   55A83:	2E25      	st         al, @0x692E <g_scheduler_data+0x7>
   55A84:	6900      	**prefx    0x69
   55A85:	4B11      	ld         ah, @0x694B <g_scheduler_data+0x24>
   55A86:	0280      	cmp        ah, #+0x2
   55A87:	18F4      	beq        +0x18 <___libcsrmesh_400+0x55:0x55A9F[p]>
   55A88:	0480      	cmp        ah, #+0x4
   55A89:	16F4      	beq        +0x16 <___libcsrmesh_400+0x55:0x55A9F[p]>
   55A8A:	E199      	tst        @0xFFE1 <register al>
   55A8B:	0DF4      	beq        +0xD <___libcsrmesh_400+0x4E:0x55A98[p]>
   55A8C:	0127      	st         al, @(+0x1, y)
   55A8D:	0014      	ld         al, #+0x0
   55A8E:	0027      	st         al, @(0x0, y)
   55A8F:	041B      	ld         x, @(+0x4, y)
   55A90:	E315      	ld         al, @0xFFE3 <register uxl>
   55A91:	031B      	ld         x, @(+0x3, y)
   55A92:	E311      	ld         ah, @0xFFE3 <register uxl>
   55A93:	FC00      	**prefx    0xFC
   55A94:	1200      	**prefx    0x12
   55A95:	6F9C      	bsr        -0x3ED91 <__udivhi3:0x16D04[p]>
   55A96:	0427      	st         al, @(+0x4, y)
   55A97:	0323      	st         ah, @(+0x3, y)
   55A98:	0317      	ld         al, @(+0x3, y)
   55A99:	0BF0      	bne        +0xB <___libcsrmesh_400+0x5A:0x55AA4[p]>
   55A9A:	041B      	ld         x, @(+0x4, y)
   55A9B:	4E00      	**prefx    0x4E
   55A9C:	2088      	cmp        x, #+0x4E20
   55A9D:	07F8      	bcc        +0x7 <___libcsrmesh_400+0x5A:0x55AA4[p]>
   55A9E:	03E0      	bra        +0x3 <___libcsrmesh_400+0x57:0x55AA1[p]>
   55A9F:	0018      	ld         x, #+0x0
   55AA0:	032B      	st         x, @(+0x3, y)
   55AA1:	4E00      	**prefx    0x4E
   55AA2:	2014      	ld         al, #+0x4E20
   55AA3:	0427      	st         al, @(+0x4, y)
   55AA4:	FB00      	**prefx    0xFB
   55AA5:	2900      	**prefx    0x29
   55AA6:	C49C      	bsr        -0x4D73C <Random16:0x836A[p]>
   55AA7:	1FC4      	and        al, #0x1F
   55AA8:	0200      	**prefx    0x2
   55AA9:	9090      	smult      #+0x190
   55AAA:	0010      	ld         ah, #+0x0
   55AAB:	0437      	add        al, @(+0x4, y)
   55AAC:	0343      	addc       ah, @(+0x3, y)
   55AAD:	5B00      	**prefx    0x5B
   55AAE:	4718      	ld         x, #+0x5B47
   55AAF:	012B      	st         x, @(+0x1, y)
   55AB0:	0518      	ld         x, #+0x5
   55AB1:	002B      	st         x, @(0x0, y)
   55AB2:	6900      	**prefx    0x69
   55AB3:	3318      	ld         x, #+0x6933
   55AB4:	022B      	st         x, @(+0x2, y)
   55AB5:	0300      	**prefx    0x3
   55AB6:	EF9C      	bsr        +0x2EF <___libcsrmesh_365:0x55DA5[p]>
   55AB7:	F70F      	leave      #-0x9

0x00055AB8 <___libcsrmesh_406>:
   55AB8:	F90B      	enter      #-0x7
   55AB9:	0014      	ld         al, #+0x0
   55ABA:	0027      	st         al, @(0x0, y)
   55ABB:	0010      	ld         ah, #+0x0
   55ABC:	FB00      	**prefx    0xFB
   55ABD:	E000      	**prefx    0xE0
   55ABE:	589C      	bsr        -0x51FA8 <LsStartStopScan:0x3B16[p]>
   55ABF:	0018      	ld         x, #+0x0
   55AC0:	002B      	st         x, @(0x0, y)
   55AC1:	0014      	ld         al, #+0x0
   55AC2:	0010      	ld         ah, #+0x0
   55AC3:	FB00      	**prefx    0xFB
   55AC4:	E000      	**prefx    0xE0
   55AC5:	539C      	bsr        -0x51FAD <LsStartStopAdvertise:0x3B18[p]>
   55AC6:	6900      	**prefx    0x69
   55AC7:	4099      	tst        @0x6940 <g_scheduler_data+0x19>
   55AC8:	6BF0      	bne        +0x6B <___libcsrmesh_406+0x7B:0x55B33[p]>
   55AC9:	6900      	**prefx    0x69
   55ACA:	3015      	ld         al, @0x6930 <g_scheduler_data+0x9>
   55ACB:	6900      	**prefx    0x69
   55ACC:	2F11      	ld         ah, @0x692F <g_scheduler_data+0x8>
   55ACD:	0127      	st         al, @(+0x1, y)
   55ACE:	0023      	st         ah, @(0x0, y)
   55ACF:	FB00      	**prefx    0xFB
   55AD0:	E100      	**prefx    0xE1
   55AD1:	0C9C      	bsr        -0x51EF4 <GapSetAdvInterval:0x3BDD[p]>
   55AD2:	6900      	**prefx    0x69
   55AD3:	4C15      	ld         al, @0x694C <g_scheduler_data+0x25>
   55AD4:	0184      	cmp        al, #+0x1
   55AD5:	04F4      	beq        +0x4 <___libcsrmesh_406+0x21:0x55AD9[p]>
   55AD6:	0414      	ld         al, #+0x4
   55AD7:	0427      	st         al, @(+0x4, y)
   55AD8:	08E0      	bra        +0x8 <___libcsrmesh_406+0x28:0x55AE0[p]>
   55AD9:	6900      	**prefx    0x69
   55ADA:	4D14      	ld         al, #+0x694D
   55ADB:	FB00      	**prefx    0xFB
   55ADC:	E100      	**prefx    0xE1
   55ADD:	0E9C      	bsr        -0x51EF2 <GapSetRandomAddress:0x3BEB[p]>
   55ADE:	1418      	ld         x, #+0x14
   55ADF:	042B      	st         x, @(+0x4, y)
   55AE0:	6900      	**prefx    0x69
   55AE1:	5515      	ld         al, @0x6955 <g_scheduler_data+0x2E>
   55AE2:	6900      	**prefx    0x69
   55AE3:	5611      	ld         ah, @0x6956 <g_scheduler_data+0x2F>
   55AE4:	FB00      	**prefx    0xFB
   55AE5:	E100      	**prefx    0xE1
   55AE6:	FF9C      	bsr        -0x51F01 <GapSetDefaultSecurity:0x3BE5[p]>
   55AE7:	6900      	**prefx    0x69
   55AE8:	5415      	ld         al, @0x6954 <g_scheduler_data+0x2D>
   55AE9:	FB00      	**prefx    0xFB
   55AEA:	E100      	**prefx    0xE1
   55AEB:	CA9C      	bsr        -0x51F36 <GapSetAdvDiscoveryMode:0x3BB5[p]>
   55AEC:	0014      	ld         al, #+0x0
   55AED:	0027      	st         al, @(0x0, y)
   55AEE:	0010      	ld         ah, #+0x0
   55AEF:	FB00      	**prefx    0xFB
   55AF0:	E000      	**prefx    0xE0
   55AF1:	0D9C      	bsr        -0x51FF3 <LsStoreAdvScanData:0x3AFE[p]>
   55AF2:	0118      	ld         x, #+0x1
   55AF3:	002B      	st         x, @(0x0, y)
   55AF4:	0014      	ld         al, #+0x0
   55AF5:	0010      	ld         ah, #+0x0
   55AF6:	FB00      	**prefx    0xFB
   55AF7:	E000      	**prefx    0xE0
   55AF8:	069C      	bsr        -0x51FFA <LsStoreAdvScanData:0x3AFE[p]>
   55AF9:	0014      	ld         al, #+0x0
   55AFA:	0327      	st         al, @(+0x3, y)
   55AFB:	031B      	ld         x, @(+0x3, y)
   55AFC:	6900      	**prefx    0x69
   55AFD:	5716      	ld         al, @(+0x6957, x)
   55AFE:	10F4      	beq        +0x10 <___libcsrmesh_406+0x56:0x55B0E[p]>
   55AFF:	E311      	ld         ah, @0xFFE3 <register uxl>
   55B00:	6900      	**prefx    0x69
   55B01:	5830      	add        ah, #+0x6958
   55B02:	0018      	ld         x, #+0x0
   55B03:	002B      	st         x, @(0x0, y)
   55B04:	FB00      	**prefx    0xFB
   55B05:	E000      	**prefx    0xE0
   55B06:	F89C      	bsr        -0x52008 <LsStoreAdvScanData:0x3AFE[p]>
   55B07:	031B      	ld         x, @(+0x3, y)
   55B08:	6900      	**prefx    0x69
   55B09:	573A      	add        x, @(+0x6957, x)
   55B0A:	0138      	add        x, #+0x1
   55B0B:	032B      	st         x, @(+0x3, y)
   55B0C:	1E88      	cmp        x, #+0x1E
   55B0D:	EE2C      	bcz        -0x12 <___libcsrmesh_406+0x43:0x55AFB[p]>
   55B0E:	5A00      	**prefx    0x5A
   55B0F:	4A14      	ld         al, #+0x5A4A
   55B10:	0127      	st         al, @(+0x1, y)
   55B11:	0518      	ld         x, #+0x5
   55B12:	002B      	st         x, @(0x0, y)
   55B13:	6900      	**prefx    0x69
   55B14:	3314      	ld         al, #+0x6933
   55B15:	0227      	st         al, @(+0x2, y)
   55B16:	0010      	ld         ah, #+0x0
   55B17:	3B00      	**prefx    0x3B
   55B18:	9814      	ld         al, #+0x3A98
   55B19:	0300      	**prefx    0x3
   55B1A:	8B9C      	bsr        +0x28B <___libcsrmesh_365:0x55DA5[p]>
   55B1B:	6900      	**prefx    0x69
   55B1C:	4B15      	ld         al, @0x694B <g_scheduler_data+0x24>
   55B1D:	0484      	cmp        al, #+0x4
   55B1E:	08F0      	bne        +0x8 <___libcsrmesh_406+0x6E:0x55B26[p]>
   55B1F:	0014      	ld         al, #+0x0
   55B20:	0413      	ld         ah, @(+0x4, y)
   55B21:	FB00      	**prefx    0xFB
   55B22:	0F00      	**prefx    0xF
   55B23:	6F9C      	bsr        -0x4F091 <GattConnectReq:0x6A92[p]>
   55B24:	0318      	ld         x, #+0x3
   55B25:	0CE0      	bra        +0xC <___libcsrmesh_406+0x79:0x55B31[p]>
   55B26:	0284      	cmp        al, #+0x2
   55B27:	0CF0      	bne        +0xC <___libcsrmesh_406+0x7B:0x55B33[p]>
   55B28:	6900      	**prefx    0x69
   55B29:	4115      	ld         al, @0x6941 <g_scheduler_data+0x1A>
   55B2A:	0027      	st         al, @(0x0, y)
   55B2B:	0114      	ld         al, #+0x1
   55B2C:	0010      	ld         ah, #+0x0
   55B2D:	FB00      	**prefx    0xFB
   55B2E:	E000      	**prefx    0xE0
   55B2F:	E99C      	bsr        -0x52017 <LsStartStopAdvertise:0x3B18[p]>
   55B30:	0118      	ld         x, #+0x1
   55B31:	6900      	**prefx    0x69
   55B32:	4B29      	st         x, @0x694B <g_scheduler_data+0x24>
   55B33:	F90F      	leave      #-0x7

0x00055B34 <___libcsrmesh_408>:
   55B34:	FD0B      	enter      #-0x3
   55B35:	6900      	**prefx    0x69
   55B36:	4099      	tst        @0x6940 <g_scheduler_data+0x19>
   55B37:	03F4      	beq        +0x3 <___libcsrmesh_408+0x6:0x55B3A[p]>
   55B38:	0814      	ld         al, #+0x8
   55B39:	0DE0      	bra        +0xD <___libcsrmesh_408+0x12:0x55B46[p]>
   55B3A:	6900      	**prefx    0x69
   55B3B:	0814      	ld         al, #+0x6908
   55B3C:	E411      	ld         ah, @0xFFE4 <register uy>
   55B3D:	FC00      	**prefx    0xFC
   55B3E:	9E9C      	bsr        -0x462 <___libcsrmesh_351:0x556DC[p]>
   55B3F:	E111      	ld         ah, @0xFFE1 <register al>
   55B40:	03F0      	bne        +0x3 <___libcsrmesh_408+0xF:0x55B43[p]>
   55B41:	0614      	ld         al, #+0x6
   55B42:	04E0      	bra        +0x4 <___libcsrmesh_408+0x12:0x55B46[p]>
   55B43:	0017      	ld         al, @(0x0, y)
   55B44:	FE00      	**prefx    0xFE
   55B45:	439C      	bsr        -0x1BD <___libcsrmesh_407:0x55988[p]>
   55B46:	FD0F      	leave      #-0x3

0x00055B47 <___libcsrmesh_410>:
   55B47:	FE0B      	enter      #-0x2
   55B48:	6900      	**prefx    0x69
   55B49:	3385      	cmp        al, @0x6933 <g_scheduler_data+0xC>
   55B4A:	0FF0      	bne        +0xF <___libcsrmesh_410+0x12:0x55B59[p]>
   55B4B:	0014      	ld         al, #+0x0
   55B4C:	6900      	**prefx    0x69
   55B4D:	3325      	st         al, @0x6933 <g_scheduler_data+0xC>
   55B4E:	6900      	**prefx    0x69
   55B4F:	4B99      	tst        @0x694B <g_scheduler_data+0x24>
   55B50:	04F4      	beq        +0x4 <___libcsrmesh_410+0xD:0x55B54[p]>
   55B51:	FF00      	**prefx    0xFF
   55B52:	669C      	bsr        -0x9A <___libcsrmesh_406:0x55AB8[p]>
   55B53:	06E0      	bra        +0x6 <___libcsrmesh_410+0x12:0x55B59[p]>
   55B54:	FB00      	**prefx    0xFB
   55B55:	4B9C      	bsr        -0x4B5 <___libcsrmesh_350:0x556A0[p]>
   55B56:	E199      	tst        @0xFFE1 <register al>
   55B57:	02F0      	bne        +0x2 <___libcsrmesh_410+0x12:0x55B59[p]>
   55B58:	DC9C      	bsr        -0x24 <___libcsrmesh_408:0x55B34[p]>
   55B59:	FE0F      	leave      #-0x2

0x00055B5A <CSRSchedStart>:
   55B5A:	FE0B      	enter      #-0x2
   55B5B:	6900      	**prefx    0x69
   55B5C:	4099      	tst        @0x6940 <g_scheduler_data+0x19>
   55B5D:	03F4      	beq        +0x3 <CSRSchedStart+0x6:0x55B60[p]>
   55B5E:	0814      	ld         al, #+0x8
   55B5F:	1EE0      	bra        +0x1E <CSRSchedStart+0x23:0x55B7D[p]>
   55B60:	6900      	**prefx    0x69
   55B61:	4299      	tst        @0x6942 <g_scheduler_data+0x1B>
   55B62:	04F0      	bne        +0x4 <CSRSchedStart+0xC:0x55B66[p]>
   55B63:	6900      	**prefx    0x69
   55B64:	4B99      	tst        @0x694B <g_scheduler_data+0x24>
   55B65:	17F4      	beq        +0x17 <CSRSchedStart+0x22:0x55B7C[p]>
   55B66:	6900      	**prefx    0x69
   55B67:	3E99      	tst        @0x693E <g_scheduler_data+0x17>
   55B68:	14F0      	bne        +0x14 <CSRSchedStart+0x22:0x55B7C[p]>
   55B69:	6900      	**prefx    0x69
   55B6A:	3399      	tst        @0x6933 <g_scheduler_data+0xC>
   55B6B:	11F0      	bne        +0x11 <CSRSchedStart+0x22:0x55B7C[p]>
   55B6C:	6900      	**prefx    0x69
   55B6D:	4B99      	tst        @0x694B <g_scheduler_data+0x24>
   55B6E:	04F4      	beq        +0x4 <CSRSchedStart+0x18:0x55B72[p]>
   55B6F:	FF00      	**prefx    0xFF
   55B70:	489C      	bsr        -0xB8 <___libcsrmesh_406:0x55AB8[p]>
   55B71:	09E0      	bra        +0x9 <CSRSchedStart+0x20:0x55B7A[p]>
   55B72:	FB00      	**prefx    0xFB
   55B73:	2D9C      	bsr        -0x4D3 <___libcsrmesh_350:0x556A0[p]>
   55B74:	E199      	tst        @0xFFE1 <register al>
   55B75:	03F0      	bne        +0x3 <CSRSchedStart+0x1E:0x55B78[p]>
   55B76:	BE9C      	bsr        -0x42 <___libcsrmesh_408:0x55B34[p]>
   55B77:	03E0      	bra        +0x3 <CSRSchedStart+0x20:0x55B7A[p]>
   55B78:	FD00      	**prefx    0xFD
   55B79:	A19C      	bsr        -0x35F <___libcsrmesh_405:0x5581A[p]>
   55B7A:	0014      	ld         al, #+0x0
   55B7B:	02E0      	bra        +0x2 <CSRSchedStart+0x23:0x55B7D[p]>
   55B7C:	FF14      	ld         al, #-0x1
   55B7D:	FE0F      	leave      #-0x2

0x00055B7E <CSRSchedNotifyGattEvent>:
   55B7E:	AE0B      	enter      #-0x52
   55B7F:	4F23      	st         ah, @(+0x4F, y)
   55B80:	5213      	ld         ah, @(+0x52, y)
   55B81:	531B      	ld         x, @(+0x53, y)
   55B82:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55B83:	0184      	cmp        al, #+0x1
   55B84:	5DF0      	bne        +0x5D <CSRSchedNotifyGattEvent+0x63:0x55BE1[p]>
   55B85:	0010      	ld         ah, #+0x0
   55B86:	6900      	**prefx    0x69
   55B87:	4021      	st         ah, @0x6940 <g_scheduler_data+0x19>
   55B88:	6900      	**prefx    0x69
   55B89:	3799      	tst        @0x6937 <g_scheduler_data+0x10>
   55B8A:	05F4      	beq        +0x5 <CSRSchedNotifyGattEvent+0x11:0x55B8F[p]>
   55B8B:	6900      	**prefx    0x69
   55B8C:	3714      	ld         al, #+0x6937
   55B8D:	0200      	**prefx    0x2
   55B8E:	0C9C      	bsr        +0x20C <___libcsrmesh_366:0x55D9A[p]>
   55B8F:	4F9B      	tst        @(+0x4F, y)
   55B90:	35F4      	beq        +0x35 <CSRSchedNotifyGattEvent+0x47:0x55BC5[p]>
   55B91:	4F1B      	ld         x, @(+0x4F, y)
   55B92:	0116      	ld         al, @(+0x1, x)
   55B93:	6900      	**prefx    0x69
   55B94:	4425      	st         al, @0x6944 <g_scheduler_data+0x1D>
   55B95:	0012      	ld         ah, @(0x0, x)
   55B96:	6900      	**prefx    0x69
   55B97:	3D21      	st         ah, @0x693D <g_scheduler_data+0x16>
   55B98:	6900      	**prefx    0x69
   55B99:	9325      	st         al, @0x6893 <event_data.2820.+0x27>
   55B9A:	4E14      	ld         al, #+0x4E
   55B9B:	E411      	ld         ah, @0xFFE4 <register uy>
   55B9C:	6800      	**prefx    0x68
   55B9D:	6C18      	ld         x, #+0x686C
   55B9E:	FD09      	bc2        
   55B9F:	4E14      	ld         al, #+0x4E
   55BA0:	4E27      	st         al, @(+0x4E, y)
   55BA1:	0214      	ld         al, #+0x2
   55BA2:	FA00      	**prefx    0xFA
   55BA3:	D69C      	bsr        -0x62A <___libcsrmesh_330:0x55579[p]>
   55BA4:	4F1B      	ld         x, @(+0x4F, y)
   55BA5:	021A      	ld         x, @(+0x2, x)
   55BA6:	E315      	ld         al, @0xFFE3 <register uxl>
   55BA7:	0009      	**unsigned
   55BA8:	0500      	**prefx    0x5
   55BA9:	E290      	umult      #0x4E2
   55BAA:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55BAB:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   55BAC:	6900      	**prefx    0x69
   55BAD:	3C25      	st         al, @0x693C <g_scheduler_data+0x15>
   55BAE:	6900      	**prefx    0x69
   55BAF:	3B21      	st         ah, @0x693B <g_scheduler_data+0x14>
   55BB0:	F899      	tst        @0xFFF8 <(scratchpad)>
   55BB1:	04F0      	bne        +0x4 <CSRSchedNotifyGattEvent+0x37:0x55BB5[p]>
   55BB2:	3300      	**prefx    0x33
   55BB3:	C984      	cmp        al, #+0x32C9
   55BB4:	0BFC      	bcs        +0xB <CSRSchedNotifyGattEvent+0x41:0x55BBF[p]>
   55BB5:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   55BB6:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   55BB7:	D900      	**prefx    0xD9
   55BB8:	F034      	add        al, #-0x2710
   55BB9:	FF40      	addc       ah, #-0x1
   55BBA:	6900      	**prefx    0x69
   55BBB:	3A25      	st         al, @0x693A <g_scheduler_data+0x13>
   55BBC:	6900      	**prefx    0x69
   55BBD:	3921      	st         ah, @0x6939 <g_scheduler_data+0x12>
   55BBE:	19E0      	bra        +0x19 <CSRSchedNotifyGattEvent+0x59:0x55BD7[p]>
   55BBF:	0010      	ld         ah, #+0x0
   55BC0:	6900      	**prefx    0x69
   55BC1:	3921      	st         ah, @0x6939 <g_scheduler_data+0x12>
   55BC2:	6900      	**prefx    0x69
   55BC3:	3A21      	st         ah, @0x693A <g_scheduler_data+0x13>
   55BC4:	13E0      	bra        +0x13 <CSRSchedNotifyGattEvent+0x59:0x55BD7[p]>
   55BC5:	0014      	ld         al, #+0x0
   55BC6:	6900      	**prefx    0x69
   55BC7:	4425      	st         al, @0x6944 <g_scheduler_data+0x1D>
   55BC8:	6900      	**prefx    0x69
   55BC9:	9325      	st         al, @0x6893 <event_data.2820.+0x27>
   55BCA:	4E14      	ld         al, #+0x4E
   55BCB:	E411      	ld         ah, @0xFFE4 <register uy>
   55BCC:	6800      	**prefx    0x68
   55BCD:	6C18      	ld         x, #+0x686C
   55BCE:	FD09      	bc2        
   55BCF:	4E18      	ld         x, #+0x4E
   55BD0:	4E2B      	st         x, @(+0x4E, y)
   55BD1:	0214      	ld         al, #+0x2
   55BD2:	FA00      	**prefx    0xFA
   55BD3:	A69C      	bsr        -0x65A <___libcsrmesh_330:0x55579[p]>
   55BD4:	0010      	ld         ah, #+0x0
   55BD5:	6900      	**prefx    0x69
   55BD6:	3E21      	st         ah, @0x693E <g_scheduler_data+0x17>
   55BD7:	839C      	bsr        -0x7D <CSRSchedStart:0x55B5A[p]>
   55BD8:	6900      	**prefx    0x69
   55BD9:	3414      	ld         al, #+0x6934
   55BDA:	0200      	**prefx    0x2
   55BDB:	BF9C      	bsr        +0x1BF <___libcsrmesh_366:0x55D9A[p]>
   55BDC:	6900      	**prefx    0x69
   55BDD:	3614      	ld         al, #+0x6936
   55BDE:	0200      	**prefx    0x2
   55BDF:	BB9C      	bsr        +0x1BB <___libcsrmesh_366:0x55D9A[p]>
   55BE0:	4BE0      	bra        +0x4B <CSRSchedNotifyGattEvent+0xAD:0x55C2B[p]>
   55BE1:	E199      	tst        @0xFFE1 <register al>
   55BE2:	2FF0      	bne        +0x2F <CSRSchedNotifyGattEvent+0x93:0x55C11[p]>
   55BE3:	FB00      	**prefx    0xFB
   55BE4:	D000      	**prefx    0xD0
   55BE5:	819C      	bsr        -0x5307F <TimeGet32:0x2B66[p]>
   55BE6:	6900      	**prefx    0x69
   55BE7:	4625      	st         al, @0x6946 <g_scheduler_data+0x1F>
   55BE8:	6900      	**prefx    0x69
   55BE9:	4521      	st         ah, @0x6945 <g_scheduler_data+0x1E>
   55BEA:	6900      	**prefx    0x69
   55BEB:	3414      	ld         al, #+0x6934
   55BEC:	0200      	**prefx    0x2
   55BED:	AD9C      	bsr        +0x1AD <___libcsrmesh_366:0x55D9A[p]>
   55BEE:	6900      	**prefx    0x69
   55BEF:	3614      	ld         al, #+0x6936
   55BF0:	0200      	**prefx    0x2
   55BF1:	A99C      	bsr        +0x1A9 <___libcsrmesh_366:0x55D9A[p]>
   55BF2:	5C00      	**prefx    0x5C
   55BF3:	3914      	ld         al, #+0x5C39
   55BF4:	0127      	st         al, @(+0x1, y)
   55BF5:	0518      	ld         x, #+0x5
   55BF6:	002B      	st         x, @(0x0, y)
   55BF7:	6900      	**prefx    0x69
   55BF8:	3410      	ld         ah, #+0x6934
   55BF9:	0223      	st         ah, @(+0x2, y)
   55BFA:	0010      	ld         ah, #+0x0
   55BFB:	0C00      	**prefx    0xC
   55BFC:	B814      	ld         al, #+0xBB8
   55BFD:	0200      	**prefx    0x2
   55BFE:	A79C      	bsr        +0x1A7 <___libcsrmesh_365:0x55DA5[p]>
   55BFF:	6900      	**prefx    0x69
   55C00:	3C15      	ld         al, @0x693C <g_scheduler_data+0x15>
   55C01:	6900      	**prefx    0x69
   55C02:	3B11      	ld         ah, @0x693B <g_scheduler_data+0x14>
   55C03:	0C00      	**prefx    0xC
   55C04:	B834      	add        al, #+0xBB8
   55C05:	0040      	addc       ah, #+0x0
   55C06:	5C00      	**prefx    0x5C
   55C07:	2C18      	ld         x, #+0x5C2C
   55C08:	012B      	st         x, @(+0x1, y)
   55C09:	0518      	ld         x, #+0x5
   55C0A:	002B      	st         x, @(0x0, y)
   55C0B:	6900      	**prefx    0x69
   55C0C:	3618      	ld         x, #+0x6936
   55C0D:	022B      	st         x, @(+0x2, y)
   55C0E:	0200      	**prefx    0x2
   55C0F:	969C      	bsr        +0x196 <___libcsrmesh_365:0x55DA5[p]>
   55C10:	1BE0      	bra        +0x1B <CSRSchedNotifyGattEvent+0xAD:0x55C2B[p]>
   55C11:	0284      	cmp        al, #+0x2
   55C12:	11F0      	bne        +0x11 <CSRSchedNotifyGattEvent+0xA5:0x55C23[p]>
   55C13:	4F1B      	ld         x, @(+0x4F, y)
   55C14:	039A      	tst        @(+0x3, x)
   55C15:	03F0      	bne        +0x3 <CSRSchedNotifyGattEvent+0x9A:0x55C18[p]>
   55C16:	0010      	ld         ah, #+0x0
   55C17:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   55C18:	6900      	**prefx    0x69
   55C19:	4921      	st         ah, @0x6949 <g_scheduler_data+0x22>
   55C1A:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   55C1B:	6900      	**prefx    0x69
   55C1C:	4A25      	st         al, @0x694A <g_scheduler_data+0x23>
   55C1D:	4F1B      	ld         x, @(+0x4F, y)
   55C1E:	001A      	ld         x, @(0x0, x)
   55C1F:	002B      	st         x, @(0x0, y)
   55C20:	F900      	**prefx    0xF9
   55C21:	479C      	bsr        -0x6B9 <___libcsrmesh_337:0x55568[p]>
   55C22:	09E0      	bra        +0x9 <CSRSchedNotifyGattEvent+0xAD:0x55C2B[p]>
   55C23:	0384      	cmp        al, #+0x3
   55C24:	07F0      	bne        +0x7 <CSRSchedNotifyGattEvent+0xAD:0x55C2B[p]>
   55C25:	6900      	**prefx    0x69
   55C26:	3414      	ld         al, #+0x6934
   55C27:	0100      	**prefx    0x1
   55C28:	729C      	bsr        +0x172 <___libcsrmesh_366:0x55D9A[p]>
   55C29:	FC00      	**prefx    0xFC
   55C2A:	DE9C      	bsr        -0x422 <___libcsrmesh_404:0x55808[p]>
   55C2B:	AE0F      	leave      #-0x52

0x00055C2C <___libcsrmesh_409>:
   55C2C:	FC0B      	enter      #-0x4
   55C2D:	6900      	**prefx    0x69
   55C2E:	3685      	cmp        al, @0x6936 <g_scheduler_data+0xF>
   55C2F:	09F0      	bne        +0x9 <___libcsrmesh_409+0xC:0x55C38[p]>
   55C30:	0014      	ld         al, #+0x0
   55C31:	6900      	**prefx    0x69
   55C32:	3625      	st         al, @0x6936 <g_scheduler_data+0xF>
   55C33:	0027      	st         al, @(0x0, y)
   55C34:	0127      	st         al, @(+0x1, y)
   55C35:	0010      	ld         ah, #+0x0
   55C36:	FF00      	**prefx    0xFF
   55C37:	479C      	bsr        -0xB9 <CSRSchedNotifyGattEvent:0x55B7E[p]>
   55C38:	FC0F      	leave      #-0x4

0x00055C39 <___libcsrmesh_401>:
   55C39:	FE0B      	enter      #-0x2
   55C3A:	6900      	**prefx    0x69
   55C3B:	3485      	cmp        al, @0x6934 <g_scheduler_data+0xD>
   55C3C:	1FF0      	bne        +0x1F <___libcsrmesh_401+0x22:0x55C5B[p]>
   55C3D:	0014      	ld         al, #+0x0
   55C3E:	6900      	**prefx    0x69
   55C3F:	3425      	st         al, @0x6934 <g_scheduler_data+0xD>
   55C40:	6900      	**prefx    0x69
   55C41:	3E25      	st         al, @0x693E <g_scheduler_data+0x17>
   55C42:	6900      	**prefx    0x69
   55C43:	3F99      	tst        @0x693F <g_scheduler_data+0x18>
   55C44:	12F4      	beq        +0x12 <___libcsrmesh_401+0x1D:0x55C56[p]>
   55C45:	6A00      	**prefx    0x6A
   55C46:	9A15      	ld         al, @0x699A <___libgatt_lib_db_711>
   55C47:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55C48:	6A00      	**prefx    0x6A
   55C49:	9915      	ld         al, @0x6999 <___libgatt_lib_db_710+0x12>
   55C4A:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55C4B:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   55C4C:	0AF4      	beq        +0xA <___libcsrmesh_401+0x1D:0x55C56[p]>
   55C4D:	0014      	ld         al, #+0x0
   55C4E:	6900      	**prefx    0x69
   55C4F:	3F25      	st         al, @0x693F <g_scheduler_data+0x18>
   55C50:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   55C51:	FE27      	st         al, @(-0x2, y)
   55C52:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   55C53:	FF27      	st         al, @(-0x1, y)
   55C54:	FF0E      	ld         xh, @(-0x1, y)
   55C55:	FE9F      	bsr        @(-0x2, y)
   55C56:	001B      	ld         x, @(0x0, y)
   55C57:	010E      	ld         xh, @(+0x1, y)
   55C58:	023C      	add        y, #+0x2
   55C59:	FF00      	**prefx    0xFF
   55C5A:	00E0      	bra        -0x100 <CSRSchedStart:0x55B5A[p]>
   55C5B:	FE0F      	leave      #-0x2

0x00055C5C <CSRSchedSendUserAdv>:
   55C5C:	015C      	sub        y, #+0x1
   55C5D:	FE0B      	enter      #-0x2
   55C5E:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55C5F:	0223      	st         ah, @(+0x2, y)
   55C60:	0317      	ld         al, @(+0x3, y)
   55C61:	FA25      	st         al, @0xFFFA <(scratchpad)>
   55C62:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   55C63:	F899      	tst        @0xFFF8 <(scratchpad)>
   55C64:	3BF4      	beq        +0x3B <CSRSchedSendUserAdv+0x43:0x55C9F[p]>
   55C65:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55C66:	2A16      	ld         al, @(+0x2A, x)
   55C67:	FF34      	add        al, #-0x1
   55C68:	1F84      	cmp        al, #+0x1F
   55C69:	36F8      	bcc        +0x36 <CSRSchedSendUserAdv+0x43:0x55C9F[p]>
   55C6A:	4A16      	ld         al, @(+0x4A, x)
   55C6B:	2084      	cmp        al, #+0x20
   55C6C:	33F8      	bcc        +0x33 <CSRSchedSendUserAdv+0x43:0x55C9F[p]>
   55C6D:	0716      	ld         al, @(+0x7, x)
   55C6E:	0184      	cmp        al, #+0x1
   55C6F:	03F0      	bne        +0x3 <CSRSchedSendUserAdv+0x16:0x55C72[p]>
   55C70:	0214      	ld         al, #+0x2
   55C71:	09E0      	bra        +0x9 <CSRSchedSendUserAdv+0x1E:0x55C7A[p]>
   55C72:	FE34      	add        al, #-0x2
   55C73:	0284      	cmp        al, #+0x2
   55C74:	05F8      	bcc        +0x5 <CSRSchedSendUserAdv+0x1D:0x55C79[p]>
   55C75:	0418      	ld         x, #+0x4
   55C76:	6900      	**prefx    0x69
   55C77:	4B29      	st         x, @0x694B <g_scheduler_data+0x24>
   55C78:	04E0      	bra        +0x4 <CSRSchedSendUserAdv+0x20:0x55C7C[p]>
   55C79:	0014      	ld         al, #+0x0
   55C7A:	6900      	**prefx    0x69
   55C7B:	4B25      	st         al, @0x694B <g_scheduler_data+0x24>
   55C7C:	6900      	**prefx    0x69
   55C7D:	4B99      	tst        @0x694B <g_scheduler_data+0x24>
   55C7E:	21F4      	beq        +0x21 <CSRSchedSendUserAdv+0x43:0x55C9F[p]>
   55C7F:	0B14      	ld         al, #+0xB
   55C80:	6900      	**prefx    0x69
   55C81:	4C10      	ld         ah, #+0x694C
   55C82:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55C83:	FD09      	bc2        
   55C84:	FB29      	st         x, @0xFFFB <(scratchpad)>
   55C85:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55C86:	2A16      	ld         al, @(+0x2A, x)
   55C87:	6900      	**prefx    0x69
   55C88:	5710      	ld         ah, #+0x6957
   55C89:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   55C8A:	FD09      	bc2        
   55C8B:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55C8C:	4A16      	ld         al, @(+0x4A, x)
   55C8D:	05F4      	beq        +0x5 <CSRSchedSendUserAdv+0x36:0x55C92[p]>
   55C8E:	2B38      	add        x, #+0x2B
   55C8F:	6900      	**prefx    0x69
   55C90:	7710      	ld         ah, #+0x6977
   55C91:	FD09      	bc2        
   55C92:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   55C93:	6A00      	**prefx    0x6A
   55C94:	9825      	st         al, @0x6998 <___libgatt_lib_db_710+0x11>
   55C95:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55C96:	6A00      	**prefx    0x6A
   55C97:	9729      	st         x, @0x6997 <___libgatt_lib_db_710+0x10>
   55C98:	6900      	**prefx    0x69
   55C99:	3399      	tst        @0x6933 <g_scheduler_data+0xC>
   55C9A:	03F0      	bne        +0x3 <CSRSchedSendUserAdv+0x41:0x55C9D[p]>
   55C9B:	FF00      	**prefx    0xFF
   55C9C:	BE9C      	bsr        -0x142 <CSRSchedStart:0x55B5A[p]>
   55C9D:	0014      	ld         al, #+0x0
   55C9E:	02E0      	bra        +0x2 <CSRSchedSendUserAdv+0x44:0x55CA0[p]>
   55C9F:	FF14      	ld         al, #-0x1
   55CA0:	033C      	add        y, #+0x3
   55CA1:	FE0E      	ld         xh, @(-0x2, y)
   55CA2:	FDE3      	bra        @(-0x3, y)

0x00055CA3 <CSRSchedGetConfigParams>:
   55CA3:	F70B      	enter      #-0x9
   55CA4:	0627      	st         al, @(+0x6, y)
   55CA5:	03F0      	bne        +0x3 <CSRSchedGetConfigParams+0x5:0x55CA8[p]>
   55CA6:	FF14      	ld         al, #-0x1
   55CA7:	3CE0      	bra        +0x3C <CSRSchedGetConfigParams+0x40:0x55CE3[p]>
   55CA8:	6900      	**prefx    0x69
   55CA9:	4115      	ld         al, @0x6941 <g_scheduler_data+0x1A>
   55CAA:	061B      	ld         x, @(+0x6, y)
   55CAB:	0E26      	st         al, @(+0xE, x)
   55CAC:	6900      	**prefx    0x69
   55CAD:	2F11      	ld         ah, @0x692F <g_scheduler_data+0x8>
   55CAE:	6900      	**prefx    0x69
   55CAF:	3015      	ld         al, @0x6930 <g_scheduler_data+0x9>
   55CB0:	0B26      	st         al, @(+0xB, x)
   55CB1:	0A22      	st         ah, @(+0xA, x)
   55CB2:	6900      	**prefx    0x69
   55CB3:	3111      	ld         ah, @0x6931 <g_scheduler_data+0xA>
   55CB4:	6900      	**prefx    0x69
   55CB5:	3215      	ld         al, @0x6932 <g_scheduler_data+0xB>
   55CB6:	0D26      	st         al, @(+0xD, x)
   55CB7:	0C22      	st         ah, @(+0xC, x)
   55CB8:	0516      	ld         al, @(+0x5, x)
   55CB9:	0184      	cmp        al, #+0x1
   55CBA:	09F0      	bne        +0x9 <CSRSchedGetConfigParams+0x20:0x55CC3[p]>
   55CBB:	FB00      	**prefx    0xFB
   55CBC:	2C9C      	bsr        -0x4D4 <CSRSchedGetScanDutyCycle:0x557E8[p]>
   55CBD:	061B      	ld         x, @(+0x6, y)
   55CBE:	0626      	st         al, @(+0x6, x)
   55CBF:	6900      	**prefx    0x69
   55CC0:	2B15      	ld         al, @0x692B <g_scheduler_data+0x4>
   55CC1:	0726      	st         al, @(+0x7, x)
   55CC2:	10E0      	bra        +0x10 <CSRSchedGetConfigParams+0x2F:0x55CD2[p]>
   55CC3:	E199      	tst        @0xFFE1 <register al>
   55CC4:	0EF0      	bne        +0xE <CSRSchedGetConfigParams+0x2F:0x55CD2[p]>
   55CC5:	6900      	**prefx    0x69
   55CC6:	2711      	ld         ah, @0x6927 <g_scheduler_data>
   55CC7:	6900      	**prefx    0x69
   55CC8:	2815      	ld         al, @0x6928 <g_scheduler_data+0x1>
   55CC9:	061B      	ld         x, @(+0x6, y)
   55CCA:	0926      	st         al, @(+0x9, x)
   55CCB:	0822      	st         ah, @(+0x8, x)
   55CCC:	6900      	**prefx    0x69
   55CCD:	2911      	ld         ah, @0x6929 <g_scheduler_data+0x2>
   55CCE:	6900      	**prefx    0x69
   55CCF:	2A15      	ld         al, @0x692A <g_scheduler_data+0x3>
   55CD0:	0726      	st         al, @(+0x7, x)
   55CD1:	0622      	st         ah, @(+0x6, x)
   55CD2:	F82D      	st         y, @0xFFF8 <(scratchpad)>
   55CD3:	F900      	**prefx    0xF9
   55CD4:	CA9C      	bsr        -0x736 <___libcsrmesh_336:0x5559E[p]>
   55CD5:	0017      	ld         al, @(0x0, y)
   55CD6:	061B      	ld         x, @(+0x6, y)
   55CD7:	0026      	st         al, @(0x0, x)
   55CD8:	0517      	ld         al, @(+0x5, y)
   55CD9:	0326      	st         al, @(+0x3, x)
   55CDA:	0417      	ld         al, @(+0x4, y)
   55CDB:	0226      	st         al, @(+0x2, x)
   55CDC:	0217      	ld         al, @(+0x2, y)
   55CDD:	0126      	st         al, @(+0x1, x)
   55CDE:	FA00      	**prefx    0xFA
   55CDF:	FA9C      	bsr        -0x606 <___libcsrmesh_354:0x556D9[p]>
   55CE0:	061B      	ld         x, @(+0x6, y)
   55CE1:	0426      	st         al, @(+0x4, x)
   55CE2:	0014      	ld         al, #+0x0
   55CE3:	F70F      	leave      #-0x9

0x00055CE4 <CSRSchedSetConfigParams>:
   55CE4:	AE0B      	enter      #-0x52
   55CE5:	4F27      	st         al, @(+0x4F, y)
   55CE6:	67F4      	beq        +0x67 <CSRSchedSetConfigParams+0x69:0x55D4D[p]>
   55CE7:	4F1B      	ld         x, @(+0x4F, y)
   55CE8:	0516      	ld         al, @(+0x5, x)
   55CE9:	0184      	cmp        al, #+0x1
   55CEA:	0BF0      	bne        +0xB <CSRSchedSetConfigParams+0x11:0x55CF5[p]>
   55CEB:	0616      	ld         al, @(+0x6, x)
   55CEC:	6900      	**prefx    0x69
   55CED:	2C25      	st         al, @0x692C <g_scheduler_data+0x5>
   55CEE:	0712      	ld         ah, @(+0x7, x)
   55CEF:	6900      	**prefx    0x69
   55CF0:	2B21      	st         ah, @0x692B <g_scheduler_data+0x4>
   55CF1:	FB00      	**prefx    0xFB
   55CF2:	7F9C      	bsr        -0x481 <CSRSchedSetScanDutyCycle:0x55871[p]>
   55CF3:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55CF4:	16E0      	bra        +0x16 <CSRSchedSetConfigParams+0x26:0x55D0A[p]>
   55CF5:	E199      	tst        @0xFFE1 <register al>
   55CF6:	57F0      	bne        +0x57 <CSRSchedSetConfigParams+0x69:0x55D4D[p]>
   55CF7:	6900      	**prefx    0x69
   55CF8:	2718      	ld         x, #+0x6927
   55CF9:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55CFA:	4F1B      	ld         x, @(+0x4F, y)
   55CFB:	0812      	ld         ah, @(+0x8, x)
   55CFC:	0916      	ld         al, @(+0x9, x)
   55CFD:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55CFE:	0126      	st         al, @(+0x1, x)
   55CFF:	6900      	**prefx    0x69
   55D00:	2721      	st         ah, @0x6927 <g_scheduler_data>
   55D01:	4F1B      	ld         x, @(+0x4F, y)
   55D02:	0612      	ld         ah, @(+0x6, x)
   55D03:	0716      	ld         al, @(+0x7, x)
   55D04:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55D05:	0326      	st         al, @(+0x3, x)
   55D06:	6900      	**prefx    0x69
   55D07:	2921      	st         ah, @0x6929 <g_scheduler_data+0x2>
   55D08:	0018      	ld         x, #+0x0
   55D09:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55D0A:	6900      	**prefx    0x69
   55D0B:	2F14      	ld         al, #+0x692F
   55D0C:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55D0D:	4F1B      	ld         x, @(+0x4F, y)
   55D0E:	0A12      	ld         ah, @(+0xA, x)
   55D0F:	0B16      	ld         al, @(+0xB, x)
   55D10:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55D11:	0126      	st         al, @(+0x1, x)
   55D12:	6900      	**prefx    0x69
   55D13:	2F21      	st         ah, @0x692F <g_scheduler_data+0x8>
   55D14:	4F1B      	ld         x, @(+0x4F, y)
   55D15:	0C12      	ld         ah, @(+0xC, x)
   55D16:	0D16      	ld         al, @(+0xD, x)
   55D17:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55D18:	0326      	st         al, @(+0x3, x)
   55D19:	6900      	**prefx    0x69
   55D1A:	3121      	st         ah, @0x6931 <g_scheduler_data+0xA>
   55D1B:	4F1B      	ld         x, @(+0x4F, y)
   55D1C:	0E1A      	ld         x, @(+0xE, x)
   55D1D:	6900      	**prefx    0x69
   55D1E:	4129      	st         x, @0x6941 <g_scheduler_data+0x1A>
   55D1F:	0114      	ld         al, #+0x1
   55D20:	6900      	**prefx    0x69
   55D21:	4325      	st         al, @0x6943 <g_scheduler_data+0x1C>
   55D22:	4F1B      	ld         x, @(+0x4F, y)
   55D23:	0016      	ld         al, @(0x0, x)
   55D24:	0184      	cmp        al, #+0x1
   55D25:	30F0      	bne        +0x30 <CSRSchedSetConfigParams+0x71:0x55D55[p]>
   55D26:	0416      	ld         al, @(+0x4, x)
   55D27:	2BF4      	beq        +0x2B <CSRSchedSetConfigParams+0x6E:0x55D52[p]>
   55D28:	019A      	tst        @(+0x1, x)
   55D29:	29F4      	beq        +0x29 <CSRSchedSetConfigParams+0x6E:0x55D52[p]>
   55D2A:	FA00      	**prefx    0xFA
   55D2B:	AB9C      	bsr        -0x655 <___libcsrmesh_355:0x556D6[p]>
   55D2C:	4F1B      	ld         x, @(+0x4F, y)
   55D2D:	0316      	ld         al, @(+0x3, x)
   55D2E:	02F0      	bne        +0x2 <CSRSchedSetConfigParams+0x4C:0x55D30[p]>
   55D2F:	0514      	ld         al, #+0x5
   55D30:	6900      	**prefx    0x69
   55D31:	C025      	st         al, @0x68C0 <event_data.2535.+0x6>
   55D32:	4F1B      	ld         x, @(+0x4F, y)
   55D33:	0216      	ld         al, @(+0x2, x)
   55D34:	02F0      	bne        +0x2 <CSRSchedSetConfigParams+0x52:0x55D36[p]>
   55D35:	0214      	ld         al, #+0x2
   55D36:	6900      	**prefx    0x69
   55D37:	BF25      	st         al, @0x68BF <event_data.2535.+0x5>
   55D38:	4F1B      	ld         x, @(+0x4F, y)
   55D39:	011A      	ld         x, @(+0x1, x)
   55D3A:	6900      	**prefx    0x69
   55D3B:	BD29      	st         x, @0x68BD <event_data.2535.+0x3>
   55D3C:	0114      	ld         al, #+0x1
   55D3D:	6900      	**prefx    0x69
   55D3E:	BB25      	st         al, @0x68BB <event_data.2535.+0x1>
   55D3F:	6900      	**prefx    0x69
   55D40:	4225      	st         al, @0x6942 <g_scheduler_data+0x1B>
   55D41:	4E14      	ld         al, #+0x4E
   55D42:	E411      	ld         ah, @0xFFE4 <register uy>
   55D43:	6900      	**prefx    0x69
   55D44:	BA18      	ld         x, #+0x68BA
   55D45:	FD09      	bc2        
   55D46:	4E18      	ld         x, #+0x4E
   55D47:	4E2B      	st         x, @(+0x4E, y)
   55D48:	0114      	ld         al, #+0x1
   55D49:	F800      	**prefx    0xF8
   55D4A:	2F9C      	bsr        -0x7D1 <___libcsrmesh_330:0x55579[p]>
   55D4B:	E199      	tst        @0xFFE1 <register al>
   55D4C:	03F4      	beq        +0x3 <CSRSchedSetConfigParams+0x6B:0x55D4F[p]>
   55D4D:	FF14      	ld         al, #-0x1
   55D4E:	05E0      	bra        +0x5 <CSRSchedSetConfigParams+0x6F:0x55D53[p]>
   55D4F:	0018      	ld         x, #+0x0
   55D50:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55D51:	07E0      	bra        +0x7 <CSRSchedSetConfigParams+0x74:0x55D58[p]>
   55D52:	0914      	ld         al, #+0x9
   55D53:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55D54:	04E0      	bra        +0x4 <CSRSchedSetConfigParams+0x74:0x55D58[p]>
   55D55:	0018      	ld         x, #+0x0
   55D56:	6900      	**prefx    0x69
   55D57:	4229      	st         x, @0x6942 <g_scheduler_data+0x1B>
   55D58:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   55D59:	AE0F      	leave      #-0x52

0x00055D5A <CsrSchedSetTxPower>:
   55D5A:	1084      	cmp        al, #+0x10
   55D5B:	04F8      	bcc        +0x4 <CsrSchedSetTxPower+0x5:0x55D5F[p]>
   55D5C:	FB00      	**prefx    0xFB
   55D5D:	DD00      	**prefx    0xDD
   55D5E:	3FE0      	bra        -0x522C1 <LsSetTransmitPowerLevel:0x3A9D[p]>
   55D5F:	00E2      	bra        0x0, x

0x00055D60 <CSRSchedEnableRadioEvent>:
   55D60:	FE0B      	enter      #-0x2
   55D61:	6900      	**prefx    0x69
   55D62:	4499      	tst        @0x6944 <g_scheduler_data+0x1D>
   55D63:	0EF4      	beq        +0xE <CSRSchedEnableRadioEvent+0x11:0x55D71[p]>
   55D64:	6900      	**prefx    0x69
   55D65:	3D15      	ld         al, @0x693D <g_scheduler_data+0x16>
   55D66:	0210      	ld         ah, #+0x2
   55D67:	FB00      	**prefx    0xFB
   55D68:	DD00      	**prefx    0xDD
   55D69:	2C9C      	bsr        -0x522D4 <LsRadioEventNotification:0x3A95[p]>
   55D6A:	6900      	**prefx    0x69
   55D6B:	3D15      	ld         al, @0x693D <g_scheduler_data+0x16>
   55D6C:	1D00      	**prefx    0x1D
   55D6D:	4C10      	ld         ah, #+0x1D4C
   55D6E:	FB00      	**prefx    0xFB
   55D6F:	DD00      	**prefx    0xDD
   55D70:	239C      	bsr        -0x522DD <LsEnableEarlyWakeup:0x3A93[p]>
   55D71:	FE0F      	leave      #-0x2

0x00055D72 <CSRSchedDisableRadioEvent>:
   55D72:	FE0B      	enter      #-0x2
   55D73:	6900      	**prefx    0x69
   55D74:	4499      	tst        @0x6944 <g_scheduler_data+0x1D>
   55D75:	0DF4      	beq        +0xD <CSRSchedDisableRadioEvent+0x10:0x55D82[p]>
   55D76:	6900      	**prefx    0x69
   55D77:	3D15      	ld         al, @0x693D <g_scheduler_data+0x16>
   55D78:	0010      	ld         ah, #+0x0
   55D79:	FB00      	**prefx    0xFB
   55D7A:	DD00      	**prefx    0xDD
   55D7B:	189C      	bsr        -0x522E8 <LsEnableEarlyWakeup:0x3A93[p]>
   55D7C:	6900      	**prefx    0x69
   55D7D:	3D15      	ld         al, @0x693D <g_scheduler_data+0x16>
   55D7E:	0010      	ld         ah, #+0x0
   55D7F:	FB00      	**prefx    0xFB
   55D80:	DD00      	**prefx    0xDD
   55D81:	149C      	bsr        -0x522EC <LsRadioEventNotification:0x3A95[p]>
   55D82:	FE0F      	leave      #-0x2

0x00055D83 <___libcsrmesh_363>:
   55D83:	FE0B      	enter      #-0x2
   55D84:	E119      	ld         x, @0xFFE1 <register al>
   55D85:	0016      	ld         al, @(0x0, x)
   55D86:	02F4      	beq        +0x2 <___libcsrmesh_363+0x5:0x55D88[p]>
   55D87:	0114      	ld         al, #+0x1
   55D88:	FE0F      	leave      #-0x2

0x00055D89 <___libcsrmesh_367>:
   55D89:	FE0B      	enter      #-0x2
   55D8A:	E119      	ld         x, @0xFFE1 <register al>
   55D8B:	0014      	ld         al, #+0x0
   55D8C:	0026      	st         al, @(0x0, x)
   55D8D:	FE0F      	leave      #-0x2

0x00055D8E <___libcsrmesh_362>:
   55D8E:	FE0B      	enter      #-0x2
   55D8F:	0018      	ld         x, #+0x0
   55D90:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55D91:	E119      	ld         x, @0xFFE1 <register al>
   55D92:	0016      	ld         al, @(0x0, x)
   55D93:	E019      	ld         x, @0xFFE0 <register ah>
   55D94:	0086      	cmp        al, @(0x0, x)
   55D95:	03F0      	bne        +0x3 <___libcsrmesh_362+0xA:0x55D98[p]>
   55D96:	0114      	ld         al, #+0x1
   55D97:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55D98:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   55D99:	FE0F      	leave      #-0x2

0x00055D9A <___libcsrmesh_366>:
   55D9A:	FD0B      	enter      #-0x3
   55D9B:	0027      	st         al, @(0x0, y)
   55D9C:	E119      	ld         x, @0xFFE1 <register al>
   55D9D:	0016      	ld         al, @(0x0, x)
   55D9E:	FC00      	**prefx    0xFC
   55D9F:	8F00      	**prefx    0x8F
   55DA0:	839C      	bsr        -0x4717D <TimerDelete:0xEC23[p]>
   55DA1:	0014      	ld         al, #+0x0
   55DA2:	001B      	ld         x, @(0x0, y)
   55DA3:	0026      	st         al, @(0x0, x)
   55DA4:	FD0F      	leave      #-0x3

0x00055DA5 <___libcsrmesh_365>:
   55DA5:	FB0B      	enter      #-0x5
   55DA6:	0118      	ld         x, #+0x1
   55DA7:	002B      	st         x, @(0x0, y)
   55DA8:	061B      	ld         x, @(+0x6, y)
   55DA9:	022B      	st         x, @(+0x2, y)
   55DAA:	051B      	ld         x, @(+0x5, y)
   55DAB:	012B      	st         x, @(+0x1, y)
   55DAC:	FC00      	**prefx    0xFC
   55DAD:	8F00      	**prefx    0x8F
   55DAE:	809C      	bsr        -0x47180 <TimerCreate:0xEC2E[p]>
   55DAF:	071B      	ld         x, @(+0x7, y)
   55DB0:	0026      	st         al, @(0x0, x)
   55DB1:	0014      	ld         al, #+0x0
   55DB2:	FB0F      	leave      #-0x5

0x00055DB3 <___libcsrmesh_364>:
   55DB3:	FB00      	**prefx    0xFB
   55DB4:	5F00      	**prefx    0x5F
   55DB5:	A7E0      	bra        -0x4A159 <Panic:0xBC5C[p]>

0x00055DB6 <___libcsrmesh_371>:
   55DB6:	ED0B      	enter      #-0x13
   55DB7:	FA25      	st         al, @0xFFFA <(scratchpad)>
   55DB8:	E015      	ld         al, @0xFFE0 <register ah>
   55DB9:	0134      	add        al, #+0x1
   55DBA:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55DBB:	E419      	ld         x, @0xFFE4 <register uy>
   55DBC:	0738      	add        x, #+0x7
   55DBD:	102B      	st         x, @(+0x10, y)
   55DBE:	FB29      	st         x, @0xFFFB <(scratchpad)>
   55DBF:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55DC0:	001A      	ld         x, @(0x0, x)
   55DC1:	F929      	st         x, @0xFFF9 <(scratchpad)>
   55DC2:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55DC3:	FF16      	ld         al, @(-0x1, x)
   55DC4:	08A0      	asl        #0x8
   55DC5:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   55DC6:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   55DC7:	0026      	st         al, @(0x0, x)
   55DC8:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   55DC9:	0234      	add        al, #+0x2
   55DCA:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55DCB:	FF38      	add        x, #-0x1
   55DCC:	FB29      	st         x, @0xFFFB <(scratchpad)>
   55DCD:	E415      	ld         al, @0xFFE4 <register uy>
   55DCE:	FF34      	add        al, #-0x1
   55DCF:	E189      	cmp        x, @0xFFE1 <register al>
   55DD0:	EFF0      	bne        -0x11 <___libcsrmesh_371+0x9:0x55DBF[p]>
   55DD1:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   55DD2:	0138      	add        x, #+0x1
   55DD3:	F929      	st         x, @0xFFF9 <(scratchpad)>
   55DD4:	1034      	add        al, #+0x10
   55DD5:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55DD6:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55DD7:	001A      	ld         x, @(0x0, x)
   55DD8:	FA29      	st         x, @0xFFFA <(scratchpad)>
   55DD9:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55DDA:	FF16      	ld         al, @(-0x1, x)
   55DDB:	08A0      	asl        #0x8
   55DDC:	FAB5      	or         al, @0xFFFA <(scratchpad)>
   55DDD:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55DDE:	0026      	st         al, @(0x0, x)
   55DDF:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   55DE0:	0234      	add        al, #+0x2
   55DE1:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55DE2:	FF38      	add        x, #-0x1
   55DE3:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55DE4:	E415      	ld         al, @0xFFE4 <register uy>
   55DE5:	0734      	add        al, #+0x7
   55DE6:	E189      	cmp        x, @0xFFE1 <register al>
   55DE7:	EFF0      	bne        -0x11 <___libcsrmesh_371+0x20:0x55DD6[p]>
   55DE8:	0134      	add        al, #+0x1
   55DE9:	E411      	ld         ah, @0xFFE4 <register uy>
   55DEA:	FB00      	**prefx    0xFB
   55DEB:	BE00      	**prefx    0xBE
   55DEC:	129C      	bsr        -0x541EE <SMEncryptRawAes:0x1BFE[p]>
   55DED:	1413      	ld         ah, @(+0x14, y)
   55DEE:	0130      	add        ah, #+0x1
   55DEF:	0009      	**unsigned
   55DF0:	01A4      	lsr        #0x1
   55DF1:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   55DF2:	131B      	ld         x, @(+0x13, y)
   55DF3:	F929      	st         x, @0xFFF9 <(scratchpad)>
   55DF4:	1BE0      	bra        +0x1B <___libcsrmesh_371+0x59:0x55E0F[p]>
   55DF5:	101B      	ld         x, @(+0x10, y)
   55DF6:	0012      	ld         ah, @(0x0, x)
   55DF7:	0009      	**unsigned
   55DF8:	08A4      	lsr        #0x8
   55DF9:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55DFA:	00D2      	xor        ah, @(0x0, x)
   55DFB:	0022      	st         ah, @(0x0, x)
   55DFC:	0238      	add        x, #+0x2
   55DFD:	F929      	st         x, @0xFFF9 <(scratchpad)>
   55DFE:	E415      	ld         al, @0xFFE4 <register uy>
   55DFF:	1057      	sub        al, @(+0x10, y)
   55E00:	01A0      	asl        #0x1
   55E01:	0F34      	add        al, #+0xF
   55E02:	141B      	ld         x, @(+0x14, y)
   55E03:	E189      	cmp        x, @0xFFE1 <register al>
   55E04:	102C      	bcz        +0x10 <___libcsrmesh_371+0x5E:0x55E14[p]>
   55E05:	101B      	ld         x, @(+0x10, y)
   55E06:	0016      	ld         al, @(0x0, x)
   55E07:	0100      	**prefx    0x1
   55E08:	FFC4      	and        al, #0xFF
   55E09:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   55E0A:	FFD6      	xor        al, @(-0x1, x)
   55E0B:	FF26      	st         al, @(-0x1, x)
   55E0C:	1017      	ld         al, @(+0x10, y)
   55E0D:	FF34      	add        al, #-0x1
   55E0E:	1027      	st         al, @(+0x10, y)
   55E0F:	E415      	ld         al, @0xFFE4 <register uy>
   55E10:	0734      	add        al, #+0x7
   55E11:	1057      	sub        al, @(+0x10, y)
   55E12:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   55E13:	E2FC      	bcs        -0x1E <___libcsrmesh_371+0x3F:0x55DF5[p]>
   55E14:	ED0F      	leave      #-0x13

0x00055E15 <___libcsrmesh_373>:
   55E15:	FB0B      	enter      #-0x5
   55E16:	0223      	st         ah, @(+0x2, y)
   55E17:	051B      	ld         x, @(+0x5, y)
   55E18:	002B      	st         x, @(0x0, y)
   55E19:	BA00      	**prefx    0xBA
   55E1A:	F49C      	bsr        -0x460C <CSRmeshPsSecureRead:0x5180E[p]>
   55E1B:	0127      	st         al, @(+0x1, y)
   55E1C:	1BF0      	bne        +0x1B <___libcsrmesh_373+0x22:0x55E37[p]>
   55E1D:	BA00      	**prefx    0xBA
   55E1E:	1E9C      	bsr        -0x45E2 <CSRmeshPsReadSecureKey:0x5183C[p]>
   55E1F:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55E20:	04F0      	bne        +0x4 <___libcsrmesh_373+0xF:0x55E24[p]>
   55E21:	FF14      	ld         al, #-0x1
   55E22:	0127      	st         al, @(+0x1, y)
   55E23:	14E0      	bra        +0x14 <___libcsrmesh_373+0x22:0x55E37[p]>
   55E24:	021B      	ld         x, @(+0x2, y)
   55E25:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55E26:	0010      	ld         ah, #+0x0
   55E27:	0EE0      	bra        +0xE <___libcsrmesh_373+0x20:0x55E35[p]>
   55E28:	E015      	ld         al, @0xFFE0 <register ah>
   55E29:	07C4      	and        al, #0x7
   55E2A:	F935      	add        al, @0xFFF9 <(scratchpad)>
   55E2B:	FA25      	st         al, @0xFFFA <(scratchpad)>
   55E2C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55E2D:	0016      	ld         al, @(0x0, x)
   55E2E:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   55E2F:	00D6      	xor        al, @(0x0, x)
   55E30:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55E31:	0026      	st         al, @(0x0, x)
   55E32:	0130      	add        ah, #+0x1
   55E33:	0138      	add        x, #+0x1
   55E34:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55E35:	0583      	cmp        ah, @(+0x5, y)
   55E36:	F2FC      	bcs        -0xE <___libcsrmesh_373+0x13:0x55E28[p]>
   55E37:	0117      	ld         al, @(+0x1, y)
   55E38:	FB0F      	leave      #-0x5

0x00055E39 <___libcsrmesh_372>:
   55E39:	FB0B      	enter      #-0x5
   55E3A:	0127      	st         al, @(+0x1, y)
   55E3B:	0223      	st         ah, @(+0x2, y)
   55E3C:	BA00      	**prefx    0xBA
   55E3D:	FF9C      	bsr        -0x4601 <CSRmeshPsReadSecureKey:0x5183C[p]>
   55E3E:	F925      	st         al, @0xFFF9 <(scratchpad)>
   55E3F:	14F4      	beq        +0x14 <___libcsrmesh_372+0x1A:0x55E53[p]>
   55E40:	0217      	ld         al, @(+0x2, y)
   55E41:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55E42:	0010      	ld         ah, #+0x0
   55E43:	0EE0      	bra        +0xE <___libcsrmesh_372+0x18:0x55E51[p]>
   55E44:	E019      	ld         x, @0xFFE0 <register ah>
   55E45:	07C8      	and        x, #0x7
   55E46:	F939      	add        x, @0xFFF9 <(scratchpad)>
   55E47:	FA29      	st         x, @0xFFFA <(scratchpad)>
   55E48:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55E49:	0016      	ld         al, @(0x0, x)
   55E4A:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   55E4B:	00D6      	xor        al, @(0x0, x)
   55E4C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55E4D:	0026      	st         al, @(0x0, x)
   55E4E:	0130      	add        ah, #+0x1
   55E4F:	0138      	add        x, #+0x1
   55E50:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55E51:	0583      	cmp        ah, @(+0x5, y)
   55E52:	F2FC      	bcs        -0xE <___libcsrmesh_372+0xB:0x55E44[p]>
   55E53:	051B      	ld         x, @(+0x5, y)
   55E54:	002B      	st         x, @(0x0, y)
   55E55:	0117      	ld         al, @(+0x1, y)
   55E56:	0213      	ld         ah, @(+0x2, y)
   55E57:	BA00      	**prefx    0xBA
   55E58:	979C      	bsr        -0x4669 <CSRmeshPsSecureWrite:0x517EF[p]>
   55E59:	FB0F      	leave      #-0x5

0x00055E5A <___libcsrmesh_111>:
   55E5A:	FC0B      	enter      #-0x4
   55E5B:	0014      	ld         al, #+0x0
   55E5C:	0127      	st         al, @(+0x1, y)
   55E5D:	FB00      	**prefx    0xFB
   55E5E:	2500      	**prefx    0x25
   55E5F:	0B9C      	bsr        -0x4DAF5 <Random16:0x836A[p]>
   55E60:	011B      	ld         x, @(+0x1, y)
   55E61:	6C00      	**prefx    0x6C
   55E62:	B726      	st         al, @(+0x6BB7, x)
   55E63:	0138      	add        x, #+0x1
   55E64:	012B      	st         x, @(+0x1, y)
   55E65:	0488      	cmp        x, #+0x4
   55E66:	F7F0      	bne        -0x9 <___libcsrmesh_111+0x3:0x55E5D[p]>
   55E67:	0414      	ld         al, #+0x4
   55E68:	0027      	st         al, @(0x0, y)
   55E69:	0814      	ld         al, #+0x8
   55E6A:	6C00      	**prefx    0x6C
   55E6B:	B710      	ld         ah, #+0x6BB7
   55E6C:	BA00      	**prefx    0xBA
   55E6D:	979C      	bsr        -0x4669 <CSRmeshPsWrite:0x51804[p]>
   55E6E:	FC0F      	leave      #-0x4

0x00055E6F <ConfigModelInit>:
   55E6F:	FE0B      	enter      #-0x2
   55E70:	0114      	ld         al, #+0x1
   55E71:	6A00      	**prefx    0x6A
   55E72:	C925      	st         al, @0x69C9 <g_config_model_data+0x4>
   55E73:	6000      	**prefx    0x60
   55E74:	DA14      	ld         al, #+0x5FDA
   55E75:	6A00      	**prefx    0x6A
   55E76:	C825      	st         al, @0x69C8 <g_config_model_data+0x3>
   55E77:	0514      	ld         al, #+0x5
   55E78:	6A00      	**prefx    0x6A
   55E79:	C725      	st         al, @0x69C7 <g_config_model_data+0x2>
   55E7A:	0014      	ld         al, #+0x0
   55E7B:	6A00      	**prefx    0x6A
   55E7C:	CB25      	st         al, @0x69CB <g_config_model_data+0x6>
   55E7D:	6A00      	**prefx    0x6A
   55E7E:	CC25      	st         al, @0x69CC <g_config_model_data+0x7>
   55E7F:	6A00      	**prefx    0x6A
   55E80:	C714      	ld         al, #+0x69C7
   55E81:	0010      	ld         ah, #+0x0
   55E82:	F100      	**prefx    0xF1
   55E83:	E39C      	bsr        -0xF1D <___libcsrmesh_232:0x54F66[p]>
   55E84:	BA00      	**prefx    0xBA
   55E85:	9D9C      	bsr        -0x4663 <CSRmeshIsPsReadyForAccess:0x51822[p]>
   55E86:	E199      	tst        @0xFFE1 <register al>
   55E87:	02F0      	bne        +0x2 <ConfigModelInit+0x1A:0x55E89[p]>
   55E88:	D29C      	bsr        -0x2E <___libcsrmesh_111:0x55E5A[p]>
   55E89:	FE0F      	leave      #-0x2

0x00055E8A <___libcsrmesh_424>:
   55E8A:	E40B      	enter      #-0x1C
   55E8B:	1927      	st         al, @(+0x19, y)
   55E8C:	E119      	ld         x, @0xFFE1 <register al>
   55E8D:	001A      	ld         x, @(0x0, x)
   55E8E:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55E8F:	6A00      	**prefx    0x6A
   55E90:	C515      	ld         al, @0x69C5 <g_config_model_data>
   55E91:	6A00      	**prefx    0x6A
   55E92:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55E93:	E139      	add        x, @0xFFE1 <register al>
   55E94:	0C10      	ld         ah, #+0xC
   55E95:	0022      	st         ah, @(0x0, x)
   55E96:	6A00      	**prefx    0x6A
   55E97:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55E98:	E139      	add        x, @0xFFE1 <register al>
   55E99:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   55E9A:	0122      	st         ah, @(+0x1, x)
   55E9B:	E111      	ld         ah, @0xFFE1 <register al>
   55E9C:	0230      	add        ah, #+0x2
   55E9D:	6A00      	**prefx    0x6A
   55E9E:	C521      	st         ah, @0x69C5 <g_config_model_data>
   55E9F:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   55EA0:	0984      	cmp        al, #+0x9
   55EA1:	06F8      	bcc        +0x6 <___libcsrmesh_421:0x55EA7[p]>
   55EA2:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55EA3:	A200      	**prefx    0xA2
   55EA4:	EB16      	ld         al, @(-0x5E15, x)
   55EA5:	E119      	ld         x, @0xFFE1 <register al>
   55EA6:	FE09      	brxl       

0x00055EA7 <___libcsrmesh_421>:
   55EA7:	FF14      	ld         al, #-0x1
   55EA8:	0100      	**prefx    0x1
   55EA9:	30E0      	bra        +0x130 <___libcsrmesh_421+0x132:0x55FD9[p]>
   55EAA:	6A00      	**prefx    0x6A
   55EAB:	C615      	ld         al, @0x69C6 <g_config_model_data+0x1>
   55EAC:	E035      	add        al, @0xFFE0 <register ah>
   55EAD:	0810      	ld         ah, #+0x8
   55EAE:	0023      	st         ah, @(0x0, y)
   55EAF:	0010      	ld         ah, #+0x0
   55EB0:	07E0      	bra        +0x7 <___libcsrmesh_421+0x10:0x55EB7[p]>
   55EB1:	6A00      	**prefx    0x6A
   55EB2:	C615      	ld         al, @0x69C6 <g_config_model_data+0x1>
   55EB3:	E035      	add        al, @0xFFE0 <register ah>
   55EB4:	0818      	ld         x, #+0x8
   55EB5:	002B      	st         x, @(0x0, y)
   55EB6:	0810      	ld         ah, #+0x8
   55EB7:	E900      	**prefx    0xE9
   55EB8:	E49C      	bsr        -0x171C <___libcsrmesh_204:0x5479C[p]>
   55EB9:	6A00      	**prefx    0x6A
   55EBA:	C515      	ld         al, @0x69C5 <g_config_model_data>
   55EBB:	0834      	add        al, #+0x8
   55EBC:	6A00      	**prefx    0x6A
   55EBD:	C525      	st         al, @0x69C5 <g_config_model_data>
   55EBE:	0100      	**prefx    0x1
   55EBF:	0BE0      	bra        +0x10B <___libcsrmesh_421+0x123:0x55FCA[p]>
   55EC0:	6A00      	**prefx    0x6A
   55EC1:	C615      	ld         al, @0x69C6 <g_config_model_data+0x1>
   55EC2:	E035      	add        al, @0xFFE0 <register ah>
   55EC3:	0810      	ld         ah, #+0x8
   55EC4:	0023      	st         ah, @(0x0, y)
   55EC5:	0010      	ld         ah, #+0x0
   55EC6:	07E0      	bra        +0x7 <___libcsrmesh_421+0x26:0x55ECD[p]>
   55EC7:	6A00      	**prefx    0x6A
   55EC8:	C615      	ld         al, @0x69C6 <g_config_model_data+0x1>
   55EC9:	E035      	add        al, @0xFFE0 <register ah>
   55ECA:	0818      	ld         x, #+0x8
   55ECB:	002B      	st         x, @(0x0, y)
   55ECC:	0410      	ld         ah, #+0x4
   55ECD:	F400      	**prefx    0xF4
   55ECE:	8E9C      	bsr        -0xC72 <___libcsrmesh_234:0x5525C[p]>
   55ECF:	EAE0      	bra        -0x16 <___libcsrmesh_421+0x12:0x55EB9[p]>
   55ED0:	0310      	ld         ah, #+0x3
   55ED1:	0023      	st         ah, @(0x0, y)
   55ED2:	E415      	ld         al, @0xFFE4 <register uy>
   55ED3:	0334      	add        al, #+0x3
   55ED4:	0100      	**prefx    0x1
   55ED5:	FF10      	ld         ah, #+0xFF
   55ED6:	FB00      	**prefx    0xFB
   55ED7:	CC00      	**prefx    0xCC
   55ED8:	789C      	bsr        -0x53388 <MemSet:0x2B50[p]>
   55ED9:	1614      	ld         al, #+0x16
   55EDA:	0327      	st         al, @(+0x3, y)
   55EDB:	0418      	ld         x, #+0x4
   55EDC:	042B      	st         x, @(+0x4, y)
   55EDD:	E411      	ld         ah, @0xFFE4 <register uy>
   55EDE:	0630      	add        ah, #+0x6
   55EDF:	0523      	st         ah, @(+0x5, y)
   55EE0:	6C00      	**prefx    0x6C
   55EE1:	9115      	ld         al, @0x6B91 <g_mesh_data+0x4>
   55EE2:	1827      	st         al, @(+0x18, y)
   55EE3:	6C00      	**prefx    0x6C
   55EE4:	9019      	ld         x, @0x6B90 <g_mesh_data+0x3>
   55EE5:	172B      	st         x, @(+0x17, y)
   55EE6:	E315      	ld         al, @0xFFE3 <register uxl>
   55EE7:	1813      	ld         ah, @(+0x18, y)
   55EE8:	E0B5      	or         al, @0xFFE0 <register ah>
   55EE9:	08F4      	beq        +0x8 <___libcsrmesh_421+0x4A:0x55EF1[p]>
   55EEA:	0314      	ld         al, #+0x3
   55EEB:	E411      	ld         ah, @0xFFE4 <register uy>
   55EEC:	E419      	ld         x, @0xFFE4 <register uy>
   55EED:	0338      	add        x, #+0x3
   55EEE:	FD09      	bc2        
   55EEF:	170E      	ld         xh, @(+0x17, y)
   55EF0:	189F      	bsr        @(+0x18, y)
   55EF1:	6A00      	**prefx    0x6A
   55EF2:	C515      	ld         al, @0x69C5 <g_config_model_data>
   55EF3:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55EF4:	6A00      	**prefx    0x6A
   55EF5:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55EF6:	E139      	add        x, @0xFFE1 <register al>
   55EF7:	0613      	ld         ah, @(+0x6, y)
   55EF8:	0100      	**prefx    0x1
   55EF9:	FFC0      	and        ah, #0xFF
   55EFA:	0022      	st         ah, @(0x0, x)
   55EFB:	6A00      	**prefx    0x6A
   55EFC:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55EFD:	E139      	add        x, @0xFFE1 <register al>
   55EFE:	0613      	ld         ah, @(+0x6, y)
   55EFF:	0009      	**unsigned
   55F00:	08A4      	lsr        #0x8
   55F01:	0122      	st         ah, @(+0x1, x)
   55F02:	6A00      	**prefx    0x6A
   55F03:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55F04:	F839      	add        x, @0xFFF8 <(scratchpad)>
   55F05:	0717      	ld         al, @(+0x7, y)
   55F06:	0100      	**prefx    0x1
   55F07:	FFC4      	and        al, #0xFF
   55F08:	0226      	st         al, @(+0x2, x)
   55F09:	6A00      	**prefx    0x6A
   55F0A:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55F0B:	F839      	add        x, @0xFFF8 <(scratchpad)>
   55F0C:	0713      	ld         ah, @(+0x7, y)
   55F0D:	0009      	**unsigned
   55F0E:	08A4      	lsr        #0x8
   55F0F:	0322      	st         ah, @(+0x3, x)
   55F10:	6A00      	**prefx    0x6A
   55F11:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55F12:	F839      	add        x, @0xFFF8 <(scratchpad)>
   55F13:	0913      	ld         ah, @(+0x9, y)
   55F14:	0100      	**prefx    0x1
   55F15:	FFC0      	and        ah, #0xFF
   55F16:	0422      	st         ah, @(+0x4, x)
   55F17:	6A00      	**prefx    0x6A
   55F18:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55F19:	F839      	add        x, @0xFFF8 <(scratchpad)>
   55F1A:	0917      	ld         al, @(+0x9, y)
   55F1B:	0813      	ld         ah, @(+0x8, y)
   55F1C:	0009      	**unsigned
   55F1D:	08A4      	lsr        #0x8
   55F1E:	0100      	**prefx    0x1
   55F1F:	FFC4      	and        al, #0xFF
   55F20:	0526      	st         al, @(+0x5, x)
   55F21:	6A00      	**prefx    0x6A
   55F22:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55F23:	F839      	add        x, @0xFFF8 <(scratchpad)>
   55F24:	0817      	ld         al, @(+0x8, y)
   55F25:	0100      	**prefx    0x1
   55F26:	FFC4      	and        al, #0xFF
   55F27:	0626      	st         al, @(+0x6, x)
   55F28:	6A00      	**prefx    0x6A
   55F29:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55F2A:	F839      	add        x, @0xFFF8 <(scratchpad)>
   55F2B:	0813      	ld         ah, @(+0x8, y)
   55F2C:	0009      	**unsigned
   55F2D:	08A4      	lsr        #0x8
   55F2E:	0722      	st         ah, @(+0x7, x)
   55F2F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55F30:	0838      	add        x, #+0x8
   55F31:	3AE0      	bra        +0x3A <___libcsrmesh_421+0xC4:0x55F6B[p]>
   55F32:	0310      	ld         ah, #+0x3
   55F33:	0023      	st         ah, @(0x0, y)
   55F34:	E415      	ld         al, @0xFFE4 <register uy>
   55F35:	0334      	add        al, #+0x3
   55F36:	0100      	**prefx    0x1
   55F37:	FF10      	ld         ah, #+0xFF
   55F38:	FB00      	**prefx    0xFB
   55F39:	CC00      	**prefx    0xCC
   55F3A:	169C      	bsr        -0x533EA <MemSet:0x2B50[p]>
   55F3B:	1714      	ld         al, #+0x17
   55F3C:	0327      	st         al, @(+0x3, y)
   55F3D:	0418      	ld         x, #+0x4
   55F3E:	042B      	st         x, @(+0x4, y)
   55F3F:	E411      	ld         ah, @0xFFE4 <register uy>
   55F40:	0630      	add        ah, #+0x6
   55F41:	0523      	st         ah, @(+0x5, y)
   55F42:	6C00      	**prefx    0x6C
   55F43:	9115      	ld         al, @0x6B91 <g_mesh_data+0x4>
   55F44:	1627      	st         al, @(+0x16, y)
   55F45:	6C00      	**prefx    0x6C
   55F46:	9019      	ld         x, @0x6B90 <g_mesh_data+0x3>
   55F47:	152B      	st         x, @(+0x15, y)
   55F48:	E315      	ld         al, @0xFFE3 <register uxl>
   55F49:	1613      	ld         ah, @(+0x16, y)
   55F4A:	E0B5      	or         al, @0xFFE0 <register ah>
   55F4B:	08F4      	beq        +0x8 <___libcsrmesh_421+0xAC:0x55F53[p]>
   55F4C:	0314      	ld         al, #+0x3
   55F4D:	E411      	ld         ah, @0xFFE4 <register uy>
   55F4E:	E419      	ld         x, @0xFFE4 <register uy>
   55F4F:	0338      	add        x, #+0x3
   55F50:	FD09      	bc2        
   55F51:	150E      	ld         xh, @(+0x15, y)
   55F52:	169F      	bsr        @(+0x16, y)
   55F53:	6A00      	**prefx    0x6A
   55F54:	C515      	ld         al, @0x69C5 <g_config_model_data>
   55F55:	F825      	st         al, @0xFFF8 <(scratchpad)>
   55F56:	6A00      	**prefx    0x6A
   55F57:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55F58:	E139      	add        x, @0xFFE1 <register al>
   55F59:	1013      	ld         ah, @(+0x10, y)
   55F5A:	0100      	**prefx    0x1
   55F5B:	FFC0      	and        ah, #0xFF
   55F5C:	0022      	st         ah, @(0x0, x)
   55F5D:	6A00      	**prefx    0x6A
   55F5E:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55F5F:	E139      	add        x, @0xFFE1 <register al>
   55F60:	1013      	ld         ah, @(+0x10, y)
   55F61:	0009      	**unsigned
   55F62:	08A4      	lsr        #0x8
   55F63:	0122      	st         ah, @(+0x1, x)
   55F64:	6A00      	**prefx    0x6A
   55F65:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55F66:	F839      	add        x, @0xFFF8 <(scratchpad)>
   55F67:	0F17      	ld         al, @(+0xF, y)
   55F68:	0226      	st         al, @(+0x2, x)
   55F69:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55F6A:	0338      	add        x, #+0x3
   55F6B:	6A00      	**prefx    0x6A
   55F6C:	C529      	st         x, @0x69C5 <g_config_model_data>
   55F6D:	5DE0      	bra        +0x5D <___libcsrmesh_421+0x123:0x55FCA[p]>
   55F6E:	6A00      	**prefx    0x6A
   55F6F:	C615      	ld         al, @0x69C6 <g_config_model_data+0x1>
   55F70:	E035      	add        al, @0xFFE0 <register ah>
   55F71:	0810      	ld         ah, #+0x8
   55F72:	0023      	st         ah, @(0x0, y)
   55F73:	6C00      	**prefx    0x6C
   55F74:	B710      	ld         ah, #+0x6BB7
   55F75:	29E0      	bra        +0x29 <___libcsrmesh_421+0xF7:0x55F9E[p]>
   55F76:	0314      	ld         al, #+0x3
   55F77:	0027      	st         al, @(0x0, y)
   55F78:	E415      	ld         al, @0xFFE4 <register uy>
   55F79:	0334      	add        al, #+0x3
   55F7A:	0100      	**prefx    0x1
   55F7B:	FF10      	ld         ah, #+0xFF
   55F7C:	FB00      	**prefx    0xFB
   55F7D:	CC00      	**prefx    0xCC
   55F7E:	D29C      	bsr        -0x5342E <MemSet:0x2B50[p]>
   55F7F:	3018      	ld         x, #+0x30
   55F80:	032B      	st         x, @(+0x3, y)
   55F81:	0410      	ld         ah, #+0x4
   55F82:	0423      	st         ah, @(+0x4, y)
   55F83:	E415      	ld         al, @0xFFE4 <register uy>
   55F84:	0634      	add        al, #+0x6
   55F85:	0527      	st         al, @(+0x5, y)
   55F86:	6C00      	**prefx    0x6C
   55F87:	9119      	ld         x, @0x6B91 <g_mesh_data+0x4>
   55F88:	142B      	st         x, @(+0x14, y)
   55F89:	6C00      	**prefx    0x6C
   55F8A:	9011      	ld         ah, @0x6B90 <g_mesh_data+0x3>
   55F8B:	1323      	st         ah, @(+0x13, y)
   55F8C:	E015      	ld         al, @0xFFE0 <register ah>
   55F8D:	E3B5      	or         al, @0xFFE3 <register uxl>
   55F8E:	08F4      	beq        +0x8 <___libcsrmesh_421+0xEF:0x55F96[p]>
   55F8F:	0314      	ld         al, #+0x3
   55F90:	E411      	ld         ah, @0xFFE4 <register uy>
   55F91:	E419      	ld         x, @0xFFE4 <register uy>
   55F92:	0338      	add        x, #+0x3
   55F93:	FD09      	bc2        
   55F94:	130E      	ld         xh, @(+0x13, y)
   55F95:	149F      	bsr        @(+0x14, y)
   55F96:	6A00      	**prefx    0x6A
   55F97:	C615      	ld         al, @0x69C6 <g_config_model_data+0x1>
   55F98:	6A00      	**prefx    0x6A
   55F99:	C535      	add        al, @0x69C5 <g_config_model_data>
   55F9A:	0810      	ld         ah, #+0x8
   55F9B:	0023      	st         ah, @(0x0, y)
   55F9C:	E411      	ld         ah, @0xFFE4 <register uy>
   55F9D:	0630      	add        ah, #+0x6
   55F9E:	FB00      	**prefx    0xFB
   55F9F:	CB00      	**prefx    0xCB
   55FA0:	369C      	bsr        -0x534CA <MemCopyUnPack:0x2AD6[p]>
   55FA1:	FF00      	**prefx    0xFF
   55FA2:	17E0      	bra        -0xE9 <___libcsrmesh_421+0x12:0x55EB9[p]>
   55FA3:	6A00      	**prefx    0x6A
   55FA4:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55FA5:	E039      	add        x, @0xFFE0 <register ah>
   55FA6:	0214      	ld         al, #+0x2
   55FA7:	0026      	st         al, @(0x0, x)
   55FA8:	6A00      	**prefx    0x6A
   55FA9:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55FAA:	E039      	add        x, @0xFFE0 <register ah>
   55FAB:	0014      	ld         al, #+0x0
   55FAC:	0126      	st         al, @(+0x1, x)
   55FAD:	6A00      	**prefx    0x6A
   55FAE:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55FAF:	E039      	add        x, @0xFFE0 <register ah>
   55FB0:	0226      	st         al, @(+0x2, x)
   55FB1:	6A00      	**prefx    0x6A
   55FB2:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55FB3:	E039      	add        x, @0xFFE0 <register ah>
   55FB4:	0114      	ld         al, #+0x1
   55FB5:	0326      	st         al, @(+0x3, x)
   55FB6:	6A00      	**prefx    0x6A
   55FB7:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55FB8:	E039      	add        x, @0xFFE0 <register ah>
   55FB9:	0014      	ld         al, #+0x0
   55FBA:	0426      	st         al, @(+0x4, x)
   55FBB:	6A00      	**prefx    0x6A
   55FBC:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55FBD:	E039      	add        x, @0xFFE0 <register ah>
   55FBE:	0526      	st         al, @(+0x5, x)
   55FBF:	6A00      	**prefx    0x6A
   55FC0:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55FC1:	E039      	add        x, @0xFFE0 <register ah>
   55FC2:	0626      	st         al, @(+0x6, x)
   55FC3:	6A00      	**prefx    0x6A
   55FC4:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   55FC5:	E039      	add        x, @0xFFE0 <register ah>
   55FC6:	0726      	st         al, @(+0x7, x)
   55FC7:	0830      	add        ah, #+0x8
   55FC8:	6A00      	**prefx    0x6A
   55FC9:	C521      	st         ah, @0x69C5 <g_config_model_data>
   55FCA:	6A00      	**prefx    0x6A
   55FCB:	C519      	ld         x, @0x69C5 <g_config_model_data>
   55FCC:	F829      	st         x, @0xFFF8 <(scratchpad)>
   55FCD:	6A00      	**prefx    0x6A
   55FCE:	C611      	ld         ah, @0x69C6 <g_config_model_data+0x1>
   55FCF:	E331      	add        ah, @0xFFE3 <register uxl>
   55FD0:	191B      	ld         x, @(+0x19, y)
   55FD1:	0116      	ld         al, @(+0x1, x)
   55FD2:	E019      	ld         x, @0xFFE0 <register ah>
   55FD3:	0026      	st         al, @(0x0, x)
   55FD4:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   55FD5:	0138      	add        x, #+0x1
   55FD6:	6A00      	**prefx    0x6A
   55FD7:	C529      	st         x, @0x69C5 <g_config_model_data>
   55FD8:	0014      	ld         al, #+0x0
   55FD9:	E40F      	leave      #-0x1C

0x00055FDA <___libcsrmesh_110>:
   55FDA:	DA0B      	enter      #-0x26
   55FDB:	2327      	st         al, @(+0x23, y)
   55FDC:	0010      	ld         ah, #+0x0
   55FDD:	6A00      	**prefx    0x6A
   55FDE:	C521      	st         ah, @0x69C5 <g_config_model_data>
   55FDF:	F000      	**prefx    0xF0
   55FE0:	809C      	bsr        -0x1080 <___libcsrmesh_233:0x54F60[p]>
   55FE1:	6A00      	**prefx    0x6A
   55FE2:	C625      	st         al, @0x69C6 <g_config_model_data+0x1>
   55FE3:	231B      	ld         x, @(+0x23, y)
   55FE4:	0012      	ld         ah, @(0x0, x)
   55FE5:	E019      	ld         x, @0xFFE0 <register ah>
   55FE6:	0416      	ld         al, @(+0x4, x)
   55FE7:	0984      	cmp        al, #+0x9
   55FE8:	5DF4      	beq        +0x5D <___libcsrmesh_110+0x6B:0x56045[p]>
   55FE9:	0B84      	cmp        al, #+0xB
   55FEA:	0100      	**prefx    0x1
   55FEB:	88F4      	beq        +0x88 <___libcsrmesh_110+0x99:0x56073[p]>
   55FEC:	0584      	cmp        al, #+0x5
   55FED:	0100      	**prefx    0x1
   55FEE:	99F0      	bne        +0x99 <___libcsrmesh_110+0xAD:0x56087[p]>
   55FEF:	231B      	ld         x, @(+0x23, y)
   55FF0:	021A      	ld         x, @(+0x2, x)
   55FF1:	222B      	st         x, @(+0x22, y)
   55FF2:	0810      	ld         ah, #+0x8
   55FF3:	0023      	st         ah, @(0x0, y)
   55FF4:	6C00      	**prefx    0x6C
   55FF5:	0C14      	ld         al, #+0x6C0C
   55FF6:	E311      	ld         ah, @0xFFE3 <register uxl>
   55FF7:	FC00      	**prefx    0xFC
   55FF8:	FF00      	**prefx    0xFF
   55FF9:	389C      	bsr        -0x400C8 <MemCmp:0x15F31[p]>
   55FFA:	E199      	tst        @0xFFE1 <register al>
   55FFB:	0100      	**prefx    0x1
   55FFC:	8BF0      	bne        +0x8B <___libcsrmesh_110+0xAD:0x56087[p]>
   55FFD:	221B      	ld         x, @(+0x22, y)
   55FFE:	0916      	ld         al, @(+0x9, x)
   55FFF:	08A0      	asl        #0x8
   56000:	1627      	st         al, @(+0x16, y)
   56001:	0816      	ld         al, @(+0x8, x)
   56002:	0100      	**prefx    0x1
   56003:	FFC4      	and        al, #0xFF
   56004:	16B7      	or         al, @(+0x16, y)
   56005:	1627      	st         al, @(+0x16, y)
   56006:	F000      	**prefx    0xF0
   56007:	149C      	bsr        -0xFEC <___libcsrmesh_245:0x5501B[p]>
   56008:	1613      	ld         ah, @(+0x16, y)
   56009:	0623      	st         ah, @(+0x6, y)
   5600A:	0014      	ld         al, #+0x0
   5600B:	0727      	st         al, @(+0x7, y)
   5600C:	0318      	ld         x, #+0x3
   5600D:	002B      	st         x, @(0x0, y)
   5600E:	E415      	ld         al, @0xFFE4 <register uy>
   5600F:	0834      	add        al, #+0x8
   56010:	0100      	**prefx    0x1
   56011:	FF10      	ld         ah, #+0xFF
   56012:	FB00      	**prefx    0xFB
   56013:	CB00      	**prefx    0xCB
   56014:	3C9C      	bsr        -0x534C4 <MemSet:0x2B50[p]>
   56015:	3310      	ld         ah, #+0x33
   56016:	0823      	st         ah, @(+0x8, y)
   56017:	0014      	ld         al, #+0x0
   56018:	0927      	st         al, @(+0x9, y)
   56019:	E419      	ld         x, @0xFFE4 <register uy>
   5601A:	0638      	add        x, #+0x6
   5601B:	0A2B      	st         x, @(+0xA, y)
   5601C:	6C00      	**prefx    0x6C
   5601D:	9111      	ld         ah, @0x6B91 <g_mesh_data+0x4>
   5601E:	1523      	st         ah, @(+0x15, y)
   5601F:	6C00      	**prefx    0x6C
   56020:	9015      	ld         al, @0x6B90 <g_mesh_data+0x3>
   56021:	1427      	st         al, @(+0x14, y)
   56022:	E0B5      	or         al, @0xFFE0 <register ah>
   56023:	08F4      	beq        +0x8 <___libcsrmesh_110+0x51:0x5602B[p]>
   56024:	0314      	ld         al, #+0x3
   56025:	E411      	ld         ah, @0xFFE4 <register uy>
   56026:	E419      	ld         x, @0xFFE4 <register uy>
   56027:	0838      	add        x, #+0x8
   56028:	FD09      	bc2        
   56029:	140E      	ld         xh, @(+0x14, y)
   5602A:	159F      	bsr        @(+0x15, y)
   5602B:	6A00      	**prefx    0x6A
   5602C:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   5602D:	6A00      	**prefx    0x6A
   5602E:	C539      	add        x, @0x69C5 <g_config_model_data>
   5602F:	0A10      	ld         ah, #+0xA
   56030:	0022      	st         ah, @(0x0, x)
   56031:	6A00      	**prefx    0x6A
   56032:	C515      	ld         al, @0x69C5 <g_config_model_data>
   56033:	0134      	add        al, #+0x1
   56034:	6A00      	**prefx    0x6A
   56035:	C611      	ld         ah, @0x69C6 <g_config_model_data+0x1>
   56036:	E131      	add        ah, @0xFFE1 <register al>
   56037:	0814      	ld         al, #+0x8
   56038:	6C00      	**prefx    0x6C
   56039:	0C18      	ld         x, #+0x6C0C
   5603A:	FD09      	bc2        
   5603B:	6A00      	**prefx    0x6A
   5603C:	C619      	ld         x, @0x69C6 <g_config_model_data+0x1>
   5603D:	0926      	st         al, @(+0x9, x)
   5603E:	0A18      	ld         x, #+0xA
   5603F:	6A00      	**prefx    0x6A
   56040:	C529      	st         x, @0x69C5 <g_config_model_data>
   56041:	1A27      	st         al, @(+0x1A, y)
   56042:	0110      	ld         ah, #+0x1
   56043:	1923      	st         ah, @(+0x19, y)
   56044:	2DE0      	bra        +0x2D <___libcsrmesh_110+0x97:0x56071[p]>
   56045:	E019      	ld         x, @0xFFE0 <register ah>
   56046:	0316      	ld         al, @(+0x3, x)
   56047:	231B      	ld         x, @(+0x23, y)
   56048:	0686      	cmp        al, @(+0x6, x)
   56049:	05F4      	beq        +0x5 <___libcsrmesh_110+0x74:0x5604E[p]>
   5604A:	E199      	tst        @0xFFE1 <register al>
   5604B:	42F0      	bne        +0x42 <___libcsrmesh_110+0xB3:0x5608D[p]>
   5604C:	049A      	tst        @(+0x4, x)
   5604D:	40F0      	bne        +0x40 <___libcsrmesh_110+0xB3:0x5608D[p]>
   5604E:	6A00      	**prefx    0x6A
   5604F:	C614      	ld         al, #+0x69C6
   56050:	0A10      	ld         ah, #+0xA
   56051:	FC00      	**prefx    0xFC
   56052:	0000      	**prefx    0x0
   56053:	819C      	bsr        -0x4007F <BufWriteUint8:0x15FD4[p]>
   56054:	0814      	ld         al, #+0x8
   56055:	6A00      	**prefx    0x6A
   56056:	C611      	ld         ah, @0x69C6 <g_config_model_data+0x1>
   56057:	6C00      	**prefx    0x6C
   56058:	0C18      	ld         x, #+0x6C0C
   56059:	FD09      	bc2        
   5605A:	6A00      	**prefx    0x6A
   5605B:	C615      	ld         al, @0x69C6 <g_config_model_data+0x1>
   5605C:	0834      	add        al, #+0x8
   5605D:	6A00      	**prefx    0x6A
   5605E:	C625      	st         al, @0x69C6 <g_config_model_data+0x1>
   5605F:	231B      	ld         x, @(+0x23, y)
   56060:	0212      	ld         ah, @(+0x2, x)
   56061:	6A00      	**prefx    0x6A
   56062:	C614      	ld         al, #+0x69C6
   56063:	E019      	ld         x, @0xFFE0 <register ah>
   56064:	0012      	ld         ah, @(0x0, x)
   56065:	FC00      	**prefx    0xFC
   56066:	FF00      	**prefx    0xFF
   56067:	6D9C      	bsr        -0x40093 <BufWriteUint8:0x15FD4[p]>
   56068:	6A00      	**prefx    0x6A
   56069:	C515      	ld         al, @0x69C5 <g_config_model_data>
   5606A:	0A34      	add        al, #+0xA
   5606B:	6A00      	**prefx    0x6A
   5606C:	C525      	st         al, @0x69C5 <g_config_model_data>
   5606D:	0010      	ld         ah, #+0x0
   5606E:	1A23      	st         ah, @(+0x1A, y)
   5606F:	0114      	ld         al, #+0x1
   56070:	1927      	st         al, @(+0x19, y)
   56071:	1823      	st         ah, @(+0x18, y)
   56072:	1FE0      	bra        +0x1F <___libcsrmesh_110+0xB7:0x56091[p]>
   56073:	E019      	ld         x, @0xFFE0 <register ah>
   56074:	0316      	ld         al, @(+0x3, x)
   56075:	231B      	ld         x, @(+0x23, y)
   56076:	0686      	cmp        al, @(+0x6, x)
   56077:	05F4      	beq        +0x5 <___libcsrmesh_110+0xA2:0x5607C[p]>
   56078:	E199      	tst        @0xFFE1 <register al>
   56079:	14F0      	bne        +0x14 <___libcsrmesh_110+0xB3:0x5608D[p]>
   5607A:	049A      	tst        @(+0x4, x)
   5607B:	12F0      	bne        +0x12 <___libcsrmesh_110+0xB3:0x5608D[p]>
   5607C:	231B      	ld         x, @(+0x23, y)
   5607D:	0216      	ld         al, @(+0x2, x)
   5607E:	FE00      	**prefx    0xFE
   5607F:	0B9C      	bsr        -0x1F5 <___libcsrmesh_424:0x55E8A[p]>
   56080:	1A27      	st         al, @(+0x1A, y)
   56081:	04F0      	bne        +0x4 <___libcsrmesh_110+0xAB:0x56085[p]>
   56082:	0110      	ld         ah, #+0x1
   56083:	1923      	st         ah, @(+0x19, y)
   56084:	07E0      	bra        +0x7 <___libcsrmesh_110+0xB1:0x5608B[p]>
   56085:	0018      	ld         x, #+0x0
   56086:	09E0      	bra        +0x9 <___libcsrmesh_110+0xB5:0x5608F[p]>
   56087:	FF10      	ld         ah, #-0x1
   56088:	1A23      	st         ah, @(+0x1A, y)
   56089:	0014      	ld         al, #+0x0
   5608A:	1927      	st         al, @(+0x19, y)
   5608B:	1827      	st         al, @(+0x18, y)
   5608C:	05E0      	bra        +0x5 <___libcsrmesh_110+0xB7:0x56091[p]>
   5608D:	0018      	ld         x, #+0x0
   5608E:	1A2B      	st         x, @(+0x1A, y)
   5608F:	192B      	st         x, @(+0x19, y)
   56090:	182B      	st         x, @(+0x18, y)
   56091:	231B      	ld         x, @(+0x23, y)
   56092:	0012      	ld         ah, @(0x0, x)
   56093:	E019      	ld         x, @0xFFE0 <register ah>
   56094:	0316      	ld         al, @(+0x3, x)
   56095:	231B      	ld         x, @(+0x23, y)
   56096:	0686      	cmp        al, @(+0x6, x)
   56097:	0200      	**prefx    0x2
   56098:	33F0      	bne        +0x233 <___libcsrmesh_422+0x228:0x562CB[p]>
   56099:	E019      	ld         x, @0xFFE0 <register ah>
   5609A:	0416      	ld         al, @(+0x4, x)
   5609B:	FD34      	add        al, #-0x3
   5609C:	1184      	cmp        al, #+0x11
   5609D:	06F8      	bcc        +0x6 <___libcsrmesh_422:0x560A3[p]>
   5609E:	E119      	ld         x, @0xFFE1 <register al>
   5609F:	A200      	**prefx    0xA2
   560A0:	F416      	ld         al, @(-0x5E0C, x)
   560A1:	E119      	ld         x, @0xFFE1 <register al>
   560A2:	FE09      	brxl       

0x000560A3 <___libcsrmesh_422>:
   560A3:	FF10      	ld         ah, #-0x1
   560A4:	1A23      	st         ah, @(+0x1A, y)
   560A5:	0200      	**prefx    0x2
   560A6:	25E0      	bra        +0x225 <___libcsrmesh_422+0x228:0x562CB[p]>
   560A7:	2317      	ld         al, @(+0x23, y)
   560A8:	0234      	add        al, #+0x2
   560A9:	2127      	st         al, @(+0x21, y)
   560AA:	FC00      	**prefx    0xFC
   560AB:	FF00      	**prefx    0xFF
   560AC:	159C      	bsr        -0x400EB <BufReadUint16:0x15FC1[p]>
   560AD:	2027      	st         al, @(+0x20, y)
   560AE:	2117      	ld         al, @(+0x21, y)
   560AF:	FC00      	**prefx    0xFC
   560B0:	FF00      	**prefx    0xFF
   560B1:	049C      	bsr        -0x400FC <BufReadUint8:0x15FB5[p]>
   560B2:	0010      	ld         ah, #+0x0
   560B3:	10A0      	asl        #0x10
   560B4:	20B7      	or         al, @(+0x20, y)
   560B5:	0134      	add        al, #+0x1
   560B6:	0040      	addc       ah, #+0x0
   560B7:	EF00      	**prefx    0xEF
   560B8:	9D9C      	bsr        -0x1163 <___libcsrmesh_247:0x54F55[p]>
   560B9:	60E0      	bra        +0x60 <___libcsrmesh_422+0x76:0x56119[p]>
   560BA:	2317      	ld         al, @(+0x23, y)
   560BB:	0234      	add        al, #+0x2
   560BC:	1227      	st         al, @(+0x12, y)
   560BD:	6A00      	**prefx    0x6A
   560BE:	A618      	ld         x, #+0x69A6
   560BF:	132B      	st         x, @(+0x13, y)
   560C0:	1217      	ld         al, @(+0x12, y)
   560C1:	FC00      	**prefx    0xFC
   560C2:	FF00      	**prefx    0xFF
   560C3:	F29C      	bsr        -0x4010E <BufReadUint8:0x15FB5[p]>
   560C4:	131B      	ld         x, @(+0x13, y)
   560C5:	0026      	st         al, @(0x0, x)
   560C6:	0138      	add        x, #+0x1
   560C7:	132B      	st         x, @(+0x13, y)
   560C8:	6A00      	**prefx    0x6A
   560C9:	AE88      	cmp        x, #+0x69AE
   560CA:	F6F0      	bne        -0xA <___libcsrmesh_422+0x1D:0x560C0[p]>
   560CB:	0010      	ld         ah, #+0x0
   560CC:	0023      	st         ah, @(0x0, y)
   560CD:	0123      	st         ah, @(+0x1, y)
   560CE:	6C00      	**prefx    0x6C
   560CF:	D914      	ld         al, #+0x6BD9
   560D0:	0227      	st         al, @(+0x2, y)
   560D1:	1818      	ld         x, #+0x18
   560D2:	032B      	st         x, @(+0x3, y)
   560D3:	6A00      	**prefx    0x6A
   560D4:	9E10      	ld         ah, #+0x699E
   560D5:	0423      	st         ah, @(+0x4, y)
   560D6:	0814      	ld         al, #+0x8
   560D7:	0527      	st         al, @(+0x5, y)
   560D8:	6C00      	**prefx    0x6C
   560D9:	0C14      	ld         al, #+0x6C0C
   560DA:	0810      	ld         ah, #+0x8
   560DB:	F300      	**prefx    0xF3
   560DC:	5F9C      	bsr        -0xCA1 <___libcsrmesh_305:0x5543B[p]>
   560DD:	0818      	ld         x, #+0x8
   560DE:	002B      	st         x, @(0x0, y)
   560DF:	6A00      	**prefx    0x6A
   560E0:	A614      	ld         al, #+0x69A6
   560E1:	6A00      	**prefx    0x6A
   560E2:	9E10      	ld         ah, #+0x699E
   560E3:	FC00      	**prefx    0xFC
   560E4:	FE00      	**prefx    0xFE
   560E5:	4C9C      	bsr        -0x401B4 <MemCmp:0x15F31[p]>
   560E6:	E199      	tst        @0xFFE1 <register al>
   560E7:	0200      	**prefx    0x2
   560E8:	E1F0      	bne        +0x1E1 <___libcsrmesh_422+0x226:0x562C9[p]>
   560E9:	0310      	ld         ah, #+0x3
   560EA:	0023      	st         ah, @(0x0, y)
   560EB:	6A00      	**prefx    0x6A
   560EC:	BD14      	ld         al, #+0x69BD
   560ED:	0100      	**prefx    0x1
   560EE:	FF10      	ld         ah, #+0xFF
   560EF:	FB00      	**prefx    0xFB
   560F0:	CA00      	**prefx    0xCA
   560F1:	5F9C      	bsr        -0x535A1 <MemSet:0x2B50[p]>
   560F2:	1314      	ld         al, #+0x13
   560F3:	6A00      	**prefx    0x6A
   560F4:	BD25      	st         al, @0x69BD <eventData.2761.>
   560F5:	0018      	ld         x, #+0x0
   560F6:	6A00      	**prefx    0x6A
   560F7:	BE29      	st         x, @0x69BE <eventData.2761.+0x1>
   560F8:	6C00      	**prefx    0x6C
   560F9:	9711      	ld         ah, @0x6B97 <g_mesh_data+0xA>
   560FA:	1F23      	st         ah, @(+0x1F, y)
   560FB:	6C00      	**prefx    0x6C
   560FC:	9615      	ld         al, @0x6B96 <g_mesh_data+0x9>
   560FD:	1E27      	st         al, @(+0x1E, y)
   560FE:	E0B5      	or         al, @0xFFE0 <register ah>
   560FF:	03F4      	beq        +0x3 <___libcsrmesh_422+0x5F:0x56102[p]>
   56100:	1E0E      	ld         xh, @(+0x1E, y)
   56101:	1F9F      	bsr        @(+0x1F, y)
   56102:	E100      	**prefx    0xE1
   56103:	7E9C      	bsr        -0x1E82 <___libcsrmesh_278:0x54281[p]>
   56104:	6C00      	**prefx    0x6C
   56105:	9111      	ld         ah, @0x6B91 <g_mesh_data+0x4>
   56106:	1D23      	st         ah, @(+0x1D, y)
   56107:	6C00      	**prefx    0x6C
   56108:	9015      	ld         al, @0x6B90 <g_mesh_data+0x3>
   56109:	1C27      	st         al, @(+0x1C, y)
   5610A:	E0B5      	or         al, @0xFFE0 <register ah>
   5610B:	07F0      	bne        +0x7 <___libcsrmesh_422+0x6F:0x56112[p]>
   5610C:	0010      	ld         ah, #+0x0
   5610D:	1A23      	st         ah, @(+0x1A, y)
   5610E:	0114      	ld         al, #+0x1
   5610F:	1827      	st         al, @(+0x18, y)
   56110:	0200      	**prefx    0x2
   56111:	BAE0      	bra        +0x1BA <___libcsrmesh_422+0x228:0x562CB[p]>
   56112:	0314      	ld         al, #+0x3
   56113:	E411      	ld         ah, @0xFFE4 <register uy>
   56114:	6A00      	**prefx    0x6A
   56115:	BD18      	ld         x, #+0x69BD
   56116:	FD09      	bc2        
   56117:	1C0E      	ld         xh, @(+0x1C, y)
   56118:	1D9F      	bsr        @(+0x1D, y)
   56119:	0018      	ld         x, #+0x0
   5611A:	1A2B      	st         x, @(+0x1A, y)
   5611B:	0110      	ld         ah, #+0x1
   5611C:	1823      	st         ah, @(+0x18, y)
   5611D:	0200      	**prefx    0x2
   5611E:	ADE0      	bra        +0x1AD <___libcsrmesh_422+0x228:0x562CB[p]>
   5611F:	2317      	ld         al, @(+0x23, y)
   56120:	0234      	add        al, #+0x2
   56121:	1127      	st         al, @(+0x11, y)
   56122:	FC00      	**prefx    0xFC
   56123:	FF00      	**prefx    0xFF
   56124:	9D9C      	bsr        -0x40163 <BufReadUint16:0x15FC1[p]>
   56125:	6A00      	**prefx    0x6A
   56126:	C125      	st         al, @0x69C1 <config_param.2760.+0x1>
   56127:	1117      	ld         al, @(+0x11, y)
   56128:	FC00      	**prefx    0xFC
   56129:	FF00      	**prefx    0xFF
   5612A:	979C      	bsr        -0x40169 <BufReadUint16:0x15FC1[p]>
   5612B:	6A00      	**prefx    0x6A
   5612C:	C225      	st         al, @0x69C2 <config_param.2760.+0x2>
   5612D:	1117      	ld         al, @(+0x11, y)
   5612E:	FC00      	**prefx    0xFC
   5612F:	FF00      	**prefx    0xFF
   56130:	859C      	bsr        -0x4017B <BufReadUint8:0x15FB5[p]>
   56131:	0009      	**unsigned
   56132:	0400      	**prefx    0x4
   56133:	E890      	umult      #0x3E8
   56134:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56135:	0018      	ld         x, #+0x0
   56136:	002B      	st         x, @(0x0, y)
   56137:	0100      	**prefx    0x1
   56138:	FF10      	ld         ah, #+0xFF
   56139:	0123      	st         ah, @(+0x1, y)
   5613A:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5613B:	FC00      	**prefx    0xFC
   5613C:	0C00      	**prefx    0xC
   5613D:	C79C      	bsr        -0x3F439 <__udivhi3:0x16D04[p]>
   5613E:	6A00      	**prefx    0x6A
   5613F:	C025      	st         al, @0x69C0 <config_param.2760.>
   56140:	1117      	ld         al, @(+0x11, y)
   56141:	FC00      	**prefx    0xFC
   56142:	FE00      	**prefx    0xFE
   56143:	729C      	bsr        -0x4018E <BufReadUint8:0x15FB5[p]>
   56144:	E111      	ld         ah, @0xFFE1 <register al>
   56145:	0100      	**prefx    0x1
   56146:	FFC0      	and        ah, #0xFF
   56147:	0100      	**prefx    0x1
   56148:	80C4      	and        al, #0x80
   56149:	03F4      	beq        +0x3 <___libcsrmesh_422+0xA9:0x5614C[p]>
   5614A:	FF00      	**prefx    0xFF
   5614B:	00B0      	or         ah, #-0x100
   5614C:	6A00      	**prefx    0x6A
   5614D:	C321      	st         ah, @0x69C3 <config_param.2760.+0x3>
   5614E:	1117      	ld         al, @(+0x11, y)
   5614F:	FC00      	**prefx    0xFC
   56150:	FE00      	**prefx    0xFE
   56151:	649C      	bsr        -0x4019C <BufReadUint8:0x15FB5[p]>
   56152:	6A00      	**prefx    0x6A
   56153:	C425      	st         al, @0x69C4 <config_param.2760.+0x4>
   56154:	EE00      	**prefx    0xEE
   56155:	089C      	bsr        -0x11F8 <___libcsrmesh_246:0x54F5D[p]>
   56156:	0114      	ld         al, #+0x1
   56157:	6A00      	**prefx    0x6A
   56158:	B325      	st         al, @0x69B3 <le_params.2762.+0x5>
   56159:	6A00      	**prefx    0x6A
   5615A:	AE14      	ld         al, #+0x69AE
   5615B:	FB00      	**prefx    0xFB
   5615C:	479C      	bsr        -0x4B9 <CSRSchedGetConfigParams:0x55CA3[p]>
   5615D:	6A00      	**prefx    0x6A
   5615E:	C111      	ld         ah, @0x69C1 <config_param.2760.+0x1>
   5615F:	E015      	ld         al, @0xFFE0 <register ah>
   56160:	0009      	**unsigned
   56161:	0400      	**prefx    0x4
   56162:	E890      	umult      #0x3E8
   56163:	6A00      	**prefx    0x6A
   56164:	B925      	st         al, @0x69B9 <le_params.2762.+0xB>
   56165:	6A00      	**prefx    0x6A
   56166:	B821      	st         ah, @0x69B8 <le_params.2762.+0xA>
   56167:	6A00      	**prefx    0x6A
   56168:	C211      	ld         ah, @0x69C2 <config_param.2760.+0x2>
   56169:	E015      	ld         al, @0xFFE0 <register ah>
   5616A:	0009      	**unsigned
   5616B:	0400      	**prefx    0x4
   5616C:	E890      	umult      #0x3E8
   5616D:	6A00      	**prefx    0x6A
   5616E:	BB25      	st         al, @0x69BB <le_params.2762.+0xD>
   5616F:	6A00      	**prefx    0x6A
   56170:	BA21      	st         ah, @0x69BA <le_params.2762.+0xC>
   56171:	6A00      	**prefx    0x6A
   56172:	C019      	ld         x, @0x69C0 <config_param.2760.>
   56173:	6A00      	**prefx    0x6A
   56174:	B429      	st         x, @0x69B4 <le_params.2762.+0x6>
   56175:	0410      	ld         ah, #+0x4
   56176:	6A00      	**prefx    0x6A
   56177:	B521      	st         ah, @0x69B5 <le_params.2762.+0x7>
   56178:	0114      	ld         al, #+0x1
   56179:	6A00      	**prefx    0x6A
   5617A:	BC25      	st         al, @0x69BC <le_params.2762.+0xE>
   5617B:	6A00      	**prefx    0x6A
   5617C:	AE14      	ld         al, #+0x69AE
   5617D:	FB00      	**prefx    0xFB
   5617E:	669C      	bsr        -0x49A <CSRSchedSetConfigParams:0x55CE4[p]>
   5617F:	0318      	ld         x, #+0x3
   56180:	002B      	st         x, @(0x0, y)
   56181:	6A00      	**prefx    0x6A
   56182:	BD14      	ld         al, #+0x69BD
   56183:	0100      	**prefx    0x1
   56184:	FF10      	ld         ah, #+0xFF
   56185:	FB00      	**prefx    0xFB
   56186:	CA00      	**prefx    0xCA
   56187:	C99C      	bsr        -0x53637 <MemSet:0x2B50[p]>
   56188:	1410      	ld         ah, #+0x14
   56189:	6A00      	**prefx    0x6A
   5618A:	BD21      	st         ah, @0x69BD <eventData.2761.>
   5618B:	0014      	ld         al, #+0x0
   5618C:	6A00      	**prefx    0x6A
   5618D:	BE25      	st         al, @0x69BE <eventData.2761.+0x1>
   5618E:	6A00      	**prefx    0x6A
   5618F:	C018      	ld         x, #+0x69C0
   56190:	6A00      	**prefx    0x6A
   56191:	BF29      	st         x, @0x69BF <eventData.2761.+0x2>
   56192:	6C00      	**prefx    0x6C
   56193:	9111      	ld         ah, @0x6B91 <g_mesh_data+0x4>
   56194:	1023      	st         ah, @(+0x10, y)
   56195:	6C00      	**prefx    0x6C
   56196:	9015      	ld         al, @0x6B90 <g_mesh_data+0x3>
   56197:	0F27      	st         al, @(+0xF, y)
   56198:	E0B5      	or         al, @0xFFE0 <register ah>
   56199:	04F0      	bne        +0x4 <___libcsrmesh_422+0xFA:0x5619D[p]>
   5619A:	0110      	ld         ah, #+0x1
   5619B:	1823      	st         ah, @(+0x18, y)
   5619C:	0AE0      	bra        +0xA <___libcsrmesh_422+0x103:0x561A6[p]>
   5619D:	0314      	ld         al, #+0x3
   5619E:	E411      	ld         ah, @0xFFE4 <register uy>
   5619F:	6A00      	**prefx    0x6A
   561A0:	BD18      	ld         x, #+0x69BD
   561A1:	FD09      	bc2        
   561A2:	0F0E      	ld         xh, @(+0xF, y)
   561A3:	109F      	bsr        @(+0x10, y)
   561A4:	0114      	ld         al, #+0x1
   561A5:	1827      	st         al, @(+0x18, y)
   561A6:	0118      	ld         x, #+0x1
   561A7:	6A00      	**prefx    0x6A
   561A8:	B329      	st         x, @0x69B3 <le_params.2762.+0x5>
   561A9:	6A00      	**prefx    0x6A
   561AA:	AE14      	ld         al, #+0x69AE
   561AB:	FB00      	**prefx    0xFB
   561AC:	F79C      	bsr        -0x509 <CSRSchedGetConfigParams:0x55CA3[p]>
   561AD:	0010      	ld         ah, #+0x0
   561AE:	0023      	st         ah, @(0x0, y)
   561AF:	0400      	**prefx    0x4
   561B0:	E814      	ld         al, #+0x3E8
   561B1:	0127      	st         al, @(+0x1, y)
   561B2:	6A00      	**prefx    0x6A
   561B3:	B915      	ld         al, @0x69B9 <le_params.2762.+0xB>
   561B4:	6A00      	**prefx    0x6A
   561B5:	B811      	ld         ah, @0x69B8 <le_params.2762.+0xA>
   561B6:	FC00      	**prefx    0xFC
   561B7:	0B00      	**prefx    0xB
   561B8:	4C9C      	bsr        -0x3F4B4 <__udivhi3:0x16D04[p]>
   561B9:	6A00      	**prefx    0x6A
   561BA:	C125      	st         al, @0x69C1 <config_param.2760.+0x1>
   561BB:	0018      	ld         x, #+0x0
   561BC:	002B      	st         x, @(0x0, y)
   561BD:	0400      	**prefx    0x4
   561BE:	E810      	ld         ah, #+0x3E8
   561BF:	0123      	st         ah, @(+0x1, y)
   561C0:	6A00      	**prefx    0x6A
   561C1:	BB15      	ld         al, @0x69BB <le_params.2762.+0xD>
   561C2:	6A00      	**prefx    0x6A
   561C3:	BA11      	ld         ah, @0x69BA <le_params.2762.+0xC>
   561C4:	FC00      	**prefx    0xFC
   561C5:	0B00      	**prefx    0xB
   561C6:	3E9C      	bsr        -0x3F4C2 <__udivhi3:0x16D04[p]>
   561C7:	6A00      	**prefx    0x6A
   561C8:	C225      	st         al, @0x69C2 <config_param.2760.+0x2>
   561C9:	6A00      	**prefx    0x6A
   561CA:	B415      	ld         al, @0x69B4 <le_params.2762.+0x6>
   561CB:	0009      	**unsigned
   561CC:	0100      	**prefx    0x1
   561CD:	FF90      	umult      #0xFF
   561CE:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   561CF:	0018      	ld         x, #+0x0
   561D0:	002B      	st         x, @(0x0, y)
   561D1:	0400      	**prefx    0x4
   561D2:	E810      	ld         ah, #+0x3E8
   561D3:	0123      	st         ah, @(+0x1, y)
   561D4:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   561D5:	FC00      	**prefx    0xFC
   561D6:	0B00      	**prefx    0xB
   561D7:	2D9C      	bsr        -0x3F4D3 <__udivhi3:0x16D04[p]>
   561D8:	0100      	**prefx    0x1
   561D9:	FFC4      	and        al, #0xFF
   561DA:	6A00      	**prefx    0x6A
   561DB:	C025      	st         al, @0x69C0 <config_param.2760.>
   561DC:	1514      	ld         al, #+0x15
   561DD:	6A00      	**prefx    0x6A
   561DE:	BD25      	st         al, @0x69BD <eventData.2761.>
   561DF:	0418      	ld         x, #+0x4
   561E0:	6A00      	**prefx    0x6A
   561E1:	BE29      	st         x, @0x69BE <eventData.2761.+0x1>
   561E2:	6A00      	**prefx    0x6A
   561E3:	C010      	ld         ah, #+0x69C0
   561E4:	6A00      	**prefx    0x6A
   561E5:	BF21      	st         ah, @0x69BF <eventData.2761.+0x2>
   561E6:	6C00      	**prefx    0x6C
   561E7:	9115      	ld         al, @0x6B91 <g_mesh_data+0x4>
   561E8:	0E27      	st         al, @(+0xE, y)
   561E9:	6C00      	**prefx    0x6C
   561EA:	9019      	ld         x, @0x6B90 <g_mesh_data+0x3>
   561EB:	0D2B      	st         x, @(+0xD, y)
   561EC:	E315      	ld         al, @0xFFE3 <register uxl>
   561ED:	0E13      	ld         ah, @(+0xE, y)
   561EE:	E0B5      	or         al, @0xFFE0 <register ah>
   561EF:	08F4      	beq        +0x8 <___libcsrmesh_422+0x154:0x561F7[p]>
   561F0:	0314      	ld         al, #+0x3
   561F1:	E411      	ld         ah, @0xFFE4 <register uy>
   561F2:	6A00      	**prefx    0x6A
   561F3:	BD18      	ld         x, #+0x69BD
   561F4:	FD09      	bc2        
   561F5:	0D0E      	ld         xh, @(+0xD, y)
   561F6:	0E9F      	bsr        @(+0xE, y)
   561F7:	6A00      	**prefx    0x6A
   561F8:	C614      	ld         al, #+0x69C6
   561F9:	0810      	ld         ah, #+0x8
   561FA:	FC00      	**prefx    0xFC
   561FB:	FE00      	**prefx    0xFE
   561FC:	D89C      	bsr        -0x40228 <BufWriteUint8:0x15FD4[p]>
   561FD:	6A00      	**prefx    0x6A
   561FE:	C614      	ld         al, #+0x69C6
   561FF:	6A00      	**prefx    0x6A
   56200:	C111      	ld         ah, @0x69C1 <config_param.2760.+0x1>
   56201:	FC00      	**prefx    0xFC
   56202:	FE00      	**prefx    0xFE
   56203:	DC9C      	bsr        -0x40224 <BufWriteUint16:0x15FDF[p]>
   56204:	6A00      	**prefx    0x6A
   56205:	C614      	ld         al, #+0x69C6
   56206:	6A00      	**prefx    0x6A
   56207:	C211      	ld         ah, @0x69C2 <config_param.2760.+0x2>
   56208:	FC00      	**prefx    0xFC
   56209:	FE00      	**prefx    0xFE
   5620A:	D59C      	bsr        -0x4022B <BufWriteUint16:0x15FDF[p]>
   5620B:	6A00      	**prefx    0x6A
   5620C:	C011      	ld         ah, @0x69C0 <config_param.2760.>
   5620D:	0100      	**prefx    0x1
   5620E:	FFC0      	and        ah, #0xFF
   5620F:	6A00      	**prefx    0x6A
   56210:	C614      	ld         al, #+0x69C6
   56211:	FC00      	**prefx    0xFC
   56212:	FE00      	**prefx    0xFE
   56213:	C19C      	bsr        -0x4023F <BufWriteUint8:0x15FD4[p]>
   56214:	6A00      	**prefx    0x6A
   56215:	C311      	ld         ah, @0x69C3 <config_param.2760.+0x3>
   56216:	0100      	**prefx    0x1
   56217:	FFC0      	and        ah, #0xFF
   56218:	6A00      	**prefx    0x6A
   56219:	C614      	ld         al, #+0x69C6
   5621A:	FC00      	**prefx    0xFC
   5621B:	FE00      	**prefx    0xFE
   5621C:	B89C      	bsr        -0x40248 <BufWriteUint8:0x15FD4[p]>
   5621D:	ED00      	**prefx    0xED
   5621E:	459C      	bsr        -0x12BB <___libcsrmesh_235:0x54F63[p]>
   5621F:	E111      	ld         ah, @0xFFE1 <register al>
   56220:	6A00      	**prefx    0x6A
   56221:	C614      	ld         al, #+0x69C6
   56222:	FC00      	**prefx    0xFC
   56223:	FE00      	**prefx    0xFE
   56224:	B09C      	bsr        -0x40250 <BufWriteUint8:0x15FD4[p]>
   56225:	231B      	ld         x, @(+0x23, y)
   56226:	0212      	ld         ah, @(+0x2, x)
   56227:	6A00      	**prefx    0x6A
   56228:	C614      	ld         al, #+0x69C6
   56229:	E019      	ld         x, @0xFFE0 <register ah>
   5622A:	0012      	ld         ah, @(0x0, x)
   5622B:	FC00      	**prefx    0xFC
   5622C:	FE00      	**prefx    0xFE
   5622D:	A79C      	bsr        -0x40259 <BufWriteUint8:0x15FD4[p]>
   5622E:	0910      	ld         ah, #+0x9
   5622F:	6A00      	**prefx    0x6A
   56230:	C521      	st         ah, @0x69C5 <g_config_model_data>
   56231:	0100      	**prefx    0x1
   56232:	9CE0      	bra        +0x9C <___libcsrmesh_422+0x22B:0x562CE[p]>
   56233:	0314      	ld         al, #+0x3
   56234:	0027      	st         al, @(0x0, y)
   56235:	6A00      	**prefx    0x6A
   56236:	BD14      	ld         al, #+0x69BD
   56237:	0100      	**prefx    0x1
   56238:	FF10      	ld         ah, #+0xFF
   56239:	FB00      	**prefx    0xFB
   5623A:	C900      	**prefx    0xC9
   5623B:	159C      	bsr        -0x536EB <MemSet:0x2B50[p]>
   5623C:	3618      	ld         x, #+0x36
   5623D:	6A00      	**prefx    0x6A
   5623E:	BD29      	st         x, @0x69BD <eventData.2761.>
   5623F:	0110      	ld         ah, #+0x1
   56240:	6A00      	**prefx    0x6A
   56241:	B321      	st         ah, @0x69B3 <le_params.2762.+0x5>
   56242:	6A00      	**prefx    0x6A
   56243:	AE14      	ld         al, #+0x69AE
   56244:	FA00      	**prefx    0xFA
   56245:	5E9C      	bsr        -0x5A2 <CSRSchedGetConfigParams:0x55CA3[p]>
   56246:	231B      	ld         x, @(+0x23, y)
   56247:	0016      	ld         al, @(0x0, x)
   56248:	E119      	ld         x, @0xFFE1 <register al>
   56249:	0416      	ld         al, @(+0x4, x)
   5624A:	1284      	cmp        al, #+0x12
   5624B:	2DF0      	bne        +0x2D <___libcsrmesh_422+0x1D5:0x56278[p]>
   5624C:	2313      	ld         ah, @(+0x23, y)
   5624D:	0230      	add        ah, #+0x2
   5624E:	0C23      	st         ah, @(+0xC, y)
   5624F:	E015      	ld         al, @0xFFE0 <register ah>
   56250:	FC00      	**prefx    0xFC
   56251:	FD00      	**prefx    0xFD
   56252:	639C      	bsr        -0x4029D <BufReadUint8:0x15FB5[p]>
   56253:	6A00      	**prefx    0x6A
   56254:	9B25      	st         al, @0x699B <GattInit>
   56255:	0C17      	ld         al, @(+0xC, y)
   56256:	FC00      	**prefx    0xFC
   56257:	FD00      	**prefx    0xFD
   56258:	5D9C      	bsr        -0x402A3 <BufReadUint8:0x15FB5[p]>
   56259:	6A00      	**prefx    0x6A
   5625A:	9C25      	st         al, @0x699C <GattInit+0x1>
   5625B:	0C17      	ld         al, @(+0xC, y)
   5625C:	FC00      	**prefx    0xFC
   5625D:	FD00      	**prefx    0xFD
   5625E:	579C      	bsr        -0x402A9 <BufReadUint8:0x15FB5[p]>
   5625F:	6A00      	**prefx    0x6A
   56260:	9D25      	st         al, @0x699D <GattInit+0x2>
   56261:	6A00      	**prefx    0x6A
   56262:	9B15      	ld         al, @0x699B <GattInit>
   56263:	6A00      	**prefx    0x6A
   56264:	AF85      	cmp        al, @0x69AF <le_params.2762.+0x1>
   56265:	022C      	bcz        +0x2 <___libcsrmesh_422+0x1C4:0x56267[p]>
   56266:	03E0      	bra        +0x3 <___libcsrmesh_422+0x1C6:0x56269[p]>
   56267:	6C00      	**prefx    0x6C
   56268:	3C25      	st         al, @0x6C3C <g_le_bearer_data+0x6>
   56269:	6A00      	**prefx    0x6A
   5626A:	9C15      	ld         al, @0x699C <GattInit+0x1>
   5626B:	6A00      	**prefx    0x6A
   5626C:	B025      	st         al, @0x69B0 <le_params.2762.+0x2>
   5626D:	6A00      	**prefx    0x6A
   5626E:	9D19      	ld         x, @0x699D <GattInit+0x2>
   5626F:	6A00      	**prefx    0x6A
   56270:	B129      	st         x, @0x69B1 <le_params.2762.+0x3>
   56271:	6A00      	**prefx    0x6A
   56272:	AE14      	ld         al, #+0x69AE
   56273:	FA00      	**prefx    0xFA
   56274:	709C      	bsr        -0x590 <CSRSchedSetConfigParams:0x55CE4[p]>
   56275:	3510      	ld         ah, #+0x35
   56276:	6A00      	**prefx    0x6A
   56277:	BD21      	st         ah, @0x69BD <eventData.2761.>
   56278:	6C00      	**prefx    0x6C
   56279:	3C15      	ld         al, @0x6C3C <g_le_bearer_data+0x6>
   5627A:	6A00      	**prefx    0x6A
   5627B:	9B25      	st         al, @0x699B <GattInit>
   5627C:	6A00      	**prefx    0x6A
   5627D:	B019      	ld         x, @0x69B0 <le_params.2762.+0x2>
   5627E:	6A00      	**prefx    0x6A
   5627F:	9C29      	st         x, @0x699C <GattInit+0x1>
   56280:	6A00      	**prefx    0x6A
   56281:	B111      	ld         ah, @0x69B1 <le_params.2762.+0x3>
   56282:	6A00      	**prefx    0x6A
   56283:	9D21      	st         ah, @0x699D <GattInit+0x2>
   56284:	0014      	ld         al, #+0x0
   56285:	6A00      	**prefx    0x6A
   56286:	BE25      	st         al, @0x69BE <eventData.2761.+0x1>
   56287:	6A00      	**prefx    0x6A
   56288:	9B18      	ld         x, #+0x699B
   56289:	6A00      	**prefx    0x6A
   5628A:	BF29      	st         x, @0x69BF <eventData.2761.+0x2>
   5628B:	6C00      	**prefx    0x6C
   5628C:	9111      	ld         ah, @0x6B91 <g_mesh_data+0x4>
   5628D:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   5628E:	6C00      	**prefx    0x6C
   5628F:	9015      	ld         al, @0x6B90 <g_mesh_data+0x3>
   56290:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56291:	E0B5      	or         al, @0xFFE0 <register ah>
   56292:	0CF4      	beq        +0xC <___libcsrmesh_422+0x1FB:0x5629E[p]>
   56293:	0314      	ld         al, #+0x3
   56294:	E411      	ld         ah, @0xFFE4 <register uy>
   56295:	6A00      	**prefx    0x6A
   56296:	BD18      	ld         x, #+0x69BD
   56297:	FD09      	bc2        
   56298:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   56299:	FE23      	st         ah, @(-0x2, y)
   5629A:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5629B:	FF23      	st         ah, @(-0x1, y)
   5629C:	FF0E      	ld         xh, @(-0x1, y)
   5629D:	FE9F      	bsr        @(-0x2, y)
   5629E:	2317      	ld         al, @(+0x23, y)
   5629F:	0234      	add        al, #+0x2
   562A0:	FC00      	**prefx    0xFC
   562A1:	FD00      	**prefx    0xFD
   562A2:	139C      	bsr        -0x402ED <BufReadUint8:0x15FB5[p]>
   562A3:	1727      	st         al, @(+0x17, y)
   562A4:	6A00      	**prefx    0x6A
   562A5:	C614      	ld         al, #+0x69C6
   562A6:	1410      	ld         ah, #+0x14
   562A7:	FC00      	**prefx    0xFC
   562A8:	FD00      	**prefx    0xFD
   562A9:	2B9C      	bsr        -0x402D5 <BufWriteUint8:0x15FD4[p]>
   562AA:	6A00      	**prefx    0x6A
   562AB:	C614      	ld         al, #+0x69C6
   562AC:	6A00      	**prefx    0x6A
   562AD:	9B11      	ld         ah, @0x699B <GattInit>
   562AE:	FC00      	**prefx    0xFC
   562AF:	FD00      	**prefx    0xFD
   562B0:	249C      	bsr        -0x402DC <BufWriteUint8:0x15FD4[p]>
   562B1:	6A00      	**prefx    0x6A
   562B2:	C614      	ld         al, #+0x69C6
   562B3:	6A00      	**prefx    0x6A
   562B4:	9C11      	ld         ah, @0x699C <GattInit+0x1>
   562B5:	FC00      	**prefx    0xFC
   562B6:	FD00      	**prefx    0xFD
   562B7:	1D9C      	bsr        -0x402E3 <BufWriteUint8:0x15FD4[p]>
   562B8:	6A00      	**prefx    0x6A
   562B9:	C614      	ld         al, #+0x69C6
   562BA:	6A00      	**prefx    0x6A
   562BB:	9D11      	ld         ah, @0x699D <GattInit+0x2>
   562BC:	FC00      	**prefx    0xFC
   562BD:	FD00      	**prefx    0xFD
   562BE:	169C      	bsr        -0x402EA <BufWriteUint8:0x15FD4[p]>
   562BF:	6A00      	**prefx    0x6A
   562C0:	C614      	ld         al, #+0x69C6
   562C1:	1713      	ld         ah, @(+0x17, y)
   562C2:	FC00      	**prefx    0xFC
   562C3:	FD00      	**prefx    0xFD
   562C4:	109C      	bsr        -0x402F0 <BufWriteUint8:0x15FD4[p]>
   562C5:	0514      	ld         al, #+0x5
   562C6:	6A00      	**prefx    0x6A
   562C7:	C525      	st         al, @0x69C5 <g_config_model_data>
   562C8:	06E0      	bra        +0x6 <___libcsrmesh_422+0x22B:0x562CE[p]>
   562C9:	0018      	ld         x, #+0x0
   562CA:	1A2B      	st         x, @(+0x1A, y)
   562CB:	1913      	ld         ah, @(+0x19, y)
   562CC:	0180      	cmp        ah, #+0x1
   562CD:	13F0      	bne        +0x13 <___libcsrmesh_422+0x23D:0x562E0[p]>
   562CE:	231B      	ld         x, @(+0x23, y)
   562CF:	0016      	ld         al, @(0x0, x)
   562D0:	E119      	ld         x, @0xFFE1 <register al>
   562D1:	0216      	ld         al, @(+0x2, x)
   562D2:	1B27      	st         al, @(+0x1B, y)
   562D3:	6A00      	**prefx    0x6A
   562D4:	C511      	ld         ah, @0x69C5 <g_config_model_data>
   562D5:	0B23      	st         ah, @(+0xB, y)
   562D6:	ED00      	**prefx    0xED
   562D7:	8C9C      	bsr        -0x1374 <___libcsrmesh_235:0x54F63[p]>
   562D8:	0027      	st         al, @(0x0, y)
   562D9:	0014      	ld         al, #+0x0
   562DA:	0127      	st         al, @(+0x1, y)
   562DB:	1B17      	ld         al, @(+0x1B, y)
   562DC:	0B13      	ld         ah, @(+0xB, y)
   562DD:	ED00      	**prefx    0xED
   562DE:	BA9C      	bsr        -0x1346 <___libcsrmesh_241:0x54F98[p]>
   562DF:	1A27      	st         al, @(+0x1A, y)
   562E0:	181B      	ld         x, @(+0x18, y)
   562E1:	0188      	cmp        x, #+0x1
   562E2:	03F0      	bne        +0x3 <___libcsrmesh_422+0x242:0x562E5[p]>
   562E3:	FB00      	**prefx    0xFB
   562E4:	769C      	bsr        -0x48A <___libcsrmesh_111:0x55E5A[p]>
   562E5:	1A17      	ld         al, @(+0x1A, y)
   562E6:	DA0F      	leave      #-0x26

0x000562E7 <BearerModelInit>:
   562E7:	FE0B      	enter      #-0x2
   562E8:	0B14      	ld         al, #+0xB
   562E9:	6A00      	**prefx    0x6A
   562EA:	D025      	st         al, @0x69D0 <GattDiscoverAllPrimaryServices>
   562EB:	6A00      	**prefx    0x6A
   562EC:	CE18      	ld         x, #+0x69CE
   562ED:	6300      	**prefx    0x63
   562EE:	FB14      	ld         al, #+0x62FB
   562EF:	0126      	st         al, @(+0x1, x)
   562F0:	0514      	ld         al, #+0x5
   562F1:	0026      	st         al, @(0x0, x)
   562F2:	0014      	ld         al, #+0x0
   562F3:	0426      	st         al, @(+0x4, x)
   562F4:	0526      	st         al, @(+0x5, x)
   562F5:	E315      	ld         al, @0xFFE3 <register uxl>
   562F6:	0010      	ld         ah, #+0x0
   562F7:	001B      	ld         x, @(0x0, y)
   562F8:	023C      	add        y, #+0x2
   562F9:	EC00      	**prefx    0xEC
   562FA:	6CE0      	bra        -0x1394 <___libcsrmesh_232:0x54F66[p]>

0x000562FB <___libcsrmesh_100>:
   562FB:	EE0B      	enter      #-0x12
   562FC:	0F27      	st         al, @(+0xF, y)
   562FD:	E119      	ld         x, @0xFFE1 <register al>
   562FE:	0012      	ld         ah, @(0x0, x)
   562FF:	0616      	ld         al, @(+0x6, x)
   56300:	E019      	ld         x, @0xFFE0 <register ah>
   56301:	0386      	cmp        al, @(+0x3, x)
   56302:	0100      	**prefx    0x1
   56303:	AAF0      	bne        +0xAA <___libcsrmesh_100+0xB2:0x563AD[p]>
   56304:	0416      	ld         al, @(+0x4, x)
   56305:	7F00      	**prefx    0x7F
   56306:	0034      	add        al, #+0x7F00
   56307:	0284      	cmp        al, #+0x2
   56308:	0100      	**prefx    0x1
   56309:	A4F8      	bcc        +0xA4 <___libcsrmesh_100+0xB2:0x563AD[p]>
   5630A:	EC00      	**prefx    0xEC
   5630B:	559C      	bsr        -0x13AB <___libcsrmesh_233:0x54F60[p]>
   5630C:	0927      	st         al, @(+0x9, y)
   5630D:	0F1B      	ld         x, @(+0xF, y)
   5630E:	0016      	ld         al, @(0x0, x)
   5630F:	E119      	ld         x, @0xFFE1 <register al>
   56310:	0416      	ld         al, @(+0x4, x)
   56311:	8100      	**prefx    0x81
   56312:	0084      	cmp        al, #-0x7F00
   56313:	06F4      	beq        +0x6 <___libcsrmesh_100+0x1E:0x56319[p]>
   56314:	8100      	**prefx    0x81
   56315:	0184      	cmp        al, #-0x7EFF
   56316:	0100      	**prefx    0x1
   56317:	96F0      	bne        +0x96 <___libcsrmesh_100+0xB2:0x563AD[p]>
   56318:	4AE0      	bra        +0x4A <___libcsrmesh_100+0x67:0x56362[p]>
   56319:	0F1B      	ld         x, @(+0xF, y)
   5631A:	0316      	ld         al, @(+0x3, x)
   5631B:	0784      	cmp        al, #+0x7
   5631C:	51F0      	bne        +0x51 <___libcsrmesh_100+0x72:0x5636D[p]>
   5631D:	0216      	ld         al, @(+0x2, x)
   5631E:	E119      	ld         x, @0xFFE1 <register al>
   5631F:	0016      	ld         al, @(0x0, x)
   56320:	0100      	**prefx    0x1
   56321:	FFC4      	and        al, #0xFF
   56322:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56323:	0327      	st         al, @(+0x3, y)
   56324:	0116      	ld         al, @(+0x1, x)
   56325:	08A0      	asl        #0x8
   56326:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
   56327:	0327      	st         al, @(+0x3, y)
   56328:	0216      	ld         al, @(+0x2, x)
   56329:	0100      	**prefx    0x1
   5632A:	FFC4      	and        al, #0xFF
   5632B:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5632C:	0427      	st         al, @(+0x4, y)
   5632D:	0316      	ld         al, @(+0x3, x)
   5632E:	08A0      	asl        #0x8
   5632F:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
   56330:	0427      	st         al, @(+0x4, y)
   56331:	0416      	ld         al, @(+0x4, x)
   56332:	0100      	**prefx    0x1
   56333:	FFC4      	and        al, #0xFF
   56334:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56335:	0527      	st         al, @(+0x5, y)
   56336:	0516      	ld         al, @(+0x5, x)
   56337:	08A0      	asl        #0x8
   56338:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
   56339:	0527      	st         al, @(+0x5, y)
   5633A:	061A      	ld         x, @(+0x6, x)
   5633B:	0A2B      	st         x, @(+0xA, y)
   5633C:	0314      	ld         al, #+0x3
   5633D:	0027      	st         al, @(0x0, y)
   5633E:	E415      	ld         al, @0xFFE4 <register uy>
   5633F:	0634      	add        al, #+0x6
   56340:	0100      	**prefx    0x1
   56341:	FF10      	ld         ah, #+0xFF
   56342:	FB00      	**prefx    0xFB
   56343:	C800      	**prefx    0xC8
   56344:	0C9C      	bsr        -0x537F4 <MemSet:0x2B50[p]>
   56345:	2418      	ld         x, #+0x24
   56346:	062B      	st         x, @(+0x6, y)
   56347:	0014      	ld         al, #+0x0
   56348:	0727      	st         al, @(+0x7, y)
   56349:	E419      	ld         x, @0xFFE4 <register uy>
   5634A:	0338      	add        x, #+0x3
   5634B:	082B      	st         x, @(+0x8, y)
   5634C:	6C00      	**prefx    0x6C
   5634D:	9115      	ld         al, @0x6B91 <g_mesh_data+0x4>
   5634E:	0E27      	st         al, @(+0xE, y)
   5634F:	6C00      	**prefx    0x6C
   56350:	9019      	ld         x, @0x6B90 <g_mesh_data+0x3>
   56351:	0D2B      	st         x, @(+0xD, y)
   56352:	E315      	ld         al, @0xFFE3 <register uxl>
   56353:	0E1B      	ld         x, @(+0xE, y)
   56354:	E3B5      	or         al, @0xFFE3 <register uxl>
   56355:	03F0      	bne        +0x3 <___libcsrmesh_100+0x5D:0x56358[p]>
   56356:	0114      	ld         al, #+0x1
   56357:	14E0      	bra        +0x14 <___libcsrmesh_100+0x70:0x5636B[p]>
   56358:	0314      	ld         al, #+0x3
   56359:	E411      	ld         ah, @0xFFE4 <register uy>
   5635A:	E419      	ld         x, @0xFFE4 <register uy>
   5635B:	0638      	add        x, #+0x6
   5635C:	FD09      	bc2        
   5635D:	0D0E      	ld         xh, @(+0xD, y)
   5635E:	0E9F      	bsr        @(+0xE, y)
   5635F:	0118      	ld         x, #+0x1
   56360:	0B2B      	st         x, @(+0xB, y)
   56361:	0FE0      	bra        +0xF <___libcsrmesh_100+0x75:0x56370[p]>
   56362:	0F1B      	ld         x, @(+0xF, y)
   56363:	0316      	ld         al, @(+0x3, x)
   56364:	0184      	cmp        al, #+0x1
   56365:	08F0      	bne        +0x8 <___libcsrmesh_100+0x72:0x5636D[p]>
   56366:	0216      	ld         al, @(+0x2, x)
   56367:	E119      	ld         x, @0xFFE1 <register al>
   56368:	0016      	ld         al, @(0x0, x)
   56369:	0A27      	st         al, @(+0xA, y)
   5636A:	0014      	ld         al, #+0x0
   5636B:	0B27      	st         al, @(+0xB, y)
   5636C:	04E0      	bra        +0x4 <___libcsrmesh_100+0x75:0x56370[p]>
   5636D:	0018      	ld         x, #+0x0
   5636E:	0B2B      	st         x, @(+0xB, y)
   5636F:	0A2B      	st         x, @(+0xA, y)
   56370:	E415      	ld         al, @0xFFE4 <register uy>
   56371:	0534      	add        al, #+0x5
   56372:	0027      	st         al, @(0x0, y)
   56373:	FE34      	add        al, #-0x2
   56374:	E411      	ld         ah, @0xFFE4 <register uy>
   56375:	0430      	add        ah, #+0x4
   56376:	F200      	**prefx    0xF2
   56377:	589C      	bsr        -0xDA8 <___libcsrmesh_331:0x555CF[p]>
   56378:	0100      	**prefx    0x1
   56379:	8114      	ld         al, #+0x81
   5637A:	091B      	ld         x, @(+0x9, y)
   5637B:	0026      	st         al, @(0x0, x)
   5637C:	0214      	ld         al, #+0x2
   5637D:	0126      	st         al, @(+0x1, x)
   5637E:	0317      	ld         al, @(+0x3, y)
   5637F:	0100      	**prefx    0x1
   56380:	FFC4      	and        al, #0xFF
   56381:	0226      	st         al, @(+0x2, x)
   56382:	0313      	ld         ah, @(+0x3, y)
   56383:	0009      	**unsigned
   56384:	08A4      	lsr        #0x8
   56385:	0322      	st         ah, @(+0x3, x)
   56386:	0417      	ld         al, @(+0x4, y)
   56387:	0100      	**prefx    0x1
   56388:	FFC4      	and        al, #0xFF
   56389:	0426      	st         al, @(+0x4, x)
   5638A:	0413      	ld         ah, @(+0x4, y)
   5638B:	0009      	**unsigned
   5638C:	08A4      	lsr        #0x8
   5638D:	0522      	st         ah, @(+0x5, x)
   5638E:	0517      	ld         al, @(+0x5, y)
   5638F:	0100      	**prefx    0x1
   56390:	FFC4      	and        al, #0xFF
   56391:	0626      	st         al, @(+0x6, x)
   56392:	0513      	ld         ah, @(+0x5, y)
   56393:	0009      	**unsigned
   56394:	08A4      	lsr        #0x8
   56395:	0722      	st         ah, @(+0x7, x)
   56396:	0A17      	ld         al, @(+0xA, y)
   56397:	0826      	st         al, @(+0x8, x)
   56398:	0F1B      	ld         x, @(+0xF, y)
   56399:	0016      	ld         al, @(0x0, x)
   5639A:	E119      	ld         x, @0xFFE1 <register al>
   5639B:	0216      	ld         al, @(+0x2, x)
   5639C:	0C27      	st         al, @(+0xC, y)
   5639D:	EC00      	**prefx    0xEC
   5639E:	C59C      	bsr        -0x143B <___libcsrmesh_235:0x54F63[p]>
   5639F:	0027      	st         al, @(0x0, y)
   563A0:	0014      	ld         al, #+0x0
   563A1:	0127      	st         al, @(+0x1, y)
   563A2:	0C17      	ld         al, @(+0xC, y)
   563A3:	0910      	ld         ah, #+0x9
   563A4:	EC00      	**prefx    0xEC
   563A5:	F39C      	bsr        -0x140D <___libcsrmesh_241:0x54F98[p]>
   563A6:	0B1B      	ld         x, @(+0xB, y)
   563A7:	0188      	cmp        x, #+0x1
   563A8:	03F0      	bne        +0x3 <___libcsrmesh_100+0xB0:0x563AB[p]>
   563A9:	FB00      	**prefx    0xFB
   563AA:	B09C      	bsr        -0x550 <___libcsrmesh_111:0x55E5A[p]>
   563AB:	0014      	ld         al, #+0x0
   563AC:	02E0      	bra        +0x2 <___libcsrmesh_100+0xB3:0x563AE[p]>
   563AD:	FF14      	ld         al, #-0x1
   563AE:	EE0F      	leave      #-0x12

0x000563AF <___libcsrmesh_129>:
   563AF:	0D90      	smult      #+0xD
   563B0:	0600      	**prefx    0x6
   563B1:	A0E0      	bra        +0x5A0 <___libcsrmesh_155:0x56951[p]>

0x000563B2 <___libcsrmesh_125>:
   563B2:	E40B      	enter      #-0x1C
   563B3:	1827      	st         al, @(+0x18, y)
   563B4:	1923      	st         ah, @(+0x19, y)
   563B5:	0D14      	ld         al, #+0xD
   563B6:	0600      	**prefx    0x6
   563B7:	9C9C      	bsr        +0x59C <___libcsrmesh_156:0x56953[p]>
   563B8:	1127      	st         al, @(+0x11, y)
   563B9:	0D14      	ld         al, #+0xD
   563BA:	0600      	**prefx    0x6
   563BB:	989C      	bsr        +0x598 <___libcsrmesh_156:0x56953[p]>
   563BC:	1027      	st         al, @(+0x10, y)
   563BD:	0D14      	ld         al, #+0xD
   563BE:	0600      	**prefx    0x6
   563BF:	949C      	bsr        +0x594 <___libcsrmesh_156:0x56953[p]>
   563C0:	0F27      	st         al, @(+0xF, y)
   563C1:	181B      	ld         x, @(+0x18, y)
   563C2:	001A      	ld         x, @(0x0, x)
   563C3:	172B      	st         x, @(+0x17, y)
   563C4:	181B      	ld         x, @(+0x18, y)
   563C5:	011A      	ld         x, @(+0x1, x)
   563C6:	162B      	st         x, @(+0x16, y)
   563C7:	181B      	ld         x, @(+0x18, y)
   563C8:	021A      	ld         x, @(+0x2, x)
   563C9:	152B      	st         x, @(+0x15, y)
   563CA:	191B      	ld         x, @(+0x19, y)
   563CB:	001A      	ld         x, @(0x0, x)
   563CC:	142B      	st         x, @(+0x14, y)
   563CD:	191B      	ld         x, @(+0x19, y)
   563CE:	011A      	ld         x, @(+0x1, x)
   563CF:	132B      	st         x, @(+0x13, y)
   563D0:	191B      	ld         x, @(+0x19, y)
   563D1:	021A      	ld         x, @(+0x2, x)
   563D2:	122B      	st         x, @(+0x12, y)
   563D3:	171B      	ld         x, @(+0x17, y)
   563D4:	009A      	tst        @(0x0, x)
   563D5:	15F0      	bne        +0x15 <___libcsrmesh_125+0x38:0x563EA[p]>
   563D6:	161B      	ld         x, @(+0x16, y)
   563D7:	009A      	tst        @(0x0, x)
   563D8:	12F0      	bne        +0x12 <___libcsrmesh_125+0x38:0x563EA[p]>
   563D9:	151B      	ld         x, @(+0x15, y)
   563DA:	0016      	ld         al, @(0x0, x)
   563DB:	0184      	cmp        al, #+0x1
   563DC:	0EF0      	bne        +0xE <___libcsrmesh_125+0x38:0x563EA[p]>
   563DD:	0116      	ld         al, @(+0x1, x)
   563DE:	0184      	cmp        al, #+0x1
   563DF:	0BF0      	bne        +0xB <___libcsrmesh_125+0x38:0x563EA[p]>
   563E0:	0014      	ld         al, #+0x0
   563E1:	141B      	ld         x, @(+0x14, y)
   563E2:	0026      	st         al, @(0x0, x)
   563E3:	131B      	ld         x, @(+0x13, y)
   563E4:	0026      	st         al, @(0x0, x)
   563E5:	0114      	ld         al, #+0x1
   563E6:	121B      	ld         x, @(+0x12, y)
   563E7:	0026      	st         al, @(0x0, x)
   563E8:	0126      	st         al, @(+0x1, x)
   563E9:	7AE0      	bra        +0x7A <___libcsrmesh_125+0xB1:0x56463[p]>
   563EA:	1517      	ld         al, @(+0x15, y)
   563EB:	1113      	ld         ah, @(+0x11, y)
   563EC:	0600      	**prefx    0x6
   563ED:	289C      	bsr        +0x628 <___libcsrmesh_164:0x56A15[p]>
   563EE:	101B      	ld         x, @(+0x10, y)
   563EF:	002B      	st         x, @(0x0, y)
   563F0:	1717      	ld         al, @(+0x17, y)
   563F1:	1113      	ld         ah, @(+0x11, y)
   563F2:	0400      	**prefx    0x4
   563F3:	179C      	bsr        +0x417 <___libcsrmesh_165:0x5680A[p]>
   563F4:	1117      	ld         al, @(+0x11, y)
   563F5:	0027      	st         al, @(0x0, y)
   563F6:	1717      	ld         al, @(+0x17, y)
   563F7:	1113      	ld         ah, @(+0x11, y)
   563F8:	0600      	**prefx    0x6
   563F9:	219C      	bsr        +0x621 <___libcsrmesh_162:0x56A1A[p]>
   563FA:	101B      	ld         x, @(+0x10, y)
   563FB:	002B      	st         x, @(0x0, y)
   563FC:	E315      	ld         al, @0xFFE3 <register uxl>
   563FD:	1113      	ld         ah, @(+0x11, y)
   563FE:	0600      	**prefx    0x6
   563FF:	029C      	bsr        +0x602 <___libcsrmesh_163:0x56A01[p]>
   56400:	0F17      	ld         al, @(+0xF, y)
   56401:	0027      	st         al, @(0x0, y)
   56402:	1017      	ld         al, @(+0x10, y)
   56403:	E111      	ld         ah, @0xFFE1 <register al>
   56404:	0600      	**prefx    0x6
   56405:	159C      	bsr        +0x615 <___libcsrmesh_162:0x56A1A[p]>
   56406:	101B      	ld         x, @(+0x10, y)
   56407:	002B      	st         x, @(0x0, y)
   56408:	E315      	ld         al, @0xFFE3 <register uxl>
   56409:	0F13      	ld         ah, @(+0xF, y)
   5640A:	0600      	**prefx    0x6
   5640B:	0F9C      	bsr        +0x60F <___libcsrmesh_162:0x56A1A[p]>
   5640C:	1317      	ld         al, @(+0x13, y)
   5640D:	0027      	st         al, @(0x0, y)
   5640E:	1617      	ld         al, @(+0x16, y)
   5640F:	E111      	ld         ah, @0xFFE1 <register al>
   56410:	0600      	**prefx    0x6
   56411:	099C      	bsr        +0x609 <___libcsrmesh_162:0x56A1A[p]>
   56412:	121B      	ld         x, @(+0x12, y)
   56413:	002B      	st         x, @(0x0, y)
   56414:	1317      	ld         al, @(+0x13, y)
   56415:	1513      	ld         ah, @(+0x15, y)
   56416:	0600      	**prefx    0x6
   56417:	EA9C      	bsr        +0x5EA <___libcsrmesh_163:0x56A01[p]>
   56418:	1317      	ld         al, @(+0x13, y)
   56419:	E111      	ld         ah, @0xFFE1 <register al>
   5641A:	0600      	**prefx    0x6
   5641B:	FA9C      	bsr        +0x5FA <___libcsrmesh_164:0x56A15[p]>
   5641C:	0F17      	ld         al, @(+0xF, y)
   5641D:	0027      	st         al, @(0x0, y)
   5641E:	1317      	ld         al, @(+0x13, y)
   5641F:	1713      	ld         ah, @(+0x17, y)
   56420:	0600      	**prefx    0x6
   56421:	E09C      	bsr        +0x5E0 <___libcsrmesh_163:0x56A01[p]>
   56422:	1317      	ld         al, @(+0x13, y)
   56423:	E111      	ld         ah, @0xFFE1 <register al>
   56424:	0600      	**prefx    0x6
   56425:	F09C      	bsr        +0x5F0 <___libcsrmesh_164:0x56A15[p]>
   56426:	1317      	ld         al, @(+0x13, y)
   56427:	0010      	ld         ah, #+0x0
   56428:	0300      	**prefx    0x3
   56429:	F99C      	bsr        +0x2F9 <___libcsrmesh_161:0x56722[p]>
   5642A:	E199      	tst        @0xFFE1 <register al>
   5642B:	05F0      	bne        +0x5 <___libcsrmesh_125+0x7E:0x56430[p]>
   5642C:	1317      	ld         al, @(+0x13, y)
   5642D:	0300      	**prefx    0x3
   5642E:	049C      	bsr        +0x304 <___libcsrmesh_168:0x56732[p]>
   5642F:	12E0      	bra        +0x12 <___libcsrmesh_125+0x8F:0x56441[p]>
   56430:	E419      	ld         x, @0xFFE4 <register uy>
   56431:	0138      	add        x, #+0x1
   56432:	002B      	st         x, @(0x0, y)
   56433:	1317      	ld         al, @(+0x13, y)
   56434:	6100      	**prefx    0x61
   56435:	D810      	ld         ah, #+0x60D8
   56436:	0300      	**prefx    0x3
   56437:	209C      	bsr        +0x320 <___libcsrmesh_158:0x56757[p]>
   56438:	E415      	ld         al, @0xFFE4 <register uy>
   56439:	0134      	add        al, #+0x1
   5643A:	0300      	**prefx    0x3
   5643B:	F79C      	bsr        +0x2F7 <___libcsrmesh_168:0x56732[p]>
   5643C:	E415      	ld         al, @0xFFE4 <register uy>
   5643D:	0134      	add        al, #+0x1
   5643E:	1313      	ld         ah, @(+0x13, y)
   5643F:	0400      	**prefx    0x4
   56440:	539C      	bsr        +0x453 <___libcsrmesh_160:0x56893[p]>
   56441:	1017      	ld         al, @(+0x10, y)
   56442:	1413      	ld         ah, @(+0x14, y)
   56443:	0600      	**prefx    0x6
   56444:	D19C      	bsr        +0x5D1 <___libcsrmesh_164:0x56A15[p]>
   56445:	1117      	ld         al, @(+0x11, y)
   56446:	0027      	st         al, @(0x0, y)
   56447:	0F17      	ld         al, @(+0xF, y)
   56448:	E111      	ld         ah, @0xFFE1 <register al>
   56449:	0600      	**prefx    0x6
   5644A:	D09C      	bsr        +0x5D0 <___libcsrmesh_162:0x56A1A[p]>
   5644B:	141B      	ld         x, @(+0x14, y)
   5644C:	002B      	st         x, @(0x0, y)
   5644D:	E315      	ld         al, @0xFFE3 <register uxl>
   5644E:	1113      	ld         ah, @(+0x11, y)
   5644F:	0400      	**prefx    0x4
   56450:	BA9C      	bsr        +0x3BA <___libcsrmesh_165:0x5680A[p]>
   56451:	1117      	ld         al, @(+0x11, y)
   56452:	0027      	st         al, @(0x0, y)
   56453:	0F17      	ld         al, @(+0xF, y)
   56454:	1413      	ld         ah, @(+0x14, y)
   56455:	0400      	**prefx    0x4
   56456:	B49C      	bsr        +0x3B4 <___libcsrmesh_165:0x5680A[p]>
   56457:	111B      	ld         x, @(+0x11, y)
   56458:	002B      	st         x, @(0x0, y)
   56459:	E315      	ld         al, @0xFFE3 <register uxl>
   5645A:	1013      	ld         ah, @(+0x10, y)
   5645B:	0600      	**prefx    0x6
   5645C:	A59C      	bsr        +0x5A5 <___libcsrmesh_163:0x56A01[p]>
   5645D:	1317      	ld         al, @(+0x13, y)
   5645E:	0027      	st         al, @(0x0, y)
   5645F:	1117      	ld         al, @(+0x11, y)
   56460:	1313      	ld         ah, @(+0x13, y)
   56461:	0400      	**prefx    0x4
   56462:	A89C      	bsr        +0x3A8 <___libcsrmesh_165:0x5680A[p]>
   56463:	0314      	ld         al, #+0x3
   56464:	FF00      	**prefx    0xFF
   56465:	4A9C      	bsr        -0xB6 <___libcsrmesh_129:0x563AF[p]>
   56466:	E40F      	leave      #-0x1C

0x00056467 <___libcsrmesh_126>:
   56467:	ED0B      	enter      #-0x13
   56468:	0F27      	st         al, @(+0xF, y)
   56469:	1023      	st         ah, @(+0x10, y)
   5646A:	0C14      	ld         al, #+0xC
   5646B:	131B      	ld         x, @(+0x13, y)
   5646C:	0026      	st         al, @(0x0, x)
   5646D:	141B      	ld         x, @(+0x14, y)
   5646E:	0026      	st         al, @(0x0, x)
   5646F:	0D14      	ld         al, #+0xD
   56470:	0500      	**prefx    0x5
   56471:	E29C      	bsr        +0x4E2 <___libcsrmesh_156:0x56953[p]>
   56472:	0E27      	st         al, @(+0xE, y)
   56473:	0D14      	ld         al, #+0xD
   56474:	0500      	**prefx    0x5
   56475:	DE9C      	bsr        +0x4DE <___libcsrmesh_156:0x56953[p]>
   56476:	0127      	st         al, @(+0x1, y)
   56477:	0D14      	ld         al, #+0xD
   56478:	0500      	**prefx    0x5
   56479:	DA9C      	bsr        +0x4DA <___libcsrmesh_156:0x56953[p]>
   5647A:	0227      	st         al, @(+0x2, y)
   5647B:	0D14      	ld         al, #+0xD
   5647C:	0500      	**prefx    0x5
   5647D:	D69C      	bsr        +0x4D6 <___libcsrmesh_156:0x56953[p]>
   5647E:	0327      	st         al, @(+0x3, y)
   5647F:	011B      	ld         x, @(+0x1, y)
   56480:	0014      	ld         al, #+0x0
   56481:	0026      	st         al, @(0x0, x)
   56482:	021B      	ld         x, @(+0x2, y)
   56483:	0026      	st         al, @(0x0, x)
   56484:	031B      	ld         x, @(+0x3, y)
   56485:	0114      	ld         al, #+0x1
   56486:	0026      	st         al, @(0x0, x)
   56487:	031B      	ld         x, @(+0x3, y)
   56488:	0126      	st         al, @(+0x1, x)
   56489:	0100      	**prefx    0x1
   5648A:	BF18      	ld         x, #+0xBF
   5648B:	0D2B      	st         x, @(+0xD, y)
   5648C:	E415      	ld         al, @0xFFE4 <register uy>
   5648D:	0134      	add        al, #+0x1
   5648E:	E111      	ld         ah, @0xFFE1 <register al>
   5648F:	FF00      	**prefx    0xFF
   56490:	229C      	bsr        -0xDE <___libcsrmesh_125:0x563B2[p]>
   56491:	1017      	ld         al, @(+0x10, y)
   56492:	0D13      	ld         ah, @(+0xD, y)
   56493:	0300      	**prefx    0x3
   56494:	8E9C      	bsr        +0x28E <___libcsrmesh_161:0x56722[p]>
   56495:	0184      	cmp        al, #+0x1
   56496:	0100      	**prefx    0x1
   56497:	B8F0      	bne        +0xB8 <___libcsrmesh_126+0xE8:0x5654F[p]>
   56498:	0D14      	ld         al, #+0xD
   56499:	0500      	**prefx    0x5
   5649A:	B99C      	bsr        +0x4B9 <___libcsrmesh_156:0x56953[p]>
   5649B:	0927      	st         al, @(+0x9, y)
   5649C:	0D14      	ld         al, #+0xD
   5649D:	0500      	**prefx    0x5
   5649E:	B59C      	bsr        +0x4B5 <___libcsrmesh_156:0x56953[p]>
   5649F:	0A27      	st         al, @(+0xA, y)
   564A0:	0D14      	ld         al, #+0xD
   564A1:	0500      	**prefx    0x5
   564A2:	B19C      	bsr        +0x4B1 <___libcsrmesh_156:0x56953[p]>
   564A3:	0B27      	st         al, @(+0xB, y)
   564A4:	0D14      	ld         al, #+0xD
   564A5:	0500      	**prefx    0x5
   564A6:	AD9C      	bsr        +0x4AD <___libcsrmesh_156:0x56953[p]>
   564A7:	0C27      	st         al, @(+0xC, y)
   564A8:	0117      	ld         al, @(+0x1, y)
   564A9:	0427      	st         al, @(+0x4, y)
   564AA:	021B      	ld         x, @(+0x2, y)
   564AB:	052B      	st         x, @(+0x5, y)
   564AC:	0317      	ld         al, @(+0x3, y)
   564AD:	0627      	st         al, @(+0x6, y)
   564AE:	0F1B      	ld         x, @(+0xF, y)
   564AF:	001A      	ld         x, @(0x0, x)
   564B0:	072B      	st         x, @(+0x7, y)
   564B1:	0F1B      	ld         x, @(+0xF, y)
   564B2:	011A      	ld         x, @(+0x1, x)
   564B3:	082B      	st         x, @(+0x8, y)
   564B4:	071B      	ld         x, @(+0x7, y)
   564B5:	009A      	tst        @(0x0, x)
   564B6:	12F0      	bne        +0x12 <___libcsrmesh_126+0x61:0x564C8[p]>
   564B7:	081B      	ld         x, @(+0x8, y)
   564B8:	009A      	tst        @(0x0, x)
   564B9:	0FF0      	bne        +0xF <___libcsrmesh_126+0x61:0x564C8[p]>
   564BA:	0417      	ld         al, @(+0x4, y)
   564BB:	E111      	ld         ah, @0xFFE1 <register al>
   564BC:	0400      	**prefx    0x4
   564BD:	D69C      	bsr        +0x3D6 <___libcsrmesh_160:0x56893[p]>
   564BE:	0517      	ld         al, @(+0x5, y)
   564BF:	E111      	ld         ah, @0xFFE1 <register al>
   564C0:	0400      	**prefx    0x4
   564C1:	D29C      	bsr        +0x3D2 <___libcsrmesh_160:0x56893[p]>
   564C2:	0617      	ld         al, @(+0x6, y)
   564C3:	E111      	ld         ah, @0xFFE1 <register al>
   564C4:	0400      	**prefx    0x4
   564C5:	CE9C      	bsr        +0x3CE <___libcsrmesh_160:0x56893[p]>
   564C6:	0100      	**prefx    0x1
   564C7:	85E0      	bra        +0x85 <___libcsrmesh_126+0xE5:0x5654C[p]>
   564C8:	041B      	ld         x, @(+0x4, y)
   564C9:	009A      	tst        @(0x0, x)
   564CA:	18F0      	bne        +0x18 <___libcsrmesh_126+0x7B:0x564E2[p]>
   564CB:	051B      	ld         x, @(+0x5, y)
   564CC:	009A      	tst        @(0x0, x)
   564CD:	15F0      	bne        +0x15 <___libcsrmesh_126+0x7B:0x564E2[p]>
   564CE:	061B      	ld         x, @(+0x6, y)
   564CF:	0016      	ld         al, @(0x0, x)
   564D0:	0184      	cmp        al, #+0x1
   564D1:	11F0      	bne        +0x11 <___libcsrmesh_126+0x7B:0x564E2[p]>
   564D2:	0116      	ld         al, @(+0x1, x)
   564D3:	0184      	cmp        al, #+0x1
   564D4:	0EF0      	bne        +0xE <___libcsrmesh_126+0x7B:0x564E2[p]>
   564D5:	0717      	ld         al, @(+0x7, y)
   564D6:	0413      	ld         ah, @(+0x4, y)
   564D7:	0400      	**prefx    0x4
   564D8:	BB9C      	bsr        +0x3BB <___libcsrmesh_160:0x56893[p]>
   564D9:	0817      	ld         al, @(+0x8, y)
   564DA:	0513      	ld         ah, @(+0x5, y)
   564DB:	0400      	**prefx    0x4
   564DC:	B79C      	bsr        +0x3B7 <___libcsrmesh_160:0x56893[p]>
   564DD:	0114      	ld         al, #+0x1
   564DE:	061B      	ld         x, @(+0x6, y)
   564DF:	0026      	st         al, @(0x0, x)
   564E0:	0126      	st         al, @(+0x1, x)
   564E1:	6BE0      	bra        +0x6B <___libcsrmesh_126+0xE5:0x5654C[p]>
   564E2:	0617      	ld         al, @(+0x6, y)
   564E3:	0913      	ld         ah, @(+0x9, y)
   564E4:	0500      	**prefx    0x5
   564E5:	309C      	bsr        +0x530 <___libcsrmesh_164:0x56A15[p]>
   564E6:	0A1B      	ld         x, @(+0xA, y)
   564E7:	002B      	st         x, @(0x0, y)
   564E8:	0917      	ld         al, @(+0x9, y)
   564E9:	0613      	ld         ah, @(+0x6, y)
   564EA:	0500      	**prefx    0x5
   564EB:	169C      	bsr        +0x516 <___libcsrmesh_163:0x56A01[p]>
   564EC:	0917      	ld         al, @(+0x9, y)
   564ED:	0027      	st         al, @(0x0, y)
   564EE:	0713      	ld         ah, @(+0x7, y)
   564EF:	0500      	**prefx    0x5
   564F0:	119C      	bsr        +0x511 <___libcsrmesh_163:0x56A01[p]>
   564F1:	0A1B      	ld         x, @(+0xA, y)
   564F2:	002B      	st         x, @(0x0, y)
   564F3:	E315      	ld         al, @0xFFE3 <register uxl>
   564F4:	0813      	ld         ah, @(+0x8, y)
   564F5:	0500      	**prefx    0x5
   564F6:	0B9C      	bsr        +0x50B <___libcsrmesh_163:0x56A01[p]>
   564F7:	0917      	ld         al, @(+0x9, y)
   564F8:	0027      	st         al, @(0x0, y)
   564F9:	0413      	ld         ah, @(+0x4, y)
   564FA:	0300      	**prefx    0x3
   564FB:	0F9C      	bsr        +0x30F <___libcsrmesh_165:0x5680A[p]>
   564FC:	0A1B      	ld         x, @(+0xA, y)
   564FD:	002B      	st         x, @(0x0, y)
   564FE:	E315      	ld         al, @0xFFE3 <register uxl>
   564FF:	0513      	ld         ah, @(+0x5, y)
   56500:	0300      	**prefx    0x3
   56501:	099C      	bsr        +0x309 <___libcsrmesh_165:0x5680A[p]>
   56502:	091B      	ld         x, @(+0x9, y)
   56503:	009A      	tst        @(0x0, x)
   56504:	09F0      	bne        +0x9 <___libcsrmesh_126+0xA6:0x5650D[p]>
   56505:	0414      	ld         al, #+0x4
   56506:	FF00      	**prefx    0xFF
   56507:	A89C      	bsr        -0x158 <___libcsrmesh_129:0x563AF[p]>
   56508:	0414      	ld         al, #+0x4
   56509:	FF00      	**prefx    0xFF
   5650A:	A59C      	bsr        -0x15B <___libcsrmesh_129:0x563AF[p]>
   5650B:	0214      	ld         al, #+0x2
   5650C:	70E0      	bra        +0x70 <___libcsrmesh_126+0x115:0x5657C[p]>
   5650D:	0617      	ld         al, @(+0x6, y)
   5650E:	0027      	st         al, @(0x0, y)
   5650F:	0913      	ld         ah, @(+0x9, y)
   56510:	0500      	**prefx    0x5
   56511:	F09C      	bsr        +0x4F0 <___libcsrmesh_163:0x56A01[p]>
   56512:	0917      	ld         al, @(+0x9, y)
   56513:	0B13      	ld         ah, @(+0xB, y)
   56514:	0500      	**prefx    0x5
   56515:	009C      	bsr        +0x500 <___libcsrmesh_164:0x56A15[p]>
   56516:	0C1B      	ld         x, @(+0xC, y)
   56517:	002B      	st         x, @(0x0, y)
   56518:	0B17      	ld         al, @(+0xB, y)
   56519:	0913      	ld         ah, @(+0x9, y)
   5651A:	0500      	**prefx    0x5
   5651B:	E69C      	bsr        +0x4E6 <___libcsrmesh_163:0x56A01[p]>
   5651C:	0B17      	ld         al, @(+0xB, y)
   5651D:	0027      	st         al, @(0x0, y)
   5651E:	0413      	ld         ah, @(+0x4, y)
   5651F:	0500      	**prefx    0x5
   56520:	E19C      	bsr        +0x4E1 <___libcsrmesh_163:0x56A01[p]>
   56521:	091B      	ld         x, @(+0x9, y)
   56522:	002B      	st         x, @(0x0, y)
   56523:	0B17      	ld         al, @(+0xB, y)
   56524:	E111      	ld         ah, @0xFFE1 <register al>
   56525:	0500      	**prefx    0x5
   56526:	F49C      	bsr        +0x4F4 <___libcsrmesh_162:0x56A1A[p]>
   56527:	0A17      	ld         al, @(+0xA, y)
   56528:	0413      	ld         ah, @(+0x4, y)
   56529:	0500      	**prefx    0x5
   5652A:	EB9C      	bsr        +0x4EB <___libcsrmesh_164:0x56A15[p]>
   5652B:	0417      	ld         al, @(+0x4, y)
   5652C:	0027      	st         al, @(0x0, y)
   5652D:	0913      	ld         ah, @(+0x9, y)
   5652E:	0300      	**prefx    0x3
   5652F:	DB9C      	bsr        +0x2DB <___libcsrmesh_165:0x5680A[p]>
   56530:	041B      	ld         x, @(+0x4, y)
   56531:	002B      	st         x, @(0x0, y)
   56532:	E315      	ld         al, @0xFFE3 <register uxl>
   56533:	0C13      	ld         ah, @(+0xC, y)
   56534:	0300      	**prefx    0x3
   56535:	D59C      	bsr        +0x2D5 <___libcsrmesh_165:0x5680A[p]>
   56536:	0B17      	ld         al, @(+0xB, y)
   56537:	0027      	st         al, @(0x0, y)
   56538:	0413      	ld         ah, @(+0x4, y)
   56539:	0300      	**prefx    0x3
   5653A:	D09C      	bsr        +0x2D0 <___libcsrmesh_165:0x5680A[p]>
   5653B:	0B1B      	ld         x, @(+0xB, y)
   5653C:	002B      	st         x, @(0x0, y)
   5653D:	E315      	ld         al, @0xFFE3 <register uxl>
   5653E:	0A13      	ld         ah, @(+0xA, y)
   5653F:	0500      	**prefx    0x5
   56540:	C19C      	bsr        +0x4C1 <___libcsrmesh_163:0x56A01[p]>
   56541:	0C17      	ld         al, @(+0xC, y)
   56542:	0027      	st         al, @(0x0, y)
   56543:	0513      	ld         ah, @(+0x5, y)
   56544:	0500      	**prefx    0x5
   56545:	BC9C      	bsr        +0x4BC <___libcsrmesh_163:0x56A01[p]>
   56546:	051B      	ld         x, @(+0x5, y)
   56547:	002B      	st         x, @(0x0, y)
   56548:	0B17      	ld         al, @(+0xB, y)
   56549:	0C13      	ld         ah, @(+0xC, y)
   5654A:	0300      	**prefx    0x3
   5654B:	BF9C      	bsr        +0x2BF <___libcsrmesh_165:0x5680A[p]>
   5654C:	0414      	ld         al, #+0x4
   5654D:	FE00      	**prefx    0xFE
   5654E:	619C      	bsr        -0x19F <___libcsrmesh_129:0x563AF[p]>
   5654F:	0D17      	ld         al, @(+0xD, y)
   56550:	FF34      	add        al, #-0x1
   56551:	0D27      	st         al, @(+0xD, y)
   56552:	FF84      	cmp        al, #-0x1
   56553:	FF00      	**prefx    0xFF
   56554:	38F0      	bne        -0xC8 <___libcsrmesh_126+0x25:0x5648C[p]>
   56555:	031B      	ld         x, @(+0x3, y)
   56556:	009A      	tst        @(0x0, x)
   56557:	07F0      	bne        +0x7 <___libcsrmesh_126+0xF7:0x5655E[p]>
   56558:	0014      	ld         al, #+0x0
   56559:	131B      	ld         x, @(+0x13, y)
   5655A:	0026      	st         al, @(0x0, x)
   5655B:	141B      	ld         x, @(+0x14, y)
   5655C:	0026      	st         al, @(0x0, x)
   5655D:	1BE0      	bra        +0x1B <___libcsrmesh_126+0x111:0x56578[p]>
   5655E:	E315      	ld         al, @0xFFE3 <register uxl>
   5655F:	E311      	ld         ah, @0xFFE3 <register uxl>
   56560:	0400      	**prefx    0x4
   56561:	F49C      	bsr        +0x3F4 <___libcsrmesh_170:0x56955[p]>
   56562:	0317      	ld         al, @(+0x3, y)
   56563:	0E13      	ld         ah, @(+0xE, y)
   56564:	0500      	**prefx    0x5
   56565:	B09C      	bsr        +0x4B0 <___libcsrmesh_164:0x56A15[p]>
   56566:	1317      	ld         al, @(+0x13, y)
   56567:	0027      	st         al, @(0x0, y)
   56568:	0117      	ld         al, @(+0x1, y)
   56569:	0E13      	ld         ah, @(+0xE, y)
   5656A:	0500      	**prefx    0x5
   5656B:	969C      	bsr        +0x496 <___libcsrmesh_163:0x56A01[p]>
   5656C:	0E1B      	ld         x, @(+0xE, y)
   5656D:	002B      	st         x, @(0x0, y)
   5656E:	0317      	ld         al, @(+0x3, y)
   5656F:	E311      	ld         ah, @0xFFE3 <register uxl>
   56570:	0500      	**prefx    0x5
   56571:	909C      	bsr        +0x490 <___libcsrmesh_163:0x56A01[p]>
   56572:	1417      	ld         al, @(+0x14, y)
   56573:	0027      	st         al, @(0x0, y)
   56574:	0217      	ld         al, @(+0x2, y)
   56575:	0E13      	ld         ah, @(+0xE, y)
   56576:	0500      	**prefx    0x5
   56577:	8A9C      	bsr        +0x48A <___libcsrmesh_163:0x56A01[p]>
   56578:	0414      	ld         al, #+0x4
   56579:	FE00      	**prefx    0xFE
   5657A:	359C      	bsr        -0x1CB <___libcsrmesh_129:0x563AF[p]>
   5657B:	0014      	ld         al, #+0x0
   5657C:	ED0F      	leave      #-0x13

0x0005657D <___libcsrmesh_127>:
   5657D:	FC0B      	enter      #-0x4
   5657E:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5657F:	E015      	ld         al, @0xFFE0 <register ah>
   56580:	041B      	ld         x, @(+0x4, y)
   56581:	0012      	ld         ah, @(0x0, x)
   56582:	0023      	st         ah, @(0x0, y)
   56583:	011A      	ld         x, @(+0x1, x)
   56584:	012B      	st         x, @(+0x1, y)
   56585:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   56586:	FF00      	**prefx    0xFF
   56587:	E09C      	bsr        -0x120 <___libcsrmesh_126:0x56467[p]>
   56588:	FC0F      	leave      #-0x4

0x00056589 <___libcsrmesh_128>:
   56589:	F90B      	enter      #-0x7
   5658A:	0327      	st         al, @(+0x3, y)
   5658B:	0423      	st         ah, @(+0x4, y)
   5658C:	E019      	ld         x, @0xFFE0 <register ah>
   5658D:	0012      	ld         ah, @(0x0, x)
   5658E:	0D14      	ld         al, #+0xD
   5658F:	A200      	**prefx    0xA2
   56590:	0518      	ld         x, #-0x5DFB
   56591:	FD09      	bc2        
   56592:	041B      	ld         x, @(+0x4, y)
   56593:	0112      	ld         ah, @(+0x1, x)
   56594:	0D14      	ld         al, #+0xD
   56595:	A200      	**prefx    0xA2
   56596:	1218      	ld         x, #-0x5DEE
   56597:	FD09      	bc2        
   56598:	0C14      	ld         al, #+0xC
   56599:	031B      	ld         x, @(+0x3, y)
   5659A:	0026      	st         al, @(0x0, x)
   5659B:	0118      	ld         x, #+0x1
   5659C:	022B      	st         x, @(+0x2, y)
   5659D:	FB00      	**prefx    0xFB
   5659E:	1E00      	**prefx    0x1E
   5659F:	CB9C      	bsr        -0x4E235 <Random16:0x836A[p]>
   565A0:	031B      	ld         x, @(+0x3, y)
   565A1:	023B      	add        x, @(+0x2, y)
   565A2:	0026      	st         al, @(0x0, x)
   565A3:	0217      	ld         al, @(+0x2, y)
   565A4:	0134      	add        al, #+0x1
   565A5:	0227      	st         al, @(+0x2, y)
   565A6:	0D84      	cmp        al, #+0xD
   565A7:	F6F0      	bne        -0xA <___libcsrmesh_128+0x14:0x5659D[p]>
   565A8:	0317      	ld         al, @(+0x3, y)
   565A9:	E111      	ld         ah, @0xFFE1 <register al>
   565AA:	0300      	**prefx    0x3
   565AB:	F09C      	bsr        +0x2F0 <___libcsrmesh_171:0x5689B[p]>
   565AC:	041B      	ld         x, @(+0x4, y)
   565AD:	001A      	ld         x, @(0x0, x)
   565AE:	002B      	st         x, @(0x0, y)
   565AF:	041B      	ld         x, @(+0x4, y)
   565B0:	011A      	ld         x, @(+0x1, x)
   565B1:	012B      	st         x, @(+0x1, y)
   565B2:	0417      	ld         al, @(+0x4, y)
   565B3:	0313      	ld         ah, @(+0x3, y)
   565B4:	FF00      	**prefx    0xFF
   565B5:	B29C      	bsr        -0x14E <___libcsrmesh_126:0x56467[p]>
   565B6:	F90F      	leave      #-0x7

0x000565B7 <GroupModelInit>:
   565B7:	FE0B      	enter      #-0x2
   565B8:	0214      	ld         al, #+0x2
   565B9:	6A00      	**prefx    0x6A
   565BA:	D725      	st         al, @0x69D7 <g_group_model_data+0x2>
   565BB:	6A00      	**prefx    0x6A
   565BC:	D518      	ld         x, #+0x69D5
   565BD:	6600      	**prefx    0x66
   565BE:	CB14      	ld         al, #+0x65CB
   565BF:	0126      	st         al, @(+0x1, x)
   565C0:	0514      	ld         al, #+0x5
   565C1:	0026      	st         al, @(0x0, x)
   565C2:	0014      	ld         al, #+0x0
   565C3:	0426      	st         al, @(+0x4, x)
   565C4:	0526      	st         al, @(+0x5, x)
   565C5:	E315      	ld         al, @0xFFE3 <register uxl>
   565C6:	0010      	ld         ah, #+0x0
   565C7:	001B      	ld         x, @(0x0, y)
   565C8:	023C      	add        y, #+0x2
   565C9:	EA00      	**prefx    0xEA
   565CA:	9CE0      	bra        -0x1664 <___libcsrmesh_232:0x54F66[p]>

0x000565CB <___libcsrmesh_135>:
   565CB:	EC0B      	enter      #-0x14
   565CC:	1127      	st         al, @(+0x11, y)
   565CD:	E119      	ld         x, @0xFFE1 <register al>
   565CE:	0012      	ld         ah, @(0x0, x)
   565CF:	0616      	ld         al, @(+0x6, x)
   565D0:	E019      	ld         x, @0xFFE0 <register ah>
   565D1:	0386      	cmp        al, @(+0x3, x)
   565D2:	0100      	**prefx    0x1
   565D3:	F4F0      	bne        +0xF4 <___libcsrmesh_135+0xFC:0x566C7[p]>
   565D4:	0416      	ld         al, @(+0x4, x)
   565D5:	0D84      	cmp        al, #+0xD
   565D6:	06F4      	beq        +0x6 <___libcsrmesh_135+0x11:0x565DC[p]>
   565D7:	0F84      	cmp        al, #+0xF
   565D8:	04F4      	beq        +0x4 <___libcsrmesh_135+0x11:0x565DC[p]>
   565D9:	1084      	cmp        al, #+0x10
   565DA:	0100      	**prefx    0x1
   565DB:	ECF0      	bne        +0xEC <___libcsrmesh_135+0xFC:0x566C7[p]>
   565DC:	EA00      	**prefx    0xEA
   565DD:	839C      	bsr        -0x167D <___libcsrmesh_233:0x54F60[p]>
   565DE:	0B27      	st         al, @(+0xB, y)
   565DF:	111B      	ld         x, @(+0x11, y)
   565E0:	0216      	ld         al, @(+0x2, x)
   565E1:	E119      	ld         x, @0xFFE1 <register al>
   565E2:	0016      	ld         al, @(0x0, x)
   565E3:	0100      	**prefx    0x1
   565E4:	FF84      	cmp        al, #+0xFF
   565E5:	0AF4      	beq        +0xA <___libcsrmesh_135+0x24:0x565EF[p]>
   565E6:	E900      	**prefx    0xE9
   565E7:	459C      	bsr        -0x16BB <___libcsrmesh_237:0x54F2C[p]>
   565E8:	E111      	ld         ah, @0xFFE1 <register al>
   565E9:	0100      	**prefx    0x1
   565EA:	F6F0      	bne        +0xF6 <___libcsrmesh_135+0x115:0x566E0[p]>
   565EB:	0014      	ld         al, #+0x0
   565EC:	0D27      	st         al, @(+0xD, y)
   565ED:	0C27      	st         al, @(+0xC, y)
   565EE:	11E0      	bra        +0x11 <___libcsrmesh_135+0x34:0x565FF[p]>
   565EF:	111B      	ld         x, @(+0x11, y)
   565F0:	0016      	ld         al, @(0x0, x)
   565F1:	E119      	ld         x, @0xFFE1 <register al>
   565F2:	0416      	ld         al, @(+0x4, x)
   565F3:	0D84      	cmp        al, #+0xD
   565F4:	05F4      	beq        +0x5 <___libcsrmesh_135+0x2E:0x565F9[p]>
   565F5:	0014      	ld         al, #+0x0
   565F6:	0D27      	st         al, @(+0xD, y)
   565F7:	0C27      	st         al, @(+0xC, y)
   565F8:	06E0      	bra        +0x6 <___libcsrmesh_135+0x33:0x565FE[p]>
   565F9:	E900      	**prefx    0xE9
   565FA:	439C      	bsr        -0x16BD <___libcsrmesh_236:0x54F3D[p]>
   565FB:	0D27      	st         al, @(+0xD, y)
   565FC:	0018      	ld         x, #+0x0
   565FD:	0C2B      	st         x, @(+0xC, y)
   565FE:	0010      	ld         ah, #+0x0
   565FF:	111B      	ld         x, @(+0x11, y)
   56600:	0016      	ld         al, @(0x0, x)
   56601:	E119      	ld         x, @0xFFE1 <register al>
   56602:	0416      	ld         al, @(+0x4, x)
   56603:	0F84      	cmp        al, #+0xF
   56604:	1DF4      	beq        +0x1D <___libcsrmesh_135+0x56:0x56621[p]>
   56605:	1084      	cmp        al, #+0x10
   56606:	0100      	**prefx    0x1
   56607:	8DF4      	beq        +0x8D <___libcsrmesh_135+0xC9:0x56694[p]>
   56608:	0D84      	cmp        al, #+0xD
   56609:	0100      	**prefx    0x1
   5660A:	BFF0      	bne        +0xBF <___libcsrmesh_135+0xFE:0x566C9[p]>
   5660B:	0E14      	ld         al, #+0xE
   5660C:	0B1B      	ld         x, @(+0xB, y)
   5660D:	0026      	st         al, @(0x0, x)
   5660E:	111B      	ld         x, @(+0x11, y)
   5660F:	0216      	ld         al, @(+0x2, x)
   56610:	E119      	ld         x, @0xFFE1 <register al>
   56611:	0016      	ld         al, @(0x0, x)
   56612:	0B1B      	ld         x, @(+0xB, y)
   56613:	0126      	st         al, @(+0x1, x)
   56614:	0D17      	ld         al, @(+0xD, y)
   56615:	0226      	st         al, @(+0x2, x)
   56616:	111B      	ld         x, @(+0x11, y)
   56617:	0216      	ld         al, @(+0x2, x)
   56618:	E119      	ld         x, @0xFFE1 <register al>
   56619:	0116      	ld         al, @(+0x1, x)
   5661A:	0B1B      	ld         x, @(+0xB, y)
   5661B:	0326      	st         al, @(+0x3, x)
   5661C:	0014      	ld         al, #+0x0
   5661D:	0F27      	st         al, @(+0xF, y)
   5661E:	0418      	ld         x, #+0x4
   5661F:	0100      	**prefx    0x1
   56620:	AEE0      	bra        +0xAE <___libcsrmesh_135+0x103:0x566CE[p]>
   56621:	0514      	ld         al, #+0x5
   56622:	0027      	st         al, @(0x0, y)
   56623:	E415      	ld         al, @0xFFE4 <register uy>
   56624:	0634      	add        al, #+0x6
   56625:	0100      	**prefx    0x1
   56626:	FF10      	ld         ah, #+0xFF
   56627:	FB00      	**prefx    0xFB
   56628:	C500      	**prefx    0xC5
   56629:	279C      	bsr        -0x53AD9 <MemSet:0x2B50[p]>
   5662A:	0318      	ld         x, #+0x3
   5662B:	002B      	st         x, @(0x0, y)
   5662C:	E415      	ld         al, @0xFFE4 <register uy>
   5662D:	0334      	add        al, #+0x3
   5662E:	0100      	**prefx    0x1
   5662F:	FF10      	ld         ah, #+0xFF
   56630:	FB00      	**prefx    0xFB
   56631:	C500      	**prefx    0xC5
   56632:	1E9C      	bsr        -0x53AE2 <MemSet:0x2B50[p]>
   56633:	111B      	ld         x, @(+0x11, y)
   56634:	0216      	ld         al, @(+0x2, x)
   56635:	E119      	ld         x, @0xFFE1 <register al>
   56636:	0112      	ld         ah, @(+0x1, x)
   56637:	0D83      	cmp        ah, @(+0xD, y)
   56638:	03F8      	bcc        +0x3 <___libcsrmesh_135+0x70:0x5663B[p]>
   56639:	0C9B      	tst        @(+0xC, y)
   5663A:	07F0      	bne        +0x7 <___libcsrmesh_135+0x76:0x56641[p]>
   5663B:	E119      	ld         x, @0xFFE1 <register al>
   5663C:	0016      	ld         al, @(0x0, x)
   5663D:	0100      	**prefx    0x1
   5663E:	FF84      	cmp        al, #+0xFF
   5663F:	0100      	**prefx    0x1
   56640:	89F0      	bne        +0x89 <___libcsrmesh_135+0xFE:0x566C9[p]>
   56641:	1114      	ld         al, #+0x11
   56642:	0B1B      	ld         x, @(+0xB, y)
   56643:	0026      	st         al, @(0x0, x)
   56644:	111B      	ld         x, @(+0x11, y)
   56645:	0216      	ld         al, @(+0x2, x)
   56646:	E119      	ld         x, @0xFFE1 <register al>
   56647:	0016      	ld         al, @(0x0, x)
   56648:	0B1B      	ld         x, @(+0xB, y)
   56649:	0126      	st         al, @(+0x1, x)
   5664A:	0222      	st         ah, @(+0x2, x)
   5664B:	111B      	ld         x, @(+0x11, y)
   5664C:	0216      	ld         al, @(+0x2, x)
   5664D:	E119      	ld         x, @0xFFE1 <register al>
   5664E:	0216      	ld         al, @(+0x2, x)
   5664F:	0B1B      	ld         x, @(+0xB, y)
   56650:	0326      	st         al, @(+0x3, x)
   56651:	111B      	ld         x, @(+0x11, y)
   56652:	0216      	ld         al, @(+0x2, x)
   56653:	E119      	ld         x, @0xFFE1 <register al>
   56654:	0316      	ld         al, @(+0x3, x)
   56655:	0B1B      	ld         x, @(+0xB, y)
   56656:	0426      	st         al, @(+0x4, x)
   56657:	111B      	ld         x, @(+0x11, y)
   56658:	0216      	ld         al, @(+0x2, x)
   56659:	E119      	ld         x, @0xFFE1 <register al>
   5665A:	0416      	ld         al, @(+0x4, x)
   5665B:	0B1B      	ld         x, @(+0xB, y)
   5665C:	0526      	st         al, @(+0x5, x)
   5665D:	111B      	ld         x, @(+0x11, y)
   5665E:	0216      	ld         al, @(+0x2, x)
   5665F:	E119      	ld         x, @0xFFE1 <register al>
   56660:	0516      	ld         al, @(+0x5, x)
   56661:	0B1B      	ld         x, @(+0xB, y)
   56662:	0626      	st         al, @(+0x6, x)
   56663:	111B      	ld         x, @(+0x11, y)
   56664:	011A      	ld         x, @(+0x1, x)
   56665:	062B      	st         x, @(+0x6, y)
   56666:	111B      	ld         x, @(+0x11, y)
   56667:	021A      	ld         x, @(+0x2, x)
   56668:	F829      	st         x, @0xFFF8 <(scratchpad)>
   56669:	0016      	ld         al, @(0x0, x)
   5666A:	0727      	st         al, @(+0x7, y)
   5666B:	011A      	ld         x, @(+0x1, x)
   5666C:	082B      	st         x, @(+0x8, y)
   5666D:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5666E:	021A      	ld         x, @(+0x2, x)
   5666F:	092B      	st         x, @(+0x9, y)
   56670:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56671:	0416      	ld         al, @(+0x4, x)
   56672:	08A0      	asl        #0x8
   56673:	0336      	add        al, @(+0x3, x)
   56674:	0A27      	st         al, @(+0xA, y)
   56675:	1814      	ld         al, #+0x18
   56676:	0327      	st         al, @(+0x3, y)
   56677:	0018      	ld         x, #+0x0
   56678:	042B      	st         x, @(+0x4, y)
   56679:	E415      	ld         al, @0xFFE4 <register uy>
   5667A:	0634      	add        al, #+0x6
   5667B:	0527      	st         al, @(+0x5, y)
   5667C:	6C00      	**prefx    0x6C
   5667D:	9119      	ld         x, @0x6B91 <g_mesh_data+0x4>
   5667E:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5667F:	6C00      	**prefx    0x6C
   56680:	9015      	ld         al, @0x6B90 <g_mesh_data+0x3>
   56681:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56682:	E3B5      	or         al, @0xFFE3 <register uxl>
   56683:	48F4      	beq        +0x48 <___libcsrmesh_135+0x100:0x566CB[p]>
   56684:	0314      	ld         al, #+0x3
   56685:	E411      	ld         ah, @0xFFE4 <register uy>
   56686:	E419      	ld         x, @0xFFE4 <register uy>
   56687:	0338      	add        x, #+0x3
   56688:	FD09      	bc2        
   56689:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5668A:	FE27      	st         al, @(-0x2, y)
   5668B:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5668C:	FF27      	st         al, @(-0x1, y)
   5668D:	FF0E      	ld         xh, @(-0x1, y)
   5668E:	FE9F      	bsr        @(-0x2, y)
   5668F:	0118      	ld         x, #+0x1
   56690:	0F2B      	st         x, @(+0xF, y)
   56691:	0714      	ld         al, #+0x7
   56692:	0E27      	st         al, @(+0xE, y)
   56693:	3CE0      	bra        +0x3C <___libcsrmesh_135+0x104:0x566CF[p]>
   56694:	111B      	ld         x, @(+0x11, y)
   56695:	0216      	ld         al, @(+0x2, x)
   56696:	E119      	ld         x, @0xFFE1 <register al>
   56697:	0116      	ld         al, @(+0x1, x)
   56698:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56699:	0D87      	cmp        al, @(+0xD, y)
   5669A:	2FF8      	bcc        +0x2F <___libcsrmesh_135+0xFE:0x566C9[p]>
   5669B:	0C9B      	tst        @(+0xC, y)
   5669C:	2DF4      	beq        +0x2D <___libcsrmesh_135+0xFE:0x566C9[p]>
   5669D:	1114      	ld         al, #+0x11
   5669E:	0B1B      	ld         x, @(+0xB, y)
   5669F:	0026      	st         al, @(0x0, x)
   566A0:	111B      	ld         x, @(+0x11, y)
   566A1:	021A      	ld         x, @(+0x2, x)
   566A2:	0016      	ld         al, @(0x0, x)
   566A3:	0B1B      	ld         x, @(+0xB, y)
   566A4:	0126      	st         al, @(+0x1, x)
   566A5:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   566A6:	0226      	st         al, @(+0x2, x)
   566A7:	0014      	ld         al, #+0x0
   566A8:	0326      	st         al, @(+0x3, x)
   566A9:	E019      	ld         x, @0xFFE0 <register ah>
   566AA:	041A      	ld         x, @(+0x4, x)
   566AB:	E315      	ld         al, @0xFFE3 <register uxl>
   566AC:	F835      	add        al, @0xFFF8 <(scratchpad)>
   566AD:	E119      	ld         x, @0xFFE1 <register al>
   566AE:	0016      	ld         al, @(0x0, x)
   566AF:	0100      	**prefx    0x1
   566B0:	FFC4      	and        al, #0xFF
   566B1:	0B1B      	ld         x, @(+0xB, y)
   566B2:	0426      	st         al, @(+0x4, x)
   566B3:	E019      	ld         x, @0xFFE0 <register ah>
   566B4:	0412      	ld         ah, @(+0x4, x)
   566B5:	F831      	add        ah, @0xFFF8 <(scratchpad)>
   566B6:	E019      	ld         x, @0xFFE0 <register ah>
   566B7:	0012      	ld         ah, @(0x0, x)
   566B8:	0009      	**unsigned
   566B9:	08A4      	lsr        #0x8
   566BA:	0B1B      	ld         x, @(+0xB, y)
   566BB:	0522      	st         ah, @(+0x5, x)
   566BC:	111B      	ld         x, @(+0x11, y)
   566BD:	0216      	ld         al, @(+0x2, x)
   566BE:	E119      	ld         x, @0xFFE1 <register al>
   566BF:	0216      	ld         al, @(+0x2, x)
   566C0:	0B1B      	ld         x, @(+0xB, y)
   566C1:	0626      	st         al, @(+0x6, x)
   566C2:	0014      	ld         al, #+0x0
   566C3:	09E0      	bra        +0x9 <___libcsrmesh_135+0x101:0x566CC[p]>
   566C4:	F800      	**prefx    0xF8
   566C5:	959C      	bsr        -0x86B <___libcsrmesh_111:0x55E5A[p]>
   566C6:	03E0      	bra        +0x3 <___libcsrmesh_135+0xFE:0x566C9[p]>
   566C7:	FF14      	ld         al, #-0x1
   566C8:	02E0      	bra        +0x2 <___libcsrmesh_135+0xFF:0x566CA[p]>
   566C9:	0014      	ld         al, #+0x0
   566CA:	EC0F      	leave      #-0x14
   566CB:	0114      	ld         al, #+0x1
   566CC:	0F27      	st         al, @(+0xF, y)
   566CD:	0718      	ld         x, #+0x7
   566CE:	0E2B      	st         x, @(+0xE, y)
   566CF:	111B      	ld         x, @(+0x11, y)
   566D0:	0016      	ld         al, @(0x0, x)
   566D1:	E119      	ld         x, @0xFFE1 <register al>
   566D2:	0216      	ld         al, @(+0x2, x)
   566D3:	1027      	st         al, @(+0x10, y)
   566D4:	E900      	**prefx    0xE9
   566D5:	8E9C      	bsr        -0x1772 <___libcsrmesh_235:0x54F63[p]>
   566D6:	0027      	st         al, @(0x0, y)
   566D7:	0014      	ld         al, #+0x0
   566D8:	0127      	st         al, @(+0x1, y)
   566D9:	1017      	ld         al, @(+0x10, y)
   566DA:	0E13      	ld         ah, @(+0xE, y)
   566DB:	E900      	**prefx    0xE9
   566DC:	BC9C      	bsr        -0x1744 <___libcsrmesh_241:0x54F98[p]>
   566DD:	0F9B      	tst        @(+0xF, y)
   566DE:	EBF4      	beq        -0x15 <___libcsrmesh_135+0xFE:0x566C9[p]>
   566DF:	E5E0      	bra        -0x1B <___libcsrmesh_135+0xF9:0x566C4[p]>
   566E0:	E119      	ld         x, @0xFFE1 <register al>
   566E1:	041A      	ld         x, @(+0x4, x)
   566E2:	0C2B      	st         x, @(+0xC, y)
   566E3:	E119      	ld         x, @0xFFE1 <register al>
   566E4:	051A      	ld         x, @(+0x5, x)
   566E5:	0D2B      	st         x, @(+0xD, y)
   566E6:	FF00      	**prefx    0xFF
   566E7:	18E0      	bra        -0xE8 <___libcsrmesh_135+0x34:0x565FF[p]>

0x000566E8 <___libcsrmesh_159>:
   566E8:	FE0B      	enter      #-0x2
   566E9:	F925      	st         al, @0xFFF9 <(scratchpad)>
   566EA:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   566EB:	E119      	ld         x, @0xFFE1 <register al>
   566EC:	0016      	ld         al, @(0x0, x)
   566ED:	E019      	ld         x, @0xFFE0 <register ah>
   566EE:	0012      	ld         ah, @(0x0, x)
   566EF:	E085      	cmp        al, @0xFFE0 <register ah>
   566F0:	022C      	bcz        +0x2 <___libcsrmesh_159+0xA:0x566F2[p]>
   566F1:	1FE0      	bra        +0x1F <___libcsrmesh_159+0x28:0x56710[p]>
   566F2:	E085      	cmp        al, @0xFFE0 <register ah>
   566F3:	1FFC      	bcs        +0x1F <___libcsrmesh_159+0x2A:0x56712[p]>
   566F4:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   566F5:	E131      	add        ah, @0xFFE1 <register al>
   566F6:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   566F7:	E139      	add        x, @0xFFE1 <register al>
   566F8:	FA29      	st         x, @0xFFFA <(scratchpad)>
   566F9:	02E0      	bra        +0x2 <___libcsrmesh_159+0x13:0x566FB[p]>
   566FA:	FF34      	add        al, #-0x1
   566FB:	E019      	ld         x, @0xFFE0 <register ah>
   566FC:	001A      	ld         x, @(0x0, x)
   566FD:	F929      	st         x, @0xFFF9 <(scratchpad)>
   566FE:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   566FF:	001A      	ld         x, @(0x0, x)
   56700:	F829      	st         x, @0xFFF8 <(scratchpad)>
   56701:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56702:	F889      	cmp        x, @0xFFF8 <(scratchpad)>
   56703:	08F0      	bne        +0x8 <___libcsrmesh_159+0x23:0x5670B[p]>
   56704:	FF30      	add        ah, #-0x1
   56705:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56706:	FF38      	add        x, #-0x1
   56707:	FA29      	st         x, @0xFFFA <(scratchpad)>
   56708:	E199      	tst        @0xFFE1 <register al>
   56709:	F1F0      	bne        -0xF <___libcsrmesh_159+0x12:0x566FA[p]>
   5670A:	0AE0      	bra        +0xA <___libcsrmesh_159+0x2C:0x56714[p]>
   5670B:	E199      	tst        @0xFFE1 <register al>
   5670C:	08F4      	beq        +0x8 <___libcsrmesh_159+0x2C:0x56714[p]>
   5670D:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5670E:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   5670F:	032C      	bcz        +0x3 <___libcsrmesh_159+0x2A:0x56712[p]>
   56710:	0114      	ld         al, #+0x1
   56711:	04E0      	bra        +0x4 <___libcsrmesh_159+0x2D:0x56715[p]>
   56712:	FF14      	ld         al, #-0x1
   56713:	02E0      	bra        +0x2 <___libcsrmesh_159+0x2D:0x56715[p]>
   56714:	0014      	ld         al, #+0x0
   56715:	FE0F      	leave      #-0x2

0x00056716 <___libcsrmesh_157>:
   56716:	FE0B      	enter      #-0x2
   56717:	E119      	ld         x, @0xFFE1 <register al>
   56718:	E039      	add        x, @0xFFE0 <register ah>
   56719:	02E0      	bra        +0x2 <___libcsrmesh_157+0x5:0x5671B[p]>
   5671A:	FF30      	add        ah, #-0x1
   5671B:	009A      	tst        @(0x0, x)
   5671C:	04F0      	bne        +0x4 <___libcsrmesh_157+0xA:0x56720[p]>
   5671D:	FF38      	add        x, #-0x1
   5671E:	E099      	tst        @0xFFE0 <register ah>
   5671F:	FBF0      	bne        -0x5 <___libcsrmesh_157+0x4:0x5671A[p]>
   56720:	E015      	ld         al, @0xFFE0 <register ah>
   56721:	FE0F      	leave      #-0x2

0x00056722 <___libcsrmesh_161>:
   56722:	FE0B      	enter      #-0x2
   56723:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56724:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   56725:	0009      	**unsigned
   56726:	04A4      	lsr        #0x4
   56727:	F831      	add        ah, @0xFFF8 <(scratchpad)>
   56728:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   56729:	0FC4      	and        al, #0xF
   5672A:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5672B:	E019      	ld         x, @0xFFE0 <register ah>
   5672C:	0112      	ld         ah, @(+0x1, x)
   5672D:	0009      	**unsigned
   5672E:	F9A5      	lsr        @0xFFF9 <(scratchpad)>
   5672F:	E015      	ld         al, @0xFFE0 <register ah>
   56730:	01C4      	and        al, #0x1
   56731:	FE0F      	leave      #-0x2

0x00056732 <___libcsrmesh_168>:
   56732:	FE0B      	enter      #-0x2
   56733:	FB25      	st         al, @0xFFFB <(scratchpad)>
   56734:	E119      	ld         x, @0xFFE1 <register al>
   56735:	001A      	ld         x, @(0x0, x)
   56736:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56737:	1FF4      	beq        +0x1F <___libcsrmesh_168+0x24:0x56756[p]>
   56738:	E335      	add        al, @0xFFE3 <register uxl>
   56739:	FE27      	st         al, @(-0x2, y)
   5673A:	E119      	ld         x, @0xFFE1 <register al>
   5673B:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5673C:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5673D:	0014      	ld         al, #+0x0
   5673E:	FF27      	st         al, @(-0x1, y)
   5673F:	0016      	ld         al, @(0x0, x)
   56740:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56741:	E111      	ld         ah, @0xFFE1 <register al>
   56742:	0009      	**unsigned
   56743:	01A4      	lsr        #0x1
   56744:	FFB3      	or         ah, @(-0x1, y)
   56745:	0022      	st         ah, @(0x0, x)
   56746:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56747:	FF34      	add        al, #-0x1
   56748:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56749:	FF38      	add        x, #-0x1
   5674A:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   5674B:	0FA0      	asl        #0xF
   5674C:	FF27      	st         al, @(-0x1, y)
   5674D:	F899      	tst        @0xFFF8 <(scratchpad)>
   5674E:	F1F0      	bne        -0xF <___libcsrmesh_168+0xD:0x5673F[p]>
   5674F:	FE1B      	ld         x, @(-0x2, y)
   56750:	009A      	tst        @(0x0, x)
   56751:	05F0      	bne        +0x5 <___libcsrmesh_168+0x24:0x56756[p]>
   56752:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   56753:	FF34      	add        al, #-0x1
   56754:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56755:	0026      	st         al, @(0x0, x)
   56756:	FE0F      	leave      #-0x2

0x00056757 <___libcsrmesh_158>:
   56757:	FD0B      	enter      #-0x3
   56758:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56759:	0317      	ld         al, @(+0x3, y)
   5675A:	FE27      	st         al, @(-0x2, y)
   5675B:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5675C:	0016      	ld         al, @(0x0, x)
   5675D:	E019      	ld         x, @0xFFE0 <register ah>
   5675E:	0086      	cmp        al, @(0x0, x)
   5675F:	05F8      	bcc        +0x5 <___libcsrmesh_158+0xD:0x56764[p]>
   56760:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   56761:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56762:	FB25      	st         al, @0xFFFB <(scratchpad)>
   56763:	04E0      	bra        +0x4 <___libcsrmesh_158+0x10:0x56767[p]>
   56764:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56765:	FA29      	st         x, @0xFFFA <(scratchpad)>
   56766:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   56767:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56768:	001A      	ld         x, @(0x0, x)
   56769:	FF2B      	st         x, @(-0x1, y)
   5676A:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   5676B:	001A      	ld         x, @(0x0, x)
   5676C:	002B      	st         x, @(0x0, y)
   5676D:	0014      	ld         al, #+0x0
   5676E:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5676F:	0110      	ld         ah, #+0x1
   56770:	1EE0      	bra        +0x1E <___libcsrmesh_158+0x37:0x5678E[p]>
   56771:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56772:	E039      	add        x, @0xFFE0 <register ah>
   56773:	0016      	ld         al, @(0x0, x)
   56774:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56775:	E139      	add        x, @0xFFE1 <register al>
   56776:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56777:	0018      	ld         x, #+0x0
   56778:	F829      	st         x, @0xFFF8 <(scratchpad)>
   56779:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5677A:	E189      	cmp        x, @0xFFE1 <register al>
   5677B:	03F8      	bcc        +0x3 <___libcsrmesh_158+0x27:0x5677E[p]>
   5677C:	0114      	ld         al, #+0x1
   5677D:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5677E:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5677F:	E039      	add        x, @0xFFE0 <register ah>
   56780:	0016      	ld         al, @(0x0, x)
   56781:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56782:	E139      	add        x, @0xFFE1 <register al>
   56783:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56784:	E189      	cmp        x, @0xFFE1 <register al>
   56785:	04F8      	bcc        +0x4 <___libcsrmesh_158+0x32:0x56789[p]>
   56786:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56787:	0134      	add        al, #+0x1
   56788:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56789:	FE1B      	ld         x, @(-0x2, y)
   5678A:	E039      	add        x, @0xFFE0 <register ah>
   5678B:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5678C:	0026      	st         al, @(0x0, x)
   5678D:	0130      	add        ah, #+0x1
   5678E:	0083      	cmp        ah, @(0x0, y)
   5678F:	E22C      	bcz        -0x1E <___libcsrmesh_158+0x1A:0x56771[p]>
   56790:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56791:	E039      	add        x, @0xFFE0 <register ah>
   56792:	FA29      	st         x, @0xFFFA <(scratchpad)>
   56793:	FE17      	ld         al, @(-0x2, y)
   56794:	E035      	add        al, @0xFFE0 <register ah>
   56795:	16E0      	bra        +0x16 <___libcsrmesh_158+0x54:0x567AB[p]>
   56796:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56797:	0016      	ld         al, @(0x0, x)
   56798:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56799:	E139      	add        x, @0xFFE1 <register al>
   5679A:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5679B:	0018      	ld         x, #+0x0
   5679C:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5679D:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5679E:	E189      	cmp        x, @0xFFE1 <register al>
   5679F:	03F8      	bcc        +0x3 <___libcsrmesh_158+0x4B:0x567A2[p]>
   567A0:	0114      	ld         al, #+0x1
   567A1:	F825      	st         al, @0xFFF8 <(scratchpad)>
   567A2:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   567A3:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   567A4:	0026      	st         al, @(0x0, x)
   567A5:	0130      	add        ah, #+0x1
   567A6:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   567A7:	0138      	add        x, #+0x1
   567A8:	FA29      	st         x, @0xFFFA <(scratchpad)>
   567A9:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   567AA:	0134      	add        al, #+0x1
   567AB:	FB25      	st         al, @0xFFFB <(scratchpad)>
   567AC:	FF83      	cmp        ah, @(-0x1, y)
   567AD:	E92C      	bcz        -0x17 <___libcsrmesh_158+0x3F:0x56796[p]>
   567AE:	FF17      	ld         al, @(-0x1, y)
   567AF:	FE1B      	ld         x, @(-0x2, y)
   567B0:	0026      	st         al, @(0x0, x)
   567B1:	F899      	tst        @0xFFF8 <(scratchpad)>
   567B2:	08F4      	beq        +0x8 <___libcsrmesh_158+0x63:0x567BA[p]>
   567B3:	FF3B      	add        x, @(-0x1, y)
   567B4:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   567B5:	0126      	st         al, @(+0x1, x)
   567B6:	FE1B      	ld         x, @(-0x2, y)
   567B7:	0016      	ld         al, @(0x0, x)
   567B8:	0134      	add        al, #+0x1
   567B9:	0026      	st         al, @(0x0, x)
   567BA:	FD0F      	leave      #-0x3

0x000567BB <___libcsrmesh_169>:
   567BB:	FE0B      	enter      #-0x2
   567BC:	FB25      	st         al, @0xFFFB <(scratchpad)>
   567BD:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   567BE:	E119      	ld         x, @0xFFE1 <register al>
   567BF:	001A      	ld         x, @(0x0, x)
   567C0:	FE2B      	st         x, @(-0x2, y)
   567C1:	E019      	ld         x, @0xFFE0 <register ah>
   567C2:	001A      	ld         x, @(0x0, x)
   567C3:	FF2B      	st         x, @(-0x1, y)
   567C4:	0014      	ld         al, #+0x0
   567C5:	F925      	st         al, @0xFFF9 <(scratchpad)>
   567C6:	0118      	ld         x, #+0x1
   567C7:	F829      	st         x, @0xFFF8 <(scratchpad)>
   567C8:	19E0      	bra        +0x19 <___libcsrmesh_169+0x26:0x567E1[p]>
   567C9:	0016      	ld         al, @(0x0, x)
   567CA:	E111      	ld         ah, @0xFFE1 <register al>
   567CB:	F951      	sub        ah, @0xFFF9 <(scratchpad)>
   567CC:	0018      	ld         x, #+0x0
   567CD:	F929      	st         x, @0xFFF9 <(scratchpad)>
   567CE:	E181      	cmp        ah, @0xFFE1 <register al>
   567CF:	032C      	bcz        +0x3 <___libcsrmesh_169+0x17:0x567D2[p]>
   567D0:	0114      	ld         al, #+0x1
   567D1:	F925      	st         al, @0xFFF9 <(scratchpad)>
   567D2:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   567D3:	F839      	add        x, @0xFFF8 <(scratchpad)>
   567D4:	E015      	ld         al, @0xFFE0 <register ah>
   567D5:	0056      	sub        al, @(0x0, x)
   567D6:	E085      	cmp        al, @0xFFE0 <register ah>
   567D7:	042C      	bcz        +0x4 <___libcsrmesh_169+0x20:0x567DB[p]>
   567D8:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   567D9:	0138      	add        x, #+0x1
   567DA:	F929      	st         x, @0xFFF9 <(scratchpad)>
   567DB:	021B      	ld         x, @(+0x2, y)
   567DC:	F839      	add        x, @0xFFF8 <(scratchpad)>
   567DD:	0026      	st         al, @(0x0, x)
   567DE:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   567DF:	0134      	add        al, #+0x1
   567E0:	F825      	st         al, @0xFFF8 <(scratchpad)>
   567E1:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   567E2:	F839      	add        x, @0xFFF8 <(scratchpad)>
   567E3:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   567E4:	FF87      	cmp        al, @(-0x1, y)
   567E5:	E42C      	bcz        -0x1C <___libcsrmesh_169+0xE:0x567C9[p]>
   567E6:	FA29      	st         x, @0xFFFA <(scratchpad)>
   567E7:	021B      	ld         x, @(+0x2, y)
   567E8:	F839      	add        x, @0xFFF8 <(scratchpad)>
   567E9:	FB29      	st         x, @0xFFFB <(scratchpad)>
   567EA:	16E0      	bra        +0x16 <___libcsrmesh_169+0x45:0x56800[p]>
   567EB:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   567EC:	0016      	ld         al, @(0x0, x)
   567ED:	E111      	ld         ah, @0xFFE1 <register al>
   567EE:	F951      	sub        ah, @0xFFF9 <(scratchpad)>
   567EF:	0018      	ld         x, #+0x0
   567F0:	F929      	st         x, @0xFFF9 <(scratchpad)>
   567F1:	E181      	cmp        ah, @0xFFE1 <register al>
   567F2:	032C      	bcz        +0x3 <___libcsrmesh_169+0x3A:0x567F5[p]>
   567F3:	0114      	ld         al, #+0x1
   567F4:	F925      	st         al, @0xFFF9 <(scratchpad)>
   567F5:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   567F6:	0022      	st         ah, @(0x0, x)
   567F7:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   567F8:	0134      	add        al, #+0x1
   567F9:	F825      	st         al, @0xFFF8 <(scratchpad)>
   567FA:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   567FB:	0138      	add        x, #+0x1
   567FC:	FA29      	st         x, @0xFFFA <(scratchpad)>
   567FD:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   567FE:	0134      	add        al, #+0x1
   567FF:	FB25      	st         al, @0xFFFB <(scratchpad)>
   56800:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56801:	FE8B      	cmp        x, @(-0x2, y)
   56802:	E92C      	bcz        -0x17 <___libcsrmesh_169+0x30:0x567EB[p]>
   56803:	0217      	ld         al, @(+0x2, y)
   56804:	FE13      	ld         ah, @(-0x2, y)
   56805:	FF00      	**prefx    0xFF
   56806:	109C      	bsr        -0xF0 <___libcsrmesh_157:0x56716[p]>
   56807:	021B      	ld         x, @(+0x2, y)
   56808:	0026      	st         al, @(0x0, x)
   56809:	FE0F      	leave      #-0x2

0x0005680A <___libcsrmesh_165>:
   5680A:	FB0B      	enter      #-0x5
   5680B:	0127      	st         al, @(+0x1, y)
   5680C:	0223      	st         ah, @(+0x2, y)
   5680D:	FF00      	**prefx    0xFF
   5680E:	DA9C      	bsr        -0x126 <___libcsrmesh_159:0x566E8[p]>
   5680F:	E199      	tst        @0xFFE1 <register al>
   56810:	06EC      	bmi        +0x6 <___libcsrmesh_165+0xC:0x56816[p]>
   56811:	0517      	ld         al, @(+0x5, y)
   56812:	0027      	st         al, @(0x0, y)
   56813:	0117      	ld         al, @(+0x1, y)
   56814:	0213      	ld         ah, @(+0x2, y)
   56815:	0BE0      	bra        +0xB <___libcsrmesh_165+0x16:0x56820[p]>
   56816:	0517      	ld         al, @(+0x5, y)
   56817:	0027      	st         al, @(0x0, y)
   56818:	0217      	ld         al, @(+0x2, y)
   56819:	0113      	ld         ah, @(+0x1, y)
   5681A:	A19C      	bsr        -0x5F <___libcsrmesh_169:0x567BB[p]>
   5681B:	0517      	ld         al, @(+0x5, y)
   5681C:	0027      	st         al, @(0x0, y)
   5681D:	6100      	**prefx    0x61
   5681E:	D814      	ld         al, #+0x60D8
   5681F:	0513      	ld         ah, @(+0x5, y)
   56820:	9B9C      	bsr        -0x65 <___libcsrmesh_169:0x567BB[p]>
   56821:	FB0F      	leave      #-0x5

0x00056822 <___libcsrmesh_167>:
   56822:	F90B      	enter      #-0x7
   56823:	0227      	st         al, @(+0x2, y)
   56824:	0323      	st         ah, @(+0x3, y)
   56825:	0713      	ld         ah, @(+0x7, y)
   56826:	0130      	add        ah, #+0x1
   56827:	0023      	st         ah, @(0x0, y)
   56828:	0014      	ld         al, #+0x0
   56829:	0427      	st         al, @(+0x4, y)
   5682A:	0118      	ld         x, #+0x1
   5682B:	012B      	st         x, @(+0x1, y)
   5682C:	1DE0      	bra        +0x1D <___libcsrmesh_167+0x27:0x56849[p]>
   5682D:	0413      	ld         ah, @(+0x4, y)
   5682E:	FE23      	st         ah, @(-0x2, y)
   5682F:	0014      	ld         al, #+0x0
   56830:	FF27      	st         al, @(-0x1, y)
   56831:	031B      	ld         x, @(+0x3, y)
   56832:	013B      	add        x, @(+0x1, y)
   56833:	0217      	ld         al, @(+0x2, y)
   56834:	0009      	**unsigned
   56835:	0092      	umult      @(0x0, x)
   56836:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56837:	001B      	ld         x, @(0x0, y)
   56838:	001A      	ld         x, @(0x0, x)
   56839:	FB29      	st         x, @0xFFFB <(scratchpad)>
   5683A:	0010      	ld         ah, #+0x0
   5683B:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   5683C:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5683D:	FB35      	add        al, @0xFFFB <(scratchpad)>
   5683E:	FA41      	addc       ah, @0xFFFA <(scratchpad)>
   5683F:	FE37      	add        al, @(-0x2, y)
   56840:	FF43      	addc       ah, @(-0x1, y)
   56841:	0423      	st         ah, @(+0x4, y)
   56842:	001B      	ld         x, @(0x0, y)
   56843:	0026      	st         al, @(0x0, x)
   56844:	0113      	ld         ah, @(+0x1, y)
   56845:	0130      	add        ah, #+0x1
   56846:	0123      	st         ah, @(+0x1, y)
   56847:	0138      	add        x, #+0x1
   56848:	002B      	st         x, @(0x0, y)
   56849:	0117      	ld         al, @(+0x1, y)
   5684A:	0887      	cmp        al, @(+0x8, y)
   5684B:	E22C      	bcz        -0x1E <___libcsrmesh_167+0xB:0x5682D[p]>
   5684C:	071B      	ld         x, @(+0x7, y)
   5684D:	E139      	add        x, @0xFFE1 <register al>
   5684E:	0CE0      	bra        +0xC <___libcsrmesh_167+0x38:0x5685A[p]>
   5684F:	0012      	ld         ah, @(0x0, x)
   56850:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   56851:	0014      	ld         al, #+0x0
   56852:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56853:	0010      	ld         ah, #+0x0
   56854:	0417      	ld         al, @(+0x4, y)
   56855:	F935      	add        al, @0xFFF9 <(scratchpad)>
   56856:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
   56857:	0423      	st         ah, @(+0x4, y)
   56858:	0026      	st         al, @(0x0, x)
   56859:	0138      	add        x, #+0x1
   5685A:	049B      	tst        @(+0x4, y)
   5685B:	F4F0      	bne        -0xC <___libcsrmesh_167+0x2D:0x5684F[p]>
   5685C:	F90F      	leave      #-0x7

0x0005685D <___libcsrmesh_166>:
   5685D:	F80B      	enter      #-0x8
   5685E:	0427      	st         al, @(+0x4, y)
   5685F:	0523      	st         ah, @(+0x5, y)
   56860:	E119      	ld         x, @0xFFE1 <register al>
   56861:	0016      	ld         al, @(0x0, x)
   56862:	04F4      	beq        +0x4 <___libcsrmesh_166+0x9:0x56866[p]>
   56863:	E019      	ld         x, @0xFFE0 <register ah>
   56864:	0012      	ld         ah, @(0x0, x)
   56865:	03F0      	bne        +0x3 <___libcsrmesh_166+0xB:0x56868[p]>
   56866:	0014      	ld         al, #+0x0
   56867:	29E0      	bra        +0x29 <___libcsrmesh_166+0x33:0x56890[p]>
   56868:	E035      	add        al, @0xFFE0 <register ah>
   56869:	0134      	add        al, #+0x1
   5686A:	0027      	st         al, @(0x0, y)
   5686B:	0817      	ld         al, @(+0x8, y)
   5686C:	0010      	ld         ah, #+0x0
   5686D:	FB00      	**prefx    0xFB
   5686E:	C300      	**prefx    0xC3
   5686F:	E19C      	bsr        -0x53D1F <MemSet:0x2B50[p]>
   56870:	081B      	ld         x, @(+0x8, y)
   56871:	022B      	st         x, @(+0x2, y)
   56872:	0114      	ld         al, #+0x1
   56873:	0327      	st         al, @(+0x3, y)
   56874:	12E0      	bra        +0x12 <___libcsrmesh_166+0x29:0x56886[p]>
   56875:	0513      	ld         ah, @(+0x5, y)
   56876:	0333      	add        ah, @(+0x3, y)
   56877:	021B      	ld         x, @(+0x2, y)
   56878:	002B      	st         x, @(0x0, y)
   56879:	041B      	ld         x, @(+0x4, y)
   5687A:	001A      	ld         x, @(0x0, x)
   5687B:	012B      	st         x, @(+0x1, y)
   5687C:	E019      	ld         x, @0xFFE0 <register ah>
   5687D:	0016      	ld         al, @(0x0, x)
   5687E:	0413      	ld         ah, @(+0x4, y)
   5687F:	A39C      	bsr        -0x5D <___libcsrmesh_167:0x56822[p]>
   56880:	0317      	ld         al, @(+0x3, y)
   56881:	0134      	add        al, #+0x1
   56882:	0327      	st         al, @(+0x3, y)
   56883:	021B      	ld         x, @(+0x2, y)
   56884:	0138      	add        x, #+0x1
   56885:	022B      	st         x, @(+0x2, y)
   56886:	051B      	ld         x, @(+0x5, y)
   56887:	0012      	ld         ah, @(0x0, x)
   56888:	0317      	ld         al, @(+0x3, y)
   56889:	E085      	cmp        al, @0xFFE0 <register ah>
   5688A:	EB2C      	bcz        -0x15 <___libcsrmesh_166+0x18:0x56875[p]>
   5688B:	041B      	ld         x, @(+0x4, y)
   5688C:	0032      	add        ah, @(0x0, x)
   5688D:	0817      	ld         al, @(+0x8, y)
   5688E:	FF00      	**prefx    0xFF
   5688F:	879C      	bsr        -0x179 <___libcsrmesh_157:0x56716[p]>
   56890:	081B      	ld         x, @(+0x8, y)
   56891:	0026      	st         al, @(0x0, x)
   56892:	F80F      	leave      #-0x8

0x00056893 <___libcsrmesh_160>:
   56893:	FE0B      	enter      #-0x2
   56894:	E119      	ld         x, @0xFFE1 <register al>
   56895:	E085      	cmp        al, @0xFFE0 <register ah>
   56896:	04F4      	beq        +0x4 <___libcsrmesh_160+0x7:0x5689A[p]>
   56897:	0016      	ld         al, @(0x0, x)
   56898:	0134      	add        al, #+0x1
   56899:	FD09      	bc2        
   5689A:	FE0F      	leave      #-0x2

0x0005689B <___libcsrmesh_171>:
   5689B:	ED0B      	enter      #-0x13
   5689C:	0F27      	st         al, @(+0xF, y)
   5689D:	1023      	st         ah, @(+0x10, y)
   5689E:	6100      	**prefx    0x61
   5689F:	D810      	ld         ah, #+0x60D8
   568A0:	FE00      	**prefx    0xFE
   568A1:	479C      	bsr        -0x1B9 <___libcsrmesh_159:0x566E8[p]>
   568A2:	FF84      	cmp        al, #-0x1
   568A3:	04F0      	bne        +0x4 <___libcsrmesh_171+0xC:0x568A7[p]>
   568A4:	0F17      	ld         al, @(+0xF, y)
   568A5:	0100      	**prefx    0x1
   568A6:	A7E0      	bra        +0xA7 <___libcsrmesh_171+0xB2:0x5694D[p]>
   568A7:	0C14      	ld         al, #+0xC
   568A8:	0127      	st         al, @(+0x1, y)
   568A9:	0F1B      	ld         x, @(+0xF, y)
   568AA:	0138      	add        x, #+0x1
   568AB:	F829      	st         x, @0xFFF8 <(scratchpad)>
   568AC:	E415      	ld         al, @0xFFE4 <register uy>
   568AD:	0234      	add        al, #+0x2
   568AE:	F925      	st         al, @0xFFF9 <(scratchpad)>
   568AF:	0010      	ld         ah, #+0x0
   568B0:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   568B1:	0016      	ld         al, @(0x0, x)
   568B2:	E131      	add        ah, @0xFFE1 <register al>
   568B3:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   568B4:	0010      	ld         ah, #+0x0
   568B5:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   568B6:	E189      	cmp        x, @0xFFE1 <register al>
   568B7:	02F8      	bcc        +0x2 <___libcsrmesh_171+0x1E:0x568B9[p]>
   568B8:	0110      	ld         ah, #+0x1
   568B9:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   568BA:	0C16      	ld         al, @(+0xC, x)
   568BB:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   568BC:	E139      	add        x, @0xFFE1 <register al>
   568BD:	FA29      	st         x, @0xFFFA <(scratchpad)>
   568BE:	E189      	cmp        x, @0xFFE1 <register al>
   568BF:	02F8      	bcc        +0x2 <___libcsrmesh_171+0x26:0x568C1[p]>
   568C0:	0130      	add        ah, #+0x1
   568C1:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   568C2:	1416      	ld         al, @(+0x14, x)
   568C3:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   568C4:	E139      	add        x, @0xFFE1 <register al>
   568C5:	FA29      	st         x, @0xFFFA <(scratchpad)>
   568C6:	E189      	cmp        x, @0xFFE1 <register al>
   568C7:	02F8      	bcc        +0x2 <___libcsrmesh_171+0x2E:0x568C9[p]>
   568C8:	0130      	add        ah, #+0x1
   568C9:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   568CA:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   568CB:	0026      	st         al, @(0x0, x)
   568CC:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   568CD:	0138      	add        x, #+0x1
   568CE:	F829      	st         x, @0xFFF8 <(scratchpad)>
   568CF:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   568D0:	0134      	add        al, #+0x1
   568D1:	F925      	st         al, @0xFFF9 <(scratchpad)>
   568D2:	E415      	ld         al, @0xFFE4 <register uy>
   568D3:	0634      	add        al, #+0x6
   568D4:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   568D5:	E189      	cmp        x, @0xFFE1 <register al>
   568D6:	DAF0      	bne        -0x26 <___libcsrmesh_171+0x15:0x568B0[p]>
   568D7:	0F17      	ld         al, @(+0xF, y)
   568D8:	0534      	add        al, #+0x5
   568D9:	F825      	st         al, @0xFFF8 <(scratchpad)>
   568DA:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   568DB:	0016      	ld         al, @(0x0, x)
   568DC:	E131      	add        ah, @0xFFE1 <register al>
   568DD:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   568DE:	0010      	ld         ah, #+0x0
   568DF:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   568E0:	E189      	cmp        x, @0xFFE1 <register al>
   568E1:	02F8      	bcc        +0x2 <___libcsrmesh_171+0x48:0x568E3[p]>
   568E2:	0110      	ld         ah, #+0x1
   568E3:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   568E4:	0816      	ld         al, @(+0x8, x)
   568E5:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   568E6:	E139      	add        x, @0xFFE1 <register al>
   568E7:	FA29      	st         x, @0xFFFA <(scratchpad)>
   568E8:	E189      	cmp        x, @0xFFE1 <register al>
   568E9:	02F8      	bcc        +0x2 <___libcsrmesh_171+0x50:0x568EB[p]>
   568EA:	0130      	add        ah, #+0x1
   568EB:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   568EC:	0C16      	ld         al, @(+0xC, x)
   568ED:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   568EE:	E139      	add        x, @0xFFE1 <register al>
   568EF:	FA29      	st         x, @0xFFFA <(scratchpad)>
   568F0:	E189      	cmp        x, @0xFFE1 <register al>
   568F1:	02F8      	bcc        +0x2 <___libcsrmesh_171+0x58:0x568F3[p]>
   568F2:	0130      	add        ah, #+0x1
   568F3:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   568F4:	1016      	ld         al, @(+0x10, x)
   568F5:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   568F6:	E139      	add        x, @0xFFE1 <register al>
   568F7:	FA29      	st         x, @0xFFFA <(scratchpad)>
   568F8:	E189      	cmp        x, @0xFFE1 <register al>
   568F9:	02F8      	bcc        +0x2 <___libcsrmesh_171+0x60:0x568FB[p]>
   568FA:	0130      	add        ah, #+0x1
   568FB:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   568FC:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   568FD:	0026      	st         al, @(0x0, x)
   568FE:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   568FF:	0138      	add        x, #+0x1
   56900:	F829      	st         x, @0xFFF8 <(scratchpad)>
   56901:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   56902:	0134      	add        al, #+0x1
   56903:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56904:	E415      	ld         al, @0xFFE4 <register uy>
   56905:	0A34      	add        al, #+0xA
   56906:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56907:	E189      	cmp        x, @0xFFE1 <register al>
   56908:	D2F0      	bne        -0x2E <___libcsrmesh_171+0x3F:0x568DA[p]>
   56909:	0F17      	ld         al, @(+0xF, y)
   5690A:	0934      	add        al, #+0x9
   5690B:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5690C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5690D:	0016      	ld         al, @(0x0, x)
   5690E:	E131      	add        ah, @0xFFE1 <register al>
   5690F:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   56910:	0010      	ld         ah, #+0x0
   56911:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56912:	E189      	cmp        x, @0xFFE1 <register al>
   56913:	02F8      	bcc        +0x2 <___libcsrmesh_171+0x7A:0x56915[p]>
   56914:	0110      	ld         ah, #+0x1
   56915:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56916:	0816      	ld         al, @(+0x8, x)
   56917:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56918:	E139      	add        x, @0xFFE1 <register al>
   56919:	FA29      	st         x, @0xFFFA <(scratchpad)>
   5691A:	E189      	cmp        x, @0xFFE1 <register al>
   5691B:	02F8      	bcc        +0x2 <___libcsrmesh_171+0x82:0x5691D[p]>
   5691C:	0130      	add        ah, #+0x1
   5691D:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5691E:	0C16      	ld         al, @(+0xC, x)
   5691F:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56920:	E139      	add        x, @0xFFE1 <register al>
   56921:	FA29      	st         x, @0xFFFA <(scratchpad)>
   56922:	E189      	cmp        x, @0xFFE1 <register al>
   56923:	02F8      	bcc        +0x2 <___libcsrmesh_171+0x8A:0x56925[p]>
   56924:	0130      	add        ah, #+0x1
   56925:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56926:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56927:	0026      	st         al, @(0x0, x)
   56928:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56929:	0138      	add        x, #+0x1
   5692A:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5692B:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5692C:	0134      	add        al, #+0x1
   5692D:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5692E:	E415      	ld         al, @0xFFE4 <register uy>
   5692F:	0E34      	add        al, #+0xE
   56930:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56931:	E189      	cmp        x, @0xFFE1 <register al>
   56932:	DAF0      	bne        -0x26 <___libcsrmesh_171+0x71:0x5690C[p]>
   56933:	E099      	tst        @0xFFE0 <register ah>
   56934:	0FF4      	beq        +0xF <___libcsrmesh_171+0xA8:0x56943[p]>
   56935:	E419      	ld         x, @0xFFE4 <register uy>
   56936:	013B      	add        x, @(+0x1, y)
   56937:	0222      	st         ah, @(+0x2, x)
   56938:	0117      	ld         al, @(+0x1, y)
   56939:	0134      	add        al, #+0x1
   5693A:	0127      	st         al, @(+0x1, y)
   5693B:	08E0      	bra        +0x8 <___libcsrmesh_171+0xA8:0x56943[p]>
   5693C:	E415      	ld         al, @0xFFE4 <register uy>
   5693D:	0134      	add        al, #+0x1
   5693E:	0027      	st         al, @(0x0, y)
   5693F:	6100      	**prefx    0x61
   56940:	D810      	ld         ah, #+0x60D8
   56941:	FE00      	**prefx    0xFE
   56942:	799C      	bsr        -0x187 <___libcsrmesh_169:0x567BB[p]>
   56943:	E415      	ld         al, @0xFFE4 <register uy>
   56944:	0134      	add        al, #+0x1
   56945:	6100      	**prefx    0x61
   56946:	D810      	ld         ah, #+0x60D8
   56947:	FE00      	**prefx    0xFE
   56948:	A09C      	bsr        -0x260 <___libcsrmesh_159:0x566E8[p]>
   56949:	FF84      	cmp        al, #-0x1
   5694A:	F2F0      	bne        -0xE <___libcsrmesh_171+0xA1:0x5693C[p]>
   5694B:	E415      	ld         al, @0xFFE4 <register uy>
   5694C:	0134      	add        al, #+0x1
   5694D:	1013      	ld         ah, @(+0x10, y)
   5694E:	FF00      	**prefx    0xFF
   5694F:	449C      	bsr        -0xBC <___libcsrmesh_160:0x56893[p]>
   56950:	ED0F      	leave      #-0x13

0x00056951 <___libcsrmesh_155>:
   56951:	DD00      	**prefx    0xDD
   56952:	0DE0      	bra        -0x22F3 <___libcsrmesh_117:0x5465F[p]>

0x00056953 <___libcsrmesh_156>:
   56953:	DD00      	**prefx    0xDD
   56954:	15E0      	bra        -0x22EB <___libcsrmesh_116:0x54669[p]>

0x00056955 <___libcsrmesh_170>:
   56955:	F50B      	enter      #-0xB
   56956:	0727      	st         al, @(+0x7, y)
   56957:	0823      	st         ah, @(+0x8, y)
   56958:	0D14      	ld         al, #+0xD
   56959:	FA9C      	bsr        -0x6 <___libcsrmesh_156:0x56953[p]>
   5695A:	0527      	st         al, @(+0x5, y)
   5695B:	0D14      	ld         al, #+0xD
   5695C:	F79C      	bsr        -0x9 <___libcsrmesh_156:0x56953[p]>
   5695D:	0427      	st         al, @(+0x4, y)
   5695E:	0D14      	ld         al, #+0xD
   5695F:	F49C      	bsr        -0xC <___libcsrmesh_156:0x56953[p]>
   56960:	0327      	st         al, @(+0x3, y)
   56961:	0D14      	ld         al, #+0xD
   56962:	F19C      	bsr        -0xF <___libcsrmesh_156:0x56953[p]>
   56963:	0227      	st         al, @(+0x2, y)
   56964:	0D14      	ld         al, #+0xD
   56965:	EE9C      	bsr        -0x12 <___libcsrmesh_156:0x56953[p]>
   56966:	0127      	st         al, @(+0x1, y)
   56967:	0717      	ld         al, @(+0x7, y)
   56968:	0513      	ld         ah, @(+0x5, y)
   56969:	FF00      	**prefx    0xFF
   5696A:	299C      	bsr        -0xD7 <___libcsrmesh_160:0x56893[p]>
   5696B:	6100      	**prefx    0x61
   5696C:	D814      	ld         al, #+0x60D8
   5696D:	0413      	ld         ah, @(+0x4, y)
   5696E:	FF00      	**prefx    0xFF
   5696F:	249C      	bsr        -0xDC <___libcsrmesh_160:0x56893[p]>
   56970:	0114      	ld         al, #+0x1
   56971:	031B      	ld         x, @(+0x3, y)
   56972:	0026      	st         al, @(0x0, x)
   56973:	0138      	add        x, #+0x1
   56974:	062B      	st         x, @(+0x6, y)
   56975:	031B      	ld         x, @(+0x3, y)
   56976:	0126      	st         al, @(+0x1, x)
   56977:	0014      	ld         al, #+0x0
   56978:	021B      	ld         x, @(+0x2, y)
   56979:	0026      	st         al, @(0x0, x)
   5697A:	57E0      	bra        +0x57 <___libcsrmesh_170+0x7C:0x569D1[p]>
   5697B:	0517      	ld         al, @(+0x5, y)
   5697C:	FE00      	**prefx    0xFE
   5697D:	B59C      	bsr        -0x24B <___libcsrmesh_168:0x56732[p]>
   5697E:	061B      	ld         x, @(+0x6, y)
   5697F:	0016      	ld         al, @(0x0, x)
   56980:	01C4      	and        al, #0x1
   56981:	05F0      	bne        +0x5 <___libcsrmesh_170+0x31:0x56986[p]>
   56982:	0317      	ld         al, @(+0x3, y)
   56983:	FE00      	**prefx    0xFE
   56984:	AE9C      	bsr        -0x252 <___libcsrmesh_168:0x56732[p]>
   56985:	0FE0      	bra        +0xF <___libcsrmesh_170+0x3F:0x56994[p]>
   56986:	0117      	ld         al, @(+0x1, y)
   56987:	0027      	st         al, @(0x0, y)
   56988:	0317      	ld         al, @(+0x3, y)
   56989:	6100      	**prefx    0x61
   5698A:	D810      	ld         ah, #+0x60D8
   5698B:	FE00      	**prefx    0xFE
   5698C:	CB9C      	bsr        -0x235 <___libcsrmesh_158:0x56757[p]>
   5698D:	0117      	ld         al, @(+0x1, y)
   5698E:	FE00      	**prefx    0xFE
   5698F:	A39C      	bsr        -0x25D <___libcsrmesh_168:0x56732[p]>
   56990:	0117      	ld         al, @(+0x1, y)
   56991:	0313      	ld         ah, @(+0x3, y)
   56992:	FF00      	**prefx    0xFF
   56993:	089C      	bsr        -0xF8 <___libcsrmesh_171:0x5689B[p]>
   56994:	051B      	ld         x, @(+0x5, y)
   56995:	0116      	ld         al, @(+0x1, x)
   56996:	01C4      	and        al, #0x1
   56997:	E4F4      	beq        -0x1C <___libcsrmesh_170+0x26:0x5697B[p]>
   56998:	1AE0      	bra        +0x1A <___libcsrmesh_170+0x5D:0x569B2[p]>
   56999:	0417      	ld         al, @(+0x4, y)
   5699A:	FE00      	**prefx    0xFE
   5699B:	979C      	bsr        -0x269 <___libcsrmesh_168:0x56732[p]>
   5699C:	021B      	ld         x, @(+0x2, y)
   5699D:	0116      	ld         al, @(+0x1, x)
   5699E:	01C4      	and        al, #0x1
   5699F:	05F0      	bne        +0x5 <___libcsrmesh_170+0x4F:0x569A4[p]>
   569A0:	E315      	ld         al, @0xFFE3 <register uxl>
   569A1:	FE00      	**prefx    0xFE
   569A2:	909C      	bsr        -0x270 <___libcsrmesh_168:0x56732[p]>
   569A3:	0FE0      	bra        +0xF <___libcsrmesh_170+0x5D:0x569B2[p]>
   569A4:	0117      	ld         al, @(+0x1, y)
   569A5:	0027      	st         al, @(0x0, y)
   569A6:	0217      	ld         al, @(+0x2, y)
   569A7:	6100      	**prefx    0x61
   569A8:	D810      	ld         ah, #+0x60D8
   569A9:	FE00      	**prefx    0xFE
   569AA:	AD9C      	bsr        -0x253 <___libcsrmesh_158:0x56757[p]>
   569AB:	0117      	ld         al, @(+0x1, y)
   569AC:	FE00      	**prefx    0xFE
   569AD:	859C      	bsr        -0x27B <___libcsrmesh_168:0x56732[p]>
   569AE:	0117      	ld         al, @(+0x1, y)
   569AF:	0213      	ld         ah, @(+0x2, y)
   569B0:	FF00      	**prefx    0xFF
   569B1:	EA9C      	bsr        -0x116 <___libcsrmesh_171:0x5689B[p]>
   569B2:	041B      	ld         x, @(+0x4, y)
   569B3:	0116      	ld         al, @(+0x1, x)
   569B4:	01C4      	and        al, #0x1
   569B5:	E4F4      	beq        -0x1C <___libcsrmesh_170+0x44:0x56999[p]>
   569B6:	0517      	ld         al, @(+0x5, y)
   569B7:	E311      	ld         ah, @0xFFE3 <register uxl>
   569B8:	FD00      	**prefx    0xFD
   569B9:	2F9C      	bsr        -0x2D1 <___libcsrmesh_159:0x566E8[p]>
   569BA:	E199      	tst        @0xFFE1 <register al>
   569BB:	0BEC      	bmi        +0xB <___libcsrmesh_170+0x71:0x569C6[p]>
   569BC:	0517      	ld         al, @(+0x5, y)
   569BD:	0027      	st         al, @(0x0, y)
   569BE:	0413      	ld         ah, @(+0x4, y)
   569BF:	FE00      	**prefx    0xFE
   569C0:	FB9C      	bsr        -0x205 <___libcsrmesh_169:0x567BB[p]>
   569C1:	031B      	ld         x, @(+0x3, y)
   569C2:	002B      	st         x, @(0x0, y)
   569C3:	E315      	ld         al, @0xFFE3 <register uxl>
   569C4:	0213      	ld         ah, @(+0x2, y)
   569C5:	0AE0      	bra        +0xA <___libcsrmesh_170+0x7A:0x569CF[p]>
   569C6:	0417      	ld         al, @(+0x4, y)
   569C7:	0027      	st         al, @(0x0, y)
   569C8:	0513      	ld         ah, @(+0x5, y)
   569C9:	FE00      	**prefx    0xFE
   569CA:	F19C      	bsr        -0x20F <___libcsrmesh_169:0x567BB[p]>
   569CB:	021B      	ld         x, @(+0x2, y)
   569CC:	002B      	st         x, @(0x0, y)
   569CD:	E315      	ld         al, @0xFFE3 <register uxl>
   569CE:	0313      	ld         ah, @(+0x3, y)
   569CF:	FE00      	**prefx    0xFE
   569D0:	3A9C      	bsr        -0x1C6 <___libcsrmesh_165:0x5680A[p]>
   569D1:	051B      	ld         x, @(+0x5, y)
   569D2:	0012      	ld         ah, @(0x0, x)
   569D3:	1AF4      	beq        +0x1A <___libcsrmesh_170+0x98:0x569ED[p]>
   569D4:	041B      	ld         x, @(+0x4, y)
   569D5:	001A      	ld         x, @(0x0, x)
   569D6:	F829      	st         x, @0xFFF8 <(scratchpad)>
   569D7:	0EF4      	beq        +0xE <___libcsrmesh_170+0x90:0x569E5[p]>
   569D8:	0180      	cmp        ah, #+0x1
   569D9:	05F0      	bne        +0x5 <___libcsrmesh_170+0x89:0x569DE[p]>
   569DA:	051B      	ld         x, @(+0x5, y)
   569DB:	0116      	ld         al, @(+0x1, x)
   569DC:	0184      	cmp        al, #+0x1
   569DD:	0AF4      	beq        +0xA <___libcsrmesh_170+0x92:0x569E7[p]>
   569DE:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   569DF:	0184      	cmp        al, #+0x1
   569E0:	B4F0      	bne        -0x4C <___libcsrmesh_170+0x3F:0x56994[p]>
   569E1:	041B      	ld         x, @(+0x4, y)
   569E2:	0116      	ld         al, @(+0x1, x)
   569E3:	0184      	cmp        al, #+0x1
   569E4:	B0F0      	bne        -0x50 <___libcsrmesh_170+0x3F:0x56994[p]>
   569E5:	0180      	cmp        ah, #+0x1
   569E6:	07F0      	bne        +0x7 <___libcsrmesh_170+0x98:0x569ED[p]>
   569E7:	051B      	ld         x, @(+0x5, y)
   569E8:	0116      	ld         al, @(+0x1, x)
   569E9:	0184      	cmp        al, #+0x1
   569EA:	03F0      	bne        +0x3 <___libcsrmesh_170+0x98:0x569ED[p]>
   569EB:	0317      	ld         al, @(+0x3, y)
   569EC:	02E0      	bra        +0x2 <___libcsrmesh_170+0x99:0x569EE[p]>
   569ED:	0217      	ld         al, @(+0x2, y)
   569EE:	0813      	ld         ah, @(+0x8, y)
   569EF:	FF00      	**prefx    0xFF
   569F0:	A39C      	bsr        -0x15D <___libcsrmesh_160:0x56893[p]>
   569F1:	0D14      	ld         al, #+0xD
   569F2:	FF00      	**prefx    0xFF
   569F3:	5E9C      	bsr        -0xA2 <___libcsrmesh_155:0x56951[p]>
   569F4:	0D14      	ld         al, #+0xD
   569F5:	FF00      	**prefx    0xFF
   569F6:	5B9C      	bsr        -0xA5 <___libcsrmesh_155:0x56951[p]>
   569F7:	0D14      	ld         al, #+0xD
   569F8:	FF00      	**prefx    0xFF
   569F9:	589C      	bsr        -0xA8 <___libcsrmesh_155:0x56951[p]>
   569FA:	0D14      	ld         al, #+0xD
   569FB:	FF00      	**prefx    0xFF
   569FC:	559C      	bsr        -0xAB <___libcsrmesh_155:0x56951[p]>
   569FD:	0D14      	ld         al, #+0xD
   569FE:	FF00      	**prefx    0xFF
   569FF:	529C      	bsr        -0xAE <___libcsrmesh_155:0x56951[p]>
   56A00:	F50F      	leave      #-0xB

0x00056A01 <___libcsrmesh_163>:
   56A01:	FA0B      	enter      #-0x6
   56A02:	0227      	st         al, @(+0x2, y)
   56A03:	0323      	st         ah, @(+0x3, y)
   56A04:	1914      	ld         al, #+0x19
   56A05:	FF00      	**prefx    0xFF
   56A06:	4D9C      	bsr        -0xB3 <___libcsrmesh_156:0x56953[p]>
   56A07:	0127      	st         al, @(+0x1, y)
   56A08:	0027      	st         al, @(0x0, y)
   56A09:	0217      	ld         al, @(+0x2, y)
   56A0A:	0313      	ld         ah, @(+0x3, y)
   56A0B:	FE00      	**prefx    0xFE
   56A0C:	519C      	bsr        -0x1AF <___libcsrmesh_166:0x5685D[p]>
   56A0D:	0117      	ld         al, @(+0x1, y)
   56A0E:	0613      	ld         ah, @(+0x6, y)
   56A0F:	FF00      	**prefx    0xFF
   56A10:	8B9C      	bsr        -0x175 <___libcsrmesh_171:0x5689B[p]>
   56A11:	1914      	ld         al, #+0x19
   56A12:	FF00      	**prefx    0xFF
   56A13:	3E9C      	bsr        -0xC2 <___libcsrmesh_155:0x56951[p]>
   56A14:	FA0F      	leave      #-0x6

0x00056A15 <___libcsrmesh_164>:
   56A15:	FD0B      	enter      #-0x3
   56A16:	0023      	st         ah, @(0x0, y)
   56A17:	E111      	ld         ah, @0xFFE1 <register al>
   56A18:	E99C      	bsr        -0x17 <___libcsrmesh_163:0x56A01[p]>
   56A19:	FD0F      	leave      #-0x3

0x00056A1A <___libcsrmesh_162>:
   56A1A:	FA0B      	enter      #-0x6
   56A1B:	0227      	st         al, @(+0x2, y)
   56A1C:	0323      	st         ah, @(+0x3, y)
   56A1D:	0E14      	ld         al, #+0xE
   56A1E:	FF00      	**prefx    0xFF
   56A1F:	349C      	bsr        -0xCC <___libcsrmesh_156:0x56953[p]>
   56A20:	0127      	st         al, @(+0x1, y)
   56A21:	0027      	st         al, @(0x0, y)
   56A22:	0217      	ld         al, @(+0x2, y)
   56A23:	0313      	ld         ah, @(+0x3, y)
   56A24:	FD00      	**prefx    0xFD
   56A25:	329C      	bsr        -0x2CE <___libcsrmesh_158:0x56757[p]>
   56A26:	0117      	ld         al, @(+0x1, y)
   56A27:	6100      	**prefx    0x61
   56A28:	D810      	ld         ah, #+0x60D8
   56A29:	FD00      	**prefx    0xFD
   56A2A:	BE9C      	bsr        -0x342 <___libcsrmesh_159:0x566E8[p]>
   56A2B:	E199      	tst        @0xFFE1 <register al>
   56A2C:	07EC      	bmi        +0x7 <___libcsrmesh_162+0x19:0x56A33[p]>
   56A2D:	0117      	ld         al, @(+0x1, y)
   56A2E:	0027      	st         al, @(0x0, y)
   56A2F:	6100      	**prefx    0x61
   56A30:	D810      	ld         ah, #+0x60D8
   56A31:	FE00      	**prefx    0xFE
   56A32:	899C      	bsr        -0x277 <___libcsrmesh_169:0x567BB[p]>
   56A33:	0117      	ld         al, @(+0x1, y)
   56A34:	0613      	ld         ah, @(+0x6, y)
   56A35:	FE00      	**prefx    0xFE
   56A36:	5D9C      	bsr        -0x1A3 <___libcsrmesh_160:0x56893[p]>
   56A37:	0E14      	ld         al, #+0xE
   56A38:	FF00      	**prefx    0xFF
   56A39:	189C      	bsr        -0xE8 <___libcsrmesh_155:0x56951[p]>
   56A3A:	FA0F      	leave      #-0x6

0x00056A3B <___libcsrmesh_286>:
   56A3B:	FC0B      	enter      #-0x4
   56A3C:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56A3D:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56A3E:	0717      	ld         al, @(+0x7, y)
   56A3F:	FE27      	st         al, @(-0x2, y)
   56A40:	059B      	tst        @(+0x5, y)
   56A41:	3DF4      	beq        +0x3D <___libcsrmesh_286+0x43:0x56A7E[p]>
   56A42:	E119      	ld         x, @0xFFE1 <register al>
   56A43:	301A      	ld         x, @(+0x30, x)
   56A44:	E311      	ld         ah, @0xFFE3 <register uxl>
   56A45:	0009      	**unsigned
   56A46:	02A4      	lsr        #0x2
   56A47:	FF23      	st         ah, @(-0x1, y)
   56A48:	E315      	ld         al, @0xFFE3 <register uxl>
   56A49:	03C4      	and        al, #0x3
   56A4A:	FB25      	st         al, @0xFFFB <(scratchpad)>
   56A4B:	0517      	ld         al, @(+0x5, y)
   56A4C:	E335      	add        al, @0xFFE3 <register uxl>
   56A4D:	FE1B      	ld         x, @(-0x2, y)
   56A4E:	3026      	st         al, @(+0x30, x)
   56A4F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56A50:	F939      	add        x, @0xFFF9 <(scratchpad)>
   56A51:	FA29      	st         x, @0xFFFA <(scratchpad)>
   56A52:	0014      	ld         al, #+0x0
   56A53:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56A54:	27E0      	bra        +0x27 <___libcsrmesh_286+0x40:0x56A7B[p]>
   56A55:	FF17      	ld         al, @(-0x1, y)
   56A56:	0834      	add        al, #+0x8
   56A57:	01A0      	asl        #0x1
   56A58:	FE1B      	ld         x, @(-0x2, y)
   56A59:	E139      	add        x, @0xFFE1 <register al>
   56A5A:	F829      	st         x, @0xFFF8 <(scratchpad)>
   56A5B:	0116      	ld         al, @(+0x1, x)
   56A5C:	0012      	ld         ah, @(0x0, x)
   56A5D:	08A0      	asl        #0x8
   56A5E:	0127      	st         al, @(+0x1, y)
   56A5F:	0022      	st         ah, @(0x0, x)
   56A60:	0126      	st         al, @(+0x1, x)
   56A61:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56A62:	0016      	ld         al, @(0x0, x)
   56A63:	0100      	**prefx    0x1
   56A64:	FFC4      	and        al, #0xFF
   56A65:	08D7      	xor        al, @(+0x8, y)
   56A66:	0027      	st         al, @(0x0, y)
   56A67:	0117      	ld         al, @(+0x1, y)
   56A68:	00B7      	or         al, @(0x0, y)
   56A69:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56A6A:	0126      	st         al, @(+0x1, x)
   56A6B:	0022      	st         ah, @(0x0, x)
   56A6C:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56A6D:	0138      	add        x, #+0x1
   56A6E:	FB29      	st         x, @0xFFFB <(scratchpad)>
   56A6F:	E315      	ld         al, @0xFFE3 <register uxl>
   56A70:	03C4      	and        al, #0x3
   56A71:	04F0      	bne        +0x4 <___libcsrmesh_286+0x3A:0x56A75[p]>
   56A72:	FF17      	ld         al, @(-0x1, y)
   56A73:	0134      	add        al, #+0x1
   56A74:	FF27      	st         al, @(-0x1, y)
   56A75:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56A76:	0138      	add        x, #+0x1
   56A77:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56A78:	0617      	ld         al, @(+0x6, y)
   56A79:	FA35      	add        al, @0xFFFA <(scratchpad)>
   56A7A:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56A7B:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56A7C:	058B      	cmp        x, @(+0x5, y)
   56A7D:	D8FC      	bcs        -0x28 <___libcsrmesh_286+0x1A:0x56A55[p]>
   56A7E:	FC0F      	leave      #-0x4

0x00056A7F <___libcsrmesh_291>:
   56A7F:	D40B      	enter      #-0x2C
   56A80:	1927      	st         al, @(+0x19, y)
   56A81:	1A23      	st         ah, @(+0x1A, y)
   56A82:	1014      	ld         al, #+0x10
   56A83:	E411      	ld         ah, @0xFFE4 <register uy>
   56A84:	191B      	ld         x, @(+0x19, y)
   56A85:	FD09      	bc2        
   56A86:	0010      	ld         ah, #+0x0
   56A87:	1323      	st         ah, @(+0x13, y)
   56A88:	1317      	ld         al, @(+0x13, y)
   56A89:	0FC4      	and        al, #0xF
   56A8A:	1227      	st         al, @(+0x12, y)
   56A8B:	081B      	ld         x, @(+0x8, y)
   56A8C:	FE2B      	st         x, @(-0x2, y)
   56A8D:	0913      	ld         ah, @(+0x9, y)
   56A8E:	FF23      	st         ah, @(-0x1, y)
   56A8F:	01A0      	asl        #0x1
   56A90:	1A1B      	ld         x, @(+0x1A, y)
   56A91:	E139      	add        x, @0xFFE1 <register al>
   56A92:	182B      	st         x, @(+0x18, y)
   56A93:	1317      	ld         al, @(+0x13, y)
   56A94:	01A0      	asl        #0x1
   56A95:	E119      	ld         x, @0xFFE1 <register al>
   56A96:	0F17      	ld         al, @(+0xF, y)
   56A97:	0E13      	ld         ah, @(+0xE, y)
   56A98:	A200      	**prefx    0xA2
   56A99:	2036      	add        al, @(-0x5DE0, x)
   56A9A:	A200      	**prefx    0xA2
   56A9B:	1F42      	addc       ah, @(-0x5DE1, x)
   56A9C:	FB25      	st         al, @0xFFFB <(scratchpad)>
   56A9D:	2923      	st         ah, @(+0x29, y)
   56A9E:	FE17      	ld         al, @(-0x2, y)
   56A9F:	05A0      	asl        #0x5
   56AA0:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56AA1:	FF13      	ld         ah, @(-0x1, y)
   56AA2:	0009      	**unsigned
   56AA3:	0BA4      	lsr        #0xB
   56AA4:	FAB1      	or         ah, @0xFFFA <(scratchpad)>
   56AA5:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   56AA6:	FF17      	ld         al, @(-0x1, y)
   56AA7:	05A0      	asl        #0x5
   56AA8:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56AA9:	FE13      	ld         ah, @(-0x2, y)
   56AAA:	0009      	**unsigned
   56AAB:	0BA4      	lsr        #0xB
   56AAC:	F9B1      	or         ah, @0xFFF9 <(scratchpad)>
   56AAD:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   56AAE:	FE17      	ld         al, @(-0x2, y)
   56AAF:	0AA0      	asl        #0xA
   56AB0:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56AB1:	FF13      	ld         ah, @(-0x1, y)
   56AB2:	0009      	**unsigned
   56AB3:	06A4      	lsr        #0x6
   56AB4:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   56AB5:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56AB6:	FF17      	ld         al, @(-0x1, y)
   56AB7:	0AA0      	asl        #0xA
   56AB8:	E119      	ld         x, @0xFFE1 <register al>
   56AB9:	FE13      	ld         ah, @(-0x2, y)
   56ABA:	0009      	**unsigned
   56ABB:	06A4      	lsr        #0x6
   56ABC:	E0B9      	or         x, @0xFFE0 <register ah>
   56ABD:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56ABE:	F8D5      	xor        al, @0xFFF8 <(scratchpad)>
   56ABF:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   56AC0:	E3D1      	xor        ah, @0xFFE3 <register uxl>
   56AC1:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56AC2:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   56AC3:	FE13      	ld         ah, @(-0x2, y)
   56AC4:	0009      	**unsigned
   56AC5:	09A4      	lsr        #0x9
   56AC6:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56AC7:	FF17      	ld         al, @(-0x1, y)
   56AC8:	07A0      	asl        #0x7
   56AC9:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
   56ACA:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56ACB:	FF13      	ld         ah, @(-0x1, y)
   56ACC:	0009      	**unsigned
   56ACD:	09A4      	lsr        #0x9
   56ACE:	E019      	ld         x, @0xFFE0 <register ah>
   56ACF:	FE17      	ld         al, @(-0x2, y)
   56AD0:	07A0      	asl        #0x7
   56AD1:	E1B9      	or         x, @0xFFE1 <register al>
   56AD2:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   56AD3:	F8D5      	xor        al, @0xFFF8 <(scratchpad)>
   56AD4:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   56AD5:	E3D1      	xor        ah, @0xFFE3 <register uxl>
   56AD6:	1C27      	st         al, @(+0x1C, y)
   56AD7:	1B23      	st         ah, @(+0x1B, y)
   56AD8:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   56AD9:	2913      	ld         ah, @(+0x29, y)
   56ADA:	1C37      	add        al, @(+0x1C, y)
   56ADB:	1B43      	addc       ah, @(+0x1B, y)
   56ADC:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56ADD:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   56ADE:	FE13      	ld         ah, @(-0x2, y)
   56ADF:	FFD0      	xor        ah, #0xFFFF
   56AE0:	FF17      	ld         al, @(-0x1, y)
   56AE1:	FFD4      	xor        al, #0xFFFF
   56AE2:	0DC7      	and        al, @(+0xD, y)
   56AE3:	0CC3      	and        ah, @(+0xC, y)
   56AE4:	E119      	ld         x, @0xFFE1 <register al>
   56AE5:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56AE6:	FF17      	ld         al, @(-0x1, y)
   56AE7:	0BC7      	and        al, @(+0xB, y)
   56AE8:	FE13      	ld         ah, @(-0x2, y)
   56AE9:	0AC3      	and        ah, @(+0xA, y)
   56AEA:	E3D5      	xor        al, @0xFFE3 <register uxl>
   56AEB:	F8D1      	xor        ah, @0xFFF8 <(scratchpad)>
   56AEC:	1E27      	st         al, @(+0x1E, y)
   56AED:	1D23      	st         ah, @(+0x1D, y)
   56AEE:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   56AEF:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   56AF0:	1E37      	add        al, @(+0x1E, y)
   56AF1:	1D43      	addc       ah, @(+0x1D, y)
   56AF2:	181B      	ld         x, @(+0x18, y)
   56AF3:	0136      	add        al, @(+0x1, x)
   56AF4:	0042      	addc       ah, @(0x0, x)
   56AF5:	1127      	st         al, @(+0x11, y)
   56AF6:	1023      	st         ah, @(+0x10, y)
   56AF7:	0013      	ld         ah, @(0x0, y)
   56AF8:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   56AF9:	0117      	ld         al, @(+0x1, y)
   56AFA:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56AFB:	021B      	ld         x, @(+0x2, y)
   56AFC:	262B      	st         x, @(+0x26, y)
   56AFD:	0313      	ld         ah, @(+0x3, y)
   56AFE:	2723      	st         ah, @(+0x27, y)
   56AFF:	0417      	ld         al, @(+0x4, y)
   56B00:	2527      	st         al, @(+0x25, y)
   56B01:	051B      	ld         x, @(+0x5, y)
   56B02:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56B03:	0C13      	ld         ah, @(+0xC, y)
   56B04:	0E23      	st         ah, @(+0xE, y)
   56B05:	0D17      	ld         al, @(+0xD, y)
   56B06:	0F27      	st         al, @(+0xF, y)
   56B07:	0A13      	ld         ah, @(+0xA, y)
   56B08:	0B1B      	ld         x, @(+0xB, y)
   56B09:	0D2B      	st         x, @(+0xD, y)
   56B0A:	0C23      	st         ah, @(+0xC, y)
   56B0B:	FF13      	ld         ah, @(-0x1, y)
   56B0C:	0B23      	st         ah, @(+0xB, y)
   56B0D:	FE17      	ld         al, @(-0x2, y)
   56B0E:	0A27      	st         al, @(+0xA, y)
   56B0F:	111B      	ld         x, @(+0x11, y)
   56B10:	E315      	ld         al, @0xFFE3 <register uxl>
   56B11:	101B      	ld         x, @(+0x10, y)
   56B12:	E311      	ld         ah, @0xFFE3 <register uxl>
   56B13:	0737      	add        al, @(+0x7, y)
   56B14:	0643      	addc       ah, @(+0x6, y)
   56B15:	0927      	st         al, @(+0x9, y)
   56B16:	0823      	st         ah, @(+0x8, y)
   56B17:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   56B18:	0723      	st         ah, @(+0x7, y)
   56B19:	2517      	ld         al, @(+0x25, y)
   56B1A:	0627      	st         al, @(+0x6, y)
   56B1B:	271B      	ld         x, @(+0x27, y)
   56B1C:	052B      	st         x, @(+0x5, y)
   56B1D:	2613      	ld         ah, @(+0x26, y)
   56B1E:	0423      	st         ah, @(+0x4, y)
   56B1F:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56B20:	0327      	st         al, @(+0x3, y)
   56B21:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56B22:	022B      	st         x, @(+0x2, y)
   56B23:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   56B24:	FAC5      	and        al, @0xFFFA <(scratchpad)>
   56B25:	2513      	ld         ah, @(+0x25, y)
   56B26:	FBC1      	and        ah, @0xFFFB <(scratchpad)>
   56B27:	E119      	ld         x, @0xFFE1 <register al>
   56B28:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56B29:	2717      	ld         al, @(+0x27, y)
   56B2A:	FAC5      	and        al, @0xFFFA <(scratchpad)>
   56B2B:	2613      	ld         ah, @(+0x26, y)
   56B2C:	FBC1      	and        ah, @0xFFFB <(scratchpad)>
   56B2D:	E3D5      	xor        al, @0xFFE3 <register uxl>
   56B2E:	F8D1      	xor        ah, @0xFFF8 <(scratchpad)>
   56B2F:	E119      	ld         x, @0xFFE1 <register al>
   56B30:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56B31:	2717      	ld         al, @(+0x27, y)
   56B32:	F9C5      	and        al, @0xFFF9 <(scratchpad)>
   56B33:	2513      	ld         ah, @(+0x25, y)
   56B34:	26C3      	and        ah, @(+0x26, y)
   56B35:	E3D5      	xor        al, @0xFFE3 <register uxl>
   56B36:	F8D1      	xor        ah, @0xFFF8 <(scratchpad)>
   56B37:	2827      	st         al, @(+0x28, y)
   56B38:	FE23      	st         ah, @(-0x2, y)
   56B39:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   56B3A:	03A0      	asl        #0x3
   56B3B:	FF27      	st         al, @(-0x1, y)
   56B3C:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   56B3D:	0009      	**unsigned
   56B3E:	0DA4      	lsr        #0xD
   56B3F:	FFB3      	or         ah, @(-0x1, y)
   56B40:	FF23      	st         ah, @(-0x1, y)
   56B41:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56B42:	03A0      	asl        #0x3
   56B43:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56B44:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   56B45:	0009      	**unsigned
   56B46:	0DA4      	lsr        #0xD
   56B47:	F9B1      	or         ah, @0xFFF9 <(scratchpad)>
   56B48:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   56B49:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   56B4A:	0EA0      	asl        #0xE
   56B4B:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56B4C:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   56B4D:	0009      	**unsigned
   56B4E:	02A4      	lsr        #0x2
   56B4F:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   56B50:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56B51:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56B52:	0EA0      	asl        #0xE
   56B53:	E119      	ld         x, @0xFFE1 <register al>
   56B54:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   56B55:	0009      	**unsigned
   56B56:	02A4      	lsr        #0x2
   56B57:	E0B9      	or         x, @0xFFE0 <register ah>
   56B58:	FF17      	ld         al, @(-0x1, y)
   56B59:	F8D5      	xor        al, @0xFFF8 <(scratchpad)>
   56B5A:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   56B5B:	E3D1      	xor        ah, @0xFFE3 <register uxl>
   56B5C:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56B5D:	FF23      	st         ah, @(-0x1, y)
   56B5E:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   56B5F:	0009      	**unsigned
   56B60:	06A4      	lsr        #0x6
   56B61:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56B62:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56B63:	0AA0      	asl        #0xA
   56B64:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
   56B65:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56B66:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   56B67:	0009      	**unsigned
   56B68:	06A4      	lsr        #0x6
   56B69:	E019      	ld         x, @0xFFE0 <register ah>
   56B6A:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   56B6B:	0AA0      	asl        #0xA
   56B6C:	E1B9      	or         x, @0xFFE1 <register al>
   56B6D:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   56B6E:	F8D5      	xor        al, @0xFFF8 <(scratchpad)>
   56B6F:	FF13      	ld         ah, @(-0x1, y)
   56B70:	E3D1      	xor        ah, @0xFFE3 <register uxl>
   56B71:	2027      	st         al, @(+0x20, y)
   56B72:	1F23      	st         ah, @(+0x1F, y)
   56B73:	FE13      	ld         ah, @(-0x2, y)
   56B74:	2817      	ld         al, @(+0x28, y)
   56B75:	2037      	add        al, @(+0x20, y)
   56B76:	1F43      	addc       ah, @(+0x1F, y)
   56B77:	1137      	add        al, @(+0x11, y)
   56B78:	1043      	addc       ah, @(+0x10, y)
   56B79:	0127      	st         al, @(+0x1, y)
   56B7A:	0023      	st         ah, @(0x0, y)
   56B7B:	1313      	ld         ah, @(+0x13, y)
   56B7C:	3080      	cmp        ah, #+0x30
   56B7D:	0100      	**prefx    0x1
   56B7E:	9FF8      	bcc        +0x9F <___libcsrmesh_291+0x19E:0x56C1D[p]>
   56B7F:	1217      	ld         al, @(+0x12, y)
   56B80:	0E34      	add        al, #+0xE
   56B81:	0FC4      	and        al, #0xF
   56B82:	01A0      	asl        #0x1
   56B83:	E119      	ld         x, @0xFFE1 <register al>
   56B84:	1A3B      	add        x, @(+0x1A, y)
   56B85:	0116      	ld         al, @(+0x1, x)
   56B86:	1727      	st         al, @(+0x17, y)
   56B87:	001A      	ld         x, @(0x0, x)
   56B88:	162B      	st         x, @(+0x16, y)
   56B89:	121B      	ld         x, @(+0x12, y)
   56B8A:	0138      	add        x, #+0x1
   56B8B:	122B      	st         x, @(+0x12, y)
   56B8C:	E315      	ld         al, @0xFFE3 <register uxl>
   56B8D:	0FC4      	and        al, #0xF
   56B8E:	01A0      	asl        #0x1
   56B8F:	E119      	ld         x, @0xFFE1 <register al>
   56B90:	1A3B      	add        x, @(+0x1A, y)
   56B91:	0112      	ld         ah, @(+0x1, x)
   56B92:	1523      	st         ah, @(+0x15, y)
   56B93:	001A      	ld         x, @(0x0, x)
   56B94:	142B      	st         x, @(+0x14, y)
   56B95:	1217      	ld         al, @(+0x12, y)
   56B96:	0834      	add        al, #+0x8
   56B97:	0FC4      	and        al, #0xF
   56B98:	1227      	st         al, @(+0x12, y)
   56B99:	01A0      	asl        #0x1
   56B9A:	E119      	ld         x, @0xFFE1 <register al>
   56B9B:	1A3B      	add        x, @(+0x1A, y)
   56B9C:	0116      	ld         al, @(+0x1, x)
   56B9D:	0012      	ld         ah, @(0x0, x)
   56B9E:	181B      	ld         x, @(+0x18, y)
   56B9F:	0136      	add        al, @(+0x1, x)
   56BA0:	0042      	addc       ah, @(0x0, x)
   56BA1:	FB25      	st         al, @0xFFFB <(scratchpad)>
   56BA2:	FF23      	st         ah, @(-0x1, y)
   56BA3:	1617      	ld         al, @(+0x16, y)
   56BA4:	E111      	ld         ah, @0xFFE1 <register al>
   56BA5:	0009      	**unsigned
   56BA6:	03A4      	lsr        #0x3
   56BA7:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   56BA8:	171B      	ld         x, @(+0x17, y)
   56BA9:	E315      	ld         al, @0xFFE3 <register uxl>
   56BAA:	0DA0      	asl        #0xD
   56BAB:	FAB5      	or         al, @0xFFFA <(scratchpad)>
   56BAC:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56BAD:	E311      	ld         ah, @0xFFE3 <register uxl>
   56BAE:	0009      	**unsigned
   56BAF:	03A4      	lsr        #0x3
   56BB0:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   56BB1:	161B      	ld         x, @(+0x16, y)
   56BB2:	E315      	ld         al, @0xFFE3 <register uxl>
   56BB3:	0DA0      	asl        #0xD
   56BB4:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   56BB5:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56BB6:	E311      	ld         ah, @0xFFE3 <register uxl>
   56BB7:	0009      	**unsigned
   56BB8:	01A4      	lsr        #0x1
   56BB9:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56BBA:	171B      	ld         x, @(+0x17, y)
   56BBB:	E315      	ld         al, @0xFFE3 <register uxl>
   56BBC:	0FA0      	asl        #0xF
   56BBD:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
   56BBE:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56BBF:	E311      	ld         ah, @0xFFE3 <register uxl>
   56BC0:	0009      	**unsigned
   56BC1:	01A4      	lsr        #0x1
   56BC2:	E019      	ld         x, @0xFFE0 <register ah>
   56BC3:	1613      	ld         ah, @(+0x16, y)
   56BC4:	E015      	ld         al, @0xFFE0 <register ah>
   56BC5:	0FA0      	asl        #0xF
   56BC6:	E1B9      	or         x, @0xFFE1 <register al>
   56BC7:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56BC8:	F8D5      	xor        al, @0xFFF8 <(scratchpad)>
   56BC9:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   56BCA:	E3D1      	xor        ah, @0xFFE3 <register uxl>
   56BCB:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56BCC:	E019      	ld         x, @0xFFE0 <register ah>
   56BCD:	1717      	ld         al, @(+0x17, y)
   56BCE:	1613      	ld         ah, @(+0x16, y)
   56BCF:	0009      	**unsigned
   56BD0:	0AA4      	lsr        #0xA
   56BD1:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56BD2:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56BD3:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56BD4:	F9D5      	xor        al, @0xFFF9 <(scratchpad)>
   56BD5:	E311      	ld         ah, @0xFFE3 <register uxl>
   56BD6:	F8D1      	xor        ah, @0xFFF8 <(scratchpad)>
   56BD7:	2227      	st         al, @(+0x22, y)
   56BD8:	2123      	st         ah, @(+0x21, y)
   56BD9:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   56BDA:	FF13      	ld         ah, @(-0x1, y)
   56BDB:	2237      	add        al, @(+0x22, y)
   56BDC:	2143      	addc       ah, @(+0x21, y)
   56BDD:	FB25      	st         al, @0xFFFB <(scratchpad)>
   56BDE:	FF23      	st         ah, @(-0x1, y)
   56BDF:	1417      	ld         al, @(+0x14, y)
   56BE0:	E111      	ld         ah, @0xFFE1 <register al>
   56BE1:	0009      	**unsigned
   56BE2:	02A4      	lsr        #0x2
   56BE3:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   56BE4:	151B      	ld         x, @(+0x15, y)
   56BE5:	E315      	ld         al, @0xFFE3 <register uxl>
   56BE6:	0EA0      	asl        #0xE
   56BE7:	FAB5      	or         al, @0xFFFA <(scratchpad)>
   56BE8:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56BE9:	E311      	ld         ah, @0xFFE3 <register uxl>
   56BEA:	0009      	**unsigned
   56BEB:	02A4      	lsr        #0x2
   56BEC:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   56BED:	141B      	ld         x, @(+0x14, y)
   56BEE:	E315      	ld         al, @0xFFE3 <register uxl>
   56BEF:	0EA0      	asl        #0xE
   56BF0:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   56BF1:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56BF2:	E315      	ld         al, @0xFFE3 <register uxl>
   56BF3:	09A0      	asl        #0x9
   56BF4:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56BF5:	1517      	ld         al, @(+0x15, y)
   56BF6:	E111      	ld         ah, @0xFFE1 <register al>
   56BF7:	0009      	**unsigned
   56BF8:	07A4      	lsr        #0x7
   56BF9:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   56BFA:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56BFB:	151B      	ld         x, @(+0x15, y)
   56BFC:	E315      	ld         al, @0xFFE3 <register uxl>
   56BFD:	09A0      	asl        #0x9
   56BFE:	E119      	ld         x, @0xFFE1 <register al>
   56BFF:	1417      	ld         al, @(+0x14, y)
   56C00:	E111      	ld         ah, @0xFFE1 <register al>
   56C01:	0009      	**unsigned
   56C02:	07A4      	lsr        #0x7
   56C03:	E0B9      	or         x, @0xFFE0 <register ah>
   56C04:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56C05:	F8D5      	xor        al, @0xFFF8 <(scratchpad)>
   56C06:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   56C07:	E3D1      	xor        ah, @0xFFE3 <register uxl>
   56C08:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56C09:	E019      	ld         x, @0xFFE0 <register ah>
   56C0A:	1517      	ld         al, @(+0x15, y)
   56C0B:	1413      	ld         ah, @(+0x14, y)
   56C0C:	0009      	**unsigned
   56C0D:	03A4      	lsr        #0x3
   56C0E:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56C0F:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56C10:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56C11:	F9D5      	xor        al, @0xFFF9 <(scratchpad)>
   56C12:	E311      	ld         ah, @0xFFE3 <register uxl>
   56C13:	F8D1      	xor        ah, @0xFFF8 <(scratchpad)>
   56C14:	2427      	st         al, @(+0x24, y)
   56C15:	2323      	st         ah, @(+0x23, y)
   56C16:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   56C17:	FF13      	ld         ah, @(-0x1, y)
   56C18:	2437      	add        al, @(+0x24, y)
   56C19:	2343      	addc       ah, @(+0x23, y)
   56C1A:	181B      	ld         x, @(+0x18, y)
   56C1B:	0126      	st         al, @(+0x1, x)
   56C1C:	0022      	st         ah, @(0x0, x)
   56C1D:	1313      	ld         ah, @(+0x13, y)
   56C1E:	0130      	add        ah, #+0x1
   56C1F:	1323      	st         ah, @(+0x13, y)
   56C20:	4080      	cmp        ah, #+0x40
   56C21:	FE00      	**prefx    0xFE
   56C22:	66F0      	bne        -0x19A <___libcsrmesh_291+0x9:0x56A88[p]>
   56C23:	F82D      	st         y, @0xFFF8 <(scratchpad)>
   56C24:	191B      	ld         x, @(+0x19, y)
   56C25:	0116      	ld         al, @(+0x1, x)
   56C26:	0012      	ld         ah, @(0x0, x)
   56C27:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56C28:	0136      	add        al, @(+0x1, x)
   56C29:	0042      	addc       ah, @(0x0, x)
   56C2A:	191B      	ld         x, @(+0x19, y)
   56C2B:	0126      	st         al, @(+0x1, x)
   56C2C:	0022      	st         ah, @(0x0, x)
   56C2D:	0238      	add        x, #+0x2
   56C2E:	192B      	st         x, @(+0x19, y)
   56C2F:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   56C30:	0230      	add        ah, #+0x2
   56C31:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56C32:	E415      	ld         al, @0xFFE4 <register uy>
   56C33:	1034      	add        al, #+0x10
   56C34:	E181      	cmp        ah, @0xFFE1 <register al>
   56C35:	EFF0      	bne        -0x11 <___libcsrmesh_291+0x1A5:0x56C24[p]>
   56C36:	D40F      	leave      #-0x2C

0x00056C37 <___libcsrmesh_292>:
   56C37:	DC0B      	enter      #-0x24
   56C38:	2127      	st         al, @(+0x21, y)
   56C39:	E019      	ld         x, @0xFFE0 <register ah>
   56C3A:	0100      	**prefx    0x1
   56C3B:	FFC8      	and        x, #0xFF
   56C3C:	E315      	ld         al, @0xFFE3 <register uxl>
   56C3D:	08A0      	asl        #0x8
   56C3E:	E1B9      	or         x, @0xFFE1 <register al>
   56C3F:	2014      	ld         al, #+0x20
   56C40:	0027      	st         al, @(0x0, y)
   56C41:	E415      	ld         al, @0xFFE4 <register uy>
   56C42:	0134      	add        al, #+0x1
   56C43:	E311      	ld         ah, @0xFFE3 <register uxl>
   56C44:	FB00      	**prefx    0xFB
   56C45:	BF00      	**prefx    0xBF
   56C46:	0A9C      	bsr        -0x540F6 <MemSet:0x2B50[p]>
   56C47:	2117      	ld         al, @(+0x21, y)
   56C48:	E411      	ld         ah, @0xFFE4 <register uy>
   56C49:	0130      	add        ah, #+0x1
   56C4A:	FE00      	**prefx    0xFE
   56C4B:	349C      	bsr        -0x1CC <___libcsrmesh_291:0x56A7F[p]>
   56C4C:	DC0F      	leave      #-0x24

0x00056C4D <___libcsrmesh_293>:
   56C4D:	DE0B      	enter      #-0x22
   56C4E:	FF27      	st         al, @(-0x1, y)
   56C4F:	2217      	ld         al, @(+0x22, y)
   56C50:	241B      	ld         x, @(+0x24, y)
   56C51:	FB29      	st         x, @0xFFFB <(scratchpad)>
   56C52:	E131      	add        ah, @0xFFE1 <register al>
   56C53:	FE23      	st         ah, @(-0x2, y)
   56C54:	F92D      	st         y, @0xFFF9 <(scratchpad)>
   56C55:	FE1B      	ld         x, @(-0x2, y)
   56C56:	0016      	ld         al, @(0x0, x)
   56C57:	0100      	**prefx    0x1
   56C58:	FFC4      	and        al, #0xFF
   56C59:	FBD5      	xor        al, @0xFFFB <(scratchpad)>
   56C5A:	08A0      	asl        #0x8
   56C5B:	E111      	ld         ah, @0xFFE1 <register al>
   56C5C:	0116      	ld         al, @(+0x1, x)
   56C5D:	0100      	**prefx    0x1
   56C5E:	FFC4      	and        al, #0xFF
   56C5F:	FBD5      	xor        al, @0xFFFB <(scratchpad)>
   56C60:	E0B5      	or         al, @0xFFE0 <register ah>
   56C61:	0010      	ld         ah, #+0x0
   56C62:	10A0      	asl        #0x10
   56C63:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56C64:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56C65:	0216      	ld         al, @(+0x2, x)
   56C66:	0100      	**prefx    0x1
   56C67:	FFC4      	and        al, #0xFF
   56C68:	FBD5      	xor        al, @0xFFFB <(scratchpad)>
   56C69:	08A0      	asl        #0x8
   56C6A:	0312      	ld         ah, @(+0x3, x)
   56C6B:	0100      	**prefx    0x1
   56C6C:	FFC0      	and        ah, #0xFF
   56C6D:	FBD1      	xor        ah, @0xFFFB <(scratchpad)>
   56C6E:	E1B1      	or         ah, @0xFFE1 <register al>
   56C6F:	FAB1      	or         ah, @0xFFFA <(scratchpad)>
   56C70:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56C71:	0122      	st         ah, @(+0x1, x)
   56C72:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56C73:	0026      	st         al, @(0x0, x)
   56C74:	FE1B      	ld         x, @(-0x2, y)
   56C75:	0438      	add        x, #+0x4
   56C76:	FE2B      	st         x, @(-0x2, y)
   56C77:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   56C78:	0234      	add        al, #+0x2
   56C79:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56C7A:	E415      	ld         al, @0xFFE4 <register uy>
   56C7B:	2034      	add        al, #+0x20
   56C7C:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56C7D:	E189      	cmp        x, @0xFFE1 <register al>
   56C7E:	D7F0      	bne        -0x29 <___libcsrmesh_293+0x8:0x56C55[p]>
   56C7F:	FF17      	ld         al, @(-0x1, y)
   56C80:	E411      	ld         ah, @0xFFE4 <register uy>
   56C81:	FE00      	**prefx    0xFE
   56C82:	FD9C      	bsr        -0x203 <___libcsrmesh_291:0x56A7F[p]>
   56C83:	DE0F      	leave      #-0x22

0x00056C84 <___libcsrmesh_294>:
   56C84:	DE0B      	enter      #-0x22
   56C85:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56C86:	E019      	ld         x, @0xFFE0 <register ah>
   56C87:	2014      	ld         al, #+0x20
   56C88:	E411      	ld         ah, @0xFFE4 <register uy>
   56C89:	FD09      	bc2        
   56C8A:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56C8B:	E411      	ld         ah, @0xFFE4 <register uy>
   56C8C:	FE00      	**prefx    0xFE
   56C8D:	F29C      	bsr        -0x20E <___libcsrmesh_291:0x56A7F[p]>
   56C8E:	DE0F      	leave      #-0x22

0x00056C8F <___liblight_client_472>:
   56C8F:	EA0B      	enter      #-0x16
   56C90:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56C91:	E119      	ld         x, @0xFFE1 <register al>
   56C92:	001A      	ld         x, @(0x0, x)
   56C93:	F829      	st         x, @0xFFF8 <(scratchpad)>
   56C94:	0012      	ld         ah, @(0x0, x)
   56C95:	0116      	ld         al, @(+0x1, x)
   56C96:	0C27      	st         al, @(+0xC, y)
   56C97:	0B23      	st         ah, @(+0xB, y)
   56C98:	021A      	ld         x, @(+0x2, x)
   56C99:	0D2B      	st         x, @(+0xD, y)
   56C9A:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56C9B:	031A      	ld         x, @(+0x3, x)
   56C9C:	0E2B      	st         x, @(+0xE, y)
   56C9D:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56C9E:	011A      	ld         x, @(+0x1, x)
   56C9F:	0A2B      	st         x, @(+0xA, y)
   56CA0:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56CA1:	041A      	ld         x, @(+0x4, x)
   56CA2:	0F2B      	st         x, @(+0xF, y)
   56CA3:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56CA4:	051A      	ld         x, @(+0x5, x)
   56CA5:	112B      	st         x, @(+0x11, y)
   56CA6:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56CA7:	071A      	ld         x, @(+0x7, x)
   56CA8:	122B      	st         x, @(+0x12, y)
   56CA9:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56CAA:	041A      	ld         x, @(+0x4, x)
   56CAB:	FA29      	st         x, @0xFFFA <(scratchpad)>
   56CAC:	8A00      	**prefx    0x8A
   56CAD:	0888      	cmp        x, #-0x75F8
   56CAE:	09FC      	bcs        +0x9 <___liblight_client_472+0x28:0x56CB7[p]>
   56CAF:	8A00      	**prefx    0x8A
   56CB0:	0988      	cmp        x, #-0x75F7
   56CB1:	082C      	bcz        +0x8 <___liblight_client_472+0x2A:0x56CB9[p]>
   56CB2:	E315      	ld         al, @0xFFE3 <register uxl>
   56CB3:	7600      	**prefx    0x76
   56CB4:	F334      	add        al, #+0x75F3
   56CB5:	0284      	cmp        al, #+0x2
   56CB6:	3AFC      	bcs        +0x3A <___liblight_client_472+0x61:0x56CF0[p]>
   56CB7:	FF14      	ld         al, #-0x1
   56CB8:	59E0      	bra        +0x59 <___liblight_client_472+0x82:0x56D11[p]>
   56CB9:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56CBA:	031A      	ld         x, @(+0x3, x)
   56CBB:	E311      	ld         ah, @0xFFE3 <register uxl>
   56CBC:	FF30      	add        ah, #-0x1
   56CBD:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56CBE:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56CBF:	0322      	st         ah, @(+0x3, x)
   56CC0:	0212      	ld         ah, @(+0x2, x)
   56CC1:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   56CC2:	E015      	ld         al, @0xFFE0 <register ah>
   56CC3:	F835      	add        al, @0xFFF8 <(scratchpad)>
   56CC4:	E119      	ld         x, @0xFFE1 <register al>
   56CC5:	0016      	ld         al, @(0x0, x)
   56CC6:	0927      	st         al, @(+0x9, y)
   56CC7:	E019      	ld         x, @0xFFE0 <register ah>
   56CC8:	001A      	ld         x, @(0x0, x)
   56CC9:	022B      	st         x, @(+0x2, y)
   56CCA:	0130      	add        ah, #+0x1
   56CCB:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56CCC:	011A      	ld         x, @(+0x1, x)
   56CCD:	032B      	st         x, @(+0x3, y)
   56CCE:	0130      	add        ah, #+0x1
   56CCF:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56CD0:	0222      	st         ah, @(+0x2, x)
   56CD1:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56CD2:	021A      	ld         x, @(+0x2, x)
   56CD3:	042B      	st         x, @(+0x4, y)
   56CD4:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56CD5:	031A      	ld         x, @(+0x3, x)
   56CD6:	052B      	st         x, @(+0x5, y)
   56CD7:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56CD8:	041A      	ld         x, @(+0x4, x)
   56CD9:	062B      	st         x, @(+0x6, y)
   56CDA:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   56CDB:	0534      	add        al, #+0x5
   56CDC:	E119      	ld         x, @0xFFE1 <register al>
   56CDD:	0116      	ld         al, @(+0x1, x)
   56CDE:	08A0      	asl        #0x8
   56CDF:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56CE0:	0536      	add        al, @(+0x5, x)
   56CE1:	0727      	st         al, @(+0x7, y)
   56CE2:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   56CE3:	0730      	add        ah, #+0x7
   56CE4:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56CE5:	071A      	ld         x, @(+0x7, x)
   56CE6:	082B      	st         x, @(+0x8, y)
   56CE7:	0130      	add        ah, #+0x1
   56CE8:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56CE9:	0222      	st         ah, @(+0x2, x)
   56CEA:	E415      	ld         al, @0xFFE4 <register uy>
   56CEB:	0234      	add        al, #+0x2
   56CEC:	1327      	st         al, @(+0x13, y)
   56CED:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56CEE:	002B      	st         x, @(0x0, y)
   56CEF:	16E0      	bra        +0x16 <___liblight_client_472+0x76:0x56D05[p]>
   56CF0:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56CF1:	0316      	ld         al, @(+0x3, x)
   56CF2:	FF34      	add        al, #-0x1
   56CF3:	0326      	st         al, @(+0x3, x)
   56CF4:	0212      	ld         ah, @(+0x2, x)
   56CF5:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56CF6:	E131      	add        ah, @0xFFE1 <register al>
   56CF7:	E019      	ld         x, @0xFFE0 <register ah>
   56CF8:	0012      	ld         ah, @(0x0, x)
   56CF9:	0323      	st         ah, @(+0x3, y)
   56CFA:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56CFB:	001A      	ld         x, @(0x0, x)
   56CFC:	022B      	st         x, @(+0x2, y)
   56CFD:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   56CFE:	0130      	add        ah, #+0x1
   56CFF:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56D00:	0222      	st         ah, @(+0x2, x)
   56D01:	E419      	ld         x, @0xFFE4 <register uy>
   56D02:	0238      	add        x, #+0x2
   56D03:	132B      	st         x, @(+0x13, y)
   56D04:	0027      	st         al, @(0x0, y)
   56D05:	0010      	ld         ah, #+0x0
   56D06:	0123      	st         ah, @(+0x1, y)
   56D07:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56D08:	E411      	ld         ah, @0xFFE4 <register uy>
   56D09:	0A30      	add        ah, #+0xA
   56D0A:	6C00      	**prefx    0x6C
   56D0B:	4B19      	ld         x, @0x6C4B <g_light_client_data>
   56D0C:	FF2B      	st         x, @(-0x1, y)
   56D0D:	FF0E      	ld         xh, @(-0x1, y)
   56D0E:	6C00      	**prefx    0x6C
   56D0F:	4C9D      	bsr        @0x6C4C <g_light_client_data+0x1>
   56D10:	0014      	ld         al, #+0x0
   56D11:	EA0F      	leave      #-0x16

0x00056D12 <LightSetLevel>:
   56D12:	FA0B      	enter      #-0x6
   56D13:	0227      	st         al, @(+0x2, y)
   56D14:	0323      	st         ah, @(+0x3, y)
   56D15:	D400      	**prefx    0xD4
   56D16:	879C      	bsr        -0x2C79 <___libcsrmesh_84:0x5409D[p]>
   56D17:	E111      	ld         ah, @0xFFE1 <register al>
   56D18:	089B      	tst        @(+0x8, y)
   56D19:	07F4      	beq        +0x7 <LightSetLevel+0xE:0x56D20[p]>
   56D1A:	0100      	**prefx    0x1
   56D1B:	8A14      	ld         al, #+0x8A
   56D1C:	E019      	ld         x, @0xFFE0 <register ah>
   56D1D:	0026      	st         al, @(0x0, x)
   56D1E:	0114      	ld         al, #+0x1
   56D1F:	06E0      	bra        +0x6 <LightSetLevel+0x13:0x56D25[p]>
   56D20:	0100      	**prefx    0x1
   56D21:	8A14      	ld         al, #+0x8A
   56D22:	E019      	ld         x, @0xFFE0 <register ah>
   56D23:	0026      	st         al, @(0x0, x)
   56D24:	0014      	ld         al, #+0x0
   56D25:	0126      	st         al, @(+0x1, x)
   56D26:	071B      	ld         x, @(+0x7, y)
   56D27:	0016      	ld         al, @(0x0, x)
   56D28:	0100      	**prefx    0x1
   56D29:	FFC4      	and        al, #0xFF
   56D2A:	E019      	ld         x, @0xFFE0 <register ah>
   56D2B:	0226      	st         al, @(+0x2, x)
   56D2C:	089B      	tst        @(+0x8, y)
   56D2D:	03F0      	bne        +0x3 <LightSetLevel+0x1E:0x56D30[p]>
   56D2E:	0314      	ld         al, #+0x3
   56D2F:	08E0      	bra        +0x8 <LightSetLevel+0x25:0x56D37[p]>
   56D30:	071B      	ld         x, @(+0x7, y)
   56D31:	0116      	ld         al, @(+0x1, x)
   56D32:	0100      	**prefx    0x1
   56D33:	FFC4      	and        al, #0xFF
   56D34:	E019      	ld         x, @0xFFE0 <register ah>
   56D35:	0326      	st         al, @(+0x3, x)
   56D36:	0414      	ld         al, #+0x4
   56D37:	0027      	st         al, @(0x0, y)
   56D38:	061B      	ld         x, @(+0x6, y)
   56D39:	012B      	st         x, @(+0x1, y)
   56D3A:	0217      	ld         al, @(+0x2, y)
   56D3B:	0313      	ld         ah, @(+0x3, y)
   56D3C:	D300      	**prefx    0xD3
   56D3D:	699C      	bsr        -0x2C97 <___libcsrmesh_88:0x540A6[p]>
   56D3E:	FA0F      	leave      #-0x6

0x00056D3F <LightModelClientInit>:
   56D3F:	FE0B      	enter      #-0x2
   56D40:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56D41:	6C00      	**prefx    0x6C
   56D42:	4D18      	ld         x, #+0x6C4D
   56D43:	6D00      	**prefx    0x6D
   56D44:	8F14      	ld         al, #+0x6C8F
   56D45:	0126      	st         al, @(+0x1, x)
   56D46:	0514      	ld         al, #+0x5
   56D47:	0026      	st         al, @(0x0, x)
   56D48:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56D49:	6C00      	**prefx    0x6C
   56D4A:	4C25      	st         al, @0x6C4C <g_light_client_data+0x1>
   56D4B:	6C00      	**prefx    0x6C
   56D4C:	4B21      	st         ah, @0x6C4B <g_light_client_data>
   56D4D:	E315      	ld         al, @0xFFE3 <register uxl>
   56D4E:	001B      	ld         x, @(0x0, y)
   56D4F:	023C      	add        y, #+0x2
   56D50:	D300      	**prefx    0xD3
   56D51:	D2E0      	bra        -0x2D2E <___libcsrmesh_86:0x54023[p]>

0x00056D52 <___libpower_client_468>:
   56D52:	F00B      	enter      #-0x10
   56D53:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56D54:	E119      	ld         x, @0xFFE1 <register al>
   56D55:	001A      	ld         x, @(0x0, x)
   56D56:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56D57:	0012      	ld         ah, @(0x0, x)
   56D58:	0116      	ld         al, @(+0x1, x)
   56D59:	0627      	st         al, @(+0x6, y)
   56D5A:	0523      	st         ah, @(+0x5, y)
   56D5B:	021A      	ld         x, @(+0x2, x)
   56D5C:	072B      	st         x, @(+0x7, y)
   56D5D:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56D5E:	031A      	ld         x, @(+0x3, x)
   56D5F:	082B      	st         x, @(+0x8, y)
   56D60:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56D61:	011A      	ld         x, @(+0x1, x)
   56D62:	042B      	st         x, @(+0x4, y)
   56D63:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56D64:	041A      	ld         x, @(+0x4, x)
   56D65:	092B      	st         x, @(+0x9, y)
   56D66:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56D67:	051A      	ld         x, @(+0x5, x)
   56D68:	0B2B      	st         x, @(+0xB, y)
   56D69:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56D6A:	071A      	ld         x, @(+0x7, x)
   56D6B:	0C2B      	st         x, @(+0xC, y)
   56D6C:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56D6D:	041A      	ld         x, @(+0x4, x)
   56D6E:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56D6F:	E315      	ld         al, @0xFFE3 <register uxl>
   56D70:	7700      	**prefx    0x77
   56D71:	FB34      	add        al, #+0x76FB
   56D72:	0284      	cmp        al, #+0x2
   56D73:	03FC      	bcs        +0x3 <___libpower_client_468+0x24:0x56D76[p]>
   56D74:	FF14      	ld         al, #-0x1
   56D75:	22E0      	bra        +0x22 <___libpower_client_468+0x45:0x56D97[p]>
   56D76:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56D77:	0316      	ld         al, @(+0x3, x)
   56D78:	FF34      	add        al, #-0x1
   56D79:	0326      	st         al, @(+0x3, x)
   56D7A:	0212      	ld         ah, @(+0x2, x)
   56D7B:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   56D7C:	E131      	add        ah, @0xFFE1 <register al>
   56D7D:	E019      	ld         x, @0xFFE0 <register ah>
   56D7E:	0012      	ld         ah, @(0x0, x)
   56D7F:	0323      	st         ah, @(+0x3, y)
   56D80:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56D81:	001A      	ld         x, @(0x0, x)
   56D82:	022B      	st         x, @(+0x2, y)
   56D83:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   56D84:	0130      	add        ah, #+0x1
   56D85:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56D86:	0222      	st         ah, @(+0x2, x)
   56D87:	E419      	ld         x, @0xFFE4 <register uy>
   56D88:	0238      	add        x, #+0x2
   56D89:	0D2B      	st         x, @(+0xD, y)
   56D8A:	0027      	st         al, @(0x0, y)
   56D8B:	0010      	ld         ah, #+0x0
   56D8C:	0123      	st         ah, @(+0x1, y)
   56D8D:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   56D8E:	E411      	ld         ah, @0xFFE4 <register uy>
   56D8F:	0430      	add        ah, #+0x4
   56D90:	6C00      	**prefx    0x6C
   56D91:	5419      	ld         x, @0x6C54 <g_power_client_data>
   56D92:	FF2B      	st         x, @(-0x1, y)
   56D93:	FF0E      	ld         xh, @(-0x1, y)
   56D94:	6C00      	**prefx    0x6C
   56D95:	559D      	bsr        @0x6C55 <g_power_client_data+0x1>
   56D96:	0014      	ld         al, #+0x0
   56D97:	F00F      	leave      #-0x10

0x00056D98 <PowerSetState>:
   56D98:	FA0B      	enter      #-0x6
   56D99:	0227      	st         al, @(+0x2, y)
   56D9A:	0323      	st         ah, @(+0x3, y)
   56D9B:	D300      	**prefx    0xD3
   56D9C:	019C      	bsr        -0x2CFF <___libcsrmesh_84:0x5409D[p]>
   56D9D:	E111      	ld         ah, @0xFFE1 <register al>
   56D9E:	089B      	tst        @(+0x8, y)
   56D9F:	07F4      	beq        +0x7 <PowerSetState+0xE:0x56DA6[p]>
   56DA0:	0100      	**prefx    0x1
   56DA1:	8914      	ld         al, #+0x89
   56DA2:	E019      	ld         x, @0xFFE0 <register ah>
   56DA3:	0026      	st         al, @(0x0, x)
   56DA4:	0114      	ld         al, #+0x1
   56DA5:	06E0      	bra        +0x6 <PowerSetState+0x13:0x56DAB[p]>
   56DA6:	0100      	**prefx    0x1
   56DA7:	8914      	ld         al, #+0x89
   56DA8:	E019      	ld         x, @0xFFE0 <register ah>
   56DA9:	0026      	st         al, @(0x0, x)
   56DAA:	0014      	ld         al, #+0x0
   56DAB:	0126      	st         al, @(+0x1, x)
   56DAC:	071B      	ld         x, @(+0x7, y)
   56DAD:	0016      	ld         al, @(0x0, x)
   56DAE:	0100      	**prefx    0x1
   56DAF:	FFC4      	and        al, #0xFF
   56DB0:	E019      	ld         x, @0xFFE0 <register ah>
   56DB1:	0226      	st         al, @(+0x2, x)
   56DB2:	089B      	tst        @(+0x8, y)
   56DB3:	03F0      	bne        +0x3 <PowerSetState+0x1E:0x56DB6[p]>
   56DB4:	0314      	ld         al, #+0x3
   56DB5:	08E0      	bra        +0x8 <PowerSetState+0x25:0x56DBD[p]>
   56DB6:	071B      	ld         x, @(+0x7, y)
   56DB7:	0116      	ld         al, @(+0x1, x)
   56DB8:	0100      	**prefx    0x1
   56DB9:	FFC4      	and        al, #0xFF
   56DBA:	E019      	ld         x, @0xFFE0 <register ah>
   56DBB:	0326      	st         al, @(+0x3, x)
   56DBC:	0414      	ld         al, #+0x4
   56DBD:	0027      	st         al, @(0x0, y)
   56DBE:	061B      	ld         x, @(+0x6, y)
   56DBF:	012B      	st         x, @(+0x1, y)
   56DC0:	0217      	ld         al, @(+0x2, y)
   56DC1:	0313      	ld         ah, @(+0x3, y)
   56DC2:	D300      	**prefx    0xD3
   56DC3:	E39C      	bsr        -0x2D1D <___libcsrmesh_88:0x540A6[p]>
   56DC4:	FA0F      	leave      #-0x6

0x00056DC5 <PowerModelClientInit>:
   56DC5:	FE0B      	enter      #-0x2
   56DC6:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56DC7:	6C00      	**prefx    0x6C
   56DC8:	5618      	ld         x, #+0x6C56
   56DC9:	6D00      	**prefx    0x6D
   56DCA:	5214      	ld         al, #+0x6D52
   56DCB:	0126      	st         al, @(+0x1, x)
   56DCC:	0514      	ld         al, #+0x5
   56DCD:	0026      	st         al, @(0x0, x)
   56DCE:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56DCF:	6C00      	**prefx    0x6C
   56DD0:	5525      	st         al, @0x6C55 <g_power_client_data+0x1>
   56DD1:	6C00      	**prefx    0x6C
   56DD2:	5421      	st         ah, @0x6C54 <g_power_client_data>
   56DD3:	E315      	ld         al, @0xFFE3 <register uxl>
   56DD4:	001B      	ld         x, @(0x0, y)
   56DD5:	023C      	add        y, #+0x2
   56DD6:	D200      	**prefx    0xD2
   56DD7:	4CE0      	bra        -0x2DB4 <___libcsrmesh_86:0x54023[p]>

0x00056DD8 <SwitchModelInit>:
   56DD8:	FE0B      	enter      #-0x2
   56DD9:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56DDA:	6C00      	**prefx    0x6C
   56DDB:	6210      	ld         ah, #+0x6C62
   56DDC:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   56DDD:	E019      	ld         x, @0xFFE0 <register ah>
   56DDE:	0026      	st         al, @(0x0, x)
   56DDF:	1510      	ld         ah, #+0x15
   56DE0:	FF22      	st         ah, @(-0x1, x)
   56DE1:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   56DE2:	FD34      	add        al, #-0x3
   56DE3:	0010      	ld         ah, #+0x0
   56DE4:	FD22      	st         ah, @(-0x3, x)
   56DE5:	E119      	ld         x, @0xFFE1 <register al>
   56DE6:	0122      	st         ah, @(+0x1, x)
   56DE7:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   56DE8:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56DE9:	0122      	st         ah, @(+0x1, x)
   56DEA:	0213      	ld         ah, @(+0x2, y)
   56DEB:	0222      	st         ah, @(+0x2, x)
   56DEC:	041B      	ld         x, @(+0x4, y)
   56DED:	6C00      	**prefx    0x6C
   56DEE:	5E29      	st         x, @0x6C5E <g_switch_model_data+0x1>
   56DEF:	0313      	ld         ah, @(+0x3, y)
   56DF0:	6C00      	**prefx    0x6C
   56DF1:	5D21      	st         ah, @0x6C5D <g_switch_model_data>
   56DF2:	001B      	ld         x, @(0x0, y)
   56DF3:	023C      	add        y, #+0x2
   56DF4:	D200      	**prefx    0xD2
   56DF5:	48E0      	bra        -0x2DB8 <___libcsrmesh_85:0x5403D[p]>

0x00056DF6 <ExtensionModelInit>:
   56DF6:	FE0B      	enter      #-0x2
   56DF7:	6C00      	**prefx    0x6C
   56DF8:	6B18      	ld         x, #+0x6C6B
   56DF9:	0026      	st         al, @(0x0, x)
   56DFA:	1D14      	ld         al, #+0x1D
   56DFB:	FF26      	st         al, @(-0x1, x)
   56DFC:	6E00      	**prefx    0x6E
   56DFD:	1014      	ld         al, #+0x6E10
   56DFE:	FE26      	st         al, @(-0x2, x)
   56DFF:	0514      	ld         al, #+0x5
   56E00:	FD26      	st         al, @(-0x3, x)
   56E01:	0122      	st         ah, @(+0x1, x)
   56E02:	0217      	ld         al, @(+0x2, y)
   56E03:	0226      	st         al, @(+0x2, x)
   56E04:	0417      	ld         al, @(+0x4, y)
   56E05:	6C00      	**prefx    0x6C
   56E06:	6725      	st         al, @0x6C67 <g_extension_model_data+0x1>
   56E07:	0317      	ld         al, @(+0x3, y)
   56E08:	6C00      	**prefx    0x6C
   56E09:	6625      	st         al, @0x6C66 <g_extension_model_data>
   56E0A:	FD38      	add        x, #-0x3
   56E0B:	E315      	ld         al, @0xFFE3 <register uxl>
   56E0C:	001B      	ld         x, @(0x0, y)
   56E0D:	023C      	add        y, #+0x2
   56E0E:	D200      	**prefx    0xD2
   56E0F:	2EE0      	bra        -0x2DD2 <___libcsrmesh_85:0x5403D[p]>

0x00056E10 <___libextension_server_466>:
   56E10:	E20B      	enter      #-0x1E
   56E11:	1B27      	st         al, @(+0x1B, y)
   56E12:	E411      	ld         ah, @0xFFE4 <register uy>
   56E13:	1730      	add        ah, #+0x17
   56E14:	0823      	st         ah, @(+0x8, y)
   56E15:	E415      	ld         al, @0xFFE4 <register uy>
   56E16:	0634      	add        al, #+0x6
   56E17:	D200      	**prefx    0xD2
   56E18:	319C      	bsr        -0x2DCF <CSRmeshGetDefaultTTL:0x54049[p]>
   56E19:	1B1B      	ld         x, @(+0x1B, y)
   56E1A:	001A      	ld         x, @(0x0, x)
   56E1B:	FB29      	st         x, @0xFFFB <(scratchpad)>
   56E1C:	0012      	ld         ah, @(0x0, x)
   56E1D:	0116      	ld         al, @(+0x1, x)
   56E1E:	1327      	st         al, @(+0x13, y)
   56E1F:	1223      	st         ah, @(+0x12, y)
   56E20:	021A      	ld         x, @(+0x2, x)
   56E21:	142B      	st         x, @(+0x14, y)
   56E22:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56E23:	031A      	ld         x, @(+0x3, x)
   56E24:	152B      	st         x, @(+0x15, y)
   56E25:	1B1B      	ld         x, @(+0x1B, y)
   56E26:	011A      	ld         x, @(+0x1, x)
   56E27:	FA29      	st         x, @0xFFFA <(scratchpad)>
   56E28:	112B      	st         x, @(+0x11, y)
   56E29:	1B1B      	ld         x, @(+0x1B, y)
   56E2A:	041A      	ld         x, @(+0x4, x)
   56E2B:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56E2C:	162B      	st         x, @(+0x16, y)
   56E2D:	1B1B      	ld         x, @(+0x1B, y)
   56E2E:	051A      	ld         x, @(+0x5, x)
   56E2F:	F829      	st         x, @0xFFF8 <(scratchpad)>
   56E30:	182B      	st         x, @(+0x18, y)
   56E31:	1B1B      	ld         x, @(+0x1B, y)
   56E32:	071A      	ld         x, @(+0x7, x)
   56E33:	192B      	st         x, @(+0x19, y)
   56E34:	1B1B      	ld         x, @(+0x1B, y)
   56E35:	0212      	ld         ah, @(+0x2, x)
   56E36:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   56E37:	0416      	ld         al, @(+0x4, x)
   56E38:	EF00      	**prefx    0xEF
   56E39:	1084      	cmp        al, #-0x10F0
   56E3A:	6FF0      	bne        +0x6F <___libextension_server_466+0x99:0x56EA9[p]>
   56E3B:	0010      	ld         ah, #+0x0
   56E3C:	0523      	st         ah, @(+0x5, y)
   56E3D:	E411      	ld         ah, @0xFFE4 <register uy>
   56E3E:	0930      	add        ah, #+0x9
   56E3F:	1B1B      	ld         x, @(+0x1B, y)
   56E40:	021A      	ld         x, @(+0x2, x)
   56E41:	F829      	st         x, @0xFFF8 <(scratchpad)>
   56E42:	0016      	ld         al, @(0x0, x)
   56E43:	E019      	ld         x, @0xFFE0 <register ah>
   56E44:	0026      	st         al, @(0x0, x)
   56E45:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56E46:	0138      	add        x, #+0x1
   56E47:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56E48:	E315      	ld         al, @0xFFE3 <register uxl>
   56E49:	1B1B      	ld         x, @(+0x1B, y)
   56E4A:	0226      	st         al, @(+0x2, x)
   56E4B:	0130      	add        ah, #+0x1
   56E4C:	E415      	ld         al, @0xFFE4 <register uy>
   56E4D:	0F34      	add        al, #+0xF
   56E4E:	E181      	cmp        ah, @0xFFE1 <register al>
   56E4F:	F0F0      	bne        -0x10 <___libextension_server_466+0x2F:0x56E3F[p]>
   56E50:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56E51:	0116      	ld         al, @(+0x1, x)
   56E52:	08A0      	asl        #0x8
   56E53:	0036      	add        al, @(0x0, x)
   56E54:	0F27      	st         al, @(+0xF, y)
   56E55:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   56E56:	0330      	add        ah, #+0x3
   56E57:	1B1B      	ld         x, @(+0x1B, y)
   56E58:	0222      	st         ah, @(+0x2, x)
   56E59:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56E5A:	031A      	ld         x, @(+0x3, x)
   56E5B:	102B      	st         x, @(+0x10, y)
   56E5C:	0130      	add        ah, #+0x1
   56E5D:	1B1B      	ld         x, @(+0x1B, y)
   56E5E:	0222      	st         ah, @(+0x2, x)
   56E5F:	E415      	ld         al, @0xFFE4 <register uy>
   56E60:	0934      	add        al, #+0x9
   56E61:	1A27      	st         al, @(+0x1A, y)
   56E62:	031A      	ld         x, @(+0x3, x)
   56E63:	002B      	st         x, @(0x0, y)
   56E64:	E411      	ld         ah, @0xFFE4 <register uy>
   56E65:	0530      	add        ah, #+0x5
   56E66:	0123      	st         ah, @(+0x1, y)
   56E67:	EF00      	**prefx    0xEF
   56E68:	1014      	ld         al, #-0x10F0
   56E69:	0C30      	add        ah, #+0xC
   56E6A:	6C00      	**prefx    0x6C
   56E6B:	6619      	ld         x, @0x6C66 <g_extension_model_data>
   56E6C:	FF2B      	st         x, @(-0x1, y)
   56E6D:	FF0E      	ld         xh, @(-0x1, y)
   56E6E:	6C00      	**prefx    0x6C
   56E6F:	679D      	bsr        @0x6C67 <g_extension_model_data+0x1>
   56E70:	059B      	tst        @(+0x5, y)
   56E71:	47F4      	beq        +0x47 <___libextension_server_466+0xA8:0x56EB8[p]>
   56E72:	D200      	**prefx    0xD2
   56E73:	2A9C      	bsr        -0x2DD6 <___libcsrmesh_84:0x5409D[p]>
   56E74:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56E75:	0100      	**prefx    0x1
   56E76:	EF10      	ld         ah, #+0xEF
   56E77:	E119      	ld         x, @0xFFE1 <register al>
   56E78:	0022      	st         ah, @(0x0, x)
   56E79:	1114      	ld         al, #+0x11
   56E7A:	0126      	st         al, @(+0x1, x)
   56E7B:	0238      	add        x, #+0x2
   56E7C:	FA29      	st         x, @0xFFFA <(scratchpad)>
   56E7D:	0014      	ld         al, #+0x0
   56E7E:	051B      	ld         x, @(+0x5, y)
   56E7F:	E311      	ld         ah, @0xFFE3 <register uxl>
   56E80:	E131      	add        ah, @0xFFE1 <register al>
   56E81:	E019      	ld         x, @0xFFE0 <register ah>
   56E82:	0012      	ld         ah, @(0x0, x)
   56E83:	0100      	**prefx    0x1
   56E84:	FFC0      	and        ah, #0xFF
   56E85:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56E86:	0022      	st         ah, @(0x0, x)
   56E87:	0134      	add        al, #+0x1
   56E88:	0138      	add        x, #+0x1
   56E89:	FA29      	st         x, @0xFFFA <(scratchpad)>
   56E8A:	0684      	cmp        al, #+0x6
   56E8B:	F3F0      	bne        -0xD <___libextension_server_466+0x6E:0x56E7E[p]>
   56E8C:	0517      	ld         al, @(+0x5, y)
   56E8D:	E119      	ld         x, @0xFFE1 <register al>
   56E8E:	0616      	ld         al, @(+0x6, x)
   56E8F:	0100      	**prefx    0x1
   56E90:	FFC4      	and        al, #0xFF
   56E91:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56E92:	0826      	st         al, @(+0x8, x)
   56E93:	051B      	ld         x, @(+0x5, y)
   56E94:	0612      	ld         ah, @(+0x6, x)
   56E95:	0009      	**unsigned
   56E96:	08A4      	lsr        #0x8
   56E97:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56E98:	0922      	st         ah, @(+0x9, x)
   56E99:	0517      	ld         al, @(+0x5, y)
   56E9A:	E119      	ld         x, @0xFFE1 <register al>
   56E9B:	0716      	ld         al, @(+0x7, x)
   56E9C:	0100      	**prefx    0x1
   56E9D:	FFC4      	and        al, #0xFF
   56E9E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56E9F:	0A26      	st         al, @(+0xA, x)
   56EA0:	0B10      	ld         ah, #+0xB
   56EA1:	0023      	st         ah, @(0x0, y)
   56EA2:	1717      	ld         al, @(+0x17, y)
   56EA3:	0127      	st         al, @(+0x1, y)
   56EA4:	1117      	ld         al, @(+0x11, y)
   56EA5:	1413      	ld         ah, @(+0x14, y)
   56EA6:	D200      	**prefx    0xD2
   56EA7:	FF9C      	bsr        -0x2E01 <___libcsrmesh_88:0x540A6[p]>
   56EA8:	10E0      	bra        +0x10 <___libextension_server_466+0xA8:0x56EB8[p]>
   56EA9:	0023      	st         ah, @(0x0, y)
   56EAA:	1B1B      	ld         x, @(+0x1B, y)
   56EAB:	031A      	ld         x, @(+0x3, x)
   56EAC:	012B      	st         x, @(+0x1, y)
   56EAD:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   56EAE:	0223      	st         ah, @(+0x2, y)
   56EAF:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56EB0:	0327      	st         al, @(+0x3, y)
   56EB1:	E419      	ld         x, @0xFFE4 <register uy>
   56EB2:	1138      	add        x, #+0x11
   56EB3:	042B      	st         x, @(+0x4, y)
   56EB4:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56EB5:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   56EB6:	419C      	bsr        +0x41 <___libextension_server_470:0x56EF7[p]>
   56EB7:	E20F      	leave      #-0x1E
   56EB8:	0014      	ld         al, #+0x0
   56EB9:	FEE0      	bra        -0x2 <___libextension_server_466+0xA7:0x56EB7[p]>

0x00056EBA <ExtensionServerSetupOpcodeList>:
   56EBA:	FE0B      	enter      #-0x2
   56EBB:	6A00      	**prefx    0x6A
   56EBC:	DC18      	ld         x, #+0x69DC
   56EBD:	0026      	st         al, @(0x0, x)
   56EBE:	0122      	st         ah, @(+0x1, x)
   56EBF:	0014      	ld         al, #+0x0
   56EC0:	FE0F      	leave      #-0x2

0x00056EC1 <ExtensionVerifyOpcodeConflictWithMesh>:
   56EC1:	0100      	**prefx    0x1
   56EC2:	FE84      	cmp        al, #+0xFE
   56EC3:	322C      	bcz        +0x32 <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56EC4:	FF00      	**prefx    0xFF
   56EC5:	00C4      	and        al, #0xFF00
   56EC6:	EF00      	**prefx    0xEF
   56EC7:	0084      	cmp        al, #-0x1100
   56EC8:	2DF4      	beq        +0x2D <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56EC9:	FF00      	**prefx    0xFF
   56ECA:	00C0      	and        ah, #0xFF00
   56ECB:	EF00      	**prefx    0xEF
   56ECC:	0080      	cmp        ah, #-0x1100
   56ECD:	28F4      	beq        +0x28 <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56ECE:	8100      	**prefx    0x81
   56ECF:	0084      	cmp        al, #-0x7F00
   56ED0:	25F4      	beq        +0x25 <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56ED1:	8100      	**prefx    0x81
   56ED2:	0080      	cmp        ah, #-0x7F00
   56ED3:	22F4      	beq        +0x22 <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56ED4:	8200      	**prefx    0x82
   56ED5:	0084      	cmp        al, #-0x7E00
   56ED6:	1FF4      	beq        +0x1F <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56ED7:	8200      	**prefx    0x82
   56ED8:	0080      	cmp        ah, #-0x7E00
   56ED9:	1CF4      	beq        +0x1C <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56EDA:	8300      	**prefx    0x83
   56EDB:	0084      	cmp        al, #-0x7D00
   56EDC:	19F4      	beq        +0x19 <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56EDD:	8300      	**prefx    0x83
   56EDE:	0080      	cmp        ah, #-0x7D00
   56EDF:	16F4      	beq        +0x16 <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56EE0:	8400      	**prefx    0x84
   56EE1:	0084      	cmp        al, #-0x7C00
   56EE2:	13F4      	beq        +0x13 <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56EE3:	8400      	**prefx    0x84
   56EE4:	0080      	cmp        ah, #-0x7C00
   56EE5:	10F4      	beq        +0x10 <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56EE6:	8900      	**prefx    0x89
   56EE7:	0084      	cmp        al, #-0x7700
   56EE8:	0DF4      	beq        +0xD <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56EE9:	8900      	**prefx    0x89
   56EEA:	0080      	cmp        ah, #-0x7700
   56EEB:	0AF4      	beq        +0xA <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56EEC:	8A00      	**prefx    0x8A
   56EED:	0084      	cmp        al, #-0x7600
   56EEE:	07F4      	beq        +0x7 <ExtensionVerifyOpcodeConflictWithMesh+0x34:0x56EF5[p]>
   56EEF:	0014      	ld         al, #+0x0
   56EF0:	8A00      	**prefx    0x8A
   56EF1:	0080      	cmp        ah, #-0x7600
   56EF2:	04F0      	bne        +0x4 <ExtensionVerifyOpcodeConflictWithMesh+0x35:0x56EF6[p]>
   56EF3:	0114      	ld         al, #+0x1
   56EF4:	00E2      	bra        0x0, x
   56EF5:	0114      	ld         al, #+0x1
   56EF6:	00E2      	bra        0x0, x

0x00056EF7 <___libextension_server_470>:
   56EF7:	FC0B      	enter      #-0x4
   56EF8:	0817      	ld         al, @(+0x8, y)
   56EF9:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56EFA:	0417      	ld         al, @(+0x4, y)
   56EFB:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56EFC:	0926      	st         al, @(+0x9, x)
   56EFD:	E019      	ld         x, @0xFFE0 <register ah>
   56EFE:	0412      	ld         ah, @(+0x4, x)
   56EFF:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   56F00:	6A00      	**prefx    0x6A
   56F01:	DD15      	ld         al, @0x69DD <ext_data+0x1>
   56F02:	F925      	st         al, @0xFFF9 <(scratchpad)>
   56F03:	6A00      	**prefx    0x6A
   56F04:	DC19      	ld         x, @0x69DC <ext_data>
   56F05:	0014      	ld         al, #+0x0
   56F06:	FB25      	st         al, @0xFFFB <(scratchpad)>
   56F07:	0CE0      	bra        +0xC <___libextension_server_470+0x1C:0x56F13[p]>
   56F08:	0012      	ld         ah, @(0x0, x)
   56F09:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56F0A:	E085      	cmp        al, @0xFFE0 <register ah>
   56F0B:	04FC      	bcs        +0x4 <___libextension_server_470+0x18:0x56F0F[p]>
   56F0C:	0132      	add        ah, @(+0x1, x)
   56F0D:	E085      	cmp        al, @0xFFE0 <register ah>
   56F0E:	092C      	bcz        +0x9 <___libextension_server_470+0x20:0x56F17[p]>
   56F0F:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   56F10:	0134      	add        al, #+0x1
   56F11:	FB25      	st         al, @0xFFFB <(scratchpad)>
   56F12:	0838      	add        x, #+0x8
   56F13:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   56F14:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   56F15:	F3FC      	bcs        -0xD <___libextension_server_470+0x11:0x56F08[p]>
   56F16:	0DE0      	bra        +0xD <___libextension_server_470+0x2C:0x56F23[p]>
   56F17:	051B      	ld         x, @(+0x5, y)
   56F18:	002B      	st         x, @(0x0, y)
   56F19:	0014      	ld         al, #+0x0
   56F1A:	0127      	st         al, @(+0x1, y)
   56F1B:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56F1C:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   56F1D:	6C00      	**prefx    0x6C
   56F1E:	6619      	ld         x, @0x6C66 <g_extension_model_data>
   56F1F:	FF2B      	st         x, @(-0x1, y)
   56F20:	FF0E      	ld         xh, @(-0x1, y)
   56F21:	6C00      	**prefx    0x6C
   56F22:	679D      	bsr        @0x6C67 <g_extension_model_data+0x1>
   56F23:	FF14      	ld         al, #-0x1
   56F24:	FC0F      	leave      #-0x4

0x00056F25 <___libextension_client_466>:
   56F25:	EA0B      	enter      #-0x16
   56F26:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56F27:	E119      	ld         x, @0xFFE1 <register al>
   56F28:	001A      	ld         x, @(0x0, x)
   56F29:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56F2A:	0012      	ld         ah, @(0x0, x)
   56F2B:	0116      	ld         al, @(+0x1, x)
   56F2C:	0C27      	st         al, @(+0xC, y)
   56F2D:	0B23      	st         ah, @(+0xB, y)
   56F2E:	021A      	ld         x, @(+0x2, x)
   56F2F:	0D2B      	st         x, @(+0xD, y)
   56F30:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56F31:	031A      	ld         x, @(+0x3, x)
   56F32:	0E2B      	st         x, @(+0xE, y)
   56F33:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56F34:	011A      	ld         x, @(+0x1, x)
   56F35:	0A2B      	st         x, @(+0xA, y)
   56F36:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56F37:	041A      	ld         x, @(+0x4, x)
   56F38:	0F2B      	st         x, @(+0xF, y)
   56F39:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56F3A:	051A      	ld         x, @(+0x5, x)
   56F3B:	112B      	st         x, @(+0x11, y)
   56F3C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56F3D:	071A      	ld         x, @(+0x7, x)
   56F3E:	122B      	st         x, @(+0x12, y)
   56F3F:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56F40:	0416      	ld         al, @(+0x4, x)
   56F41:	EF00      	**prefx    0xEF
   56F42:	1184      	cmp        al, #-0x10EF
   56F43:	03F4      	beq        +0x3 <___libextension_client_466+0x21:0x56F46[p]>
   56F44:	FF14      	ld         al, #-0x1
   56F45:	34E0      	bra        +0x34 <___libextension_client_466+0x54:0x56F79[p]>
   56F46:	E411      	ld         ah, @0xFFE4 <register uy>
   56F47:	0230      	add        ah, #+0x2
   56F48:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56F49:	021A      	ld         x, @(+0x2, x)
   56F4A:	FA29      	st         x, @0xFFFA <(scratchpad)>
   56F4B:	0016      	ld         al, @(0x0, x)
   56F4C:	E019      	ld         x, @0xFFE0 <register ah>
   56F4D:	0026      	st         al, @(0x0, x)
   56F4E:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56F4F:	0138      	add        x, #+0x1
   56F50:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56F51:	E315      	ld         al, @0xFFE3 <register uxl>
   56F52:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56F53:	0226      	st         al, @(+0x2, x)
   56F54:	0130      	add        ah, #+0x1
   56F55:	E415      	ld         al, @0xFFE4 <register uy>
   56F56:	0834      	add        al, #+0x8
   56F57:	E181      	cmp        ah, @0xFFE1 <register al>
   56F58:	F0F0      	bne        -0x10 <___libextension_client_466+0x23:0x56F48[p]>
   56F59:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   56F5A:	0116      	ld         al, @(+0x1, x)
   56F5B:	08A0      	asl        #0x8
   56F5C:	0036      	add        al, @(0x0, x)
   56F5D:	0827      	st         al, @(+0x8, y)
   56F5E:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56F5F:	0334      	add        al, #+0x3
   56F60:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56F61:	031A      	ld         x, @(+0x3, x)
   56F62:	092B      	st         x, @(+0x9, y)
   56F63:	0134      	add        al, #+0x1
   56F64:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56F65:	0226      	st         al, @(+0x2, x)
   56F66:	E419      	ld         x, @0xFFE4 <register uy>
   56F67:	0238      	add        x, #+0x2
   56F68:	132B      	st         x, @(+0x13, y)
   56F69:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   56F6A:	031A      	ld         x, @(+0x3, x)
   56F6B:	002B      	st         x, @(0x0, y)
   56F6C:	0014      	ld         al, #+0x0
   56F6D:	0127      	st         al, @(+0x1, y)
   56F6E:	EF00      	**prefx    0xEF
   56F6F:	1114      	ld         al, #-0x10EF
   56F70:	E411      	ld         ah, @0xFFE4 <register uy>
   56F71:	0A30      	add        ah, #+0xA
   56F72:	6C00      	**prefx    0x6C
   56F73:	6F19      	ld         x, @0x6C6F <g_extension_client_data>
   56F74:	FF2B      	st         x, @(-0x1, y)
   56F75:	FF0E      	ld         xh, @(-0x1, y)
   56F76:	6C00      	**prefx    0x6C
   56F77:	709D      	bsr        @0x6C70 <g_extension_client_data+0x1>
   56F78:	0014      	ld         al, #+0x0
   56F79:	EA0F      	leave      #-0x16

0x00056F7A <ExtensionModelClientInit>:
   56F7A:	FE0B      	enter      #-0x2
   56F7B:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56F7C:	6C00      	**prefx    0x6C
   56F7D:	7118      	ld         x, #+0x6C71
   56F7E:	6F00      	**prefx    0x6F
   56F7F:	2514      	ld         al, #+0x6F25
   56F80:	0126      	st         al, @(+0x1, x)
   56F81:	0514      	ld         al, #+0x5
   56F82:	0026      	st         al, @(0x0, x)
   56F83:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56F84:	6C00      	**prefx    0x6C
   56F85:	7025      	st         al, @0x6C70 <g_extension_client_data+0x1>
   56F86:	6C00      	**prefx    0x6C
   56F87:	6F21      	st         ah, @0x6C6F <g_extension_client_data>
   56F88:	E315      	ld         al, @0xFFE3 <register uxl>
   56F89:	001B      	ld         x, @(0x0, y)
   56F8A:	023C      	add        y, #+0x2
   56F8B:	D100      	**prefx    0xD1
   56F8C:	97E0      	bra        -0x2F69 <___libcsrmesh_86:0x54023[p]>

0x00056F8D <ExtensionClientSetupOpcodeList>:
   56F8D:	FE0B      	enter      #-0x2
   56F8E:	6A00      	**prefx    0x6A
   56F8F:	DE18      	ld         x, #+0x69DE
   56F90:	0026      	st         al, @(0x0, x)
   56F91:	0122      	st         ah, @(+0x1, x)
   56F92:	0014      	ld         al, #+0x0
   56F93:	FE0F      	leave      #-0x2

0x00056F94 <ExtensionSendMessage>:
   56F94:	F90B      	enter      #-0x7
   56F95:	0027      	st         al, @(0x0, y)
   56F96:	0123      	st         ah, @(+0x1, y)
   56F97:	0717      	ld         al, @(+0x7, y)
   56F98:	0227      	st         al, @(+0x2, y)
   56F99:	081B      	ld         x, @(+0x8, y)
   56F9A:	032B      	st         x, @(+0x3, y)
   56F9B:	0917      	ld         al, @(+0x9, y)
   56F9C:	0427      	st         al, @(+0x4, y)
   56F9D:	0016      	ld         al, @(0x0, x)
   56F9E:	08A0      	asl        #0x8
   56F9F:	01B6      	or         al, @(+0x1, x)
   56FA0:	F825      	st         al, @0xFFF8 <(scratchpad)>
   56FA1:	0100      	**prefx    0x1
   56FA2:	FE84      	cmp        al, #+0xFE
   56FA3:	3E2C      	bcz        +0x3E <ExtensionSendMessage+0x4D:0x56FE1[p]>
   56FA4:	E111      	ld         ah, @0xFFE1 <register al>
   56FA5:	FF00      	**prefx    0xFF
   56FA6:	00C0      	and        ah, #0xFF00
   56FA7:	FE00      	**prefx    0xFE
   56FA8:	0080      	cmp        ah, #-0x200
   56FA9:	38F4      	beq        +0x38 <ExtensionSendMessage+0x4D:0x56FE1[p]>
   56FAA:	8200      	**prefx    0x82
   56FAB:	0080      	cmp        ah, #-0x7E00
   56FAC:	35F4      	beq        +0x35 <ExtensionSendMessage+0x4D:0x56FE1[p]>
   56FAD:	8300      	**prefx    0x83
   56FAE:	0080      	cmp        ah, #-0x7D00
   56FAF:	32F4      	beq        +0x32 <ExtensionSendMessage+0x4D:0x56FE1[p]>
   56FB0:	8400      	**prefx    0x84
   56FB1:	0080      	cmp        ah, #-0x7C00
   56FB2:	2FF4      	beq        +0x2F <ExtensionSendMessage+0x4D:0x56FE1[p]>
   56FB3:	8900      	**prefx    0x89
   56FB4:	0080      	cmp        ah, #-0x7700
   56FB5:	2CF4      	beq        +0x2C <ExtensionSendMessage+0x4D:0x56FE1[p]>
   56FB6:	8A00      	**prefx    0x8A
   56FB7:	0080      	cmp        ah, #-0x7600
   56FB8:	29F4      	beq        +0x29 <ExtensionSendMessage+0x4D:0x56FE1[p]>
   56FB9:	6A00      	**prefx    0x6A
   56FBA:	DF19      	ld         x, @0x69DF <ext_data+0x1>
   56FBB:	F929      	st         x, @0xFFF9 <(scratchpad)>
   56FBC:	6A00      	**prefx    0x6A
   56FBD:	DE19      	ld         x, @0x69DE <ext_data>
   56FBE:	0014      	ld         al, #+0x0
   56FBF:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56FC0:	0CE0      	bra        +0xC <ExtensionSendMessage+0x38:0x56FCC[p]>
   56FC1:	0012      	ld         ah, @(0x0, x)
   56FC2:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   56FC3:	E085      	cmp        al, @0xFFE0 <register ah>
   56FC4:	04FC      	bcs        +0x4 <ExtensionSendMessage+0x34:0x56FC8[p]>
   56FC5:	0132      	add        ah, @(+0x1, x)
   56FC6:	E085      	cmp        al, @0xFFE0 <register ah>
   56FC7:	092C      	bcz        +0x9 <ExtensionSendMessage+0x3C:0x56FD0[p]>
   56FC8:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56FC9:	0134      	add        al, #+0x1
   56FCA:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56FCB:	0838      	add        x, #+0x8
   56FCC:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   56FCD:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   56FCE:	F3FC      	bcs        -0xD <ExtensionSendMessage+0x2D:0x56FC1[p]>
   56FCF:	12E0      	bra        +0x12 <ExtensionSendMessage+0x4D:0x56FE1[p]>
   56FD0:	D100      	**prefx    0xD1
   56FD1:	CC9C      	bsr        -0x2F34 <___libcsrmesh_84:0x5409D[p]>
   56FD2:	E111      	ld         ah, @0xFFE1 <register al>
   56FD3:	0417      	ld         al, @(+0x4, y)
   56FD4:	031B      	ld         x, @(+0x3, y)
   56FD5:	FD09      	bc2        
   56FD6:	041B      	ld         x, @(+0x4, y)
   56FD7:	072B      	st         x, @(+0x7, y)
   56FD8:	0217      	ld         al, @(+0x2, y)
   56FD9:	0827      	st         al, @(+0x8, y)
   56FDA:	0017      	ld         al, @(0x0, y)
   56FDB:	0113      	ld         ah, @(+0x1, y)
   56FDC:	051B      	ld         x, @(+0x5, y)
   56FDD:	060E      	ld         xh, @(+0x6, y)
   56FDE:	073C      	add        y, #+0x7
   56FDF:	D100      	**prefx    0xD1
   56FE0:	C6E0      	bra        -0x2F3A <___libcsrmesh_88:0x540A6[p]>
   56FE1:	FF14      	ld         al, #-0x1
   56FE2:	F90F      	leave      #-0x7

0x00056FE3 <___libtime_client_467>:
   56FE3:	E90B      	enter      #-0x17
   56FE4:	FA25      	st         al, @0xFFFA <(scratchpad)>
   56FE5:	E119      	ld         x, @0xFFE1 <register al>
   56FE6:	001A      	ld         x, @(0x0, x)
   56FE7:	142B      	st         x, @(+0x14, y)
   56FE8:	0012      	ld         ah, @(0x0, x)
   56FE9:	0116      	ld         al, @(+0x1, x)
   56FEA:	0C27      	st         al, @(+0xC, y)
   56FEB:	0B23      	st         ah, @(+0xB, y)
   56FEC:	021A      	ld         x, @(+0x2, x)
   56FED:	0D2B      	st         x, @(+0xD, y)
   56FEE:	141B      	ld         x, @(+0x14, y)
   56FEF:	031A      	ld         x, @(+0x3, x)
   56FF0:	0E2B      	st         x, @(+0xE, y)
   56FF1:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56FF2:	011A      	ld         x, @(+0x1, x)
   56FF3:	0A2B      	st         x, @(+0xA, y)
   56FF4:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56FF5:	041A      	ld         x, @(+0x4, x)
   56FF6:	0F2B      	st         x, @(+0xF, y)
   56FF7:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56FF8:	051A      	ld         x, @(+0x5, x)
   56FF9:	112B      	st         x, @(+0x11, y)
   56FFA:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   56FFB:	071A      	ld         x, @(+0x7, x)
   56FFC:	122B      	st         x, @(+0x12, y)
   56FFD:	141B      	ld         x, @(+0x14, y)
   56FFE:	0416      	ld         al, @(+0x4, x)
   56FFF:	7784      	cmp        al, #+0x77
   57000:	05F4      	beq        +0x5 <___libtime_client_467+0x22:0x57005[p]>
   57001:	7F84      	cmp        al, #+0x7F
   57002:	22F4      	beq        +0x22 <___libtime_client_467+0x41:0x57024[p]>
   57003:	FF14      	ld         al, #-0x1
   57004:	52E0      	bra        +0x52 <___libtime_client_467+0x73:0x57056[p]>
   57005:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57006:	031A      	ld         x, @(+0x3, x)
   57007:	E315      	ld         al, @0xFFE3 <register uxl>
   57008:	FF34      	add        al, #-0x1
   57009:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5700A:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5700B:	0326      	st         al, @(+0x3, x)
   5700C:	0216      	ld         al, @(+0x2, x)
   5700D:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5700E:	F935      	add        al, @0xFFF9 <(scratchpad)>
   5700F:	E119      	ld         x, @0xFFE1 <register al>
   57010:	0016      	ld         al, @(0x0, x)
   57011:	0327      	st         al, @(+0x3, y)
   57012:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57013:	0116      	ld         al, @(+0x1, x)
   57014:	08A0      	asl        #0x8
   57015:	0036      	add        al, @(0x0, x)
   57016:	0227      	st         al, @(+0x2, y)
   57017:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57018:	0234      	add        al, #+0x2
   57019:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5701A:	0226      	st         al, @(+0x2, x)
   5701B:	E419      	ld         x, @0xFFE4 <register uy>
   5701C:	0238      	add        x, #+0x2
   5701D:	132B      	st         x, @(+0x13, y)
   5701E:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5701F:	0027      	st         al, @(0x0, y)
   57020:	0018      	ld         x, #+0x0
   57021:	012B      	st         x, @(+0x1, y)
   57022:	7714      	ld         al, #+0x77
   57023:	2AE0      	bra        +0x2A <___libtime_client_467+0x6A:0x5704D[p]>
   57024:	E411      	ld         ah, @0xFFE4 <register uy>
   57025:	0230      	add        ah, #+0x2
   57026:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57027:	021A      	ld         x, @(+0x2, x)
   57028:	F829      	st         x, @0xFFF8 <(scratchpad)>
   57029:	0016      	ld         al, @(0x0, x)
   5702A:	E019      	ld         x, @0xFFE0 <register ah>
   5702B:	0026      	st         al, @(0x0, x)
   5702C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5702D:	0138      	add        x, #+0x1
   5702E:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5702F:	E315      	ld         al, @0xFFE3 <register uxl>
   57030:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57031:	0226      	st         al, @(+0x2, x)
   57032:	0130      	add        ah, #+0x1
   57033:	E415      	ld         al, @0xFFE4 <register uy>
   57034:	0834      	add        al, #+0x8
   57035:	E181      	cmp        ah, @0xFFE1 <register al>
   57036:	F0F0      	bne        -0x10 <___libtime_client_467+0x43:0x57026[p]>
   57037:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   57038:	001A      	ld         x, @(0x0, x)
   57039:	082B      	st         x, @(+0x8, y)
   5703A:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5703B:	0234      	add        al, #+0x2
   5703C:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5703D:	0226      	st         al, @(+0x2, x)
   5703E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5703F:	021A      	ld         x, @(+0x2, x)
   57040:	092B      	st         x, @(+0x9, y)
   57041:	0134      	add        al, #+0x1
   57042:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57043:	0226      	st         al, @(+0x2, x)
   57044:	E419      	ld         x, @0xFFE4 <register uy>
   57045:	0238      	add        x, #+0x2
   57046:	132B      	st         x, @(+0x13, y)
   57047:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57048:	031A      	ld         x, @(+0x3, x)
   57049:	002B      	st         x, @(0x0, y)
   5704A:	0014      	ld         al, #+0x0
   5704B:	0127      	st         al, @(+0x1, y)
   5704C:	7F14      	ld         al, #+0x7F
   5704D:	E411      	ld         ah, @0xFFE4 <register uy>
   5704E:	0A30      	add        ah, #+0xA
   5704F:	6C00      	**prefx    0x6C
   57050:	7819      	ld         x, @0x6C78 <g_time_client_data>
   57051:	FF2B      	st         x, @(-0x1, y)
   57052:	FF0E      	ld         xh, @(-0x1, y)
   57053:	6C00      	**prefx    0x6C
   57054:	799D      	bsr        @0x6C79 <g_time_client_data+0x1>
   57055:	0014      	ld         al, #+0x0
   57056:	E90F      	leave      #-0x17

0x00057057 <TimeModelClientInit>:
   57057:	FE0B      	enter      #-0x2
   57058:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57059:	6C00      	**prefx    0x6C
   5705A:	7A18      	ld         x, #+0x6C7A
   5705B:	7000      	**prefx    0x70
   5705C:	E314      	ld         al, #+0x6FE3
   5705D:	0126      	st         al, @(+0x1, x)
   5705E:	0514      	ld         al, #+0x5
   5705F:	0026      	st         al, @(0x0, x)
   57060:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57061:	6C00      	**prefx    0x6C
   57062:	7925      	st         al, @0x6C79 <g_time_client_data+0x1>
   57063:	6C00      	**prefx    0x6C
   57064:	7821      	st         ah, @0x6C78 <g_time_client_data>
   57065:	E315      	ld         al, @0xFFE3 <register uxl>
   57066:	001B      	ld         x, @(0x0, y)
   57067:	023C      	add        y, #+0x2
   57068:	D000      	**prefx    0xD0
   57069:	BAE0      	bra        -0x3046 <___libcsrmesh_86:0x54023[p]>

0x0005706A <TimeModelInit>:
   5706A:	FE0B      	enter      #-0x2
   5706B:	6D00      	**prefx    0x6D
   5706C:	8618      	ld         x, #+0x6C86
   5706D:	0026      	st         al, @(0x0, x)
   5706E:	1014      	ld         al, #+0x10
   5706F:	FF26      	st         al, @(-0x1, x)
   57070:	7100      	**prefx    0x71
   57071:	8414      	ld         al, #+0x7084
   57072:	FE26      	st         al, @(-0x2, x)
   57073:	0514      	ld         al, #+0x5
   57074:	FD26      	st         al, @(-0x3, x)
   57075:	0122      	st         ah, @(+0x1, x)
   57076:	0217      	ld         al, @(+0x2, y)
   57077:	0226      	st         al, @(+0x2, x)
   57078:	0417      	ld         al, @(+0x4, y)
   57079:	6D00      	**prefx    0x6D
   5707A:	8225      	st         al, @0x6C82 <g_time_model_data+0x1>
   5707B:	0317      	ld         al, @(+0x3, y)
   5707C:	6D00      	**prefx    0x6D
   5707D:	8125      	st         al, @0x6C81 <g_time_model_data>
   5707E:	FD38      	add        x, #-0x3
   5707F:	E315      	ld         al, @0xFFE3 <register uxl>
   57080:	001B      	ld         x, @(0x0, y)
   57081:	023C      	add        y, #+0x2
   57082:	D000      	**prefx    0xD0
   57083:	BAE0      	bra        -0x3046 <___libcsrmesh_85:0x5403D[p]>

0x00057084 <___libtime_server_466>:
   57084:	E90B      	enter      #-0x17
   57085:	1427      	st         al, @(+0x14, y)
   57086:	E415      	ld         al, @0xFFE4 <register uy>
   57087:	0E34      	add        al, #+0xE
   57088:	0727      	st         al, @(+0x7, y)
   57089:	F734      	add        al, #-0x9
   5708A:	D000      	**prefx    0xD0
   5708B:	BE9C      	bsr        -0x3042 <CSRmeshGetDefaultTTL:0x54049[p]>
   5708C:	141B      	ld         x, @(+0x14, y)
   5708D:	001A      	ld         x, @(0x0, x)
   5708E:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5708F:	0012      	ld         ah, @(0x0, x)
   57090:	0116      	ld         al, @(+0x1, x)
   57091:	0A27      	st         al, @(+0xA, y)
   57092:	0923      	st         ah, @(+0x9, y)
   57093:	021A      	ld         x, @(+0x2, x)
   57094:	0B2B      	st         x, @(+0xB, y)
   57095:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57096:	031A      	ld         x, @(+0x3, x)
   57097:	0C2B      	st         x, @(+0xC, y)
   57098:	141B      	ld         x, @(+0x14, y)
   57099:	011A      	ld         x, @(+0x1, x)
   5709A:	082B      	st         x, @(+0x8, y)
   5709B:	141B      	ld         x, @(+0x14, y)
   5709C:	041A      	ld         x, @(+0x4, x)
   5709D:	0D2B      	st         x, @(+0xD, y)
   5709E:	141B      	ld         x, @(+0x14, y)
   5709F:	051A      	ld         x, @(+0x5, x)
   570A0:	0F2B      	st         x, @(+0xF, y)
   570A1:	141B      	ld         x, @(+0x14, y)
   570A2:	071A      	ld         x, @(+0x7, x)
   570A3:	102B      	st         x, @(+0x10, y)
   570A4:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   570A5:	0416      	ld         al, @(+0x4, x)
   570A6:	7584      	cmp        al, #+0x75
   570A7:	05F4      	beq        +0x5 <___libtime_server_466+0x28:0x570AC[p]>
   570A8:	7684      	cmp        al, #+0x76
   570A9:	43F4      	beq        +0x43 <___libtime_server_466+0x68:0x570EC[p]>
   570AA:	FF14      	ld         al, #-0x1
   570AB:	7FE0      	bra        +0x7F <___libtime_server_466+0xA6:0x5712A[p]>
   570AC:	0014      	ld         al, #+0x0
   570AD:	0227      	st         al, @(+0x2, y)
   570AE:	141B      	ld         x, @(+0x14, y)
   570AF:	031A      	ld         x, @(+0x3, x)
   570B0:	E315      	ld         al, @0xFFE3 <register uxl>
   570B1:	FF34      	add        al, #-0x1
   570B2:	F925      	st         al, @0xFFF9 <(scratchpad)>
   570B3:	141B      	ld         x, @(+0x14, y)
   570B4:	0326      	st         al, @(+0x3, x)
   570B5:	0216      	ld         al, @(+0x2, x)
   570B6:	F825      	st         al, @0xFFF8 <(scratchpad)>
   570B7:	E119      	ld         x, @0xFFE1 <register al>
   570B8:	F939      	add        x, @0xFFF9 <(scratchpad)>
   570B9:	001A      	ld         x, @(0x0, x)
   570BA:	132B      	st         x, @(+0x13, y)
   570BB:	E119      	ld         x, @0xFFE1 <register al>
   570BC:	0116      	ld         al, @(+0x1, x)
   570BD:	08A0      	asl        #0x8
   570BE:	0036      	add        al, @(0x0, x)
   570BF:	0327      	st         al, @(+0x3, y)
   570C0:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   570C1:	0234      	add        al, #+0x2
   570C2:	141B      	ld         x, @(+0x14, y)
   570C3:	0226      	st         al, @(+0x2, x)
   570C4:	E419      	ld         x, @0xFFE4 <register uy>
   570C5:	0338      	add        x, #+0x3
   570C6:	112B      	st         x, @(+0x11, y)
   570C7:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   570C8:	0027      	st         al, @(0x0, y)
   570C9:	FF38      	add        x, #-0x1
   570CA:	012B      	st         x, @(+0x1, y)
   570CB:	7514      	ld         al, #+0x75
   570CC:	E411      	ld         ah, @0xFFE4 <register uy>
   570CD:	0830      	add        ah, #+0x8
   570CE:	6D00      	**prefx    0x6D
   570CF:	8119      	ld         x, @0x6C81 <g_time_model_data>
   570D0:	FF2B      	st         x, @(-0x1, y)
   570D1:	FF0E      	ld         xh, @(-0x1, y)
   570D2:	6D00      	**prefx    0x6D
   570D3:	829D      	bsr        @0x6C82 <g_time_model_data+0x1>
   570D4:	029B      	tst        @(+0x2, y)
   570D5:	54F4      	beq        +0x54 <___libtime_server_466+0xA5:0x57129[p]>
   570D6:	D000      	**prefx    0xD0
   570D7:	C69C      	bsr        -0x303A <___libcsrmesh_84:0x5409D[p]>
   570D8:	F825      	st         al, @0xFFF8 <(scratchpad)>
   570D9:	7714      	ld         al, #+0x77
   570DA:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   570DB:	0026      	st         al, @(0x0, x)
   570DC:	0217      	ld         al, @(+0x2, y)
   570DD:	E119      	ld         x, @0xFFE1 <register al>
   570DE:	0016      	ld         al, @(0x0, x)
   570DF:	0100      	**prefx    0x1
   570E0:	FFC4      	and        al, #0xFF
   570E1:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   570E2:	0126      	st         al, @(+0x1, x)
   570E3:	0217      	ld         al, @(+0x2, y)
   570E4:	E119      	ld         x, @0xFFE1 <register al>
   570E5:	0012      	ld         ah, @(0x0, x)
   570E6:	0009      	**unsigned
   570E7:	08A4      	lsr        #0x8
   570E8:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   570E9:	0222      	st         ah, @(+0x2, x)
   570EA:	1317      	ld         al, @(+0x13, y)
   570EB:	33E0      	bra        +0x33 <___libtime_server_466+0x9A:0x5711E[p]>
   570EC:	0018      	ld         x, #+0x0
   570ED:	022B      	st         x, @(+0x2, y)
   570EE:	141B      	ld         x, @(+0x14, y)
   570EF:	0316      	ld         al, @(+0x3, x)
   570F0:	FF34      	add        al, #-0x1
   570F1:	0326      	st         al, @(+0x3, x)
   570F2:	0212      	ld         ah, @(+0x2, x)
   570F3:	E131      	add        ah, @0xFFE1 <register al>
   570F4:	E019      	ld         x, @0xFFE0 <register ah>
   570F5:	0012      	ld         ah, @(0x0, x)
   570F6:	1223      	st         ah, @(+0x12, y)
   570F7:	E419      	ld         x, @0xFFE4 <register uy>
   570F8:	0338      	add        x, #+0x3
   570F9:	112B      	st         x, @(+0x11, y)
   570FA:	0027      	st         al, @(0x0, y)
   570FB:	E415      	ld         al, @0xFFE4 <register uy>
   570FC:	0234      	add        al, #+0x2
   570FD:	0127      	st         al, @(+0x1, y)
   570FE:	7614      	ld         al, #+0x76
   570FF:	E411      	ld         ah, @0xFFE4 <register uy>
   57100:	0830      	add        ah, #+0x8
   57101:	6D00      	**prefx    0x6D
   57102:	8119      	ld         x, @0x6C81 <g_time_model_data>
   57103:	FF2B      	st         x, @(-0x1, y)
   57104:	FF0E      	ld         xh, @(-0x1, y)
   57105:	6D00      	**prefx    0x6D
   57106:	829D      	bsr        @0x6C82 <g_time_model_data+0x1>
   57107:	029B      	tst        @(+0x2, y)
   57108:	21F4      	beq        +0x21 <___libtime_server_466+0xA5:0x57129[p]>
   57109:	D000      	**prefx    0xD0
   5710A:	939C      	bsr        -0x306D <___libcsrmesh_84:0x5409D[p]>
   5710B:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5710C:	7714      	ld         al, #+0x77
   5710D:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5710E:	0026      	st         al, @(0x0, x)
   5710F:	0217      	ld         al, @(+0x2, y)
   57110:	E119      	ld         x, @0xFFE1 <register al>
   57111:	0016      	ld         al, @(0x0, x)
   57112:	0100      	**prefx    0x1
   57113:	FFC4      	and        al, #0xFF
   57114:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57115:	0126      	st         al, @(+0x1, x)
   57116:	0217      	ld         al, @(+0x2, y)
   57117:	E119      	ld         x, @0xFFE1 <register al>
   57118:	0012      	ld         ah, @(0x0, x)
   57119:	0009      	**unsigned
   5711A:	08A4      	lsr        #0x8
   5711B:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5711C:	0222      	st         ah, @(+0x2, x)
   5711D:	1217      	ld         al, @(+0x12, y)
   5711E:	0100      	**prefx    0x1
   5711F:	FFC4      	and        al, #0xFF
   57120:	0326      	st         al, @(+0x3, x)
   57121:	0418      	ld         x, #+0x4
   57122:	002B      	st         x, @(0x0, y)
   57123:	0E17      	ld         al, @(+0xE, y)
   57124:	0127      	st         al, @(+0x1, y)
   57125:	0817      	ld         al, @(+0x8, y)
   57126:	0B13      	ld         ah, @(+0xB, y)
   57127:	CF00      	**prefx    0xCF
   57128:	7E9C      	bsr        -0x3082 <___libcsrmesh_88:0x540A6[p]>
   57129:	0014      	ld         al, #+0x0
   5712A:	E90F      	leave      #-0x17

0x0005712B <TimeBroadcast>:
   5712B:	F90B      	enter      #-0x7
   5712C:	0227      	st         al, @(+0x2, y)
   5712D:	0323      	st         ah, @(+0x3, y)
   5712E:	CF00      	**prefx    0xCF
   5712F:	6E9C      	bsr        -0x3092 <___libcsrmesh_84:0x5409D[p]>
   57130:	F925      	st         al, @0xFFF9 <(scratchpad)>
   57131:	7F10      	ld         ah, #+0x7F
   57132:	E119      	ld         x, @0xFFE1 <register al>
   57133:	0022      	st         ah, @(0x0, x)
   57134:	0138      	add        x, #+0x1
   57135:	F829      	st         x, @0xFFF8 <(scratchpad)>
   57136:	0014      	ld         al, #+0x0
   57137:	081B      	ld         x, @(+0x8, y)
   57138:	E139      	add        x, @0xFFE1 <register al>
   57139:	0012      	ld         ah, @(0x0, x)
   5713A:	0100      	**prefx    0x1
   5713B:	FFC0      	and        ah, #0xFF
   5713C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5713D:	0022      	st         ah, @(0x0, x)
   5713E:	0134      	add        al, #+0x1
   5713F:	0138      	add        x, #+0x1
   57140:	F829      	st         x, @0xFFF8 <(scratchpad)>
   57141:	0684      	cmp        al, #+0x6
   57142:	F5F0      	bne        -0xB <TimeBroadcast+0xC:0x57137[p]>
   57143:	081B      	ld         x, @(+0x8, y)
   57144:	0612      	ld         ah, @(+0x6, x)
   57145:	0100      	**prefx    0x1
   57146:	FFC0      	and        ah, #0xFF
   57147:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   57148:	0722      	st         ah, @(+0x7, x)
   57149:	081B      	ld         x, @(+0x8, y)
   5714A:	0712      	ld         ah, @(+0x7, x)
   5714B:	0100      	**prefx    0x1
   5714C:	FFC0      	and        ah, #0xFF
   5714D:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5714E:	0822      	st         ah, @(+0x8, x)
   5714F:	0914      	ld         al, #+0x9
   57150:	0027      	st         al, @(0x0, y)
   57151:	071B      	ld         x, @(+0x7, y)
   57152:	012B      	st         x, @(+0x1, y)
   57153:	0217      	ld         al, @(+0x2, y)
   57154:	0313      	ld         ah, @(+0x3, y)
   57155:	CF00      	**prefx    0xCF
   57156:	B39C      	bsr        -0x314D <___libcsrmesh_90:0x54009[p]>
   57157:	F90F      	leave      #-0x7

0x00057158 <ActionModelInit>:
   57158:	FE0B      	enter      #-0x2
   57159:	6D00      	**prefx    0x6D
   5715A:	8F18      	ld         x, #+0x6C8F
   5715B:	0026      	st         al, @(0x0, x)
   5715C:	2214      	ld         al, #+0x22
   5715D:	FF26      	st         al, @(-0x1, x)
   5715E:	7100      	**prefx    0x71
   5715F:	7214      	ld         al, #+0x7172
   57160:	FE26      	st         al, @(-0x2, x)
   57161:	0514      	ld         al, #+0x5
   57162:	FD26      	st         al, @(-0x3, x)
   57163:	0122      	st         ah, @(+0x1, x)
   57164:	0217      	ld         al, @(+0x2, y)
   57165:	0226      	st         al, @(+0x2, x)
   57166:	0417      	ld         al, @(+0x4, y)
   57167:	6D00      	**prefx    0x6D
   57168:	8B25      	st         al, @0x6C8B <g_action_model_data+0x1>
   57169:	0317      	ld         al, @(+0x3, y)
   5716A:	6D00      	**prefx    0x6D
   5716B:	8A25      	st         al, @0x6C8A <g_action_model_data>
   5716C:	FD38      	add        x, #-0x3
   5716D:	E315      	ld         al, @0xFFE3 <register uxl>
   5716E:	001B      	ld         x, @(0x0, y)
   5716F:	023C      	add        y, #+0x2
   57170:	CF00      	**prefx    0xCF
   57171:	CCE0      	bra        -0x3134 <___libcsrmesh_85:0x5403D[p]>

0x00057172 <___libaction_server_468>:
   57172:	D80B      	enter      #-0x28
   57173:	2127      	st         al, @(+0x21, y)
   57174:	E411      	ld         ah, @0xFFE4 <register uy>
   57175:	0F30      	add        ah, #+0xF
   57176:	0823      	st         ah, @(+0x8, y)
   57177:	E415      	ld         al, @0xFFE4 <register uy>
   57178:	0634      	add        al, #+0x6
   57179:	CF00      	**prefx    0xCF
   5717A:	CF9C      	bsr        -0x3131 <CSRmeshGetDefaultTTL:0x54049[p]>
   5717B:	211B      	ld         x, @(+0x21, y)
   5717C:	001A      	ld         x, @(0x0, x)
   5717D:	FA29      	st         x, @0xFFFA <(scratchpad)>
   5717E:	0012      	ld         ah, @(0x0, x)
   5717F:	0116      	ld         al, @(+0x1, x)
   57180:	0B27      	st         al, @(+0xB, y)
   57181:	0A23      	st         ah, @(+0xA, y)
   57182:	021A      	ld         x, @(+0x2, x)
   57183:	0C2B      	st         x, @(+0xC, y)
   57184:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57185:	031A      	ld         x, @(+0x3, x)
   57186:	0D2B      	st         x, @(+0xD, y)
   57187:	211B      	ld         x, @(+0x21, y)
   57188:	011A      	ld         x, @(+0x1, x)
   57189:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5718A:	092B      	st         x, @(+0x9, y)
   5718B:	211B      	ld         x, @(+0x21, y)
   5718C:	041A      	ld         x, @(+0x4, x)
   5718D:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5718E:	0E2B      	st         x, @(+0xE, y)
   5718F:	211B      	ld         x, @(+0x21, y)
   57190:	0516      	ld         al, @(+0x5, x)
   57191:	1027      	st         al, @(+0x10, y)
   57192:	0712      	ld         ah, @(+0x7, x)
   57193:	1123      	st         ah, @(+0x11, y)
   57194:	021A      	ld         x, @(+0x2, x)
   57195:	FF2B      	st         x, @(-0x1, y)
   57196:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57197:	0412      	ld         ah, @(+0x4, x)
   57198:	5280      	cmp        ah, #+0x52
   57199:	64F4      	beq        +0x64 <___libaction_server_468+0x8B:0x571FD[p]>
   5719A:	5380      	cmp        ah, #+0x53
   5719B:	04F8      	bcc        +0x4 <___libaction_server_468+0x2D:0x5719F[p]>
   5719C:	5080      	cmp        ah, #+0x50
   5719D:	08F0      	bne        +0x8 <___libaction_server_468+0x33:0x571A5[p]>
   5719E:	0AE0      	bra        +0xA <___libaction_server_468+0x36:0x571A8[p]>
   5719F:	5480      	cmp        ah, #+0x54
   571A0:	0100      	**prefx    0x1
   571A1:	AEF4      	beq        +0xAE <___libaction_server_468+0xDD:0x5724F[p]>
   571A2:	5680      	cmp        ah, #+0x56
   571A3:	0100      	**prefx    0x1
   571A4:	1BF4      	beq        +0x11B <___libaction_server_468+0x14D:0x572BF[p]>
   571A5:	FF14      	ld         al, #-0x1
   571A6:	0100      	**prefx    0x1
   571A7:	30E0      	bra        +0x130 <___libaction_server_468+0x165:0x572D7[p]>
   571A8:	0010      	ld         ah, #+0x0
   571A9:	0523      	st         ah, @(+0x5, y)
   571AA:	211B      	ld         x, @(+0x21, y)
   571AB:	0316      	ld         al, @(+0x3, x)
   571AC:	FF34      	add        al, #-0x1
   571AD:	0326      	st         al, @(+0x3, x)
   571AE:	FF1B      	ld         x, @(-0x1, y)
   571AF:	E139      	add        x, @0xFFE1 <register al>
   571B0:	001A      	ld         x, @(0x0, x)
   571B1:	202B      	st         x, @(+0x20, y)
   571B2:	FF1B      	ld         x, @(-0x1, y)
   571B3:	001A      	ld         x, @(0x0, x)
   571B4:	132B      	st         x, @(+0x13, y)
   571B5:	FF13      	ld         ah, @(-0x1, y)
   571B6:	0130      	add        ah, #+0x1
   571B7:	211B      	ld         x, @(+0x21, y)
   571B8:	0222      	st         ah, @(+0x2, x)
   571B9:	0018      	ld         x, #+0x0
   571BA:	1C2B      	st         x, @(+0x1C, y)
   571BB:	0184      	cmp        al, #+0x1
   571BC:	192C      	bcz        +0x19 <___libaction_server_468+0x63:0x571D5[p]>
   571BD:	FF1B      	ld         x, @(-0x1, y)
   571BE:	E059      	sub        x, @0xFFE0 <register ah>
   571BF:	E335      	add        al, @0xFFE3 <register uxl>
   571C0:	1C27      	st         al, @(+0x1C, y)
   571C1:	0014      	ld         al, #+0x0
   571C2:	0FE0      	bra        +0xF <___libaction_server_468+0x5F:0x571D1[p]>
   571C3:	E415      	ld         al, @0xFFE4 <register uy>
   571C4:	E035      	add        al, @0xFFE0 <register ah>
   571C5:	F825      	st         al, @0xFFF8 <(scratchpad)>
   571C6:	211B      	ld         x, @(+0x21, y)
   571C7:	021A      	ld         x, @(+0x2, x)
   571C8:	F929      	st         x, @0xFFF9 <(scratchpad)>
   571C9:	0016      	ld         al, @(0x0, x)
   571CA:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   571CB:	1326      	st         al, @(+0x13, x)
   571CC:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   571CD:	0134      	add        al, #+0x1
   571CE:	211B      	ld         x, @(+0x21, y)
   571CF:	0226      	st         al, @(+0x2, x)
   571D0:	E015      	ld         al, @0xFFE0 <register ah>
   571D1:	E111      	ld         ah, @0xFFE1 <register al>
   571D2:	0130      	add        ah, #+0x1
   571D3:	1C87      	cmp        al, @(+0x1C, y)
   571D4:	EFFC      	bcs        -0x11 <___libaction_server_468+0x51:0x571C3[p]>
   571D5:	E419      	ld         x, @0xFFE4 <register uy>
   571D6:	1338      	add        x, #+0x13
   571D7:	122B      	st         x, @(+0x12, y)
   571D8:	211B      	ld         x, @(+0x21, y)
   571D9:	031A      	ld         x, @(+0x3, x)
   571DA:	002B      	st         x, @(0x0, y)
   571DB:	E411      	ld         ah, @0xFFE4 <register uy>
   571DC:	0530      	add        ah, #+0x5
   571DD:	0123      	st         ah, @(+0x1, y)
   571DE:	5014      	ld         al, #+0x50
   571DF:	0430      	add        ah, #+0x4
   571E0:	6D00      	**prefx    0x6D
   571E1:	8A19      	ld         x, @0x6C8A <g_action_model_data>
   571E2:	FF2B      	st         x, @(-0x1, y)
   571E3:	FF0E      	ld         xh, @(-0x1, y)
   571E4:	6D00      	**prefx    0x6D
   571E5:	8B9D      	bsr        @0x6C8B <g_action_model_data+0x1>
   571E6:	059B      	tst        @(+0x5, y)
   571E7:	0100      	**prefx    0x1
   571E8:	EEF4      	beq        +0xEE <___libaction_server_468+0x164:0x572D6[p]>
   571E9:	CF00      	**prefx    0xCF
   571EA:	B39C      	bsr        -0x314D <___libcsrmesh_84:0x5409D[p]>
   571EB:	E111      	ld         ah, @0xFFE1 <register al>
   571EC:	5114      	ld         al, #+0x51
   571ED:	E019      	ld         x, @0xFFE0 <register ah>
   571EE:	0026      	st         al, @(0x0, x)
   571EF:	0517      	ld         al, @(+0x5, y)
   571F0:	E119      	ld         x, @0xFFE1 <register al>
   571F1:	0016      	ld         al, @(0x0, x)
   571F2:	0100      	**prefx    0x1
   571F3:	FFC4      	and        al, #0xFF
   571F4:	E019      	ld         x, @0xFFE0 <register ah>
   571F5:	0126      	st         al, @(+0x1, x)
   571F6:	2017      	ld         al, @(+0x20, y)
   571F7:	0100      	**prefx    0x1
   571F8:	FFC4      	and        al, #0xFF
   571F9:	0226      	st         al, @(+0x2, x)
   571FA:	0314      	ld         al, #+0x3
   571FB:	0100      	**prefx    0x1
   571FC:	D3E0      	bra        +0xD3 <___libaction_server_468+0x15D:0x572CF[p]>
   571FD:	0018      	ld         x, #+0x0
   571FE:	052B      	st         x, @(+0x5, y)
   571FF:	211B      	ld         x, @(+0x21, y)
   57200:	0316      	ld         al, @(+0x3, x)
   57201:	FF34      	add        al, #-0x1
   57202:	0326      	st         al, @(+0x3, x)
   57203:	FF13      	ld         ah, @(-0x1, y)
   57204:	E131      	add        ah, @0xFFE1 <register al>
   57205:	E019      	ld         x, @0xFFE0 <register ah>
   57206:	001A      	ld         x, @(0x0, x)
   57207:	1F2B      	st         x, @(+0x1F, y)
   57208:	E411      	ld         ah, @0xFFE4 <register uy>
   57209:	1330      	add        ah, #+0x13
   5720A:	1223      	st         ah, @(+0x12, y)
   5720B:	0027      	st         al, @(0x0, y)
   5720C:	E415      	ld         al, @0xFFE4 <register uy>
   5720D:	0534      	add        al, #+0x5
   5720E:	0127      	st         al, @(+0x1, y)
   5720F:	5214      	ld         al, #+0x52
   57210:	F630      	add        ah, #-0xA
   57211:	6D00      	**prefx    0x6D
   57212:	8A19      	ld         x, @0x6C8A <g_action_model_data>
   57213:	FF2B      	st         x, @(-0x1, y)
   57214:	FF0E      	ld         xh, @(-0x1, y)
   57215:	6D00      	**prefx    0x6D
   57216:	8B9D      	bsr        @0x6C8B <g_action_model_data+0x1>
   57217:	059B      	tst        @(+0x5, y)
   57218:	0100      	**prefx    0x1
   57219:	BDF4      	beq        +0xBD <___libaction_server_468+0x164:0x572D6[p]>
   5721A:	CF00      	**prefx    0xCF
   5721B:	829C      	bsr        -0x317E <___libcsrmesh_84:0x5409D[p]>
   5721C:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5721D:	5310      	ld         ah, #+0x53
   5721E:	E119      	ld         x, @0xFFE1 <register al>
   5721F:	0022      	st         ah, @(0x0, x)
   57220:	0517      	ld         al, @(+0x5, y)
   57221:	E119      	ld         x, @0xFFE1 <register al>
   57222:	0116      	ld         al, @(+0x1, x)
   57223:	0100      	**prefx    0x1
   57224:	FFC4      	and        al, #0xFF
   57225:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57226:	0126      	st         al, @(+0x1, x)
   57227:	051B      	ld         x, @(+0x5, y)
   57228:	0112      	ld         ah, @(+0x1, x)
   57229:	2323      	st         ah, @(+0x23, y)
   5722A:	001A      	ld         x, @(0x0, x)
   5722B:	222B      	st         x, @(+0x22, y)
   5722C:	2317      	ld         al, @(+0x23, y)
   5722D:	2213      	ld         ah, @(+0x22, y)
   5722E:	0009      	**unsigned
   5722F:	08A4      	lsr        #0x8
   57230:	0100      	**prefx    0x1
   57231:	FFC4      	and        al, #0xFF
   57232:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57233:	0226      	st         al, @(+0x2, x)
   57234:	0517      	ld         al, @(+0x5, y)
   57235:	E119      	ld         x, @0xFFE1 <register al>
   57236:	0016      	ld         al, @(0x0, x)
   57237:	0100      	**prefx    0x1
   57238:	FFC4      	and        al, #0xFF
   57239:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5723A:	0326      	st         al, @(+0x3, x)
   5723B:	051B      	ld         x, @(+0x5, y)
   5723C:	0012      	ld         ah, @(0x0, x)
   5723D:	0009      	**unsigned
   5723E:	08A4      	lsr        #0x8
   5723F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57240:	0422      	st         ah, @(+0x4, x)
   57241:	0517      	ld         al, @(+0x5, y)
   57242:	E119      	ld         x, @0xFFE1 <register al>
   57243:	0216      	ld         al, @(+0x2, x)
   57244:	0100      	**prefx    0x1
   57245:	FFC4      	and        al, #0xFF
   57246:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57247:	0526      	st         al, @(+0x5, x)
   57248:	1F13      	ld         ah, @(+0x1F, y)
   57249:	0100      	**prefx    0x1
   5724A:	FFC0      	and        ah, #0xFF
   5724B:	0622      	st         ah, @(+0x6, x)
   5724C:	0714      	ld         al, #+0x7
   5724D:	0100      	**prefx    0x1
   5724E:	81E0      	bra        +0x81 <___libaction_server_468+0x15D:0x572CF[p]>
   5724F:	0014      	ld         al, #+0x0
   57250:	0527      	st         al, @(+0x5, y)
   57251:	211B      	ld         x, @(+0x21, y)
   57252:	031A      	ld         x, @(+0x3, x)
   57253:	E311      	ld         ah, @0xFFE3 <register uxl>
   57254:	FF30      	add        ah, #-0x1
   57255:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   57256:	211B      	ld         x, @(+0x21, y)
   57257:	0322      	st         ah, @(+0x3, x)
   57258:	FF1B      	ld         x, @(-0x1, y)
   57259:	E039      	add        x, @0xFFE0 <register ah>
   5725A:	001A      	ld         x, @(0x0, x)
   5725B:	1E2B      	st         x, @(+0x1E, y)
   5725C:	FF1B      	ld         x, @(-0x1, y)
   5725D:	0316      	ld         al, @(+0x3, x)
   5725E:	0010      	ld         ah, #+0x0
   5725F:	18A0      	asl        #0x18
   57260:	FE27      	st         al, @(-0x2, y)
   57261:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   57262:	0216      	ld         al, @(+0x2, x)
   57263:	0010      	ld         ah, #+0x0
   57264:	10A0      	asl        #0x10
   57265:	F925      	st         al, @0xFFF9 <(scratchpad)>
   57266:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   57267:	FE17      	ld         al, @(-0x2, y)
   57268:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   57269:	F935      	add        al, @0xFFF9 <(scratchpad)>
   5726A:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
   5726B:	FE27      	st         al, @(-0x2, y)
   5726C:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   5726D:	0116      	ld         al, @(+0x1, x)
   5726E:	08A0      	asl        #0x8
   5726F:	0012      	ld         ah, @(0x0, x)
   57270:	0100      	**prefx    0x1
   57271:	FFC0      	and        ah, #0xFF
   57272:	E131      	add        ah, @0xFFE1 <register al>
   57273:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   57274:	0010      	ld         ah, #+0x0
   57275:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   57276:	FE17      	ld         al, @(-0x2, y)
   57277:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   57278:	F935      	add        al, @0xFFF9 <(scratchpad)>
   57279:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
   5727A:	1427      	st         al, @(+0x14, y)
   5727B:	1323      	st         ah, @(+0x13, y)
   5727C:	FF13      	ld         ah, @(-0x1, y)
   5727D:	0430      	add        ah, #+0x4
   5727E:	211B      	ld         x, @(+0x21, y)
   5727F:	0222      	st         ah, @(+0x2, x)
   57280:	E415      	ld         al, @0xFFE4 <register uy>
   57281:	1334      	add        al, #+0x13
   57282:	1227      	st         al, @(+0x12, y)
   57283:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57284:	002B      	st         x, @(0x0, y)
   57285:	E411      	ld         ah, @0xFFE4 <register uy>
   57286:	0530      	add        ah, #+0x5
   57287:	0123      	st         ah, @(+0x1, y)
   57288:	5414      	ld         al, #+0x54
   57289:	0430      	add        ah, #+0x4
   5728A:	6D00      	**prefx    0x6D
   5728B:	8A19      	ld         x, @0x6C8A <g_action_model_data>
   5728C:	FF2B      	st         x, @(-0x1, y)
   5728D:	FF0E      	ld         xh, @(-0x1, y)
   5728E:	6D00      	**prefx    0x6D
   5728F:	8B9D      	bsr        @0x6C8B <g_action_model_data+0x1>
   57290:	059B      	tst        @(+0x5, y)
   57291:	45F4      	beq        +0x45 <___libaction_server_468+0x164:0x572D6[p]>
   57292:	CE00      	**prefx    0xCE
   57293:	0A9C      	bsr        -0x31F6 <___libcsrmesh_84:0x5409D[p]>
   57294:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57295:	5510      	ld         ah, #+0x55
   57296:	E119      	ld         x, @0xFFE1 <register al>
   57297:	0022      	st         ah, @(0x0, x)
   57298:	0517      	ld         al, @(+0x5, y)
   57299:	E119      	ld         x, @0xFFE1 <register al>
   5729A:	0116      	ld         al, @(+0x1, x)
   5729B:	0100      	**prefx    0x1
   5729C:	FFC4      	and        al, #0xFF
   5729D:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5729E:	0126      	st         al, @(+0x1, x)
   5729F:	051B      	ld         x, @(+0x5, y)
   572A0:	0112      	ld         ah, @(+0x1, x)
   572A1:	2523      	st         ah, @(+0x25, y)
   572A2:	001A      	ld         x, @(0x0, x)
   572A3:	242B      	st         x, @(+0x24, y)
   572A4:	2517      	ld         al, @(+0x25, y)
   572A5:	2413      	ld         ah, @(+0x24, y)
   572A6:	0009      	**unsigned
   572A7:	08A4      	lsr        #0x8
   572A8:	0100      	**prefx    0x1
   572A9:	FFC4      	and        al, #0xFF
   572AA:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   572AB:	0226      	st         al, @(+0x2, x)
   572AC:	0517      	ld         al, @(+0x5, y)
   572AD:	E119      	ld         x, @0xFFE1 <register al>
   572AE:	0016      	ld         al, @(0x0, x)
   572AF:	0100      	**prefx    0x1
   572B0:	FFC4      	and        al, #0xFF
   572B1:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   572B2:	0326      	st         al, @(+0x3, x)
   572B3:	051B      	ld         x, @(+0x5, y)
   572B4:	0012      	ld         ah, @(0x0, x)
   572B5:	0009      	**unsigned
   572B6:	08A4      	lsr        #0x8
   572B7:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   572B8:	0422      	st         ah, @(+0x4, x)
   572B9:	1E13      	ld         ah, @(+0x1E, y)
   572BA:	0100      	**prefx    0x1
   572BB:	FFC0      	and        ah, #0xFF
   572BC:	0522      	st         ah, @(+0x5, x)
   572BD:	0614      	ld         al, #+0x6
   572BE:	11E0      	bra        +0x11 <___libaction_server_468+0x15D:0x572CF[p]>
   572BF:	FF1B      	ld         x, @(-0x1, y)
   572C0:	002B      	st         x, @(0x0, y)
   572C1:	211B      	ld         x, @(+0x21, y)
   572C2:	031A      	ld         x, @(+0x3, x)
   572C3:	012B      	st         x, @(+0x1, y)
   572C4:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   572C5:	0223      	st         ah, @(+0x2, y)
   572C6:	0327      	st         al, @(+0x3, y)
   572C7:	E415      	ld         al, @0xFFE4 <register uy>
   572C8:	0934      	add        al, #+0x9
   572C9:	0427      	st         al, @(+0x4, y)
   572CA:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   572CB:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   572CC:	0100      	**prefx    0x1
   572CD:	519C      	bsr        +0x151 <___libaction_server_473:0x5741E[p]>
   572CE:	08E0      	bra        +0x8 <___libaction_server_468+0x164:0x572D6[p]>
   572CF:	0027      	st         al, @(0x0, y)
   572D0:	0F1B      	ld         x, @(+0xF, y)
   572D1:	012B      	st         x, @(+0x1, y)
   572D2:	0917      	ld         al, @(+0x9, y)
   572D3:	0C13      	ld         ah, @(+0xC, y)
   572D4:	CE00      	**prefx    0xCE
   572D5:	D19C      	bsr        -0x322F <___libcsrmesh_88:0x540A6[p]>
   572D6:	0014      	ld         al, #+0x0
   572D7:	D80F      	leave      #-0x28

0x000572D8 <ActionSetAction>:
   572D8:	ED0B      	enter      #-0x13
   572D9:	0927      	st         al, @(+0x9, y)
   572DA:	0A23      	st         ah, @(+0xA, y)
   572DB:	6A00      	**prefx    0x6A
   572DC:	E211      	ld         ah, @0x69E2 <msg_info+0x1>
   572DD:	0A80      	cmp        ah, #+0xA
   572DE:	032C      	bcz        +0x3 <ActionSetAction+0x9:0x572E1[p]>
   572DF:	0414      	ld         al, #+0x4
   572E0:	07E0      	bra        +0x7 <ActionSetAction+0xF:0x572E7[p]>
   572E1:	0280      	cmp        ah, #+0x2
   572E2:	042C      	bcz        +0x4 <ActionSetAction+0xE:0x572E6[p]>
   572E3:	0318      	ld         x, #+0x3
   572E4:	082B      	st         x, @(+0x8, y)
   572E5:	03E0      	bra        +0x3 <ActionSetAction+0x10:0x572E8[p]>
   572E6:	0214      	ld         al, #+0x2
   572E7:	0827      	st         al, @(+0x8, y)
   572E8:	6A00      	**prefx    0x6A
   572E9:	E015      	ld         al, @0x69E0 <action_prepared>
   572EA:	0184      	cmp        al, #+0x1
   572EB:	0100      	**prefx    0x1
   572EC:	2DF0      	bne        +0x12D <ActionSetAction+0x141:0x57419[p]>
   572ED:	E099      	tst        @0xFFE0 <register ah>
   572EE:	0100      	**prefx    0x1
   572EF:	2AF4      	beq        +0x12A <ActionSetAction+0x141:0x57419[p]>
   572F0:	FF14      	ld         al, #-0x1
   572F1:	0018      	ld         x, #+0x0
   572F2:	072B      	st         x, @(+0x7, y)
   572F3:	062B      	st         x, @(+0x6, y)
   572F4:	052B      	st         x, @(+0x5, y)
   572F5:	042B      	st         x, @(+0x4, y)
   572F6:	032B      	st         x, @(+0x3, y)
   572F7:	0100      	**prefx    0x1
   572F8:	1AE0      	bra        +0x11A <ActionSetAction+0x13A:0x57412[p]>
   572F9:	CE00      	**prefx    0xCE
   572FA:	A39C      	bsr        -0x325D <___libcsrmesh_84:0x5409D[p]>
   572FB:	F925      	st         al, @0xFFF9 <(scratchpad)>
   572FC:	5010      	ld         ah, #+0x50
   572FD:	E119      	ld         x, @0xFFE1 <register al>
   572FE:	0022      	st         ah, @(0x0, x)
   572FF:	0717      	ld         al, @(+0x7, y)
   57300:	06A0      	asl        #0x6
   57301:	141B      	ld         x, @(+0x14, y)
   57302:	00B6      	or         al, @(0x0, x)
   57303:	0813      	ld         ah, @(+0x8, y)
   57304:	0283      	cmp        ah, @(+0x2, y)
   57305:	02F0      	bne        +0x2 <ActionSetAction+0x2F:0x57307[p]>
   57306:	20B4      	or         al, #+0x20
   57307:	0100      	**prefx    0x1
   57308:	FFC4      	and        al, #0xFF
   57309:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5730A:	0126      	st         al, @(+0x1, x)
   5730B:	0213      	ld         ah, @(+0x2, y)
   5730C:	0180      	cmp        ah, #+0x1
   5730D:	65F0      	bne        +0x65 <ActionSetAction+0x9A:0x57372[p]>
   5730E:	141B      	ld         x, @(+0x14, y)
   5730F:	0112      	ld         ah, @(+0x1, x)
   57310:	0100      	**prefx    0x1
   57311:	FFC0      	and        ah, #0xFF
   57312:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   57313:	0222      	st         ah, @(+0x2, x)
   57314:	6A00      	**prefx    0x6A
   57315:	E215      	ld         al, @0x69E2 <msg_info+0x1>
   57316:	0100      	**prefx    0x1
   57317:	FFC4      	and        al, #0xFF
   57318:	0326      	st         al, @(+0x3, x)
   57319:	141B      	ld         x, @(+0x14, y)
   5731A:	0212      	ld         ah, @(+0x2, x)
   5731B:	0100      	**prefx    0x1
   5731C:	FFC0      	and        ah, #0xFF
   5731D:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5731E:	0422      	st         ah, @(+0x4, x)
   5731F:	141B      	ld         x, @(+0x14, y)
   57320:	0212      	ld         ah, @(+0x2, x)
   57321:	0009      	**unsigned
   57322:	08A4      	lsr        #0x8
   57323:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   57324:	0522      	st         ah, @(+0x5, x)
   57325:	6A00      	**prefx    0x6A
   57326:	E215      	ld         al, @0x69E2 <msg_info+0x1>
   57327:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   57328:	0630      	add        ah, #+0x6
   57329:	0384      	cmp        al, #+0x3
   5732A:	0E2C      	bcz        +0xE <ActionSetAction+0x60:0x57338[p]>
   5732B:	6A00      	**prefx    0x6A
   5732C:	E119      	ld         x, @0x69E1 <msg_info>
   5732D:	0414      	ld         al, #+0x4
   5732E:	FD09      	bc2        
   5732F:	6A00      	**prefx    0x6A
   57330:	E215      	ld         al, @0x69E2 <msg_info+0x1>
   57331:	FC34      	add        al, #-0x4
   57332:	6A00      	**prefx    0x6A
   57333:	E225      	st         al, @0x69E2 <msg_info+0x1>
   57334:	0A10      	ld         ah, #+0xA
   57335:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   57336:	0100      	**prefx    0x1
   57337:	C8E0      	bra        +0xC8 <ActionSetAction+0x127:0x573FF[p]>
   57338:	6A00      	**prefx    0x6A
   57339:	E119      	ld         x, @0x69E1 <msg_info>
   5733A:	FD09      	bc2        
   5733B:	6A00      	**prefx    0x6A
   5733C:	E215      	ld         al, @0x69E2 <msg_info+0x1>
   5733D:	0018      	ld         x, #+0x0
   5733E:	6A00      	**prefx    0x6A
   5733F:	E229      	st         x, @0x69E2 <msg_info+0x1>
   57340:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   57341:	E131      	add        ah, @0xFFE1 <register al>
   57342:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   57343:	141B      	ld         x, @(+0x14, y)
   57344:	0312      	ld         ah, @(+0x3, x)
   57345:	0100      	**prefx    0x1
   57346:	FFC0      	and        ah, #0xFF
   57347:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57348:	0622      	st         ah, @(+0x6, x)
   57349:	E119      	ld         x, @0xFFE1 <register al>
   5734A:	0738      	add        x, #+0x7
   5734B:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5734C:	F935      	add        al, @0xFFF9 <(scratchpad)>
   5734D:	FA25      	st         al, @0xFFFA <(scratchpad)>
   5734E:	1AE0      	bra        +0x1A <ActionSetAction+0x90:0x57368[p]>
   5734F:	141B      	ld         x, @(+0x14, y)
   57350:	0512      	ld         ah, @(+0x5, x)
   57351:	0100      	**prefx    0x1
   57352:	FFC0      	and        ah, #0xFF
   57353:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57354:	0622      	st         ah, @(+0x6, x)
   57355:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57356:	0134      	add        al, #+0x1
   57357:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57358:	141B      	ld         x, @(+0x14, y)
   57359:	051A      	ld         x, @(+0x5, x)
   5735A:	0C2B      	st         x, @(+0xC, y)
   5735B:	141B      	ld         x, @(+0x14, y)
   5735C:	041A      	ld         x, @(+0x4, x)
   5735D:	0B2B      	st         x, @(+0xB, y)
   5735E:	0C17      	ld         al, @(+0xC, y)
   5735F:	0B13      	ld         ah, @(+0xB, y)
   57360:	0009      	**unsigned
   57361:	08A4      	lsr        #0x8
   57362:	141B      	ld         x, @(+0x14, y)
   57363:	0526      	st         al, @(+0x5, x)
   57364:	0422      	st         ah, @(+0x4, x)
   57365:	0613      	ld         ah, @(+0x6, y)
   57366:	0130      	add        ah, #+0x1
   57367:	0623      	st         ah, @(+0x6, y)
   57368:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   57369:	0134      	add        al, #+0x1
   5736A:	FA25      	st         al, @0xFFFA <(scratchpad)>
   5736B:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5736C:	0988      	cmp        x, #+0x9
   5736D:	E22C      	bcz        -0x1E <ActionSetAction+0x77:0x5734F[p]>
   5736E:	0110      	ld         ah, #+0x1
   5736F:	0323      	st         ah, @(+0x3, y)
   57370:	0100      	**prefx    0x1
   57371:	8EE0      	bra        +0x8E <ActionSetAction+0x127:0x573FF[p]>
   57372:	6A00      	**prefx    0x6A
   57373:	E215      	ld         al, @0x69E2 <msg_info+0x1>
   57374:	04F0      	bne        +0x4 <ActionSetAction+0xA0:0x57378[p]>
   57375:	0214      	ld         al, #+0x2
   57376:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57377:	0EE0      	bra        +0xE <ActionSetAction+0xAD:0x57385[p]>
   57378:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   57379:	0230      	add        ah, #+0x2
   5737A:	6A00      	**prefx    0x6A
   5737B:	E119      	ld         x, @0x69E1 <msg_info>
   5737C:	0438      	add        x, #+0x4
   5737D:	FD09      	bc2        
   5737E:	6A00      	**prefx    0x6A
   5737F:	E219      	ld         x, @0x69E2 <msg_info+0x1>
   57380:	E311      	ld         ah, @0xFFE3 <register uxl>
   57381:	0230      	add        ah, #+0x2
   57382:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   57383:	6A00      	**prefx    0x6A
   57384:	E225      	st         al, @0x69E2 <msg_info+0x1>
   57385:	039B      	tst        @(+0x3, y)
   57386:	0EF0      	bne        +0xE <ActionSetAction+0xBC:0x57394[p]>
   57387:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   57388:	F831      	add        ah, @0xFFF8 <(scratchpad)>
   57389:	141B      	ld         x, @(+0x14, y)
   5738A:	0316      	ld         al, @(+0x3, x)
   5738B:	0100      	**prefx    0x1
   5738C:	FFC4      	and        al, #0xFF
   5738D:	E019      	ld         x, @0xFFE0 <register ah>
   5738E:	0026      	st         al, @(0x0, x)
   5738F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57390:	0138      	add        x, #+0x1
   57391:	F829      	st         x, @0xFFF8 <(scratchpad)>
   57392:	0110      	ld         ah, #+0x1
   57393:	0323      	st         ah, @(+0x3, y)
   57394:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   57395:	F835      	add        al, @0xFFF8 <(scratchpad)>
   57396:	1CE0      	bra        +0x1C <ActionSetAction+0xDA:0x573B2[p]>
   57397:	141B      	ld         x, @(+0x14, y)
   57398:	0512      	ld         ah, @(+0x5, x)
   57399:	0100      	**prefx    0x1
   5739A:	FFC0      	and        ah, #0xFF
   5739B:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5739C:	0022      	st         ah, @(0x0, x)
   5739D:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5739E:	0134      	add        al, #+0x1
   5739F:	F825      	st         al, @0xFFF8 <(scratchpad)>
   573A0:	141B      	ld         x, @(+0x14, y)
   573A1:	051A      	ld         x, @(+0x5, x)
   573A2:	0E2B      	st         x, @(+0xE, y)
   573A3:	141B      	ld         x, @(+0x14, y)
   573A4:	041A      	ld         x, @(+0x4, x)
   573A5:	0D2B      	st         x, @(+0xD, y)
   573A6:	0E17      	ld         al, @(+0xE, y)
   573A7:	0D13      	ld         ah, @(+0xD, y)
   573A8:	0009      	**unsigned
   573A9:	08A4      	lsr        #0x8
   573AA:	141B      	ld         x, @(+0x14, y)
   573AB:	0526      	st         al, @(+0x5, x)
   573AC:	0422      	st         ah, @(+0x4, x)
   573AD:	0613      	ld         ah, @(+0x6, y)
   573AE:	0130      	add        ah, #+0x1
   573AF:	0623      	st         ah, @(+0x6, y)
   573B0:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   573B1:	0134      	add        al, #+0x1
   573B2:	FA25      	st         al, @0xFFFA <(scratchpad)>
   573B3:	061B      	ld         x, @(+0x6, y)
   573B4:	0388      	cmp        x, #+0x3
   573B5:	052C      	bcz        +0x5 <ActionSetAction+0xE2:0x573BA[p]>
   573B6:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   573B7:	F831      	add        ah, @0xFFF8 <(scratchpad)>
   573B8:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   573B9:	21E0      	bra        +0x21 <ActionSetAction+0x102:0x573DA[p]>
   573BA:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   573BB:	0984      	cmp        al, #+0x9
   573BC:	DB2C      	bcz        -0x25 <ActionSetAction+0xBF:0x57397[p]>
   573BD:	F9E0      	bra        -0x7 <ActionSetAction+0xDE:0x573B6[p]>
   573BE:	141B      	ld         x, @(+0x14, y)
   573BF:	0712      	ld         ah, @(+0x7, x)
   573C0:	0100      	**prefx    0x1
   573C1:	FFC0      	and        ah, #0xFF
   573C2:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   573C3:	0022      	st         ah, @(0x0, x)
   573C4:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   573C5:	0134      	add        al, #+0x1
   573C6:	F825      	st         al, @0xFFF8 <(scratchpad)>
   573C7:	141B      	ld         x, @(+0x14, y)
   573C8:	071A      	ld         x, @(+0x7, x)
   573C9:	102B      	st         x, @(+0x10, y)
   573CA:	141B      	ld         x, @(+0x14, y)
   573CB:	061A      	ld         x, @(+0x6, x)
   573CC:	0F2B      	st         x, @(+0xF, y)
   573CD:	1017      	ld         al, @(+0x10, y)
   573CE:	0F13      	ld         ah, @(+0xF, y)
   573CF:	0009      	**unsigned
   573D0:	08A4      	lsr        #0x8
   573D1:	141B      	ld         x, @(+0x14, y)
   573D2:	0726      	st         al, @(+0x7, x)
   573D3:	0622      	st         ah, @(+0x6, x)
   573D4:	0513      	ld         ah, @(+0x5, y)
   573D5:	0130      	add        ah, #+0x1
   573D6:	0523      	st         ah, @(+0x5, y)
   573D7:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   573D8:	0134      	add        al, #+0x1
   573D9:	FA25      	st         al, @0xFFFA <(scratchpad)>
   573DA:	051B      	ld         x, @(+0x5, y)
   573DB:	0288      	cmp        x, #+0x2
   573DC:	052C      	bcz        +0x5 <ActionSetAction+0x109:0x573E1[p]>
   573DD:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   573DE:	F831      	add        ah, @0xFFF8 <(scratchpad)>
   573DF:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   573E0:	19E0      	bra        +0x19 <ActionSetAction+0x121:0x573F9[p]>
   573E1:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   573E2:	0984      	cmp        al, #+0x9
   573E3:	DB2C      	bcz        -0x25 <ActionSetAction+0xE6:0x573BE[p]>
   573E4:	F9E0      	bra        -0x7 <ActionSetAction+0x105:0x573DD[p]>
   573E5:	141B      	ld         x, @(+0x14, y)
   573E6:	0812      	ld         ah, @(+0x8, x)
   573E7:	0100      	**prefx    0x1
   573E8:	FFC0      	and        ah, #0xFF
   573E9:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   573EA:	0022      	st         ah, @(0x0, x)
   573EB:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   573EC:	0134      	add        al, #+0x1
   573ED:	F825      	st         al, @0xFFF8 <(scratchpad)>
   573EE:	141B      	ld         x, @(+0x14, y)
   573EF:	0812      	ld         ah, @(+0x8, x)
   573F0:	0009      	**unsigned
   573F1:	08A4      	lsr        #0x8
   573F2:	0822      	st         ah, @(+0x8, x)
   573F3:	0413      	ld         ah, @(+0x4, y)
   573F4:	0130      	add        ah, #+0x1
   573F5:	0423      	st         ah, @(+0x4, y)
   573F6:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   573F7:	0134      	add        al, #+0x1
   573F8:	FA25      	st         al, @0xFFFA <(scratchpad)>
   573F9:	041B      	ld         x, @(+0x4, y)
   573FA:	0288      	cmp        x, #+0x2
   573FB:	04F8      	bcc        +0x4 <ActionSetAction+0x127:0x573FF[p]>
   573FC:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   573FD:	0980      	cmp        ah, #+0x9
   573FE:	E72C      	bcz        -0x19 <ActionSetAction+0x10D:0x573E5[p]>
   573FF:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   57400:	F835      	add        al, @0xFFF8 <(scratchpad)>
   57401:	141B      	ld         x, @(+0x14, y)
   57402:	0912      	ld         ah, @(+0x9, x)
   57403:	0100      	**prefx    0x1
   57404:	FFC0      	and        ah, #0xFF
   57405:	E119      	ld         x, @0xFFE1 <register al>
   57406:	0022      	st         ah, @(0x0, x)
   57407:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57408:	0134      	add        al, #+0x1
   57409:	0027      	st         al, @(0x0, y)
   5740A:	131B      	ld         x, @(+0x13, y)
   5740B:	012B      	st         x, @(+0x1, y)
   5740C:	0917      	ld         al, @(+0x9, y)
   5740D:	0A13      	ld         ah, @(+0xA, y)
   5740E:	CD00      	**prefx    0xCD
   5740F:	979C      	bsr        -0x3369 <___libcsrmesh_88:0x540A6[p]>
   57410:	0213      	ld         ah, @(+0x2, y)
   57411:	0723      	st         ah, @(+0x7, y)
   57412:	071B      	ld         x, @(+0x7, y)
   57413:	0138      	add        x, #+0x1
   57414:	022B      	st         x, @(+0x2, y)
   57415:	088B      	cmp        x, @(+0x8, y)
   57416:	FF00      	**prefx    0xFF
   57417:	E22C      	bcz        -0x11E <ActionSetAction+0x21:0x572F9[p]>
   57418:	02E0      	bra        +0x2 <ActionSetAction+0x142:0x5741A[p]>
   57419:	FF14      	ld         al, #-0x1
   5741A:	0010      	ld         ah, #+0x0
   5741B:	6A00      	**prefx    0x6A
   5741C:	E021      	st         ah, @0x69E0 <action_prepared>
   5741D:	ED0F      	leave      #-0x13

0x0005741E <___libaction_server_473>:
   5741E:	F80B      	enter      #-0x8
   5741F:	0813      	ld         ah, @(+0x8, y)
   57420:	0917      	ld         al, @(+0x9, y)
   57421:	0018      	ld         x, #+0x0
   57422:	022B      	st         x, @(+0x2, y)
   57423:	FF34      	add        al, #-0x1
   57424:	E019      	ld         x, @0xFFE0 <register ah>
   57425:	E139      	add        x, @0xFFE1 <register al>
   57426:	001A      	ld         x, @(0x0, x)
   57427:	052B      	st         x, @(+0x5, y)
   57428:	E019      	ld         x, @0xFFE0 <register ah>
   57429:	0012      	ld         ah, @(0x0, x)
   5742A:	0323      	st         ah, @(+0x3, y)
   5742B:	E411      	ld         ah, @0xFFE4 <register uy>
   5742C:	0330      	add        ah, #+0x3
   5742D:	0C1B      	ld         x, @(+0xC, y)
   5742E:	0922      	st         ah, @(+0x9, x)
   5742F:	0027      	st         al, @(0x0, y)
   57430:	E415      	ld         al, @0xFFE4 <register uy>
   57431:	0234      	add        al, #+0x2
   57432:	0127      	st         al, @(+0x1, y)
   57433:	5614      	ld         al, #+0x56
   57434:	E311      	ld         ah, @0xFFE3 <register uxl>
   57435:	6D00      	**prefx    0x6D
   57436:	8A19      	ld         x, @0x6C8A <g_action_model_data>
   57437:	FF2B      	st         x, @(-0x1, y)
   57438:	FF0E      	ld         xh, @(-0x1, y)
   57439:	6D00      	**prefx    0x6D
   5743A:	8B9D      	bsr        @0x6C8B <g_action_model_data+0x1>
   5743B:	029B      	tst        @(+0x2, y)
   5743C:	21F4      	beq        +0x21 <___libaction_server_473+0x3F:0x5745D[p]>
   5743D:	6A00      	**prefx    0x6A
   5743E:	E118      	ld         x, #+0x69E1
   5743F:	0010      	ld         ah, #+0x0
   57440:	0222      	st         ah, @(+0x2, x)
   57441:	6A00      	**prefx    0x6A
   57442:	E414      	ld         al, #+0x69E4
   57443:	6A00      	**prefx    0x6A
   57444:	E125      	st         al, @0x69E1 <msg_info>
   57445:	021B      	ld         x, @(+0x2, y)
   57446:	1516      	ld         al, @(+0x15, x)
   57447:	6A00      	**prefx    0x6A
   57448:	E225      	st         al, @0x69E2 <msg_info+0x1>
   57449:	0A38      	add        x, #+0xA
   5744A:	6A00      	**prefx    0x6A
   5744B:	E410      	ld         ah, #+0x69E4
   5744C:	FD09      	bc2        
   5744D:	0118      	ld         x, #+0x1
   5744E:	6A00      	**prefx    0x6A
   5744F:	E029      	st         x, @0x69E0 <action_prepared>
   57450:	021B      	ld         x, @(+0x2, y)
   57451:	0513      	ld         ah, @(+0x5, y)
   57452:	0922      	st         ah, @(+0x9, x)
   57453:	0C1B      	ld         x, @(+0xC, y)
   57454:	0312      	ld         ah, @(+0x3, x)
   57455:	0616      	ld         al, @(+0x6, x)
   57456:	0027      	st         al, @(0x0, y)
   57457:	021B      	ld         x, @(+0x2, y)
   57458:	012B      	st         x, @(+0x1, y)
   57459:	0C1B      	ld         x, @(+0xC, y)
   5745A:	0016      	ld         al, @(0x0, x)
   5745B:	FE00      	**prefx    0xFE
   5745C:	7C9C      	bsr        -0x184 <ActionSetAction:0x572D8[p]>
   5745D:	F80F      	leave      #-0x8

0x0005745E <ActionSendMessage>:
   5745E:	FA0B      	enter      #-0x6
   5745F:	0227      	st         al, @(+0x2, y)
   57460:	0323      	st         ah, @(+0x3, y)
   57461:	CC00      	**prefx    0xCC
   57462:	3B9C      	bsr        -0x33C5 <___libcsrmesh_84:0x5409D[p]>
   57463:	E111      	ld         ah, @0xFFE1 <register al>
   57464:	0817      	ld         al, @(+0x8, y)
   57465:	071B      	ld         x, @(+0x7, y)
   57466:	FD09      	bc2        
   57467:	0817      	ld         al, @(+0x8, y)
   57468:	0027      	st         al, @(0x0, y)
   57469:	0617      	ld         al, @(+0x6, y)
   5746A:	0127      	st         al, @(+0x1, y)
   5746B:	0217      	ld         al, @(+0x2, y)
   5746C:	0313      	ld         ah, @(+0x3, y)
   5746D:	CC00      	**prefx    0xCC
   5746E:	389C      	bsr        -0x33C8 <___libcsrmesh_88:0x540A6[p]>
   5746F:	FA0F      	leave      #-0x6

0x00057470 <WatchdogMessage>:
   57470:	FA0B      	enter      #-0x6
   57471:	0227      	st         al, @(+0x2, y)
   57472:	0323      	st         ah, @(+0x3, y)
   57473:	CC00      	**prefx    0xCC
   57474:	299C      	bsr        -0x33D7 <___libcsrmesh_84:0x5409D[p]>
   57475:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57476:	0014      	ld         al, #+0x0
   57477:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57478:	0026      	st         al, @(0x0, x)
   57479:	071B      	ld         x, @(+0x7, y)
   5747A:	0016      	ld         al, @(0x0, x)
   5747B:	0100      	**prefx    0x1
   5747C:	FFC4      	and        al, #0xFF
   5747D:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5747E:	0126      	st         al, @(+0x1, x)
   5747F:	071B      	ld         x, @(+0x7, y)
   57480:	0A16      	ld         al, @(+0xA, x)
   57481:	0984      	cmp        al, #+0x9
   57482:	032C      	bcz        +0x3 <WatchdogMessage+0x15:0x57485[p]>
   57483:	FF14      	ld         al, #-0x1
   57484:	1AE0      	bra        +0x1A <WatchdogMessage+0x2E:0x5749E[p]>
   57485:	0210      	ld         ah, #+0x2
   57486:	0CE0      	bra        +0xC <WatchdogMessage+0x22:0x57492[p]>
   57487:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57488:	E035      	add        al, @0xFFE0 <register ah>
   57489:	FA25      	st         al, @0xFFFA <(scratchpad)>
   5748A:	071B      	ld         x, @(+0x7, y)
   5748B:	E039      	add        x, @0xFFE0 <register ah>
   5748C:	FF16      	ld         al, @(-0x1, x)
   5748D:	0100      	**prefx    0x1
   5748E:	FFC4      	and        al, #0xFF
   5748F:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57490:	0026      	st         al, @(0x0, x)
   57491:	0130      	add        ah, #+0x1
   57492:	E015      	ld         al, @0xFFE0 <register ah>
   57493:	FE34      	add        al, #-0x2
   57494:	071B      	ld         x, @(+0x7, y)
   57495:	0A86      	cmp        al, @(+0xA, x)
   57496:	F1FC      	bcs        -0xF <WatchdogMessage+0x17:0x57487[p]>
   57497:	0023      	st         ah, @(0x0, y)
   57498:	0617      	ld         al, @(+0x6, y)
   57499:	0127      	st         al, @(+0x1, y)
   5749A:	0217      	ld         al, @(+0x2, y)
   5749B:	0313      	ld         ah, @(+0x3, y)
   5749C:	CC00      	**prefx    0xCC
   5749D:	099C      	bsr        -0x33F7 <___libcsrmesh_88:0x540A6[p]>
   5749E:	FA0F      	leave      #-0x6

0x0005749F <WatchdogModelInit>:
   5749F:	FE0B      	enter      #-0x2
   574A0:	6D00      	**prefx    0x6D
   574A1:	9818      	ld         x, #+0x6C98
   574A2:	0026      	st         al, @(0x0, x)
   574A3:	0014      	ld         al, #+0x0
   574A4:	FF26      	st         al, @(-0x1, x)
   574A5:	7500      	**prefx    0x75
   574A6:	B914      	ld         al, #+0x74B9
   574A7:	FE26      	st         al, @(-0x2, x)
   574A8:	0514      	ld         al, #+0x5
   574A9:	FD26      	st         al, @(-0x3, x)
   574AA:	0122      	st         ah, @(+0x1, x)
   574AB:	0217      	ld         al, @(+0x2, y)
   574AC:	0226      	st         al, @(+0x2, x)
   574AD:	0417      	ld         al, @(+0x4, y)
   574AE:	6D00      	**prefx    0x6D
   574AF:	9425      	st         al, @0x6C94 <g_watchdog_model_data+0x1>
   574B0:	0317      	ld         al, @(+0x3, y)
   574B1:	6D00      	**prefx    0x6D
   574B2:	9325      	st         al, @0x6C93 <g_watchdog_model_data>
   574B3:	FD38      	add        x, #-0x3
   574B4:	E315      	ld         al, @0xFFE3 <register uxl>
   574B5:	001B      	ld         x, @(0x0, y)
   574B6:	023C      	add        y, #+0x2
   574B7:	CC00      	**prefx    0xCC
   574B8:	85E0      	bra        -0x347B <___libcsrmesh_85:0x5403D[p]>

0x000574B9 <___libwatchdog_server_467>:
   574B9:	E10B      	enter      #-0x1F
   574BA:	1C27      	st         al, @(+0x1C, y)
   574BB:	E415      	ld         al, @0xFFE4 <register uy>
   574BC:	0C34      	add        al, #+0xC
   574BD:	0527      	st         al, @(+0x5, y)
   574BE:	F734      	add        al, #-0x9
   574BF:	CC00      	**prefx    0xCC
   574C0:	899C      	bsr        -0x3477 <CSRmeshGetDefaultTTL:0x54049[p]>
   574C1:	1C1B      	ld         x, @(+0x1C, y)
   574C2:	001A      	ld         x, @(0x0, x)
   574C3:	F829      	st         x, @0xFFF8 <(scratchpad)>
   574C4:	0012      	ld         ah, @(0x0, x)
   574C5:	0116      	ld         al, @(+0x1, x)
   574C6:	0827      	st         al, @(+0x8, y)
   574C7:	0723      	st         ah, @(+0x7, y)
   574C8:	021A      	ld         x, @(+0x2, x)
   574C9:	092B      	st         x, @(+0x9, y)
   574CA:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   574CB:	031A      	ld         x, @(+0x3, x)
   574CC:	0A2B      	st         x, @(+0xA, y)
   574CD:	1C1B      	ld         x, @(+0x1C, y)
   574CE:	011A      	ld         x, @(+0x1, x)
   574CF:	062B      	st         x, @(+0x6, y)
   574D0:	1C1B      	ld         x, @(+0x1C, y)
   574D1:	041A      	ld         x, @(+0x4, x)
   574D2:	0B2B      	st         x, @(+0xB, y)
   574D3:	1C1B      	ld         x, @(+0x1C, y)
   574D4:	051A      	ld         x, @(+0x5, x)
   574D5:	0D2B      	st         x, @(+0xD, y)
   574D6:	1C1B      	ld         x, @(+0x1C, y)
   574D7:	071A      	ld         x, @(+0x7, x)
   574D8:	0E2B      	st         x, @(+0xE, y)
   574D9:	1C1B      	ld         x, @(+0x1C, y)
   574DA:	021A      	ld         x, @(+0x2, x)
   574DB:	F929      	st         x, @0xFFF9 <(scratchpad)>
   574DC:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   574DD:	0416      	ld         al, @(+0x4, x)
   574DE:	06F4      	beq        +0x6 <___libwatchdog_server_467+0x2B:0x574E4[p]>
   574DF:	0184      	cmp        al, #+0x1
   574E0:	62F4      	beq        +0x62 <___libwatchdog_server_467+0x89:0x57542[p]>
   574E1:	FF14      	ld         al, #-0x1
   574E2:	0100      	**prefx    0x1
   574E3:	BEE0      	bra        +0xBE <___libwatchdog_server_467+0xE8:0x575A1[p]>
   574E4:	0014      	ld         al, #+0x0
   574E5:	0227      	st         al, @(+0x2, y)
   574E6:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   574E7:	001A      	ld         x, @(0x0, x)
   574E8:	102B      	st         x, @(+0x10, y)
   574E9:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   574EA:	0130      	add        ah, #+0x1
   574EB:	1C1B      	ld         x, @(+0x1C, y)
   574EC:	0222      	st         ah, @(+0x2, x)
   574ED:	1A27      	st         al, @(+0x1A, y)
   574EE:	0316      	ld         al, @(+0x3, x)
   574EF:	0184      	cmp        al, #+0x1
   574F0:	192C      	bcz        +0x19 <___libwatchdog_server_467+0x50:0x57509[p]>
   574F1:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   574F2:	E059      	sub        x, @0xFFE0 <register ah>
   574F3:	E335      	add        al, @0xFFE3 <register uxl>
   574F4:	F825      	st         al, @0xFFF8 <(scratchpad)>
   574F5:	1A27      	st         al, @(+0x1A, y)
   574F6:	E411      	ld         ah, @0xFFE4 <register uy>
   574F7:	1030      	add        ah, #+0x10
   574F8:	0CE0      	bra        +0xC <___libwatchdog_server_467+0x4B:0x57504[p]>
   574F9:	1C1B      	ld         x, @(+0x1C, y)
   574FA:	021A      	ld         x, @(+0x2, x)
   574FB:	F929      	st         x, @0xFFF9 <(scratchpad)>
   574FC:	0016      	ld         al, @(0x0, x)
   574FD:	E019      	ld         x, @0xFFE0 <register ah>
   574FE:	0126      	st         al, @(+0x1, x)
   574FF:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   57500:	0134      	add        al, #+0x1
   57501:	1C1B      	ld         x, @(+0x1C, y)
   57502:	0226      	st         al, @(+0x2, x)
   57503:	0130      	add        ah, #+0x1
   57504:	E415      	ld         al, @0xFFE4 <register uy>
   57505:	1034      	add        al, #+0x10
   57506:	F835      	add        al, @0xFFF8 <(scratchpad)>
   57507:	E181      	cmp        ah, @0xFFE1 <register al>
   57508:	F1F0      	bne        -0xF <___libwatchdog_server_467+0x40:0x574F9[p]>
   57509:	E419      	ld         x, @0xFFE4 <register uy>
   5750A:	1038      	add        x, #+0x10
   5750B:	0F2B      	st         x, @(+0xF, y)
   5750C:	1C1B      	ld         x, @(+0x1C, y)
   5750D:	031A      	ld         x, @(+0x3, x)
   5750E:	002B      	st         x, @(0x0, y)
   5750F:	E415      	ld         al, @0xFFE4 <register uy>
   57510:	0234      	add        al, #+0x2
   57511:	0127      	st         al, @(+0x1, y)
   57512:	0014      	ld         al, #+0x0
   57513:	E411      	ld         ah, @0xFFE4 <register uy>
   57514:	0630      	add        ah, #+0x6
   57515:	6D00      	**prefx    0x6D
   57516:	9319      	ld         x, @0x6C93 <g_watchdog_model_data>
   57517:	FF2B      	st         x, @(-0x1, y)
   57518:	FF0E      	ld         xh, @(-0x1, y)
   57519:	6D00      	**prefx    0x6D
   5751A:	949D      	bsr        @0x6C94 <g_watchdog_model_data+0x1>
   5751B:	029B      	tst        @(+0x2, y)
   5751C:	0100      	**prefx    0x1
   5751D:	83F4      	beq        +0x83 <___libwatchdog_server_467+0xE7:0x575A0[p]>
   5751E:	CB00      	**prefx    0xCB
   5751F:	7E9C      	bsr        -0x3482 <___libcsrmesh_84:0x5409D[p]>
   57520:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57521:	0014      	ld         al, #+0x0
   57522:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57523:	0026      	st         al, @(0x0, x)
   57524:	0217      	ld         al, @(+0x2, y)
   57525:	E119      	ld         x, @0xFFE1 <register al>
   57526:	0016      	ld         al, @(0x0, x)
   57527:	0100      	**prefx    0x1
   57528:	FFC4      	and        al, #0xFF
   57529:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5752A:	0126      	st         al, @(+0x1, x)
   5752B:	0210      	ld         ah, #+0x2
   5752C:	0CE0      	bra        +0xC <___libwatchdog_server_467+0x7F:0x57538[p]>
   5752D:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5752E:	E035      	add        al, @0xFFE0 <register ah>
   5752F:	FB25      	st         al, @0xFFFB <(scratchpad)>
   57530:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57531:	F939      	add        x, @0xFFF9 <(scratchpad)>
   57532:	0116      	ld         al, @(+0x1, x)
   57533:	0100      	**prefx    0x1
   57534:	FFC4      	and        al, #0xFF
   57535:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   57536:	0026      	st         al, @(0x0, x)
   57537:	0130      	add        ah, #+0x1
   57538:	E019      	ld         x, @0xFFE0 <register ah>
   57539:	FE38      	add        x, #-0x2
   5753A:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5753B:	0217      	ld         al, @(+0x2, y)
   5753C:	FA25      	st         al, @0xFFFA <(scratchpad)>
   5753D:	E315      	ld         al, @0xFFE3 <register uxl>
   5753E:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5753F:	0A86      	cmp        al, @(+0xA, x)
   57540:	EDFC      	bcs        -0x13 <___libwatchdog_server_467+0x74:0x5752D[p]>
   57541:	58E0      	bra        +0x58 <___libwatchdog_server_467+0xE0:0x57599[p]>
   57542:	0018      	ld         x, #+0x0
   57543:	022B      	st         x, @(+0x2, y)
   57544:	1C1B      	ld         x, @(+0x1C, y)
   57545:	031A      	ld         x, @(+0x3, x)
   57546:	E315      	ld         al, @0xFFE3 <register uxl>
   57547:	FF34      	add        al, #-0x1
   57548:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57549:	1C1B      	ld         x, @(+0x1C, y)
   5754A:	0326      	st         al, @(+0x3, x)
   5754B:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5754C:	E139      	add        x, @0xFFE1 <register al>
   5754D:	001A      	ld         x, @(0x0, x)
   5754E:	1B2B      	st         x, @(+0x1B, y)
   5754F:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   57550:	0116      	ld         al, @(+0x1, x)
   57551:	08A0      	asl        #0x8
   57552:	0036      	add        al, @(0x0, x)
   57553:	1027      	st         al, @(+0x10, y)
   57554:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   57555:	0234      	add        al, #+0x2
   57556:	1C1B      	ld         x, @(+0x1C, y)
   57557:	0226      	st         al, @(+0x2, x)
   57558:	E119      	ld         x, @0xFFE1 <register al>
   57559:	0116      	ld         al, @(+0x1, x)
   5755A:	08A0      	asl        #0x8
   5755B:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5755C:	0236      	add        al, @(+0x2, x)
   5755D:	1127      	st         al, @(+0x11, y)
   5755E:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5755F:	0434      	add        al, #+0x4
   57560:	1C1B      	ld         x, @(+0x1C, y)
   57561:	0226      	st         al, @(+0x2, x)
   57562:	E419      	ld         x, @0xFFE4 <register uy>
   57563:	1038      	add        x, #+0x10
   57564:	0F2B      	st         x, @(+0xF, y)
   57565:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57566:	0027      	st         al, @(0x0, y)
   57567:	F238      	add        x, #-0xE
   57568:	012B      	st         x, @(+0x1, y)
   57569:	0114      	ld         al, #+0x1
   5756A:	E411      	ld         ah, @0xFFE4 <register uy>
   5756B:	0630      	add        ah, #+0x6
   5756C:	6D00      	**prefx    0x6D
   5756D:	9319      	ld         x, @0x6C93 <g_watchdog_model_data>
   5756E:	FF2B      	st         x, @(-0x1, y)
   5756F:	FF0E      	ld         xh, @(-0x1, y)
   57570:	6D00      	**prefx    0x6D
   57571:	949D      	bsr        @0x6C94 <g_watchdog_model_data+0x1>
   57572:	029B      	tst        @(+0x2, y)
   57573:	2DF4      	beq        +0x2D <___libwatchdog_server_467+0xE7:0x575A0[p]>
   57574:	CB00      	**prefx    0xCB
   57575:	289C      	bsr        -0x34D8 <___libcsrmesh_84:0x5409D[p]>
   57576:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57577:	0214      	ld         al, #+0x2
   57578:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57579:	0026      	st         al, @(0x0, x)
   5757A:	0217      	ld         al, @(+0x2, y)
   5757B:	E119      	ld         x, @0xFFE1 <register al>
   5757C:	0016      	ld         al, @(0x0, x)
   5757D:	0100      	**prefx    0x1
   5757E:	FFC4      	and        al, #0xFF
   5757F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57580:	0126      	st         al, @(+0x1, x)
   57581:	021B      	ld         x, @(+0x2, y)
   57582:	0012      	ld         ah, @(0x0, x)
   57583:	0009      	**unsigned
   57584:	08A4      	lsr        #0x8
   57585:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57586:	0222      	st         ah, @(+0x2, x)
   57587:	0217      	ld         al, @(+0x2, y)
   57588:	E119      	ld         x, @0xFFE1 <register al>
   57589:	0116      	ld         al, @(+0x1, x)
   5758A:	0100      	**prefx    0x1
   5758B:	FFC4      	and        al, #0xFF
   5758C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5758D:	0326      	st         al, @(+0x3, x)
   5758E:	021B      	ld         x, @(+0x2, y)
   5758F:	0112      	ld         ah, @(+0x1, x)
   57590:	0009      	**unsigned
   57591:	08A4      	lsr        #0x8
   57592:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57593:	0422      	st         ah, @(+0x4, x)
   57594:	1B17      	ld         al, @(+0x1B, y)
   57595:	0100      	**prefx    0x1
   57596:	FFC4      	and        al, #0xFF
   57597:	0526      	st         al, @(+0x5, x)
   57598:	0610      	ld         ah, #+0x6
   57599:	0023      	st         ah, @(0x0, y)
   5759A:	0C1B      	ld         x, @(+0xC, y)
   5759B:	012B      	st         x, @(+0x1, y)
   5759C:	0617      	ld         al, @(+0x6, y)
   5759D:	0913      	ld         ah, @(+0x9, y)
   5759E:	CB00      	**prefx    0xCB
   5759F:	079C      	bsr        -0x34F9 <___libcsrmesh_88:0x540A6[p]>
   575A0:	0014      	ld         al, #+0x0
   575A1:	E10F      	leave      #-0x1F

0x000575A2 <PingModelInit>:
   575A2:	FE0B      	enter      #-0x2
   575A3:	6D00      	**prefx    0x6D
   575A4:	A118      	ld         x, #+0x6CA1
   575A5:	0026      	st         al, @(0x0, x)
   575A6:	0C14      	ld         al, #+0xC
   575A7:	FF26      	st         al, @(-0x1, x)
   575A8:	7600      	**prefx    0x76
   575A9:	BC14      	ld         al, #+0x75BC
   575AA:	FE26      	st         al, @(-0x2, x)
   575AB:	0514      	ld         al, #+0x5
   575AC:	FD26      	st         al, @(-0x3, x)
   575AD:	0122      	st         ah, @(+0x1, x)
   575AE:	0217      	ld         al, @(+0x2, y)
   575AF:	0226      	st         al, @(+0x2, x)
   575B0:	0417      	ld         al, @(+0x4, y)
   575B1:	6D00      	**prefx    0x6D
   575B2:	9D25      	st         al, @0x6C9D <g_ping_model_data+0x1>
   575B3:	0317      	ld         al, @(+0x3, y)
   575B4:	6D00      	**prefx    0x6D
   575B5:	9C25      	st         al, @0x6C9C <g_ping_model_data>
   575B6:	FD38      	add        x, #-0x3
   575B7:	E315      	ld         al, @0xFFE3 <register uxl>
   575B8:	001B      	ld         x, @(0x0, y)
   575B9:	023C      	add        y, #+0x2
   575BA:	CB00      	**prefx    0xCB
   575BB:	82E0      	bra        -0x357E <___libcsrmesh_85:0x5403D[p]>

0x000575BC <___libping_server_466>:
   575BC:	EB0B      	enter      #-0x15
   575BD:	1227      	st         al, @(+0x12, y)
   575BE:	E415      	ld         al, @0xFFE4 <register uy>
   575BF:	0E34      	add        al, #+0xE
   575C0:	0727      	st         al, @(+0x7, y)
   575C1:	F734      	add        al, #-0x9
   575C2:	CB00      	**prefx    0xCB
   575C3:	869C      	bsr        -0x357A <CSRmeshGetDefaultTTL:0x54049[p]>
   575C4:	121B      	ld         x, @(+0x12, y)
   575C5:	001A      	ld         x, @(0x0, x)
   575C6:	FB29      	st         x, @0xFFFB <(scratchpad)>
   575C7:	0012      	ld         ah, @(0x0, x)
   575C8:	0116      	ld         al, @(+0x1, x)
   575C9:	0A27      	st         al, @(+0xA, y)
   575CA:	0923      	st         ah, @(+0x9, y)
   575CB:	021A      	ld         x, @(+0x2, x)
   575CC:	0B2B      	st         x, @(+0xB, y)
   575CD:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   575CE:	031A      	ld         x, @(+0x3, x)
   575CF:	0C2B      	st         x, @(+0xC, y)
   575D0:	121B      	ld         x, @(+0x12, y)
   575D1:	011A      	ld         x, @(+0x1, x)
   575D2:	FA29      	st         x, @0xFFFA <(scratchpad)>
   575D3:	082B      	st         x, @(+0x8, y)
   575D4:	121B      	ld         x, @(+0x12, y)
   575D5:	041A      	ld         x, @(+0x4, x)
   575D6:	F929      	st         x, @0xFFF9 <(scratchpad)>
   575D7:	0D2B      	st         x, @(+0xD, y)
   575D8:	121B      	ld         x, @(+0x12, y)
   575D9:	051A      	ld         x, @(+0x5, x)
   575DA:	F829      	st         x, @0xFFF8 <(scratchpad)>
   575DB:	0F2B      	st         x, @(+0xF, y)
   575DC:	121B      	ld         x, @(+0x12, y)
   575DD:	071A      	ld         x, @(+0x7, x)
   575DE:	102B      	st         x, @(+0x10, y)
   575DF:	121B      	ld         x, @(+0x12, y)
   575E0:	0212      	ld         ah, @(+0x2, x)
   575E1:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   575E2:	0416      	ld         al, @(+0x4, x)
   575E3:	8200      	**prefx    0x82
   575E4:	0084      	cmp        al, #-0x7E00
   575E5:	03F4      	beq        +0x3 <___libping_server_466+0x2C:0x575E8[p]>
   575E6:	FF14      	ld         al, #-0x1
   575E7:	10E0      	bra        +0x10 <___libping_server_466+0x3B:0x575F7[p]>
   575E8:	0023      	st         ah, @(0x0, y)
   575E9:	121B      	ld         x, @(+0x12, y)
   575EA:	031A      	ld         x, @(+0x3, x)
   575EB:	012B      	st         x, @(+0x1, y)
   575EC:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   575ED:	0227      	st         al, @(+0x2, y)
   575EE:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   575EF:	032B      	st         x, @(+0x3, y)
   575F0:	E415      	ld         al, @0xFFE4 <register uy>
   575F1:	0834      	add        al, #+0x8
   575F2:	0427      	st         al, @(+0x4, y)
   575F3:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   575F4:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   575F5:	039C      	bsr        +0x3 <___libping_server_468:0x575F8[p]>
   575F6:	0014      	ld         al, #+0x0
   575F7:	EB0F      	leave      #-0x15

0x000575F8 <___libping_server_468>:
   575F8:	F60B      	enter      #-0xA
   575F9:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   575FA:	0A13      	ld         ah, @(+0xA, y)
   575FB:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   575FC:	0014      	ld         al, #+0x0
   575FD:	0227      	st         al, @(+0x2, y)
   575FE:	E419      	ld         x, @0xFFE4 <register uy>
   575FF:	0338      	add        x, #+0x3
   57600:	F929      	st         x, @0xFFF9 <(scratchpad)>
   57601:	E019      	ld         x, @0xFFE0 <register ah>
   57602:	0016      	ld         al, @(0x0, x)
   57603:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   57604:	0026      	st         al, @(0x0, x)
   57605:	0130      	add        ah, #+0x1
   57606:	0138      	add        x, #+0x1
   57607:	F929      	st         x, @0xFFF9 <(scratchpad)>
   57608:	E415      	ld         al, @0xFFE4 <register uy>
   57609:	0734      	add        al, #+0x7
   5760A:	E189      	cmp        x, @0xFFE1 <register al>
   5760B:	F6F0      	bne        -0xA <___libping_server_468+0x9:0x57601[p]>
   5760C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5760D:	0416      	ld         al, @(+0x4, x)
   5760E:	0727      	st         al, @(+0x7, y)
   5760F:	E411      	ld         ah, @0xFFE4 <register uy>
   57610:	0330      	add        ah, #+0x3
   57611:	0E1B      	ld         x, @(+0xE, y)
   57612:	0922      	st         ah, @(+0x9, x)
   57613:	0626      	st         al, @(+0x6, x)
   57614:	6D00      	**prefx    0x6D
   57615:	9D15      	ld         al, @0x6C9D <g_ping_model_data+0x1>
   57616:	F925      	st         al, @0xFFF9 <(scratchpad)>
   57617:	6D00      	**prefx    0x6D
   57618:	9C19      	ld         x, @0x6C9C <g_ping_model_data>
   57619:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5761A:	E315      	ld         al, @0xFFE3 <register uxl>
   5761B:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   5761C:	0FF4      	beq        +0xF <___libping_server_468+0x33:0x5762B[p]>
   5761D:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   5761E:	0416      	ld         al, @(+0x4, x)
   5761F:	0B13      	ld         ah, @(+0xB, y)
   57620:	0023      	st         ah, @(0x0, y)
   57621:	E419      	ld         x, @0xFFE4 <register uy>
   57622:	0238      	add        x, #+0x2
   57623:	012B      	st         x, @(+0x1, y)
   57624:	0E13      	ld         ah, @(+0xE, y)
   57625:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   57626:	FE2B      	st         x, @(-0x2, y)
   57627:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57628:	FF2B      	st         x, @(-0x1, y)
   57629:	FF0E      	ld         xh, @(-0x1, y)
   5762A:	FE9F      	bsr        @(-0x2, y)
   5762B:	CA00      	**prefx    0xCA
   5762C:	719C      	bsr        -0x358F <___libcsrmesh_84:0x5409D[p]>
   5762D:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5762E:	029B      	tst        @(+0x2, y)
   5762F:	15F4      	beq        +0x15 <___libping_server_468+0x4C:0x57644[p]>
   57630:	8200      	**prefx    0x82
   57631:	0110      	ld         ah, #-0x7DFF
   57632:	E119      	ld         x, @0xFFE1 <register al>
   57633:	0022      	st         ah, @(0x0, x)
   57634:	E111      	ld         ah, @0xFFE1 <register al>
   57635:	0130      	add        ah, #+0x1
   57636:	021B      	ld         x, @(+0x2, y)
   57637:	0414      	ld         al, #+0x4
   57638:	FD09      	bc2        
   57639:	0217      	ld         al, @(+0x2, y)
   5763A:	E119      	ld         x, @0xFFE1 <register al>
   5763B:	0416      	ld         al, @(+0x4, x)
   5763C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5763D:	0526      	st         al, @(+0x5, x)
   5763E:	0217      	ld         al, @(+0x2, y)
   5763F:	E119      	ld         x, @0xFFE1 <register al>
   57640:	0516      	ld         al, @(+0x5, x)
   57641:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57642:	0626      	st         al, @(+0x6, x)
   57643:	12E0      	bra        +0x12 <___libping_server_468+0x5D:0x57655[p]>
   57644:	0100      	**prefx    0x1
   57645:	8210      	ld         ah, #+0x82
   57646:	E119      	ld         x, @0xFFE1 <register al>
   57647:	0022      	st         ah, @(0x0, x)
   57648:	0114      	ld         al, #+0x1
   57649:	0126      	st         al, @(+0x1, x)
   5764A:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5764B:	0230      	add        ah, #+0x2
   5764C:	0414      	ld         al, #+0x4
   5764D:	E419      	ld         x, @0xFFE4 <register uy>
   5764E:	0338      	add        x, #+0x3
   5764F:	FD09      	bc2        
   57650:	0C13      	ld         ah, @(+0xC, y)
   57651:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57652:	0622      	st         ah, @(+0x6, x)
   57653:	0D17      	ld         al, @(+0xD, y)
   57654:	0726      	st         al, @(+0x7, x)
   57655:	0E1B      	ld         x, @(+0xE, y)
   57656:	0312      	ld         ah, @(+0x3, x)
   57657:	0814      	ld         al, #+0x8
   57658:	0027      	st         al, @(0x0, y)
   57659:	061A      	ld         x, @(+0x6, x)
   5765A:	012B      	st         x, @(+0x1, y)
   5765B:	0E1B      	ld         x, @(+0xE, y)
   5765C:	0016      	ld         al, @(0x0, x)
   5765D:	CA00      	**prefx    0xCA
   5765E:	489C      	bsr        -0x35B8 <___libcsrmesh_88:0x540A6[p]>
   5765F:	F60F      	leave      #-0xA

0x00057660 <AttentionModelInit>:
   57660:	FE0B      	enter      #-0x2
   57661:	6D00      	**prefx    0x6D
   57662:	AA18      	ld         x, #+0x6CAA
   57663:	0026      	st         al, @(0x0, x)
   57664:	0E14      	ld         al, #+0xE
   57665:	FF26      	st         al, @(-0x1, x)
   57666:	7600      	**prefx    0x76
   57667:	7A14      	ld         al, #+0x767A
   57668:	FE26      	st         al, @(-0x2, x)
   57669:	0514      	ld         al, #+0x5
   5766A:	FD26      	st         al, @(-0x3, x)
   5766B:	0122      	st         ah, @(+0x1, x)
   5766C:	0217      	ld         al, @(+0x2, y)
   5766D:	0226      	st         al, @(+0x2, x)
   5766E:	0417      	ld         al, @(+0x4, y)
   5766F:	6D00      	**prefx    0x6D
   57670:	A625      	st         al, @0x6CA6 <g_attention_model_data+0x1>
   57671:	0317      	ld         al, @(+0x3, y)
   57672:	6D00      	**prefx    0x6D
   57673:	A525      	st         al, @0x6CA5 <g_attention_model_data>
   57674:	FD38      	add        x, #-0x3
   57675:	E315      	ld         al, @0xFFE3 <register uxl>
   57676:	001B      	ld         x, @(0x0, y)
   57677:	023C      	add        y, #+0x2
   57678:	CA00      	**prefx    0xCA
   57679:	C4E0      	bra        -0x363C <___libcsrmesh_85:0x5403D[p]>

0x0005767A <___libattention_server_466>:
   5767A:	E90B      	enter      #-0x17
   5767B:	1427      	st         al, @(+0x14, y)
   5767C:	E415      	ld         al, @0xFFE4 <register uy>
   5767D:	0F34      	add        al, #+0xF
   5767E:	0527      	st         al, @(+0x5, y)
   5767F:	F434      	add        al, #-0xC
   57680:	CA00      	**prefx    0xCA
   57681:	C89C      	bsr        -0x3638 <CSRmeshGetDefaultTTL:0x54049[p]>
   57682:	141B      	ld         x, @(+0x14, y)
   57683:	001A      	ld         x, @(0x0, x)
   57684:	F829      	st         x, @0xFFF8 <(scratchpad)>
   57685:	0012      	ld         ah, @(0x0, x)
   57686:	0116      	ld         al, @(+0x1, x)
   57687:	0B27      	st         al, @(+0xB, y)
   57688:	0A23      	st         ah, @(+0xA, y)
   57689:	021A      	ld         x, @(+0x2, x)
   5768A:	0C2B      	st         x, @(+0xC, y)
   5768B:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5768C:	031A      	ld         x, @(+0x3, x)
   5768D:	0D2B      	st         x, @(+0xD, y)
   5768E:	141B      	ld         x, @(+0x14, y)
   5768F:	011A      	ld         x, @(+0x1, x)
   57690:	092B      	st         x, @(+0x9, y)
   57691:	141B      	ld         x, @(+0x14, y)
   57692:	041A      	ld         x, @(+0x4, x)
   57693:	0E2B      	st         x, @(+0xE, y)
   57694:	141B      	ld         x, @(+0x14, y)
   57695:	051A      	ld         x, @(+0x5, x)
   57696:	102B      	st         x, @(+0x10, y)
   57697:	141B      	ld         x, @(+0x14, y)
   57698:	071A      	ld         x, @(+0x7, x)
   57699:	112B      	st         x, @(+0x11, y)
   5769A:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5769B:	041A      	ld         x, @(+0x4, x)
   5769C:	FA29      	st         x, @0xFFFA <(scratchpad)>
   5769D:	8400      	**prefx    0x84
   5769E:	0088      	cmp        x, #-0x7C00
   5769F:	03F4      	beq        +0x3 <___libattention_server_466+0x28:0x576A2[p]>
   576A0:	FF14      	ld         al, #-0x1
   576A1:	5CE0      	bra        +0x5C <___libattention_server_466+0x83:0x576FD[p]>
   576A2:	0014      	ld         al, #+0x0
   576A3:	0227      	st         al, @(+0x2, y)
   576A4:	141B      	ld         x, @(+0x14, y)
   576A5:	031A      	ld         x, @(+0x3, x)
   576A6:	E315      	ld         al, @0xFFE3 <register uxl>
   576A7:	FF34      	add        al, #-0x1
   576A8:	F925      	st         al, @0xFFF9 <(scratchpad)>
   576A9:	141B      	ld         x, @(+0x14, y)
   576AA:	0326      	st         al, @(+0x3, x)
   576AB:	0216      	ld         al, @(+0x2, x)
   576AC:	F825      	st         al, @0xFFF8 <(scratchpad)>
   576AD:	E119      	ld         x, @0xFFE1 <register al>
   576AE:	F939      	add        x, @0xFFF9 <(scratchpad)>
   576AF:	001A      	ld         x, @(0x0, x)
   576B0:	132B      	st         x, @(+0x13, y)
   576B1:	E119      	ld         x, @0xFFE1 <register al>
   576B2:	001A      	ld         x, @(0x0, x)
   576B3:	062B      	st         x, @(+0x6, y)
   576B4:	0134      	add        al, #+0x1
   576B5:	141B      	ld         x, @(+0x14, y)
   576B6:	0226      	st         al, @(+0x2, x)
   576B7:	E119      	ld         x, @0xFFE1 <register al>
   576B8:	0116      	ld         al, @(+0x1, x)
   576B9:	08A0      	asl        #0x8
   576BA:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   576BB:	0136      	add        al, @(+0x1, x)
   576BC:	0727      	st         al, @(+0x7, y)
   576BD:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   576BE:	0334      	add        al, #+0x3
   576BF:	141B      	ld         x, @(+0x14, y)
   576C0:	0226      	st         al, @(+0x2, x)
   576C1:	E419      	ld         x, @0xFFE4 <register uy>
   576C2:	0638      	add        x, #+0x6
   576C3:	122B      	st         x, @(+0x12, y)
   576C4:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   576C5:	0027      	st         al, @(0x0, y)
   576C6:	FC38      	add        x, #-0x4
   576C7:	012B      	st         x, @(+0x1, y)
   576C8:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   576C9:	E411      	ld         ah, @0xFFE4 <register uy>
   576CA:	0930      	add        ah, #+0x9
   576CB:	6D00      	**prefx    0x6D
   576CC:	A519      	ld         x, @0x6CA5 <g_attention_model_data>
   576CD:	FF2B      	st         x, @(-0x1, y)
   576CE:	FF0E      	ld         xh, @(-0x1, y)
   576CF:	6D00      	**prefx    0x6D
   576D0:	A69D      	bsr        @0x6CA6 <g_attention_model_data+0x1>
   576D1:	029B      	tst        @(+0x2, y)
   576D2:	2AF4      	beq        +0x2A <___libattention_server_466+0x82:0x576FC[p]>
   576D3:	CA00      	**prefx    0xCA
   576D4:	C99C      	bsr        -0x3637 <___libcsrmesh_84:0x5409D[p]>
   576D5:	F825      	st         al, @0xFFF8 <(scratchpad)>
   576D6:	0100      	**prefx    0x1
   576D7:	8414      	ld         al, #+0x84
   576D8:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   576D9:	0026      	st         al, @(0x0, x)
   576DA:	0114      	ld         al, #+0x1
   576DB:	0126      	st         al, @(+0x1, x)
   576DC:	0217      	ld         al, @(+0x2, y)
   576DD:	E119      	ld         x, @0xFFE1 <register al>
   576DE:	0016      	ld         al, @(0x0, x)
   576DF:	0100      	**prefx    0x1
   576E0:	FFC4      	and        al, #0xFF
   576E1:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   576E2:	0226      	st         al, @(+0x2, x)
   576E3:	0217      	ld         al, @(+0x2, y)
   576E4:	E119      	ld         x, @0xFFE1 <register al>
   576E5:	0116      	ld         al, @(+0x1, x)
   576E6:	0100      	**prefx    0x1
   576E7:	FFC4      	and        al, #0xFF
   576E8:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   576E9:	0326      	st         al, @(+0x3, x)
   576EA:	021B      	ld         x, @(+0x2, y)
   576EB:	0112      	ld         ah, @(+0x1, x)
   576EC:	0009      	**unsigned
   576ED:	08A4      	lsr        #0x8
   576EE:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   576EF:	0422      	st         ah, @(+0x4, x)
   576F0:	1317      	ld         al, @(+0x13, y)
   576F1:	0100      	**prefx    0x1
   576F2:	FFC4      	and        al, #0xFF
   576F3:	0526      	st         al, @(+0x5, x)
   576F4:	0618      	ld         x, #+0x6
   576F5:	002B      	st         x, @(0x0, y)
   576F6:	0F17      	ld         al, @(+0xF, y)
   576F7:	0127      	st         al, @(+0x1, y)
   576F8:	0917      	ld         al, @(+0x9, y)
   576F9:	0C13      	ld         ah, @(+0xC, y)
   576FA:	CA00      	**prefx    0xCA
   576FB:	AB9C      	bsr        -0x3655 <___libcsrmesh_88:0x540A6[p]>
   576FC:	0014      	ld         al, #+0x0
   576FD:	E90F      	leave      #-0x17

0x000576FE <DataModelInit>:
   576FE:	FE0B      	enter      #-0x2
   576FF:	6D00      	**prefx    0x6D
   57700:	B318      	ld         x, #+0x6CB3
   57701:	0026      	st         al, @(0x0, x)
   57702:	0814      	ld         al, #+0x8
   57703:	FF26      	st         al, @(-0x1, x)
   57704:	7700      	**prefx    0x77
   57705:	1814      	ld         al, #+0x7718
   57706:	FE26      	st         al, @(-0x2, x)
   57707:	0514      	ld         al, #+0x5
   57708:	FD26      	st         al, @(-0x3, x)
   57709:	0122      	st         ah, @(+0x1, x)
   5770A:	0217      	ld         al, @(+0x2, y)
   5770B:	0226      	st         al, @(+0x2, x)
   5770C:	0417      	ld         al, @(+0x4, y)
   5770D:	6D00      	**prefx    0x6D
   5770E:	AF25      	st         al, @0x6CAF <g_data_model_data+0x1>
   5770F:	0317      	ld         al, @(+0x3, y)
   57710:	6D00      	**prefx    0x6D
   57711:	AE25      	st         al, @0x6CAE <g_data_model_data>
   57712:	FD38      	add        x, #-0x3
   57713:	E315      	ld         al, @0xFFE3 <register uxl>
   57714:	001B      	ld         x, @(0x0, y)
   57715:	023C      	add        y, #+0x2
   57716:	C900      	**prefx    0xC9
   57717:	26E0      	bra        -0x36DA <___libcsrmesh_85:0x5403D[p]>

0x00057718 <___libdata_server_466>:
   57718:	E20B      	enter      #-0x1E
   57719:	1B27      	st         al, @(+0x1B, y)
   5771A:	E415      	ld         al, @0xFFE4 <register uy>
   5771B:	0C34      	add        al, #+0xC
   5771C:	0527      	st         al, @(+0x5, y)
   5771D:	F734      	add        al, #-0x9
   5771E:	C900      	**prefx    0xC9
   5771F:	2A9C      	bsr        -0x36D6 <CSRmeshGetDefaultTTL:0x54049[p]>
   57720:	1B1B      	ld         x, @(+0x1B, y)
   57721:	001A      	ld         x, @(0x0, x)
   57722:	F929      	st         x, @0xFFF9 <(scratchpad)>
   57723:	0012      	ld         ah, @(0x0, x)
   57724:	0116      	ld         al, @(+0x1, x)
   57725:	0827      	st         al, @(+0x8, y)
   57726:	0723      	st         ah, @(+0x7, y)
   57727:	021A      	ld         x, @(+0x2, x)
   57728:	092B      	st         x, @(+0x9, y)
   57729:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5772A:	031A      	ld         x, @(+0x3, x)
   5772B:	0A2B      	st         x, @(+0xA, y)
   5772C:	1B1B      	ld         x, @(+0x1B, y)
   5772D:	011A      	ld         x, @(+0x1, x)
   5772E:	062B      	st         x, @(+0x6, y)
   5772F:	1B1B      	ld         x, @(+0x1B, y)
   57730:	041A      	ld         x, @(+0x4, x)
   57731:	0B2B      	st         x, @(+0xB, y)
   57732:	1B1B      	ld         x, @(+0x1B, y)
   57733:	051A      	ld         x, @(+0x5, x)
   57734:	0D2B      	st         x, @(+0xD, y)
   57735:	1B1B      	ld         x, @(+0x1B, y)
   57736:	071A      	ld         x, @(+0x7, x)
   57737:	0E2B      	st         x, @(+0xE, y)
   57738:	1B1B      	ld         x, @(+0x1B, y)
   57739:	021A      	ld         x, @(+0x2, x)
   5773A:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5773B:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5773C:	0416      	ld         al, @(+0x4, x)
   5773D:	7184      	cmp        al, #+0x71
   5773E:	1EF4      	beq        +0x1E <___libdata_server_466+0x44:0x5775C[p]>
   5773F:	7384      	cmp        al, #+0x73
   57740:	74F4      	beq        +0x74 <___libdata_server_466+0x9C:0x577B4[p]>
   57741:	7084      	cmp        al, #+0x70
   57742:	04F4      	beq        +0x4 <___libdata_server_466+0x2E:0x57746[p]>
   57743:	FF14      	ld         al, #-0x1
   57744:	0100      	**prefx    0x1
   57745:	9BE0      	bra        +0x9B <___libdata_server_466+0xC8:0x577E0[p]>
   57746:	0014      	ld         al, #+0x0
   57747:	0227      	st         al, @(+0x2, y)
   57748:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57749:	0116      	ld         al, @(+0x1, x)
   5774A:	08A0      	asl        #0x8
   5774B:	0036      	add        al, @(0x0, x)
   5774C:	1027      	st         al, @(+0x10, y)
   5774D:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5774E:	0234      	add        al, #+0x2
   5774F:	1B1B      	ld         x, @(+0x1B, y)
   57750:	0226      	st         al, @(+0x2, x)
   57751:	E419      	ld         x, @0xFFE4 <register uy>
   57752:	1038      	add        x, #+0x10
   57753:	0F2B      	st         x, @(+0xF, y)
   57754:	1B1B      	ld         x, @(+0x1B, y)
   57755:	031A      	ld         x, @(+0x3, x)
   57756:	002B      	st         x, @(0x0, y)
   57757:	E415      	ld         al, @0xFFE4 <register uy>
   57758:	0234      	add        al, #+0x2
   57759:	0127      	st         al, @(+0x1, y)
   5775A:	7014      	ld         al, #+0x70
   5775B:	32E0      	bra        +0x32 <___libdata_server_466+0x75:0x5778D[p]>
   5775C:	0014      	ld         al, #+0x0
   5775D:	0227      	st         al, @(+0x2, y)
   5775E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5775F:	0116      	ld         al, @(+0x1, x)
   57760:	08A0      	asl        #0x8
   57761:	0036      	add        al, @(0x0, x)
   57762:	1027      	st         al, @(+0x10, y)
   57763:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57764:	0234      	add        al, #+0x2
   57765:	1B1B      	ld         x, @(+0x1B, y)
   57766:	0226      	st         al, @(+0x2, x)
   57767:	0018      	ld         x, #+0x0
   57768:	192B      	st         x, @(+0x19, y)
   57769:	1B1B      	ld         x, @(+0x1B, y)
   5776A:	0316      	ld         al, @(+0x3, x)
   5776B:	0284      	cmp        al, #+0x2
   5776C:	172C      	bcz        +0x17 <___libdata_server_466+0x6B:0x57783[p]>
   5776D:	FE34      	add        al, #-0x2
   5776E:	1927      	st         al, @(+0x19, y)
   5776F:	0014      	ld         al, #+0x0
   57770:	0FE0      	bra        +0xF <___libdata_server_466+0x67:0x5777F[p]>
   57771:	E415      	ld         al, @0xFFE4 <register uy>
   57772:	E035      	add        al, @0xFFE0 <register ah>
   57773:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57774:	1B1B      	ld         x, @(+0x1B, y)
   57775:	021A      	ld         x, @(+0x2, x)
   57776:	F929      	st         x, @0xFFF9 <(scratchpad)>
   57777:	0016      	ld         al, @(0x0, x)
   57778:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57779:	1026      	st         al, @(+0x10, x)
   5777A:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   5777B:	0134      	add        al, #+0x1
   5777C:	1B1B      	ld         x, @(+0x1B, y)
   5777D:	0226      	st         al, @(+0x2, x)
   5777E:	E015      	ld         al, @0xFFE0 <register ah>
   5777F:	E111      	ld         ah, @0xFFE1 <register al>
   57780:	0130      	add        ah, #+0x1
   57781:	1987      	cmp        al, @(+0x19, y)
   57782:	EFFC      	bcs        -0x11 <___libdata_server_466+0x59:0x57771[p]>
   57783:	E419      	ld         x, @0xFFE4 <register uy>
   57784:	1038      	add        x, #+0x10
   57785:	0F2B      	st         x, @(+0xF, y)
   57786:	1B1B      	ld         x, @(+0x1B, y)
   57787:	031A      	ld         x, @(+0x3, x)
   57788:	002B      	st         x, @(0x0, y)
   57789:	E415      	ld         al, @0xFFE4 <register uy>
   5778A:	0234      	add        al, #+0x2
   5778B:	0127      	st         al, @(+0x1, y)
   5778C:	7114      	ld         al, #+0x71
   5778D:	E411      	ld         ah, @0xFFE4 <register uy>
   5778E:	0630      	add        ah, #+0x6
   5778F:	6D00      	**prefx    0x6D
   57790:	AE19      	ld         x, @0x6CAE <g_data_model_data>
   57791:	FF2B      	st         x, @(-0x1, y)
   57792:	FF0E      	ld         xh, @(-0x1, y)
   57793:	6D00      	**prefx    0x6D
   57794:	AF9D      	bsr        @0x6CAF <g_data_model_data+0x1>
   57795:	029B      	tst        @(+0x2, y)
   57796:	49F4      	beq        +0x49 <___libdata_server_466+0xC7:0x577DF[p]>
   57797:	C900      	**prefx    0xC9
   57798:	059C      	bsr        -0x36FB <___libcsrmesh_84:0x5409D[p]>
   57799:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5779A:	7214      	ld         al, #+0x72
   5779B:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5779C:	0026      	st         al, @(0x0, x)
   5779D:	0217      	ld         al, @(+0x2, y)
   5779E:	E119      	ld         x, @0xFFE1 <register al>
   5779F:	0016      	ld         al, @(0x0, x)
   577A0:	0100      	**prefx    0x1
   577A1:	FFC4      	and        al, #0xFF
   577A2:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   577A3:	0126      	st         al, @(+0x1, x)
   577A4:	0217      	ld         al, @(+0x2, y)
   577A5:	E119      	ld         x, @0xFFE1 <register al>
   577A6:	0012      	ld         ah, @(0x0, x)
   577A7:	0009      	**unsigned
   577A8:	08A4      	lsr        #0x8
   577A9:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   577AA:	0222      	st         ah, @(+0x2, x)
   577AB:	0318      	ld         x, #+0x3
   577AC:	002B      	st         x, @(0x0, y)
   577AD:	0C17      	ld         al, @(+0xC, y)
   577AE:	0127      	st         al, @(+0x1, y)
   577AF:	0617      	ld         al, @(+0x6, y)
   577B0:	0913      	ld         ah, @(+0x9, y)
   577B1:	C900      	**prefx    0xC9
   577B2:	F49C      	bsr        -0x370C <___libcsrmesh_88:0x540A6[p]>
   577B3:	2CE0      	bra        +0x2C <___libdata_server_466+0xC7:0x577DF[p]>
   577B4:	0014      	ld         al, #+0x0
   577B5:	1A27      	st         al, @(+0x1A, y)
   577B6:	1B1B      	ld         x, @(+0x1B, y)
   577B7:	031A      	ld         x, @(+0x3, x)
   577B8:	F829      	st         x, @0xFFF8 <(scratchpad)>
   577B9:	15F4      	beq        +0x15 <___libdata_server_466+0xB6:0x577CE[p]>
   577BA:	1A2B      	st         x, @(+0x1A, y)
   577BB:	E411      	ld         ah, @0xFFE4 <register uy>
   577BC:	1030      	add        ah, #+0x10
   577BD:	0CE0      	bra        +0xC <___libdata_server_466+0xB1:0x577C9[p]>
   577BE:	1B1B      	ld         x, @(+0x1B, y)
   577BF:	021A      	ld         x, @(+0x2, x)
   577C0:	F929      	st         x, @0xFFF9 <(scratchpad)>
   577C1:	0016      	ld         al, @(0x0, x)
   577C2:	E019      	ld         x, @0xFFE0 <register ah>
   577C3:	0026      	st         al, @(0x0, x)
   577C4:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   577C5:	0134      	add        al, #+0x1
   577C6:	1B1B      	ld         x, @(+0x1B, y)
   577C7:	0226      	st         al, @(+0x2, x)
   577C8:	0130      	add        ah, #+0x1
   577C9:	E415      	ld         al, @0xFFE4 <register uy>
   577CA:	1034      	add        al, #+0x10
   577CB:	F835      	add        al, @0xFFF8 <(scratchpad)>
   577CC:	E181      	cmp        ah, @0xFFE1 <register al>
   577CD:	F1F0      	bne        -0xF <___libdata_server_466+0xA6:0x577BE[p]>
   577CE:	E419      	ld         x, @0xFFE4 <register uy>
   577CF:	1038      	add        x, #+0x10
   577D0:	0F2B      	st         x, @(+0xF, y)
   577D1:	1B1B      	ld         x, @(+0x1B, y)
   577D2:	031A      	ld         x, @(+0x3, x)
   577D3:	002B      	st         x, @(0x0, y)
   577D4:	0014      	ld         al, #+0x0
   577D5:	0127      	st         al, @(+0x1, y)
   577D6:	7314      	ld         al, #+0x73
   577D7:	E411      	ld         ah, @0xFFE4 <register uy>
   577D8:	0630      	add        ah, #+0x6
   577D9:	6D00      	**prefx    0x6D
   577DA:	AE19      	ld         x, @0x6CAE <g_data_model_data>
   577DB:	FF2B      	st         x, @(-0x1, y)
   577DC:	FF0E      	ld         xh, @(-0x1, y)
   577DD:	6D00      	**prefx    0x6D
   577DE:	AF9D      	bsr        @0x6CAF <g_data_model_data+0x1>
   577DF:	0014      	ld         al, #+0x0
   577E0:	E20F      	leave      #-0x1E

0x000577E1 <___libdata_client_468>:
   577E1:	F10B      	enter      #-0xF
   577E2:	F825      	st         al, @0xFFF8 <(scratchpad)>
   577E3:	E119      	ld         x, @0xFFE1 <register al>
   577E4:	001A      	ld         x, @(0x0, x)
   577E5:	F929      	st         x, @0xFFF9 <(scratchpad)>
   577E6:	0012      	ld         ah, @(0x0, x)
   577E7:	0116      	ld         al, @(+0x1, x)
   577E8:	0527      	st         al, @(+0x5, y)
   577E9:	0423      	st         ah, @(+0x4, y)
   577EA:	021A      	ld         x, @(+0x2, x)
   577EB:	062B      	st         x, @(+0x6, y)
   577EC:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   577ED:	031A      	ld         x, @(+0x3, x)
   577EE:	072B      	st         x, @(+0x7, y)
   577EF:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   577F0:	011A      	ld         x, @(+0x1, x)
   577F1:	032B      	st         x, @(+0x3, y)
   577F2:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   577F3:	041A      	ld         x, @(+0x4, x)
   577F4:	082B      	st         x, @(+0x8, y)
   577F5:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   577F6:	051A      	ld         x, @(+0x5, x)
   577F7:	0A2B      	st         x, @(+0xA, y)
   577F8:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   577F9:	071A      	ld         x, @(+0x7, x)
   577FA:	0B2B      	st         x, @(+0xB, y)
   577FB:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   577FC:	0416      	ld         al, @(+0x4, x)
   577FD:	7284      	cmp        al, #+0x72
   577FE:	03F4      	beq        +0x3 <___libdata_client_468+0x20:0x57801[p]>
   577FF:	FF14      	ld         al, #-0x1
   57800:	1DE0      	bra        +0x1D <___libdata_client_468+0x3C:0x5781D[p]>
   57801:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57802:	021A      	ld         x, @(+0x2, x)
   57803:	0116      	ld         al, @(+0x1, x)
   57804:	08A0      	asl        #0x8
   57805:	0036      	add        al, @(0x0, x)
   57806:	0227      	st         al, @(+0x2, y)
   57807:	E315      	ld         al, @0xFFE3 <register uxl>
   57808:	0234      	add        al, #+0x2
   57809:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5780A:	0226      	st         al, @(+0x2, x)
   5780B:	E419      	ld         x, @0xFFE4 <register uy>
   5780C:	0238      	add        x, #+0x2
   5780D:	0C2B      	st         x, @(+0xC, y)
   5780E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5780F:	031A      	ld         x, @(+0x3, x)
   57810:	002B      	st         x, @(0x0, y)
   57811:	0014      	ld         al, #+0x0
   57812:	0127      	st         al, @(+0x1, y)
   57813:	7214      	ld         al, #+0x72
   57814:	E411      	ld         ah, @0xFFE4 <register uy>
   57815:	0330      	add        ah, #+0x3
   57816:	6D00      	**prefx    0x6D
   57817:	B719      	ld         x, @0x6CB7 <g_data_client_data>
   57818:	FF2B      	st         x, @(-0x1, y)
   57819:	FF0E      	ld         xh, @(-0x1, y)
   5781A:	6D00      	**prefx    0x6D
   5781B:	B89D      	bsr        @0x6CB8 <g_data_client_data+0x1>
   5781C:	0014      	ld         al, #+0x0
   5781D:	F10F      	leave      #-0xF

0x0005781E <DataStreamSend>:
   5781E:	FA0B      	enter      #-0x6
   5781F:	0227      	st         al, @(+0x2, y)
   57820:	0323      	st         ah, @(+0x3, y)
   57821:	C800      	**prefx    0xC8
   57822:	7B9C      	bsr        -0x3785 <___libcsrmesh_84:0x5409D[p]>
   57823:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57824:	7114      	ld         al, #+0x71
   57825:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57826:	0026      	st         al, @(0x0, x)
   57827:	071B      	ld         x, @(+0x7, y)
   57828:	0016      	ld         al, @(0x0, x)
   57829:	0100      	**prefx    0x1
   5782A:	FFC4      	and        al, #0xFF
   5782B:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5782C:	0126      	st         al, @(+0x1, x)
   5782D:	071B      	ld         x, @(+0x7, y)
   5782E:	0012      	ld         ah, @(0x0, x)
   5782F:	0009      	**unsigned
   57830:	08A4      	lsr        #0x8
   57831:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57832:	0222      	st         ah, @(+0x2, x)
   57833:	071B      	ld         x, @(+0x7, y)
   57834:	0916      	ld         al, @(+0x9, x)
   57835:	0884      	cmp        al, #+0x8
   57836:	032C      	bcz        +0x3 <DataStreamSend+0x1B:0x57839[p]>
   57837:	FF14      	ld         al, #-0x1
   57838:	1AE0      	bra        +0x1A <DataStreamSend+0x34:0x57852[p]>
   57839:	0310      	ld         ah, #+0x3
   5783A:	0CE0      	bra        +0xC <DataStreamSend+0x28:0x57846[p]>
   5783B:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5783C:	E035      	add        al, @0xFFE0 <register ah>
   5783D:	FA25      	st         al, @0xFFFA <(scratchpad)>
   5783E:	071B      	ld         x, @(+0x7, y)
   5783F:	E039      	add        x, @0xFFE0 <register ah>
   57840:	FE16      	ld         al, @(-0x2, x)
   57841:	0100      	**prefx    0x1
   57842:	FFC4      	and        al, #0xFF
   57843:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57844:	0026      	st         al, @(0x0, x)
   57845:	0130      	add        ah, #+0x1
   57846:	E015      	ld         al, @0xFFE0 <register ah>
   57847:	FD34      	add        al, #-0x3
   57848:	071B      	ld         x, @(+0x7, y)
   57849:	0986      	cmp        al, @(+0x9, x)
   5784A:	F1FC      	bcs        -0xF <DataStreamSend+0x1D:0x5783B[p]>
   5784B:	0023      	st         ah, @(0x0, y)
   5784C:	0617      	ld         al, @(+0x6, y)
   5784D:	0127      	st         al, @(+0x1, y)
   5784E:	0217      	ld         al, @(+0x2, y)
   5784F:	0313      	ld         ah, @(+0x3, y)
   57850:	C800      	**prefx    0xC8
   57851:	559C      	bsr        -0x37AB <___libcsrmesh_88:0x540A6[p]>
   57852:	FA0F      	leave      #-0x6

0x00057853 <DataStreamFlush>:
   57853:	FA0B      	enter      #-0x6
   57854:	0227      	st         al, @(+0x2, y)
   57855:	0323      	st         ah, @(+0x3, y)
   57856:	C800      	**prefx    0xC8
   57857:	469C      	bsr        -0x37BA <___libcsrmesh_84:0x5409D[p]>
   57858:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57859:	7014      	ld         al, #+0x70
   5785A:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5785B:	0026      	st         al, @(0x0, x)
   5785C:	071B      	ld         x, @(+0x7, y)
   5785D:	0016      	ld         al, @(0x0, x)
   5785E:	0100      	**prefx    0x1
   5785F:	FFC4      	and        al, #0xFF
   57860:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57861:	0126      	st         al, @(+0x1, x)
   57862:	071B      	ld         x, @(+0x7, y)
   57863:	0012      	ld         ah, @(0x0, x)
   57864:	0009      	**unsigned
   57865:	08A4      	lsr        #0x8
   57866:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57867:	0222      	st         ah, @(+0x2, x)
   57868:	0314      	ld         al, #+0x3
   57869:	0027      	st         al, @(0x0, y)
   5786A:	061B      	ld         x, @(+0x6, y)
   5786B:	012B      	st         x, @(+0x1, y)
   5786C:	0217      	ld         al, @(+0x2, y)
   5786D:	0313      	ld         ah, @(+0x3, y)
   5786E:	C800      	**prefx    0xC8
   5786F:	379C      	bsr        -0x37C9 <___libcsrmesh_88:0x540A6[p]>
   57870:	FA0F      	leave      #-0x6

0x00057871 <DataModelClientInit>:
   57871:	FE0B      	enter      #-0x2
   57872:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57873:	6D00      	**prefx    0x6D
   57874:	B918      	ld         x, #+0x6CB9
   57875:	7800      	**prefx    0x78
   57876:	E114      	ld         al, #+0x77E1
   57877:	0126      	st         al, @(+0x1, x)
   57878:	0514      	ld         al, #+0x5
   57879:	0026      	st         al, @(0x0, x)
   5787A:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5787B:	6D00      	**prefx    0x6D
   5787C:	B825      	st         al, @0x6CB8 <g_data_client_data+0x1>
   5787D:	6D00      	**prefx    0x6D
   5787E:	B721      	st         ah, @0x6CB7 <g_data_client_data>
   5787F:	E315      	ld         al, @0xFFE3 <register uxl>
   57880:	001B      	ld         x, @(0x0, y)
   57881:	023C      	add        y, #+0x2
   57882:	C800      	**prefx    0xC8
   57883:	A0E0      	bra        -0x3860 <___libcsrmesh_86:0x54023[p]>

0x00057884 <BatteryState>:
   57884:	FA0B      	enter      #-0x6
   57885:	0227      	st         al, @(+0x2, y)
   57886:	0323      	st         ah, @(+0x3, y)
   57887:	C800      	**prefx    0xC8
   57888:	159C      	bsr        -0x37EB <___libcsrmesh_84:0x5409D[p]>
   57889:	E111      	ld         ah, @0xFFE1 <register al>
   5788A:	0100      	**prefx    0x1
   5788B:	8314      	ld         al, #+0x83
   5788C:	E019      	ld         x, @0xFFE0 <register ah>
   5788D:	0026      	st         al, @(0x0, x)
   5788E:	0114      	ld         al, #+0x1
   5788F:	0126      	st         al, @(+0x1, x)
   57890:	071B      	ld         x, @(+0x7, y)
   57891:	0016      	ld         al, @(0x0, x)
   57892:	0100      	**prefx    0x1
   57893:	FFC4      	and        al, #0xFF
   57894:	E019      	ld         x, @0xFFE0 <register ah>
   57895:	0226      	st         al, @(+0x2, x)
   57896:	071B      	ld         x, @(+0x7, y)
   57897:	0116      	ld         al, @(+0x1, x)
   57898:	0100      	**prefx    0x1
   57899:	FFC4      	and        al, #0xFF
   5789A:	E019      	ld         x, @0xFFE0 <register ah>
   5789B:	0326      	st         al, @(+0x3, x)
   5789C:	071B      	ld         x, @(+0x7, y)
   5789D:	0216      	ld         al, @(+0x2, x)
   5789E:	0100      	**prefx    0x1
   5789F:	FFC4      	and        al, #0xFF
   578A0:	E019      	ld         x, @0xFFE0 <register ah>
   578A1:	0426      	st         al, @(+0x4, x)
   578A2:	0518      	ld         x, #+0x5
   578A3:	002B      	st         x, @(0x0, y)
   578A4:	0617      	ld         al, @(+0x6, y)
   578A5:	0127      	st         al, @(+0x1, y)
   578A6:	0217      	ld         al, @(+0x2, y)
   578A7:	0313      	ld         ah, @(+0x3, y)
   578A8:	C800      	**prefx    0xC8
   578A9:	FD9C      	bsr        -0x3803 <___libcsrmesh_88:0x540A6[p]>
   578AA:	FA0F      	leave      #-0x6

0x000578AB <BatteryModelInit>:
   578AB:	FE0B      	enter      #-0x2
   578AC:	6D00      	**prefx    0x6D
   578AD:	C518      	ld         x, #+0x6CC5
   578AE:	0026      	st         al, @(0x0, x)
   578AF:	0D14      	ld         al, #+0xD
   578B0:	FF26      	st         al, @(-0x1, x)
   578B1:	7900      	**prefx    0x79
   578B2:	C514      	ld         al, #+0x78C5
   578B3:	FE26      	st         al, @(-0x2, x)
   578B4:	0514      	ld         al, #+0x5
   578B5:	FD26      	st         al, @(-0x3, x)
   578B6:	0122      	st         ah, @(+0x1, x)
   578B7:	0217      	ld         al, @(+0x2, y)
   578B8:	0226      	st         al, @(+0x2, x)
   578B9:	0417      	ld         al, @(+0x4, y)
   578BA:	6D00      	**prefx    0x6D
   578BB:	C125      	st         al, @0x6CC1 <g_battery_model_data+0x1>
   578BC:	0317      	ld         al, @(+0x3, y)
   578BD:	6D00      	**prefx    0x6D
   578BE:	C025      	st         al, @0x6CC0 <g_battery_model_data>
   578BF:	FD38      	add        x, #-0x3
   578C0:	E315      	ld         al, @0xFFE3 <register uxl>
   578C1:	001B      	ld         x, @(0x0, y)
   578C2:	023C      	add        y, #+0x2
   578C3:	C700      	**prefx    0xC7
   578C4:	79E0      	bra        -0x3887 <___libcsrmesh_85:0x5403D[p]>

0x000578C5 <___libbattery_server_466>:
   578C5:	EB0B      	enter      #-0x15
   578C6:	1227      	st         al, @(+0x12, y)
   578C7:	E415      	ld         al, @0xFFE4 <register uy>
   578C8:	0D34      	add        al, #+0xD
   578C9:	0627      	st         al, @(+0x6, y)
   578CA:	F734      	add        al, #-0x9
   578CB:	C700      	**prefx    0xC7
   578CC:	7D9C      	bsr        -0x3883 <CSRmeshGetDefaultTTL:0x54049[p]>
   578CD:	121B      	ld         x, @(+0x12, y)
   578CE:	001A      	ld         x, @(0x0, x)
   578CF:	F829      	st         x, @0xFFF8 <(scratchpad)>
   578D0:	0012      	ld         ah, @(0x0, x)
   578D1:	0116      	ld         al, @(+0x1, x)
   578D2:	0927      	st         al, @(+0x9, y)
   578D3:	0823      	st         ah, @(+0x8, y)
   578D4:	021A      	ld         x, @(+0x2, x)
   578D5:	0A2B      	st         x, @(+0xA, y)
   578D6:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   578D7:	031A      	ld         x, @(+0x3, x)
   578D8:	0B2B      	st         x, @(+0xB, y)
   578D9:	121B      	ld         x, @(+0x12, y)
   578DA:	011A      	ld         x, @(+0x1, x)
   578DB:	072B      	st         x, @(+0x7, y)
   578DC:	121B      	ld         x, @(+0x12, y)
   578DD:	041A      	ld         x, @(+0x4, x)
   578DE:	0C2B      	st         x, @(+0xC, y)
   578DF:	121B      	ld         x, @(+0x12, y)
   578E0:	051A      	ld         x, @(+0x5, x)
   578E1:	0E2B      	st         x, @(+0xE, y)
   578E2:	121B      	ld         x, @(+0x12, y)
   578E3:	071A      	ld         x, @(+0x7, x)
   578E4:	0F2B      	st         x, @(+0xF, y)
   578E5:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   578E6:	0412      	ld         ah, @(+0x4, x)
   578E7:	8300      	**prefx    0x83
   578E8:	0080      	cmp        ah, #-0x7D00
   578E9:	03F4      	beq        +0x3 <___libbattery_server_466+0x27:0x578EC[p]>
   578EA:	FF14      	ld         al, #-0x1
   578EB:	41E0      	bra        +0x41 <___libbattery_server_466+0x67:0x5792C[p]>
   578EC:	0014      	ld         al, #+0x0
   578ED:	0327      	st         al, @(+0x3, y)
   578EE:	121B      	ld         x, @(+0x12, y)
   578EF:	0316      	ld         al, @(+0x3, x)
   578F0:	FF34      	add        al, #-0x1
   578F1:	0326      	st         al, @(+0x3, x)
   578F2:	021A      	ld         x, @(+0x2, x)
   578F3:	E139      	add        x, @0xFFE1 <register al>
   578F4:	001A      	ld         x, @(0x0, x)
   578F5:	112B      	st         x, @(+0x11, y)
   578F6:	E419      	ld         x, @0xFFE4 <register uy>
   578F7:	0238      	add        x, #+0x2
   578F8:	102B      	st         x, @(+0x10, y)
   578F9:	0027      	st         al, @(0x0, y)
   578FA:	E415      	ld         al, @0xFFE4 <register uy>
   578FB:	0334      	add        al, #+0x3
   578FC:	0127      	st         al, @(+0x1, y)
   578FD:	E015      	ld         al, @0xFFE0 <register ah>
   578FE:	E411      	ld         ah, @0xFFE4 <register uy>
   578FF:	0730      	add        ah, #+0x7
   57900:	6D00      	**prefx    0x6D
   57901:	C019      	ld         x, @0x6CC0 <g_battery_model_data>
   57902:	FF2B      	st         x, @(-0x1, y)
   57903:	FF0E      	ld         xh, @(-0x1, y)
   57904:	6D00      	**prefx    0x6D
   57905:	C19D      	bsr        @0x6CC1 <g_battery_model_data+0x1>
   57906:	039B      	tst        @(+0x3, y)
   57907:	24F4      	beq        +0x24 <___libbattery_server_466+0x66:0x5792B[p]>
   57908:	C800      	**prefx    0xC8
   57909:	949C      	bsr        -0x386C <___libcsrmesh_84:0x5409D[p]>
   5790A:	E111      	ld         ah, @0xFFE1 <register al>
   5790B:	0100      	**prefx    0x1
   5790C:	8314      	ld         al, #+0x83
   5790D:	E019      	ld         x, @0xFFE0 <register ah>
   5790E:	0026      	st         al, @(0x0, x)
   5790F:	0114      	ld         al, #+0x1
   57910:	0126      	st         al, @(+0x1, x)
   57911:	0317      	ld         al, @(+0x3, y)
   57912:	E119      	ld         x, @0xFFE1 <register al>
   57913:	0016      	ld         al, @(0x0, x)
   57914:	0100      	**prefx    0x1
   57915:	FFC4      	and        al, #0xFF
   57916:	E019      	ld         x, @0xFFE0 <register ah>
   57917:	0226      	st         al, @(+0x2, x)
   57918:	0317      	ld         al, @(+0x3, y)
   57919:	E119      	ld         x, @0xFFE1 <register al>
   5791A:	0116      	ld         al, @(+0x1, x)
   5791B:	0100      	**prefx    0x1
   5791C:	FFC4      	and        al, #0xFF
   5791D:	E019      	ld         x, @0xFFE0 <register ah>
   5791E:	0326      	st         al, @(+0x3, x)
   5791F:	1117      	ld         al, @(+0x11, y)
   57920:	0100      	**prefx    0x1
   57921:	FFC4      	and        al, #0xFF
   57922:	0426      	st         al, @(+0x4, x)
   57923:	0518      	ld         x, #+0x5
   57924:	002B      	st         x, @(0x0, y)
   57925:	0D17      	ld         al, @(+0xD, y)
   57926:	0127      	st         al, @(+0x1, y)
   57927:	0717      	ld         al, @(+0x7, y)
   57928:	0A13      	ld         ah, @(+0xA, y)
   57929:	C700      	**prefx    0xC7
   5792A:	7C9C      	bsr        -0x3884 <___libcsrmesh_88:0x540A6[p]>
   5792B:	0014      	ld         al, #+0x0
   5792C:	EB0F      	leave      #-0x15

0x0005792D <LargeObjectTransferModelInit>:
   5792D:	FE0B      	enter      #-0x2
   5792E:	6D00      	**prefx    0x6D
   5792F:	CE18      	ld         x, #+0x6CCE
   57930:	0026      	st         al, @(0x0, x)
   57931:	1E14      	ld         al, #+0x1E
   57932:	FF26      	st         al, @(-0x1, x)
   57933:	7900      	**prefx    0x79
   57934:	4714      	ld         al, #+0x7947
   57935:	FE26      	st         al, @(-0x2, x)
   57936:	0514      	ld         al, #+0x5
   57937:	FD26      	st         al, @(-0x3, x)
   57938:	0122      	st         ah, @(+0x1, x)
   57939:	0217      	ld         al, @(+0x2, y)
   5793A:	0226      	st         al, @(+0x2, x)
   5793B:	0417      	ld         al, @(+0x4, y)
   5793C:	6D00      	**prefx    0x6D
   5793D:	CA25      	st         al, @0x6CCA <g_largeobjecttransfer_model_data+0x1>
   5793E:	0317      	ld         al, @(+0x3, y)
   5793F:	6D00      	**prefx    0x6D
   57940:	C925      	st         al, @0x6CC9 <g_largeobjecttransfer_model_data>
   57941:	FD38      	add        x, #-0x3
   57942:	E315      	ld         al, @0xFFE3 <register uxl>
   57943:	001B      	ld         x, @(0x0, y)
   57944:	023C      	add        y, #+0x2
   57945:	C700      	**prefx    0xC7
   57946:	F7E0      	bra        -0x3909 <___libcsrmesh_85:0x5403D[p]>

0x00057947 <___liblargeobjecttransfer_server_466>:
   57947:	EB0B      	enter      #-0x15
   57948:	1227      	st         al, @(+0x12, y)
   57949:	E415      	ld         al, @0xFFE4 <register uy>
   5794A:	0E34      	add        al, #+0xE
   5794B:	0727      	st         al, @(+0x7, y)
   5794C:	F734      	add        al, #-0x9
   5794D:	C700      	**prefx    0xC7
   5794E:	FB9C      	bsr        -0x3905 <CSRmeshGetDefaultTTL:0x54049[p]>
   5794F:	121B      	ld         x, @(+0x12, y)
   57950:	001A      	ld         x, @(0x0, x)
   57951:	FB29      	st         x, @0xFFFB <(scratchpad)>
   57952:	0012      	ld         ah, @(0x0, x)
   57953:	0116      	ld         al, @(+0x1, x)
   57954:	0A27      	st         al, @(+0xA, y)
   57955:	0923      	st         ah, @(+0x9, y)
   57956:	021A      	ld         x, @(+0x2, x)
   57957:	0B2B      	st         x, @(+0xB, y)
   57958:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   57959:	031A      	ld         x, @(+0x3, x)
   5795A:	0C2B      	st         x, @(+0xC, y)
   5795B:	121B      	ld         x, @(+0x12, y)
   5795C:	011A      	ld         x, @(+0x1, x)
   5795D:	FA29      	st         x, @0xFFFA <(scratchpad)>
   5795E:	082B      	st         x, @(+0x8, y)
   5795F:	121B      	ld         x, @(+0x12, y)
   57960:	041A      	ld         x, @(+0x4, x)
   57961:	F929      	st         x, @0xFFF9 <(scratchpad)>
   57962:	0D2B      	st         x, @(+0xD, y)
   57963:	121B      	ld         x, @(+0x12, y)
   57964:	051A      	ld         x, @(+0x5, x)
   57965:	F829      	st         x, @0xFFF8 <(scratchpad)>
   57966:	0F2B      	st         x, @(+0xF, y)
   57967:	121B      	ld         x, @(+0x12, y)
   57968:	071A      	ld         x, @(+0x7, x)
   57969:	102B      	st         x, @(+0x10, y)
   5796A:	121B      	ld         x, @(+0x12, y)
   5796B:	0212      	ld         ah, @(+0x2, x)
   5796C:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   5796D:	0416      	ld         al, @(+0x4, x)
   5796E:	1A84      	cmp        al, #+0x1A
   5796F:	03F4      	beq        +0x3 <___liblargeobjecttransfer_server_466+0x2B:0x57972[p]>
   57970:	FF14      	ld         al, #-0x1
   57971:	10E0      	bra        +0x10 <___liblargeobjecttransfer_server_466+0x3A:0x57981[p]>
   57972:	0023      	st         ah, @(0x0, y)
   57973:	121B      	ld         x, @(+0x12, y)
   57974:	031A      	ld         x, @(+0x3, x)
   57975:	012B      	st         x, @(+0x1, y)
   57976:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   57977:	0227      	st         al, @(+0x2, y)
   57978:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57979:	032B      	st         x, @(+0x3, y)
   5797A:	E415      	ld         al, @0xFFE4 <register uy>
   5797B:	0834      	add        al, #+0x8
   5797C:	0427      	st         al, @(+0x4, y)
   5797D:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   5797E:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   5797F:	039C      	bsr        +0x3 <___liblargeobjecttransfer_server_468:0x57982[p]>
   57980:	0014      	ld         al, #+0x0
   57981:	EB0F      	leave      #-0x15

0x00057982 <___liblargeobjecttransfer_server_468>:
   57982:	EE0B      	enter      #-0x12
   57983:	0F27      	st         al, @(+0xF, y)
   57984:	E015      	ld         al, @0xFFE0 <register ah>
   57985:	1213      	ld         ah, @(+0x12, y)
   57986:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   57987:	0018      	ld         x, #+0x0
   57988:	022B      	st         x, @(+0x2, y)
   57989:	E411      	ld         ah, @0xFFE4 <register uy>
   5798A:	0330      	add        ah, #+0x3
   5798B:	0623      	st         ah, @(+0x6, y)
   5798C:	E119      	ld         x, @0xFFE1 <register al>
   5798D:	0416      	ld         al, @(+0x4, x)
   5798E:	0E27      	st         al, @(+0xE, y)
   5798F:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57990:	0116      	ld         al, @(+0x1, x)
   57991:	08A0      	asl        #0x8
   57992:	0036      	add        al, @(0x0, x)
   57993:	0727      	st         al, @(+0x7, y)
   57994:	0212      	ld         ah, @(+0x2, x)
   57995:	0823      	st         ah, @(+0x8, y)
   57996:	0316      	ld         al, @(+0x3, x)
   57997:	0927      	st         al, @(+0x9, y)
   57998:	041A      	ld         x, @(+0x4, x)
   57999:	0A2B      	st         x, @(+0xA, y)
   5799A:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5799B:	051A      	ld         x, @(+0x5, x)
   5799C:	0B2B      	st         x, @(+0xB, y)
   5799D:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5799E:	0716      	ld         al, @(+0x7, x)
   5799F:	08A0      	asl        #0x8
   579A0:	0636      	add        al, @(+0x6, x)
   579A1:	0C27      	st         al, @(+0xC, y)
   579A2:	0916      	ld         al, @(+0x9, x)
   579A3:	08A0      	asl        #0x8
   579A4:	0836      	add        al, @(+0x8, x)
   579A5:	0D27      	st         al, @(+0xD, y)
   579A6:	E411      	ld         ah, @0xFFE4 <register uy>
   579A7:	0730      	add        ah, #+0x7
   579A8:	161B      	ld         x, @(+0x16, y)
   579A9:	0922      	st         ah, @(+0x9, x)
   579AA:	0F17      	ld         al, @(+0xF, y)
   579AB:	FD30      	add        ah, #-0x3
   579AC:	C600      	**prefx    0xC6
   579AD:	3B9C      	bsr        -0x39C5 <CSRmeshGetDeviceID:0x53FE8[p]>
   579AE:	0D13      	ld         ah, @(+0xD, y)
   579AF:	13F4      	beq        +0x13 <___liblargeobjecttransfer_server_468+0x40:0x579C2[p]>
   579B0:	0383      	cmp        ah, @(+0x3, y)
   579B1:	11F4      	beq        +0x11 <___liblargeobjecttransfer_server_468+0x40:0x579C2[p]>
   579B2:	6D00      	**prefx    0x6D
   579B3:	D015      	ld         al, @0x6CD0 <g_largeobjecttransfer_model_data+0x7>
   579B4:	F925      	st         al, @0xFFF9 <(scratchpad)>
   579B5:	6D00      	**prefx    0x6D
   579B6:	CF19      	ld         x, @0x6CCF <g_largeobjecttransfer_model_data+0x6>
   579B7:	F829      	st         x, @0xFFF8 <(scratchpad)>
   579B8:	0014      	ld         al, #+0x0
   579B9:	06E0      	bra        +0x6 <___liblargeobjecttransfer_server_468+0x3D:0x579BF[p]>
   579BA:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   579BB:	E139      	add        x, @0xFFE1 <register al>
   579BC:	0082      	cmp        ah, @(0x0, x)
   579BD:	05F4      	beq        +0x5 <___liblargeobjecttransfer_server_468+0x40:0x579C2[p]>
   579BE:	0134      	add        al, #+0x1
   579BF:	F985      	cmp        al, @0xFFF9 <(scratchpad)>
   579C0:	FAFC      	bcs        -0x6 <___liblargeobjecttransfer_server_468+0x38:0x579BA[p]>
   579C1:	32E0      	bra        +0x32 <___liblargeobjecttransfer_server_468+0x71:0x579F3[p]>
   579C2:	1313      	ld         ah, @(+0x13, y)
   579C3:	0023      	st         ah, @(0x0, y)
   579C4:	E415      	ld         al, @0xFFE4 <register uy>
   579C5:	0234      	add        al, #+0x2
   579C6:	0127      	st         al, @(+0x1, y)
   579C7:	0E17      	ld         al, @(+0xE, y)
   579C8:	1613      	ld         ah, @(+0x16, y)
   579C9:	6D00      	**prefx    0x6D
   579CA:	C919      	ld         x, @0x6CC9 <g_largeobjecttransfer_model_data>
   579CB:	FF2B      	st         x, @(-0x1, y)
   579CC:	FF0E      	ld         xh, @(-0x1, y)
   579CD:	6D00      	**prefx    0x6D
   579CE:	CA9D      	bsr        @0x6CCA <g_largeobjecttransfer_model_data+0x1>
   579CF:	029B      	tst        @(+0x2, y)
   579D0:	23F4      	beq        +0x23 <___liblargeobjecttransfer_server_468+0x71:0x579F3[p]>
   579D1:	C700      	**prefx    0xC7
   579D2:	CB9C      	bsr        -0x3935 <___libcsrmesh_84:0x5409D[p]>
   579D3:	E119      	ld         x, @0xFFE1 <register al>
   579D4:	0100      	**prefx    0x1
   579D5:	EF10      	ld         ah, #+0xEF
   579D6:	0022      	st         ah, @(0x0, x)
   579D7:	3014      	ld         al, #+0x30
   579D8:	0126      	st         al, @(+0x1, x)
   579D9:	0238      	add        x, #+0x2
   579DA:	F929      	st         x, @0xFFF9 <(scratchpad)>
   579DB:	0014      	ld         al, #+0x0
   579DC:	021B      	ld         x, @(+0x2, y)
   579DD:	E311      	ld         ah, @0xFFE3 <register uxl>
   579DE:	E131      	add        ah, @0xFFE1 <register al>
   579DF:	E019      	ld         x, @0xFFE0 <register ah>
   579E0:	0012      	ld         ah, @(0x0, x)
   579E1:	0100      	**prefx    0x1
   579E2:	FFC0      	and        ah, #0xFF
   579E3:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   579E4:	0022      	st         ah, @(0x0, x)
   579E5:	0134      	add        al, #+0x1
   579E6:	0138      	add        x, #+0x1
   579E7:	F929      	st         x, @0xFFF9 <(scratchpad)>
   579E8:	0884      	cmp        al, #+0x8
   579E9:	F3F0      	bne        -0xD <___liblargeobjecttransfer_server_468+0x5A:0x579DC[p]>
   579EA:	161B      	ld         x, @(+0x16, y)
   579EB:	0312      	ld         ah, @(+0x3, x)
   579EC:	0A14      	ld         al, #+0xA
   579ED:	0027      	st         al, @(0x0, y)
   579EE:	141B      	ld         x, @(+0x14, y)
   579EF:	012B      	st         x, @(+0x1, y)
   579F0:	0F17      	ld         al, @(+0xF, y)
   579F1:	C700      	**prefx    0xC7
   579F2:	B49C      	bsr        -0x394C <___libcsrmesh_88:0x540A6[p]>
   579F3:	EE0F      	leave      #-0x12

0x000579F4 <LsSetMoreDataBit>:
   579F4:	F300      	**prefx    0xF3
   579F5:	3011      	ld         ah, @0xF330 <___libgatt_lib_db_2914>
   579F6:	E199      	tst        @0xFFE1 <register al>
   579F7:	03F4      	beq        +0x3 <LsSetMoreDataBit+0x6:0x579FA[p]>
   579F8:	0100      	**prefx    0x1
   579F9:	0014      	ld         al, #+0x100
   579FA:	FF00      	**prefx    0xFF
   579FB:	FFC0      	and        ah, #0xFEFF
   579FC:	E0B5      	or         al, @0xFFE0 <register ah>
   579FD:	F300      	**prefx    0xF3
   579FE:	3025      	st         al, @0xF330 <___libgatt_lib_db_2914>
   579FF:	0014      	ld         al, #+0x0
   57A00:	00E2      	bra        0x0, x

0x00057A01 <.LFB7>:
   57A01:	FC0B      	enter      #-0x4
   57A02:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57A03:	0123      	st         ah, @(+0x1, y)
   57A04:	0214      	ld         al, #+0x2
   57A05:	E019      	ld         x, @0xFFE0 <register ah>
   57A06:	0026      	st         al, @(0x0, x)
   57A07:	6A00      	**prefx    0x6A
   57A08:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57A09:	0010      	ld         ah, #+0x0
   57A0A:	3F00      	**prefx    0x3F
   57A0B:	F634      	add        al, #+0x3EF6
   57A0C:	0040      	addc       ah, #+0x0
   57A0D:	FE27      	st         al, @(-0x2, y)
   57A0E:	FF23      	st         ah, @(-0x1, y)
   57A0F:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57A10:	E411      	ld         ah, @0xFFE4 <register uy>
   57A11:	FF0E      	ld         xh, @(-0x1, y)
   57A12:	FE9F      	bsr        @(-0x2, y)
   57A13:	E199      	tst        @0xFFE1 <register al>
   57A14:	1EF4      	beq        +0x1E <.LFB7+0x31:0x57A32[p]>
   57A15:	6A00      	**prefx    0x6A
   57A16:	FB19      	ld         x, @0x69FB <GattFindIncludedServices>
   57A17:	F829      	st         x, @0xFFF8 <(scratchpad)>
   57A18:	001B      	ld         x, @(0x0, y)
   57A19:	E315      	ld         al, @0xFFE3 <register uxl>
   57A1A:	1590      	smult      #+0x15
   57A1B:	E119      	ld         x, @0xFFE1 <register al>
   57A1C:	DA00      	**prefx    0xDA
   57A1D:	051A      	ld         x, @(-0x25FB, x)
   57A1E:	0010      	ld         ah, #+0x0
   57A1F:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57A20:	8B00      	**prefx    0x8B
   57A21:	F334      	add        al, #-0x750D
   57A22:	0040      	addc       ah, #+0x0
   57A23:	FE27      	st         al, @(-0x2, y)
   57A24:	FF23      	st         ah, @(-0x1, y)
   57A25:	E315      	ld         al, @0xFFE3 <register uxl>
   57A26:	FF0E      	ld         xh, @(-0x1, y)
   57A27:	FE9F      	bsr        @(-0x2, y)
   57A28:	E119      	ld         x, @0xFFE1 <register al>
   57A29:	09F4      	beq        +0x9 <.LFB7+0x31:0x57A32[p]>
   57A2A:	4E16      	ld         al, @(+0x4E, x)
   57A2B:	08C4      	and        al, #0x8
   57A2C:	03F4      	beq        +0x3 <.LFB7+0x2E:0x57A2F[p]>
   57A2D:	0014      	ld         al, #+0x0
   57A2E:	05E0      	bra        +0x5 <.LFB7+0x32:0x57A33[p]>
   57A2F:	1A14      	ld         al, #+0x1A
   57A30:	011B      	ld         x, @(+0x1, y)
   57A31:	0026      	st         al, @(0x0, x)
   57A32:	0114      	ld         al, #+0x1
   57A33:	FC0F      	leave      #-0x4

0x00057A34 <LsConnectionUpdateSignallingRsp>:
   57A34:	F60B      	enter      #-0xA
   57A35:	0227      	st         al, @(+0x2, y)
   57A36:	0323      	st         ah, @(+0x3, y)
   57A37:	6A00      	**prefx    0x6A
   57A38:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57A39:	0010      	ld         ah, #+0x0
   57A3A:	3F00      	**prefx    0x3F
   57A3B:	F634      	add        al, #+0x3EF6
   57A3C:	0040      	addc       ah, #+0x0
   57A3D:	FE27      	st         al, @(-0x2, y)
   57A3E:	FF23      	st         ah, @(-0x1, y)
   57A3F:	0217      	ld         al, @(+0x2, y)
   57A40:	E411      	ld         ah, @0xFFE4 <register uy>
   57A41:	0130      	add        ah, #+0x1
   57A42:	FF0E      	ld         xh, @(-0x1, y)
   57A43:	FE9F      	bsr        @(-0x2, y)
   57A44:	E199      	tst        @0xFFE1 <register al>
   57A45:	31F4      	beq        +0x31 <LsConnectionUpdateSignallingRsp+0x42:0x57A76[p]>
   57A46:	6A00      	**prefx    0x6A
   57A47:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57A48:	0010      	ld         ah, #+0x0
   57A49:	1100      	**prefx    0x11
   57A4A:	5434      	add        al, #+0x1154
   57A4B:	0140      	addc       ah, #+0x1
   57A4C:	FE27      	st         al, @(-0x2, y)
   57A4D:	FF23      	st         ah, @(-0x1, y)
   57A4E:	FF0E      	ld         xh, @(-0x1, y)
   57A4F:	FE9F      	bsr        @(-0x2, y)
   57A50:	0A17      	ld         al, @(+0xA, y)
   57A51:	0027      	st         al, @(0x0, y)
   57A52:	0217      	ld         al, @(+0x2, y)
   57A53:	0313      	ld         ah, @(+0x3, y)
   57A54:	FB00      	**prefx    0xFB
   57A55:	C000      	**prefx    0xC0
   57A56:	559C      	bsr        -0x53FAB <LsConnectionUpdateSignallingRsp_A05:0x3AAB[p]>
   57A57:	6A00      	**prefx    0x6A
   57A58:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57A59:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57A5A:	011B      	ld         x, @(+0x1, y)
   57A5B:	E315      	ld         al, @0xFFE3 <register uxl>
   57A5C:	1590      	smult      #+0x15
   57A5D:	E119      	ld         x, @0xFFE1 <register al>
   57A5E:	DA00      	**prefx    0xDA
   57A5F:	051A      	ld         x, @(-0x25FB, x)
   57A60:	0010      	ld         ah, #+0x0
   57A61:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57A62:	8B00      	**prefx    0x8B
   57A63:	F334      	add        al, #-0x750D
   57A64:	0040      	addc       ah, #+0x0
   57A65:	0527      	st         al, @(+0x5, y)
   57A66:	0423      	st         ah, @(+0x4, y)
   57A67:	E315      	ld         al, @0xFFE3 <register uxl>
   57A68:	040E      	ld         xh, @(+0x4, y)
   57A69:	059F      	bsr        @(+0x5, y)
   57A6A:	0100      	**prefx    0x1
   57A6B:	909C      	bsr        +0x90 <___libgatt_lib_db_5510:0x57AFB[p]>
   57A6C:	6A00      	**prefx    0x6A
   57A6D:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57A6E:	0010      	ld         ah, #+0x0
   57A6F:	1100      	**prefx    0x11
   57A70:	5D34      	add        al, #+0x115D
   57A71:	0140      	addc       ah, #+0x1
   57A72:	0727      	st         al, @(+0x7, y)
   57A73:	0623      	st         ah, @(+0x6, y)
   57A74:	060E      	ld         xh, @(+0x6, y)
   57A75:	079F      	bsr        @(+0x7, y)
   57A76:	F60F      	leave      #-0xA

0x00057A77 <LsReadRssi>:
   57A77:	FC0B      	enter      #-0x4
   57A78:	E119      	ld         x, @0xFFE1 <register al>
   57A79:	0123      	st         ah, @(+0x1, y)
   57A7A:	6A00      	**prefx    0x6A
   57A7B:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57A7C:	0010      	ld         ah, #+0x0
   57A7D:	3F00      	**prefx    0x3F
   57A7E:	F634      	add        al, #+0x3EF6
   57A7F:	0040      	addc       ah, #+0x0
   57A80:	FE27      	st         al, @(-0x2, y)
   57A81:	FF23      	st         ah, @(-0x1, y)
   57A82:	E315      	ld         al, @0xFFE3 <register uxl>
   57A83:	E411      	ld         ah, @0xFFE4 <register uy>
   57A84:	FF0E      	ld         xh, @(-0x1, y)
   57A85:	FE9F      	bsr        @(-0x2, y)
   57A86:	E199      	tst        @0xFFE1 <register al>
   57A87:	03F0      	bne        +0x3 <LsReadRssi+0x13:0x57A8A[p]>
   57A88:	0214      	ld         al, #+0x2
   57A89:	0CE0      	bra        +0xC <LsReadRssi+0x1E:0x57A95[p]>
   57A8A:	7F14      	ld         al, #+0x7F
   57A8B:	011B      	ld         x, @(+0x1, y)
   57A8C:	0026      	st         al, @(0x0, x)
   57A8D:	0017      	ld         al, @(0x0, y)
   57A8E:	1590      	smult      #+0x15
   57A8F:	E119      	ld         x, @0xFFE1 <register al>
   57A90:	DA00      	**prefx    0xDA
   57A91:	0516      	ld         al, @(-0x25FB, x)
   57A92:	0113      	ld         ah, @(+0x1, y)
   57A93:	0200      	**prefx    0x2
   57A94:	E09C      	bsr        +0x1E0 <___libgatt_lib_db_5517:0x57C74[p]>
   57A95:	FC0F      	leave      #-0x4

0x00057A96 <___libgatt_lib_db_5454>:
   57A96:	F70B      	enter      #-0x9
   57A97:	141B      	ld         x, @(+0x14, y)
   57A98:	0316      	ld         al, @(+0x3, x)
   57A99:	1900      	**prefx    0x19
   57A9A:	3984      	cmp        al, #+0x1939
   57A9B:	16F0      	bne        +0x16 <___libgatt_lib_db_5454+0x1B:0x57AB1[p]>
   57A9C:	0416      	ld         al, @(+0x4, x)
   57A9D:	E411      	ld         ah, @0xFFE4 <register uy>
   57A9E:	0130      	add        ah, #+0x1
   57A9F:	FF00      	**prefx    0xFF
   57AA0:	619C      	bsr        -0x9F <.LFB7:0x57A01[p]>
   57AA1:	E199      	tst        @0xFFE1 <register al>
   57AA2:	49F4      	beq        +0x49 <___libgatt_lib_db_5454+0x55:0x57AEB[p]>
   57AA3:	6A00      	**prefx    0x6A
   57AA4:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57AA5:	0010      	ld         ah, #+0x0
   57AA6:	3900      	**prefx    0x39
   57AA7:	4D34      	add        al, #+0x394D
   57AA8:	0040      	addc       ah, #+0x0
   57AA9:	FE27      	st         al, @(-0x2, y)
   57AAA:	FF23      	st         ah, @(-0x1, y)
   57AAB:	1900      	**prefx    0x19
   57AAC:	3A14      	ld         al, #+0x193A
   57AAD:	0113      	ld         ah, @(+0x1, y)
   57AAE:	FF0E      	ld         xh, @(-0x1, y)
   57AAF:	FE9F      	bsr        @(-0x2, y)
   57AB0:	36E0      	bra        +0x36 <___libgatt_lib_db_5454+0x50:0x57AE6[p]>
   57AB1:	1900      	**prefx    0x19
   57AB2:	4384      	cmp        al, #+0x1943
   57AB3:	14F0      	bne        +0x14 <___libgatt_lib_db_5454+0x31:0x57AC7[p]>
   57AB4:	0416      	ld         al, @(+0x4, x)
   57AB5:	E411      	ld         ah, @0xFFE4 <register uy>
   57AB6:	0230      	add        ah, #+0x2
   57AB7:	C09C      	bsr        -0x40 <LsReadRssi:0x57A77[p]>
   57AB8:	E119      	ld         x, @0xFFE1 <register al>
   57AB9:	0127      	st         al, @(+0x1, y)
   57ABA:	6A00      	**prefx    0x6A
   57ABB:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57ABC:	0010      	ld         ah, #+0x0
   57ABD:	3900      	**prefx    0x39
   57ABE:	2434      	add        al, #+0x3924
   57ABF:	0040      	addc       ah, #+0x0
   57AC0:	0427      	st         al, @(+0x4, y)
   57AC1:	0323      	st         ah, @(+0x3, y)
   57AC2:	E315      	ld         al, @0xFFE3 <register uxl>
   57AC3:	0213      	ld         ah, @(+0x2, y)
   57AC4:	030E      	ld         xh, @(+0x3, y)
   57AC5:	049F      	bsr        @(+0x4, y)
   57AC6:	20E0      	bra        +0x20 <___libgatt_lib_db_5454+0x50:0x57AE6[p]>
   57AC7:	1900      	**prefx    0x19
   57AC8:	7284      	cmp        al, #+0x1972
   57AC9:	14F0      	bne        +0x14 <___libgatt_lib_db_5454+0x47:0x57ADD[p]>
   57ACA:	0416      	ld         al, @(+0x4, x)
   57ACB:	FF00      	**prefx    0xFF
   57ACC:	289C      	bsr        -0xD8 <LsSetMoreDataBit:0x579F4[p]>
   57ACD:	E119      	ld         x, @0xFFE1 <register al>
   57ACE:	0127      	st         al, @(+0x1, y)
   57ACF:	6A00      	**prefx    0x6A
   57AD0:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57AD1:	0010      	ld         ah, #+0x0
   57AD2:	3900      	**prefx    0x39
   57AD3:	4D34      	add        al, #+0x394D
   57AD4:	0040      	addc       ah, #+0x0
   57AD5:	0627      	st         al, @(+0x6, y)
   57AD6:	0523      	st         ah, @(+0x5, y)
   57AD7:	1900      	**prefx    0x19
   57AD8:	7314      	ld         al, #+0x1973
   57AD9:	E311      	ld         ah, @0xFFE3 <register uxl>
   57ADA:	050E      	ld         xh, @(+0x5, y)
   57ADB:	069F      	bsr        @(+0x6, y)
   57ADC:	0AE0      	bra        +0xA <___libgatt_lib_db_5454+0x50:0x57AE6[p]>
   57ADD:	1900      	**prefx    0x19
   57ADE:	3884      	cmp        al, #+0x1938
   57ADF:	0CF0      	bne        +0xC <___libgatt_lib_db_5454+0x55:0x57AEB[p]>
   57AE0:	0416      	ld         al, @(+0x4, x)
   57AE1:	0512      	ld         ah, @(+0x5, x)
   57AE2:	061A      	ld         x, @(+0x6, x)
   57AE3:	002B      	st         x, @(0x0, y)
   57AE4:	FF00      	**prefx    0xFF
   57AE5:	4F9C      	bsr        -0xB1 <LsConnectionUpdateSignallingRsp:0x57A34[p]>
   57AE6:	0014      	ld         al, #+0x0
   57AE7:	0A27      	st         al, @(+0xA, y)
   57AE8:	3900      	**prefx    0x39
   57AE9:	0B14      	ld         al, #+0x390B
   57AEA:	0927      	st         al, @(+0x9, y)
   57AEB:	F70F      	leave      #-0x9

0x00057AEC <GattAccessRsp>:
   57AEC:	FE0B      	enter      #-0x2
   57AED:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57AEE:	0417      	ld         al, @(+0x4, y)
   57AEF:	031B      	ld         x, @(+0x3, y)
   57AF0:	1688      	cmp        x, #+0x16
   57AF1:	022C      	bcz        +0x2 <GattAccessRsp+0x7:0x57AF3[p]>
   57AF2:	1618      	ld         x, #+0x16
   57AF3:	032B      	st         x, @(+0x3, y)
   57AF4:	0427      	st         al, @(+0x4, y)
   57AF5:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57AF6:	001B      	ld         x, @(0x0, y)
   57AF7:	023C      	add        y, #+0x2
   57AF8:	FB00      	**prefx    0xFB
   57AF9:	EF00      	**prefx    0xEF
   57AFA:	B2E0      	bra        -0x5114E <GattAccessRsp_A05:0x69AC[p]>

0x00057AFB <___libgatt_lib_db_5510>:
   57AFB:	FE0B      	enter      #-0x2
   57AFC:	E119      	ld         x, @0xFFE1 <register al>
   57AFD:	5112      	ld         ah, @(+0x51, x)
   57AFE:	E015      	ld         al, @0xFFE0 <register ah>
   57AFF:	0100      	**prefx    0x1
   57B00:	00C4      	and        al, #0x100
   57B01:	0AF4      	beq        +0xA <___libgatt_lib_db_5510+0x10:0x57B0B[p]>
   57B02:	FF00      	**prefx    0xFF
   57B03:	FFC0      	and        ah, #0xFEFF
   57B04:	5122      	st         ah, @(+0x51, x)
   57B05:	E315      	ld         al, @0xFFE3 <register uxl>
   57B06:	001B      	ld         x, @(0x0, y)
   57B07:	023C      	add        y, #+0x2
   57B08:	FB00      	**prefx    0xFB
   57B09:	3100      	**prefx    0x31
   57B0A:	89E0      	bra        -0x4CF77 <___libgatt_lib_db_1577:0xAB93[p]>
   57B0B:	FE0F      	leave      #-0x2

0x00057B0C <___libgatt_lib_db_5508>:
   57B0C:	FE0B      	enter      #-0x2
   57B0D:	0617      	ld         al, @(+0x6, y)
   57B0E:	051B      	ld         x, @(+0x5, y)
   57B0F:	0010      	ld         ah, #+0x0
   57B10:	10A0      	asl        #0x10
   57B11:	E3B5      	or         al, @0xFFE3 <register uxl>
   57B12:	E099      	tst        @0xFFE0 <register ah>
   57B13:	0EF0      	bne        +0xE <___libgatt_lib_db_5508+0x15:0x57B21[p]>
   57B14:	9800      	**prefx    0x98
   57B15:	3F84      	cmp        al, #-0x67C1
   57B16:	0BF0      	bne        +0xB <___libgatt_lib_db_5508+0x15:0x57B21[p]>
   57B17:	041B      	ld         x, @(+0x4, y)
   57B18:	5216      	ld         al, @(+0x52, x)
   57B19:	0200      	**prefx    0x2
   57B1A:	90C4      	and        al, #0x190
   57B1B:	05F4      	beq        +0x5 <___libgatt_lib_db_5508+0x14:0x57B20[p]>
   57B1C:	E315      	ld         al, @0xFFE3 <register uxl>
   57B1D:	FB00      	**prefx    0xFB
   57B1E:	2500      	**prefx    0x25
   57B1F:	B69C      	bsr        -0x4DB4A <___libgatt_lib_db_1536:0x9FD5[p]>
   57B20:	F90F      	leave      #-0x7
   57B21:	FE0F      	leave      #-0x2

0x00057B22 <___libgatt_lib_db_5509>:
   57B22:	E00B      	enter      #-0x20
   57B23:	291B      	ld         x, @(+0x29, y)
   57B24:	3213      	ld         ah, @(+0x32, y)
   57B25:	1B23      	st         ah, @(+0x1B, y)
   57B26:	3017      	ld         al, @(+0x30, y)
   57B27:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57B28:	A300      	**prefx    0xA3
   57B29:	B211      	ld         ah, @0xA2B2 <___libgatt_lib_db_1552+0x19>
   57B2A:	0423      	st         ah, @(+0x4, y)
   57B2B:	A300      	**prefx    0xA3
   57B2C:	B115      	ld         al, @0xA2B1 <___libgatt_lib_db_1552+0x18>
   57B2D:	0327      	st         al, @(+0x3, y)
   57B2E:	A300      	**prefx    0xA3
   57B2F:	B011      	ld         ah, @0xA2B0 <___libgatt_lib_db_1552+0x17>
   57B30:	0223      	st         ah, @(+0x2, y)
   57B31:	A300      	**prefx    0xA3
   57B32:	AF15      	ld         al, @0xA2AF <___libgatt_lib_db_1552+0x16>
   57B33:	0127      	st         al, @(+0x1, y)
   57B34:	FE38      	add        x, #-0x2
   57B35:	1088      	cmp        x, #+0x10
   57B36:	0100      	**prefx    0x1
   57B37:	A9F8      	bcc        +0xA9 <.JTBASE16+0xA5:0x57BE0[p]>
   57B38:	A300      	**prefx    0xA3
   57B39:	9F1A      	ld         x, @(-0x5D61, x)
   57B3A:	FE09      	brxl       

0x00057B3B <.JTBASE16>:
   57B3B:	1B1B      	ld         x, @(+0x1B, y)
   57B3C:	4F9A      	tst        @(+0x4F, x)
   57B3D:	0100      	**prefx    0x1
   57B3E:	A2F0      	bne        +0xA2 <.JTBASE16+0xA5:0x57BE0[p]>
   57B3F:	0210      	ld         ah, #+0x2
   57B40:	4F22      	st         ah, @(+0x4F, x)
   57B41:	0100      	**prefx    0x1
   57B42:	9EE0      	bra        +0x9E <.JTBASE16+0xA5:0x57BE0[p]>
   57B43:	6A00      	**prefx    0x6A
   57B44:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57B45:	0010      	ld         ah, #+0x0
   57B46:	8C00      	**prefx    0x8C
   57B47:	A534      	add        al, #-0x745B
   57B48:	0040      	addc       ah, #+0x0
   57B49:	FE27      	st         al, @(-0x2, y)
   57B4A:	FF23      	st         ah, @(-0x1, y)
   57B4B:	1B17      	ld         al, @(+0x1B, y)
   57B4C:	FF0E      	ld         xh, @(-0x1, y)
   57B4D:	FE9F      	bsr        @(-0x2, y)
   57B4E:	0390      	smult      #+0x3
   57B4F:	E119      	ld         x, @0xFFE1 <register al>
   57B50:	4000      	**prefx    0x40
   57B51:	4010      	ld         ah, #+0x4040
   57B52:	F300      	**prefx    0xF3
   57B53:	3122      	st         ah, @(-0xCCF, x)
   57B54:	0100      	**prefx    0x1
   57B55:	8BE0      	bra        +0x8B <.JTBASE16+0xA5:0x57BE0[p]>
   57B56:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57B57:	0312      	ld         ah, @(+0x3, x)
   57B58:	0880      	cmp        ah, #+0x8
   57B59:	04F4      	beq        +0x4 <.JTBASE16+0x22:0x57B5D[p]>
   57B5A:	0E80      	cmp        ah, #+0xE
   57B5B:	0100      	**prefx    0x1
   57B5C:	84F0      	bne        +0x84 <.JTBASE16+0xA5:0x57BE0[p]>
   57B5D:	1B1B      	ld         x, @(+0x1B, y)
   57B5E:	4E12      	ld         ah, @(+0x4E, x)
   57B5F:	F7C0      	and        ah, #0xFFF7
   57B60:	4E22      	st         ah, @(+0x4E, x)
   57B61:	E315      	ld         al, @0xFFE3 <register uxl>
   57B62:	FB00      	**prefx    0xFB
   57B63:	2400      	**prefx    0x24
   57B64:	719C      	bsr        -0x4DB8F <___libgatt_lib_db_1536:0x9FD5[p]>
   57B65:	0814      	ld         al, #+0x8
   57B66:	0027      	st         al, @(0x0, y)
   57B67:	E415      	ld         al, @0xFFE4 <register uy>
   57B68:	0634      	add        al, #+0x6
   57B69:	0010      	ld         ah, #+0x0
   57B6A:	FB00      	**prefx    0xFB
   57B6B:	B000      	**prefx    0xB0
   57B6C:	E49C      	bsr        -0x5501C <MemSet:0x2B50[p]>
   57B6D:	1B1B      	ld         x, @(+0x1B, y)
   57B6E:	4F16      	ld         al, @(+0x4F, x)
   57B6F:	0184      	cmp        al, #+0x1
   57B70:	40F0      	bne        +0x40 <.JTBASE16+0x75:0x57BB0[p]>
   57B71:	6A00      	**prefx    0x6A
   57B72:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57B73:	0010      	ld         ah, #+0x0
   57B74:	7800      	**prefx    0x78
   57B75:	E634      	add        al, #+0x77E6
   57B76:	0040      	addc       ah, #+0x0
   57B77:	FE27      	st         al, @(-0x2, y)
   57B78:	FF23      	st         ah, @(-0x1, y)
   57B79:	0D12      	ld         ah, @(+0xD, x)
   57B7A:	E415      	ld         al, @0xFFE4 <register uy>
   57B7B:	0634      	add        al, #+0x6
   57B7C:	0027      	st         al, @(0x0, y)
   57B7D:	1A14      	ld         al, #+0x1A
   57B7E:	FF0E      	ld         xh, @(-0x1, y)
   57B7F:	FE9F      	bsr        @(-0x2, y)
   57B80:	30E0      	bra        +0x30 <.JTBASE16+0x75:0x57BB0[p]>
   57B81:	1B1B      	ld         x, @(+0x1B, y)
   57B82:	5216      	ld         al, @(+0x52, x)
   57B83:	1084      	cmp        al, #+0x10
   57B84:	5CF0      	bne        +0x5C <.JTBASE16+0xA5:0x57BE0[p]>
   57B85:	6A00      	**prefx    0x6A
   57B86:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57B87:	0010      	ld         ah, #+0x0
   57B88:	A100      	**prefx    0xA1
   57B89:	4F34      	add        al, #-0x5EB1
   57B8A:	0040      	addc       ah, #+0x0
   57B8B:	FE27      	st         al, @(-0x2, y)
   57B8C:	FF23      	st         ah, @(-0x1, y)
   57B8D:	E315      	ld         al, @0xFFE3 <register uxl>
   57B8E:	E411      	ld         ah, @0xFFE4 <register uy>
   57B8F:	0130      	add        ah, #+0x1
   57B90:	FF0E      	ld         xh, @(-0x1, y)
   57B91:	FE9F      	bsr        @(-0x2, y)
   57B92:	0010      	ld         ah, #+0x0
   57B93:	2123      	st         ah, @(+0x21, y)
   57B94:	A000      	**prefx    0xA0
   57B95:	9714      	ld         al, #-0x6069
   57B96:	2027      	st         al, @(+0x20, y)
   57B97:	49E0      	bra        +0x49 <.JTBASE16+0xA5:0x57BE0[p]>
   57B98:	6A00      	**prefx    0x6A
   57B99:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57B9A:	0010      	ld         ah, #+0x0
   57B9B:	9E00      	**prefx    0x9E
   57B9C:	5C34      	add        al, #-0x61A4
   57B9D:	0040      	addc       ah, #+0x0
   57B9E:	FE27      	st         al, @(-0x2, y)
   57B9F:	FF23      	st         ah, @(-0x1, y)
   57BA0:	1B17      	ld         al, @(+0x1B, y)
   57BA1:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   57BA2:	FF0E      	ld         xh, @(-0x1, y)
   57BA3:	FE9F      	bsr        @(-0x2, y)
   57BA4:	E199      	tst        @0xFFE1 <register al>
   57BA5:	05F0      	bne        +0x5 <.JTBASE16+0x6F:0x57BAA[p]>
   57BA6:	1B17      	ld         al, @(+0x1B, y)
   57BA7:	FF00      	**prefx    0xFF
   57BA8:	539C      	bsr        -0xAD <___libgatt_lib_db_5510:0x57AFB[p]>
   57BA9:	07E0      	bra        +0x7 <.JTBASE16+0x75:0x57BB0[p]>
   57BAA:	0027      	st         al, @(0x0, y)
   57BAB:	1B17      	ld         al, @(+0x1B, y)
   57BAC:	0F10      	ld         ah, #+0xF
   57BAD:	FB00      	**prefx    0xFB
   57BAE:	1500      	**prefx    0x15
   57BAF:	B29C      	bsr        -0x4EB4E <___libgatt_lib_db_1375:0x9061[p]>
   57BB0:	0018      	ld         x, #+0x0
   57BB1:	212B      	st         x, @(+0x21, y)
   57BB2:	A000      	**prefx    0xA0
   57BB3:	9710      	ld         ah, #-0x6069
   57BB4:	2023      	st         ah, @(+0x20, y)
   57BB5:	2BE0      	bra        +0x2B <.JTBASE16+0xA5:0x57BE0[p]>
   57BB6:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57BB7:	0316      	ld         al, @(+0x3, x)
   57BB8:	F134      	add        al, #-0xF
   57BB9:	0284      	cmp        al, #+0x2
   57BBA:	26F8      	bcc        +0x26 <.JTBASE16+0xA5:0x57BE0[p]>
   57BBB:	1B1B      	ld         x, @(+0x1B, y)
   57BBC:	4A16      	ld         al, @(+0x4A, x)
   57BBD:	0184      	cmp        al, #+0x1
   57BBE:	22F0      	bne        +0x22 <.JTBASE16+0xA5:0x57BE0[p]>
   57BBF:	0016      	ld         al, @(0x0, x)
   57BC0:	40C4      	and        al, #0x40
   57BC1:	1FF4      	beq        +0x1F <.JTBASE16+0xA5:0x57BE0[p]>
   57BC2:	E315      	ld         al, @0xFFE3 <register uxl>
   57BC3:	FB00      	**prefx    0xFB
   57BC4:	2400      	**prefx    0x24
   57BC5:	109C      	bsr        -0x4DBF0 <___libgatt_lib_db_1536:0x9FD5[p]>
   57BC6:	0010      	ld         ah, #+0x0
   57BC7:	1B1B      	ld         x, @(+0x1B, y)
   57BC8:	4A22      	st         ah, @(+0x4A, x)
   57BC9:	6A00      	**prefx    0x6A
   57BCA:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57BCB:	8C00      	**prefx    0x8C
   57BCC:	0334      	add        al, #-0x73FD
   57BCD:	0040      	addc       ah, #+0x0
   57BCE:	1D27      	st         al, @(+0x1D, y)
   57BCF:	1C23      	st         ah, @(+0x1C, y)
   57BD0:	E315      	ld         al, @0xFFE3 <register uxl>
   57BD1:	0100      	**prefx    0x1
   57BD2:	0010      	ld         ah, #+0x100
   57BD3:	1C0E      	ld         xh, @(+0x1C, y)
   57BD4:	1D9F      	bsr        @(+0x1D, y)
   57BD5:	E199      	tst        @0xFFE1 <register al>
   57BD6:	05F4      	beq        +0x5 <.JTBASE16+0xA0:0x57BDB[p]>
   57BD7:	1B17      	ld         al, @(+0x1B, y)
   57BD8:	FB00      	**prefx    0xFB
   57BD9:	3000      	**prefx    0x30
   57BDA:	B99C      	bsr        -0x4D047 <___libgatt_lib_db_1577:0xAB93[p]>
   57BDB:	0014      	ld         al, #+0x0
   57BDC:	2127      	st         al, @(+0x21, y)
   57BDD:	A000      	**prefx    0xA0
   57BDE:	9718      	ld         x, #-0x6069
   57BDF:	202B      	st         x, @(+0x20, y)
   57BE0:	E00F      	leave      #-0x20

0x00057BE1 <___libgatt_lib_db_5516>:
   57BE1:	F30B      	enter      #-0xD
   57BE2:	E119      	ld         x, @0xFFE1 <register al>
   57BE3:	0123      	st         ah, @(+0x1, y)
   57BE4:	F100      	**prefx    0xF1
   57BE5:	AA15      	ld         al, @0xF0AA <___libgatt_lib_db_2999>
   57BE6:	02C4      	and        al, #0x2
   57BE7:	1DF4      	beq        +0x1D <___libgatt_lib_db_5516+0x23:0x57C04[p]>
   57BE8:	F100      	**prefx    0xF1
   57BE9:	5A15      	ld         al, @0xF15A <___libgatt_lib_db_2805>
   57BEA:	FB25      	st         al, @0xFFFB <(scratchpad)>
   57BEB:	F100      	**prefx    0xF1
   57BEC:	5B19      	ld         x, @0xF15B <___libgatt_lib_db_2775>
   57BED:	E315      	ld         al, @0xFFE3 <register uxl>
   57BEE:	1FC4      	and        al, #0x1F
   57BEF:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57BF0:	F200      	**prefx    0xF2
   57BF1:	8B11      	ld         ah, @0xF18B <___libgatt_lib_db_3005>
   57BF2:	0009      	**unsigned
   57BF3:	0CA4      	lsr        #0xC
   57BF4:	E019      	ld         x, @0xFFE0 <register ah>
   57BF5:	07C8      	and        x, #0x7
   57BF6:	FA29      	st         x, @0xFFFA <(scratchpad)>
   57BF7:	F200      	**prefx    0xF2
   57BF8:	8B11      	ld         ah, @0xF18B <___libgatt_lib_db_3005>
   57BF9:	0009      	**unsigned
   57BFA:	08A4      	lsr        #0x8
   57BFB:	E015      	ld         al, @0xFFE0 <register ah>
   57BFC:	0FC4      	and        al, #0xF
   57BFD:	FF27      	st         al, @(-0x1, y)
   57BFE:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   57BFF:	0F88      	cmp        x, #+0xF
   57C00:	5728      	ble        +0x57 <___libgatt_lib_db_5516+0x76:0x57C57[p]>
   57C01:	E038      	add        x, #-0x20
   57C02:	F829      	st         x, @0xFFF8 <(scratchpad)>
   57C03:	54E0      	bra        +0x54 <___libgatt_lib_db_5516+0x76:0x57C57[p]>
   57C04:	6A00      	**prefx    0x6A
   57C05:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57C06:	0010      	ld         ah, #+0x0
   57C07:	8400      	**prefx    0x84
   57C08:	2034      	add        al, #-0x7BE0
   57C09:	0040      	addc       ah, #+0x0
   57C0A:	FE27      	st         al, @(-0x2, y)
   57C0B:	FF23      	st         ah, @(-0x1, y)
   57C0C:	E315      	ld         al, @0xFFE3 <register uxl>
   57C0D:	E411      	ld         ah, @0xFFE4 <register uy>
   57C0E:	FF0E      	ld         xh, @(-0x1, y)
   57C0F:	FE9F      	bsr        @(-0x2, y)
   57C10:	6A00      	**prefx    0x6A
   57C11:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57C12:	0010      	ld         ah, #+0x0
   57C13:	8500      	**prefx    0x85
   57C14:	C134      	add        al, #-0x7B3F
   57C15:	0040      	addc       ah, #+0x0
   57C16:	0327      	st         al, @(+0x3, y)
   57C17:	0223      	st         ah, @(+0x2, y)
   57C18:	2114      	ld         al, #+0x21
   57C19:	020E      	ld         xh, @(+0x2, y)
   57C1A:	039F      	bsr        @(+0x3, y)
   57C1B:	0A23      	st         ah, @(+0xA, y)
   57C1C:	6A00      	**prefx    0x6A
   57C1D:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57C1E:	0010      	ld         ah, #+0x0
   57C1F:	8500      	**prefx    0x85
   57C20:	C134      	add        al, #-0x7B3F
   57C21:	0040      	addc       ah, #+0x0
   57C22:	0527      	st         al, @(+0x5, y)
   57C23:	0423      	st         ah, @(+0x4, y)
   57C24:	4214      	ld         al, #+0x42
   57C25:	040E      	ld         xh, @(+0x4, y)
   57C26:	059F      	bsr        @(+0x5, y)
   57C27:	0823      	st         ah, @(+0x8, y)
   57C28:	0927      	st         al, @(+0x9, y)
   57C29:	6A00      	**prefx    0x6A
   57C2A:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57C2B:	0010      	ld         ah, #+0x0
   57C2C:	8400      	**prefx    0x84
   57C2D:	2834      	add        al, #-0x7BD8
   57C2E:	0040      	addc       ah, #+0x0
   57C2F:	0727      	st         al, @(+0x7, y)
   57C30:	0623      	st         ah, @(+0x6, y)
   57C31:	E415      	ld         al, @0xFFE4 <register uy>
   57C32:	060E      	ld         xh, @(+0x6, y)
   57C33:	079F      	bsr        @(+0x7, y)
   57C34:	0A13      	ld         ah, @(+0xA, y)
   57C35:	0009      	**unsigned
   57C36:	09A4      	lsr        #0x9
   57C37:	01C0      	and        ah, #0x1
   57C38:	0180      	cmp        ah, #+0x1
   57C39:	07F0      	bne        +0x7 <___libgatt_lib_db_5516+0x5F:0x57C40[p]>
   57C3A:	F100      	**prefx    0xF1
   57C3B:	AB11      	ld         ah, @0xF0AB <___libgatt_lib_db_3002>
   57C3C:	0009      	**unsigned
   57C3D:	04A4      	lsr        #0x4
   57C3E:	FF23      	st         ah, @(-0x1, y)
   57C3F:	04E0      	bra        +0x4 <___libgatt_lib_db_5516+0x62:0x57C43[p]>
   57C40:	F100      	**prefx    0xF1
   57C41:	AB19      	ld         x, @0xF0AB <___libgatt_lib_db_3002>
   57C42:	FF2B      	st         x, @(-0x1, y)
   57C43:	FF17      	ld         al, @(-0x1, y)
   57C44:	0FC4      	and        al, #0xF
   57C45:	FF27      	st         al, @(-0x1, y)
   57C46:	081B      	ld         x, @(+0x8, y)
   57C47:	1088      	cmp        x, #+0x10
   57C48:	05FC      	bcs        +0x5 <___libgatt_lib_db_5516+0x6C:0x57C4D[p]>
   57C49:	0817      	ld         al, @(+0x8, y)
   57C4A:	E034      	add        al, #-0x20
   57C4B:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57C4C:	03E0      	bra        +0x3 <___libgatt_lib_db_5516+0x6E:0x57C4F[p]>
   57C4D:	081B      	ld         x, @(+0x8, y)
   57C4E:	F829      	st         x, @0xFFF8 <(scratchpad)>
   57C4F:	0A13      	ld         ah, @(+0xA, y)
   57C50:	0009      	**unsigned
   57C51:	0AA4      	lsr        #0xA
   57C52:	E015      	ld         al, @0xFFE0 <register ah>
   57C53:	07C4      	and        al, #0x7
   57C54:	FA25      	st         al, @0xFFFA <(scratchpad)>
   57C55:	091B      	ld         x, @(+0x9, y)
   57C56:	FB29      	st         x, @0xFFFB <(scratchpad)>
   57C57:	0014      	ld         al, #+0x0
   57C58:	F925      	st         al, @0xFFF9 <(scratchpad)>
   57C59:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   57C5A:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   57C5B:	A300      	**prefx    0xA3
   57C5C:	B386      	cmp        al, @(-0x5D4D, x)
   57C5D:	05FC      	bcs        +0x5 <___libgatt_lib_db_5516+0x81:0x57C62[p]>
   57C5E:	0138      	add        x, #+0x1
   57C5F:	F929      	st         x, @0xFFF9 <(scratchpad)>
   57C60:	1F88      	cmp        x, #+0x1F
   57C61:	F8F0      	bne        -0x8 <___libgatt_lib_db_5516+0x78:0x57C59[p]>
   57C62:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57C63:	FD90      	smult      #-0x3
   57C64:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57C65:	A300      	**prefx    0xA3
   57C66:	D236      	add        al, @(-0x5D2E, x)
   57C67:	AD34      	add        al, #-0x53
   57C68:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57C69:	FF1B      	ld         x, @(-0x1, y)
   57C6A:	0888      	cmp        x, #+0x8
   57C6B:	022C      	bcz        +0x2 <___libgatt_lib_db_5516+0x8C:0x57C6D[p]>
   57C6C:	0818      	ld         x, #+0x8
   57C6D:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57C6E:	A300      	**prefx    0xA3
   57C6F:	D856      	sub        al, @(-0x5D28, x)
   57C70:	F935      	add        al, @0xFFF9 <(scratchpad)>
   57C71:	011B      	ld         x, @(+0x1, y)
   57C72:	0026      	st         al, @(0x0, x)
   57C73:	F30F      	leave      #-0xD

0x00057C74 <___libgatt_lib_db_5517>:
   57C74:	FA0B      	enter      #-0x6
   57C75:	E119      	ld         x, @0xFFE1 <register al>
   57C76:	0123      	st         ah, @(+0x1, y)
   57C77:	6A00      	**prefx    0x6A
   57C78:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57C79:	0010      	ld         ah, #+0x0
   57C7A:	8B00      	**prefx    0x8B
   57C7B:	F334      	add        al, #-0x750D
   57C7C:	0040      	addc       ah, #+0x0
   57C7D:	FE27      	st         al, @(-0x2, y)
   57C7E:	FF23      	st         ah, @(-0x1, y)
   57C7F:	E315      	ld         al, @0xFFE3 <register uxl>
   57C80:	FF0E      	ld         xh, @(-0x1, y)
   57C81:	FE9F      	bsr        @(-0x2, y)
   57C82:	0027      	st         al, @(0x0, y)
   57C83:	6A00      	**prefx    0x6A
   57C84:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57C85:	0010      	ld         ah, #+0x0
   57C86:	8C00      	**prefx    0x8C
   57C87:	A534      	add        al, #-0x745B
   57C88:	0040      	addc       ah, #+0x0
   57C89:	0327      	st         al, @(+0x3, y)
   57C8A:	0223      	st         ah, @(+0x2, y)
   57C8B:	0017      	ld         al, @(0x0, y)
   57C8C:	020E      	ld         xh, @(+0x2, y)
   57C8D:	039F      	bsr        @(+0x3, y)
   57C8E:	E111      	ld         ah, @0xFFE1 <register al>
   57C8F:	F100      	**prefx    0xF1
   57C90:	AA15      	ld         al, @0xF0AA <___libgatt_lib_db_2999>
   57C91:	02C4      	and        al, #0x2
   57C92:	0BF0      	bne        +0xB <___libgatt_lib_db_5517+0x29:0x57C9D[p]>
   57C93:	009B      	tst        @(0x0, y)
   57C94:	03F0      	bne        +0x3 <___libgatt_lib_db_5517+0x23:0x57C97[p]>
   57C95:	0214      	ld         al, #+0x2
   57C96:	0CE0      	bra        +0xC <___libgatt_lib_db_5517+0x2E:0x57CA2[p]>
   57C97:	001B      	ld         x, @(0x0, y)
   57C98:	0016      	ld         al, @(0x0, x)
   57C99:	08C4      	and        al, #0x8
   57C9A:	03F0      	bne        +0x3 <___libgatt_lib_db_5517+0x29:0x57C9D[p]>
   57C9B:	0C14      	ld         al, #+0xC
   57C9C:	06E0      	bra        +0x6 <___libgatt_lib_db_5517+0x2E:0x57CA2[p]>
   57C9D:	E015      	ld         al, @0xFFE0 <register ah>
   57C9E:	0113      	ld         ah, @(+0x1, y)
   57C9F:	FF00      	**prefx    0xFF
   57CA0:	419C      	bsr        -0xBF <___libgatt_lib_db_5516:0x57BE1[p]>
   57CA1:	0014      	ld         al, #+0x0
   57CA2:	FA0F      	leave      #-0x6

0x00057CA3 <.LFB5>:
   57CA3:	0100      	**prefx    0x1
   57CA4:	C714      	ld         al, #+0xC7
   57CA5:	F200      	**prefx    0xF2
   57CA6:	EB25      	st         al, @0xF1EB <___libgatt_lib_db_2140>
   57CA7:	0114      	ld         al, #+0x1
   57CA8:	FF27      	st         al, @(-0x1, y)
   57CA9:	FF0E      	ld         xh, @(-0x1, y)
   57CAA:	4700      	**prefx    0x47
   57CAB:	7D18      	ld         x, #+0x477D
   57CAC:	00E2      	bra        0x0, x

0x00057CAD <___libgatt_lib_db_5540>:
   57CAD:	F80B      	enter      #-0x8
   57CAE:	0014      	ld         al, #+0x0
   57CAF:	0127      	st         al, @(+0x1, y)
   57CB0:	D100      	**prefx    0xD1
   57CB1:	5319      	ld         x, @0xD153 <___libgatt_lib_db_1982+0x37>
   57CB2:	052B      	st         x, @(+0x5, y)
   57CB3:	D100      	**prefx    0xD1
   57CB4:	5215      	ld         al, @0xD152 <___libgatt_lib_db_1982+0x36>
   57CB5:	0427      	st         al, @(+0x4, y)
   57CB6:	0018      	ld         x, #+0x0
   57CB7:	D100      	**prefx    0xD1
   57CB8:	5229      	st         x, @0xD152 <___libgatt_lib_db_1982+0x36>
   57CB9:	D100      	**prefx    0xD1
   57CBA:	5329      	st         x, @0xD153 <___libgatt_lib_db_1982+0x37>
   57CBB:	6A00      	**prefx    0x6A
   57CBC:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57CBD:	0010      	ld         ah, #+0x0
   57CBE:	3100      	**prefx    0x31
   57CBF:	8D34      	add        al, #+0x308D
   57CC0:	0140      	addc       ah, #+0x1
   57CC1:	FE27      	st         al, @(-0x2, y)
   57CC2:	FF23      	st         ah, @(-0x1, y)
   57CC3:	E415      	ld         al, @0xFFE4 <register uy>
   57CC4:	0134      	add        al, #+0x1
   57CC5:	0027      	st         al, @(0x0, y)
   57CC6:	0014      	ld         al, #+0x0
   57CC7:	0010      	ld         ah, #+0x0
   57CC8:	FF0E      	ld         xh, @(-0x1, y)
   57CC9:	FE9F      	bsr        @(-0x2, y)
   57CCA:	051B      	ld         x, @(+0x5, y)
   57CCB:	D100      	**prefx    0xD1
   57CCC:	5329      	st         x, @0xD153 <___libgatt_lib_db_1982+0x37>
   57CCD:	041B      	ld         x, @(+0x4, y)
   57CCE:	D100      	**prefx    0xD1
   57CCF:	5229      	st         x, @0xD152 <___libgatt_lib_db_1982+0x36>
   57CD0:	E199      	tst        @0xFFE1 <register al>
   57CD1:	10F0      	bne        +0x10 <___libgatt_lib_db_5540+0x34:0x57CE1[p]>
   57CD2:	6A00      	**prefx    0x6A
   57CD3:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57CD4:	0010      	ld         ah, #+0x0
   57CD5:	3000      	**prefx    0x30
   57CD6:	6F34      	add        al, #+0x306F
   57CD7:	0140      	addc       ah, #+0x1
   57CD8:	FE27      	st         al, @(-0x2, y)
   57CD9:	FF23      	st         ah, @(-0x1, y)
   57CDA:	E415      	ld         al, @0xFFE4 <register uy>
   57CDB:	0234      	add        al, #+0x2
   57CDC:	0027      	st         al, @(0x0, y)
   57CDD:	0014      	ld         al, #+0x0
   57CDE:	0210      	ld         ah, #+0x2
   57CDF:	FF0E      	ld         xh, @(-0x1, y)
   57CE0:	FE9F      	bsr        @(-0x2, y)
   57CE1:	6A00      	**prefx    0x6A
   57CE2:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57CE3:	0010      	ld         ah, #+0x0
   57CE4:	4200      	**prefx    0x42
   57CE5:	2A34      	add        al, #+0x422A
   57CE6:	0140      	addc       ah, #+0x1
   57CE7:	FE27      	st         al, @(-0x2, y)
   57CE8:	FF23      	st         ah, @(-0x1, y)
   57CE9:	D100      	**prefx    0xD1
   57CEA:	5514      	ld         al, #-0x2EAB
   57CEB:	FF0E      	ld         xh, @(-0x1, y)
   57CEC:	FE9F      	bsr        @(-0x2, y)
   57CED:	F80F      	leave      #-0x8

0x00057CEE <___libgatt_lib_db_1669>:
   57CEE:	E70B      	enter      #-0x19
   57CEF:	0010      	ld         ah, #+0x0
   57CF0:	0423      	st         ah, @(+0x4, y)
   57CF1:	3B21      	st         ah, @0x3B <___libextension_server_467>
   57CF2:	0C00      	**prefx    0xC
   57CF3:	9C9C      	bsr        +0xB9C <___libgatt_lib_db_5618:0x5888F[p]>
   57CF4:	FC00      	**prefx    0xFC
   57CF5:	8E15      	ld         al, @0xFB8E <___libgatt_lib_db_4009>
   57CF6:	FEB4      	or         al, #-0x2
   57CF7:	FC00      	**prefx    0xFC
   57CF8:	8E25      	st         al, @0xFB8E <___libgatt_lib_db_4009>
   57CF9:	FC00      	**prefx    0xFC
   57CFA:	8515      	ld         al, @0xFB85 <___libgatt_lib_db_4012>
   57CFB:	01C4      	and        al, #0x1
   57CFC:	08B4      	or         al, #+0x8
   57CFD:	FC00      	**prefx    0xFC
   57CFE:	8525      	st         al, @0xFB85 <___libgatt_lib_db_4012>
   57CFF:	FC00      	**prefx    0xFC
   57D00:	8815      	ld         al, @0xFB88 <___libgatt_lib_db_4015>
   57D01:	01C4      	and        al, #0x1
   57D02:	08B4      	or         al, #+0x8
   57D03:	FC00      	**prefx    0xFC
   57D04:	8825      	st         al, @0xFB88 <___libgatt_lib_db_4015>
   57D05:	FB00      	**prefx    0xFB
   57D06:	1B15      	ld         al, @0xFB1B <___libgatt_lib_db_2607>
   57D07:	C200      	**prefx    0xC2
   57D08:	FFC4      	and        al, #0xC1FF
   57D09:	1400      	**prefx    0x14
   57D0A:	00B4      	or         al, #+0x1400
   57D0B:	FB00      	**prefx    0xFB
   57D0C:	1B25      	st         al, @0xFB1B <___libgatt_lib_db_2607>
   57D0D:	FB00      	**prefx    0xFB
   57D0E:	1A15      	ld         al, @0xFB1A <___libgatt_lib_db_2594>
   57D0F:	E0C4      	and        al, #0xFFE0
   57D10:	1CB4      	or         al, #+0x1C
   57D11:	FB00      	**prefx    0xFB
   57D12:	1A25      	st         al, @0xFB1A <___libgatt_lib_db_2594>
   57D13:	FB00      	**prefx    0xFB
   57D14:	1A15      	ld         al, @0xFB1A <___libgatt_lib_db_2594>
   57D15:	E100      	**prefx    0xE1
   57D16:	FFC4      	and        al, #0xE0FF
   57D17:	1C00      	**prefx    0x1C
   57D18:	00B4      	or         al, #+0x1C00
   57D19:	FB00      	**prefx    0xFB
   57D1A:	1A25      	st         al, @0xFB1A <___libgatt_lib_db_2594>
   57D1B:	1714      	ld         al, #+0x17
   57D1C:	FB00      	**prefx    0xFB
   57D1D:	1425      	st         al, @0xFB14 <___libgatt_lib_db_2588>
   57D1E:	0018      	ld         x, #+0x0
   57D1F:	FB00      	**prefx    0xFB
   57D20:	5629      	st         x, @0xFB56 <___libgatt_lib_db_4241>
   57D21:	FB00      	**prefx    0xFB
   57D22:	5029      	st         x, @0xFB50 <___libgatt_lib_db_4235>
   57D23:	C100      	**prefx    0xC1
   57D24:	1D10      	ld         ah, #-0x3EE3
   57D25:	FB00      	**prefx    0xFB
   57D26:	5121      	st         ah, @0xFB51 <___libgatt_lib_db_4237>
   57D27:	FB00      	**prefx    0xFB
   57D28:	5229      	st         x, @0xFB52 <___libgatt_lib_db_4239>
   57D29:	FB00      	**prefx    0xFB
   57D2A:	5015      	ld         al, @0xFB50 <___libgatt_lib_db_4235>
   57D2B:	F0C4      	and        al, #0xFFF0
   57D2C:	06B4      	or         al, #+0x6
   57D2D:	FB00      	**prefx    0xFB
   57D2E:	5025      	st         al, @0xFB50 <___libgatt_lib_db_4235>
   57D2F:	0114      	ld         al, #+0x1
   57D30:	FB00      	**prefx    0xFB
   57D31:	5625      	st         al, @0xFB56 <___libgatt_lib_db_4241>
   57D32:	FB00      	**prefx    0xFB
   57D33:	5029      	st         x, @0xFB50 <___libgatt_lib_db_4235>
   57D34:	6A00      	**prefx    0x6A
   57D35:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57D36:	0010      	ld         ah, #+0x0
   57D37:	C400      	**prefx    0xC4
   57D38:	EF34      	add        al, #-0x3C11
   57D39:	0040      	addc       ah, #+0x0
   57D3A:	0E27      	st         al, @(+0xE, y)
   57D3B:	0D23      	st         ah, @(+0xD, y)
   57D3C:	0118      	ld         x, #+0x1
   57D3D:	002B      	st         x, @(0x0, y)
   57D3E:	4700      	**prefx    0x47
   57D3F:	7910      	ld         ah, #+0x4779
   57D40:	0123      	st         ah, @(+0x1, y)
   57D41:	7D00      	**prefx    0x7D
   57D42:	A314      	ld         al, #+0x7CA3
   57D43:	0327      	st         al, @(+0x3, y)
   57D44:	0518      	ld         x, #+0x5
   57D45:	022B      	st         x, @(+0x2, y)
   57D46:	0114      	ld         al, #+0x1
   57D47:	0110      	ld         ah, #+0x1
   57D48:	0D0E      	ld         xh, @(+0xD, y)
   57D49:	0E9F      	bsr        @(+0xE, y)
   57D4A:	0310      	ld         ah, #+0x3
   57D4B:	FB00      	**prefx    0xFB
   57D4C:	5621      	st         ah, @0xFB56 <___libgatt_lib_db_4241>
   57D4D:	0014      	ld         al, #+0x0
   57D4E:	FB00      	**prefx    0xFB
   57D4F:	5025      	st         al, @0xFB50 <___libgatt_lib_db_4235>
   57D50:	C100      	**prefx    0xC1
   57D51:	3618      	ld         x, #-0x3ECA
   57D52:	FB00      	**prefx    0xFB
   57D53:	5129      	st         x, @0xFB51 <___libgatt_lib_db_4237>
   57D54:	FB00      	**prefx    0xFB
   57D55:	5225      	st         al, @0xFB52 <___libgatt_lib_db_4239>
   57D56:	FB00      	**prefx    0xFB
   57D57:	5015      	ld         al, @0xFB50 <___libgatt_lib_db_4235>
   57D58:	F0C4      	and        al, #0xFFF0
   57D59:	06B4      	or         al, #+0x6
   57D5A:	FB00      	**prefx    0xFB
   57D5B:	5025      	st         al, @0xFB50 <___libgatt_lib_db_4235>
   57D5C:	6A00      	**prefx    0x6A
   57D5D:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57D5E:	D600      	**prefx    0xD6
   57D5F:	6C19      	ld         x, @0xD66C <storage_size+0xB>
   57D60:	0010      	ld         ah, #+0x0
   57D61:	4400      	**prefx    0x44
   57D62:	EE34      	add        al, #+0x43EE
   57D63:	0140      	addc       ah, #+0x1
   57D64:	1027      	st         al, @(+0x10, y)
   57D65:	0F23      	st         ah, @(+0xF, y)
   57D66:	E411      	ld         ah, @0xFFE4 <register uy>
   57D67:	0430      	add        ah, #+0x4
   57D68:	0023      	st         ah, @(0x0, y)
   57D69:	E315      	ld         al, @0xFFE3 <register uxl>
   57D6A:	0210      	ld         ah, #+0x2
   57D6B:	0F0E      	ld         xh, @(+0xF, y)
   57D6C:	109F      	bsr        @(+0x10, y)
   57D6D:	0417      	ld         al, @(+0x4, y)
   57D6E:	0527      	st         al, @(+0x5, y)
   57D6F:	D600      	**prefx    0xD6
   57D70:	6B19      	ld         x, @0xD66B <storage_size+0xA>
   57D71:	062B      	st         x, @(+0x6, y)
   57D72:	6A00      	**prefx    0x6A
   57D73:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57D74:	0010      	ld         ah, #+0x0
   57D75:	3100      	**prefx    0x31
   57D76:	8D34      	add        al, #+0x308D
   57D77:	0140      	addc       ah, #+0x1
   57D78:	1227      	st         al, @(+0x12, y)
   57D79:	1123      	st         ah, @(+0x11, y)
   57D7A:	E411      	ld         ah, @0xFFE4 <register uy>
   57D7B:	0530      	add        ah, #+0x5
   57D7C:	0023      	st         ah, @(0x0, y)
   57D7D:	0014      	ld         al, #+0x0
   57D7E:	0510      	ld         ah, #+0x5
   57D7F:	110E      	ld         xh, @(+0x11, y)
   57D80:	129F      	bsr        @(+0x12, y)
   57D81:	3100      	**prefx    0x31
   57D82:	3814      	ld         al, #+0x3138
   57D83:	FB00      	**prefx    0xFB
   57D84:	D525      	st         al, @0xFAD5 <___libgatt_lib_db_2573>
   57D85:	4B00      	**prefx    0x4B
   57D86:	FF18      	ld         x, #+0x4AFF
   57D87:	FB00      	**prefx    0xFB
   57D88:	D429      	st         x, @0xFAD4 <___libgatt_lib_db_2572>
   57D89:	0010      	ld         ah, #+0x0
   57D8A:	E019      	ld         x, @0xFFE0 <register ah>
   57D8B:	FB00      	**prefx    0xFB
   57D8C:	6038      	add        x, #-0x4A0
   57D8D:	0016      	ld         al, @(0x0, x)
   57D8E:	0384      	cmp        al, #+0x3
   57D8F:	07F0      	bne        +0x7 <___libgatt_lib_db_1669+0xA8:0x57D96[p]>
   57D90:	FC00      	**prefx    0xFC
   57D91:	3115      	ld         al, @0xFC31 <___libgatt_lib_db_3510>
   57D92:	40B4      	or         al, #+0x40
   57D93:	FC00      	**prefx    0xFC
   57D94:	3125      	st         al, @0xFC31 <___libgatt_lib_db_3510>
   57D95:	04E0      	bra        +0x4 <___libgatt_lib_db_1669+0xAB:0x57D99[p]>
   57D96:	0130      	add        ah, #+0x1
   57D97:	2680      	cmp        ah, #+0x26
   57D98:	F2F0      	bne        -0xE <___libgatt_lib_db_1669+0x9C:0x57D8A[p]>
   57D99:	0F10      	ld         ah, #+0xF
   57D9A:	F300      	**prefx    0xF3
   57D9B:	1721      	st         ah, @0xF317 <___libgatt_lib_db_2941>
   57D9C:	9C00      	**prefx    0x9C
   57D9D:	D814      	ld         al, #-0x6428
   57D9E:	0127      	st         al, @(+0x1, y)
   57D9F:	0518      	ld         x, #+0x5
   57DA0:	002B      	st         x, @(0x0, y)
   57DA1:	1314      	ld         al, #+0x13
   57DA2:	0310      	ld         ah, #+0x3
   57DA3:	FC00      	**prefx    0xFC
   57DA4:	9400      	**prefx    0x94
   57DA5:	C69C      	bsr        -0x46C3A <___libgatt_lib_db_4376:0x1116B[p]>
   57DA6:	F100      	**prefx    0xF1
   57DA7:	DE11      	ld         ah, @0xF0DE <___libgatt_lib_db_3246>
   57DA8:	0C23      	st         ah, @(+0xC, y)
   57DA9:	0500      	**prefx    0x5
   57DAA:	FB14      	ld         al, #+0x4FB
   57DAB:	0510      	ld         ah, #+0x5
   57DAC:	0000      	**prefx    0x0
   57DAD:	0054      	sub        al, #+0x0
   57DAE:	0560      	subc       ah, #+0x5
   57DAF:	0A27      	st         al, @(+0xA, y)
   57DB0:	0923      	st         ah, @(+0x9, y)
   57DB1:	0100      	**prefx    0x1
   57DB2:	C214      	ld         al, #+0xC2
   57DB3:	0010      	ld         ah, #+0x0
   57DB4:	FC00      	**prefx    0xFC
   57DB5:	E400      	**prefx    0xE4
   57DB6:	B49C      	bsr        -0x41C4C <___libgatt_lib_db_5242:0x1616A[p]>
   57DB7:	0B27      	st         al, @(+0xB, y)
   57DB8:	D700      	**prefx    0xD7
   57DB9:	9615      	ld         al, @0xD696 <search_global+0x3>
   57DBA:	F825      	st         al, @0xFFF8 <(scratchpad)>
   57DBB:	0C13      	ld         ah, @(+0xC, y)
   57DBC:	0009      	**unsigned
   57DBD:	02A4      	lsr        #0x2
   57DBE:	E015      	ld         al, @0xFFE0 <register ah>
   57DBF:	0800      	**prefx    0x8
   57DC0:	FFC4      	and        al, #0x7FF
   57DC1:	0010      	ld         ah, #+0x0
   57DC2:	0CA0      	asl        #0xC
   57DC3:	1427      	st         al, @(+0x14, y)
   57DC4:	1323      	st         ah, @(+0x13, y)
   57DC5:	0A1B      	ld         x, @(+0xA, y)
   57DC6:	E315      	ld         al, @0xFFE3 <register uxl>
   57DC7:	091B      	ld         x, @(+0x9, y)
   57DC8:	E311      	ld         ah, @0xFFE3 <register uxl>
   57DC9:	1437      	add        al, @(+0x14, y)
   57DCA:	1343      	addc       ah, @(+0x13, y)
   57DCB:	0127      	st         al, @(+0x1, y)
   57DCC:	0023      	st         ah, @(0x0, y)
   57DCD:	0100      	**prefx    0x1
   57DCE:	C210      	ld         ah, #+0xC2
   57DCF:	0223      	st         ah, @(+0x2, y)
   57DD0:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57DD1:	0B13      	ld         ah, @(+0xB, y)
   57DD2:	FB00      	**prefx    0xFB
   57DD3:	4900      	**prefx    0x49
   57DD4:	149C      	bsr        -0x4B6EC <___libgatt_lib_db_1898:0xC6E8[p]>
   57DD5:	E199      	tst        @0xFFE1 <register al>
   57DD6:	26F0      	bne        +0x26 <___libgatt_lib_db_1669+0x10E:0x57DFC[p]>
   57DD7:	0B17      	ld         al, @(+0xB, y)
   57DD8:	0018      	ld         x, #+0x0
   57DD9:	E311      	ld         ah, @0xFFE3 <register uxl>
   57DDA:	D000      	**prefx    0xD0
   57DDB:	0054      	sub        al, #-0x3000
   57DDC:	0060      	subc       ah, #+0x0
   57DDD:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   57DDE:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   57DDF:	8000      	**prefx    0x80
   57DE0:	0034      	add        al, #-0x8000
   57DE1:	0440      	addc       ah, #+0x4
   57DE2:	E119      	ld         x, @0xFFE1 <register al>
   57DE3:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   57DE4:	1414      	ld         al, #+0x14
   57DE5:	F925      	st         al, @0xFFF9 <(scratchpad)>
   57DE6:	0010      	ld         ah, #+0x0
   57DE7:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   57DE8:	E315      	ld         al, @0xFFE3 <register uxl>
   57DE9:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   57DEA:	F935      	add        al, @0xFFF9 <(scratchpad)>
   57DEB:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
   57DEC:	D800      	**prefx    0xD8
   57DED:	3225      	st         al, @0xD832 <xtal_wake_configured+0x7>
   57DEE:	D800      	**prefx    0xD8
   57DEF:	3121      	st         ah, @0xD831 <xtal_wake_configured+0x6>
   57DF0:	DB00      	**prefx    0xDB
   57DF1:	3014      	ld         al, #-0x24D0
   57DF2:	FC00      	**prefx    0xFC
   57DF3:	3025      	st         al, @0xFC30 <___libgatt_lib_db_3521>
   57DF4:	F800      	**prefx    0xF8
   57DF5:	0C29      	st         x, @0xF80C <___libgatt_lib_db_4092>
   57DF6:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   57DF7:	F800      	**prefx    0xF8
   57DF8:	0B29      	st         x, @0xF80B <___libgatt_lib_db_4091>
   57DF9:	0010      	ld         ah, #+0x0
   57DFA:	FC00      	**prefx    0xFC
   57DFB:	3021      	st         ah, @0xFC30 <___libgatt_lib_db_3521>
   57DFC:	8600      	**prefx    0x86
   57DFD:	3514      	ld         al, #-0x79CB
   57DFE:	6A00      	**prefx    0x6A
   57DFF:	F025      	st         al, @0x69F0 <GattDiscoverPrimaryServiceByUuid+0x6>
   57E00:	0518      	ld         x, #+0x5
   57E01:	6A00      	**prefx    0x6A
   57E02:	EF29      	st         x, @0x69EF <GattDiscoverPrimaryServiceByUuid+0x5>
   57E03:	6A00      	**prefx    0x6A
   57E04:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57E05:	0010      	ld         ah, #+0x0
   57E06:	2200      	**prefx    0x22
   57E07:	3F34      	add        al, #+0x223F
   57E08:	0140      	addc       ah, #+0x1
   57E09:	6A00      	**prefx    0x6A
   57E0A:	F225      	st         al, @0x69F2 <GattDiscoverPrimaryServiceByUuid+0x8>
   57E0B:	6A00      	**prefx    0x6A
   57E0C:	F121      	st         ah, @0x69F1 <GattDiscoverPrimaryServiceByUuid+0x7>
   57E0D:	6A00      	**prefx    0x6A
   57E0E:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57E0F:	0010      	ld         ah, #+0x0
   57E10:	2100      	**prefx    0x21
   57E11:	8934      	add        al, #+0x2089
   57E12:	0140      	addc       ah, #+0x1
   57E13:	6A00      	**prefx    0x6A
   57E14:	F425      	st         al, @0x69F4 <GattDiscoverPrimaryServiceByUuid+0xA>
   57E15:	6A00      	**prefx    0x6A
   57E16:	F321      	st         ah, @0x69F3 <GattDiscoverPrimaryServiceByUuid+0x9>
   57E17:	6A00      	**prefx    0x6A
   57E18:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57E19:	0010      	ld         ah, #+0x0
   57E1A:	2100      	**prefx    0x21
   57E1B:	B334      	add        al, #+0x20B3
   57E1C:	0140      	addc       ah, #+0x1
   57E1D:	6A00      	**prefx    0x6A
   57E1E:	F625      	st         al, @0x69F6 <GattDiscoverPrimaryServiceByUuid+0xC>
   57E1F:	6A00      	**prefx    0x6A
   57E20:	F521      	st         ah, @0x69F5 <GattDiscoverPrimaryServiceByUuid+0xB>
   57E21:	6A00      	**prefx    0x6A
   57E22:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57E23:	0010      	ld         ah, #+0x0
   57E24:	2100      	**prefx    0x21
   57E25:	5934      	add        al, #+0x2159
   57E26:	0140      	addc       ah, #+0x1
   57E27:	6A00      	**prefx    0x6A
   57E28:	F825      	st         al, @0x69F8 <GattDiscoverPrimaryServiceByUuid+0xE>
   57E29:	6A00      	**prefx    0x6A
   57E2A:	F721      	st         ah, @0x69F7 <GattDiscoverPrimaryServiceByUuid+0xD>
   57E2B:	6A00      	**prefx    0x6A
   57E2C:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57E2D:	0010      	ld         ah, #+0x0
   57E2E:	2100      	**prefx    0x21
   57E2F:	8334      	add        al, #+0x2083
   57E30:	0140      	addc       ah, #+0x1
   57E31:	6A00      	**prefx    0x6A
   57E32:	FA25      	st         al, @0x69FA <GattDiscoverPrimaryServiceByUuid+0x10>
   57E33:	6A00      	**prefx    0x6A
   57E34:	F921      	st         ah, @0x69F9 <GattDiscoverPrimaryServiceByUuid+0xF>
   57E35:	6A00      	**prefx    0x6A
   57E36:	EF10      	ld         ah, #+0x69EF
   57E37:	D100      	**prefx    0xD1
   57E38:	1C21      	st         ah, @0xD11C <___libgatt_lib_db_1982>
   57E39:	6100      	**prefx    0x61
   57E3A:	E514      	ld         al, #+0x60E5
   57E3B:	D100      	**prefx    0xD1
   57E3C:	1525      	st         al, @0xD115 <___libgatt_lib_db_1978+0x24>
   57E3D:	A300      	**prefx    0xA3
   57E3E:	E118      	ld         x, #-0x5D1F
   57E3F:	D100      	**prefx    0xD1
   57E40:	6329      	st         x, @0xD163 <___libgatt_lib_db_1982+0x47>
   57E41:	A300      	**prefx    0xA3
   57E42:	EF10      	ld         ah, #-0x5D11
   57E43:	D100      	**prefx    0xD1
   57E44:	1321      	st         ah, @0xD113 <___libgatt_lib_db_1978+0x22>
   57E45:	A300      	**prefx    0xA3
   57E46:	0114      	ld         al, #-0x5CFF
   57E47:	D100      	**prefx    0xD1
   57E48:	6125      	st         al, @0xD161 <___libgatt_lib_db_1982+0x45>
   57E49:	A300      	**prefx    0xA3
   57E4A:	0D18      	ld         x, #-0x5CF3
   57E4B:	D100      	**prefx    0xD1
   57E4C:	1829      	st         x, @0xD118 <___libgatt_lib_db_1978+0x27>
   57E4D:	A300      	**prefx    0xA3
   57E4E:	1710      	ld         ah, #-0x5CE9
   57E4F:	D100      	**prefx    0xD1
   57E50:	C821      	st         ah, @0xD0C8 <___libgatt_lib_db_1979+0x84>
   57E51:	FB00      	**prefx    0xFB
   57E52:	0215      	ld         al, @0xFB02 <___libgatt_lib_db_2580>
   57E53:	F000      	**prefx    0xF0
   57E54:	FFC4      	and        al, #0xEFFF
   57E55:	FB00      	**prefx    0xFB
   57E56:	0225      	st         al, @0xFB02 <___libgatt_lib_db_2580>
   57E57:	FB00      	**prefx    0xFB
   57E58:	4915      	ld         al, @0xFB49 <___libgatt_lib_db_2537>
   57E59:	FC00      	**prefx    0xFC
   57E5A:	03C4      	and        al, #0xFC03
   57E5B:	0100      	**prefx    0x1
   57E5C:	40B4      	or         al, #+0x140
   57E5D:	FB00      	**prefx    0xFB
   57E5E:	4925      	st         al, @0xFB49 <___libgatt_lib_db_2537>
   57E5F:	1300      	**prefx    0x13
   57E60:	7B14      	ld         al, #+0x137B
   57E61:	FC00      	**prefx    0xFC
   57E62:	3025      	st         al, @0xFC30 <___libgatt_lib_db_3521>
   57E63:	F300      	**prefx    0xF3
   57E64:	6B15      	ld         al, @0xF36B <___libgatt_lib_db_4270>
   57E65:	20B4      	or         al, #+0x20
   57E66:	F300      	**prefx    0xF3
   57E67:	6B25      	st         al, @0xF36B <___libgatt_lib_db_4270>
   57E68:	0018      	ld         x, #+0x0
   57E69:	FC00      	**prefx    0xFC
   57E6A:	3029      	st         x, @0xFC30 <___libgatt_lib_db_3521>
   57E6B:	6A00      	**prefx    0x6A
   57E6C:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57E6D:	0010      	ld         ah, #+0x0
   57E6E:	C300      	**prefx    0xC3
   57E6F:	D834      	add        al, #-0x3D28
   57E70:	0040      	addc       ah, #+0x0
   57E71:	FE27      	st         al, @(-0x2, y)
   57E72:	FF23      	st         ah, @(-0x1, y)
   57E73:	FF0E      	ld         xh, @(-0x1, y)
   57E74:	FE9F      	bsr        @(-0x2, y)
   57E75:	E111      	ld         ah, @0xFFE1 <register al>
   57E76:	D100      	**prefx    0xD1
   57E77:	5131      	add        ah, @0xD151 <___libgatt_lib_db_1982+0x35>
   57E78:	0723      	st         ah, @(+0x7, y)
   57E79:	D100      	**prefx    0xD1
   57E7A:	5155      	sub        al, @0xD151 <___libgatt_lib_db_1982+0x35>
   57E7B:	0827      	st         al, @(+0x8, y)
   57E7C:	6A00      	**prefx    0x6A
   57E7D:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57E7E:	0010      	ld         ah, #+0x0
   57E7F:	4200      	**prefx    0x42
   57E80:	2A34      	add        al, #+0x422A
   57E81:	0140      	addc       ah, #+0x1
   57E82:	1627      	st         al, @(+0x16, y)
   57E83:	1523      	st         ah, @(+0x15, y)
   57E84:	E415      	ld         al, @0xFFE4 <register uy>
   57E85:	0734      	add        al, #+0x7
   57E86:	150E      	ld         xh, @(+0x15, y)
   57E87:	169F      	bsr        @(+0x16, y)
   57E88:	7F00      	**prefx    0x7F
   57E89:	A914      	ld         al, #+0x7EA9
   57E8A:	0127      	st         al, @(+0x1, y)
   57E8B:	0518      	ld         x, #+0x5
   57E8C:	002B      	st         x, @(0x0, y)
   57E8D:	1014      	ld         al, #+0x10
   57E8E:	0110      	ld         ah, #+0x1
   57E8F:	FC00      	**prefx    0xFC
   57E90:	9300      	**prefx    0x93
   57E91:	DA9C      	bsr        -0x46D26 <___libgatt_lib_db_4376:0x1116B[p]>
   57E92:	1400      	**prefx    0x14
   57E93:	A19C      	bsr        +0x13A1 <___libgatt_lib_db_5657:0x59234[p]>
   57E94:	FB00      	**prefx    0xFB
   57E95:	1115      	ld         al, @0xFB11 <___libgatt_lib_db_2548>
   57E96:	FF00      	**prefx    0xFF
   57E97:	00C4      	and        al, #0xFF00
   57E98:	0100      	**prefx    0x1
   57E99:	BFB4      	or         al, #+0xBF
   57E9A:	FB00      	**prefx    0xFB
   57E9B:	1125      	st         al, @0xFB11 <___libgatt_lib_db_2548>
   57E9C:	FB00      	**prefx    0xFB
   57E9D:	1215      	ld         al, @0xFB12 <___libgatt_lib_db_2549>
   57E9E:	1300      	**prefx    0x13
   57E9F:	1C10      	ld         ah, #+0x131C
   57EA0:	FB00      	**prefx    0xFB
   57EA1:	1221      	st         ah, @0xFB12 <___libgatt_lib_db_2549>
   57EA2:	FB00      	**prefx    0xFB
   57EA3:	D115      	ld         al, @0xFAD1 <___libgatt_lib_db_2582>
   57EA4:	F0C4      	and        al, #0xFFF0
   57EA5:	06B4      	or         al, #+0x6
   57EA6:	FB00      	**prefx    0xFB
   57EA7:	D125      	st         al, @0xFAD1 <___libgatt_lib_db_2582>
   57EA8:	E70F      	leave      #-0x19

0x00057EA9 <.LFB7>:
   57EA9:	FD0B      	enter      #-0x3
   57EAA:	0027      	st         al, @(0x0, y)
   57EAB:	0214      	ld         al, #+0x2
   57EAC:	5625      	st         al, @0x56 <___libgatt_lib_db_1986>
   57EAD:	FB00      	**prefx    0xFB
   57EAE:	0915      	ld         al, @0xFB09 <___libgatt_lib_db_2636>
   57EAF:	04C4      	and        al, #0x4
   57EB0:	07F4      	beq        +0x7 <.LFB7+0xE:0x57EB7[p]>
   57EB1:	0714      	ld         al, #+0x7
   57EB2:	FB00      	**prefx    0xFB
   57EB3:	0D25      	st         al, @0xFB0D <___libgatt_lib_db_2628>
   57EB4:	0214      	ld         al, #+0x2
   57EB5:	1300      	**prefx    0x13
   57EB6:	6C9C      	bsr        +0x136C <___libgatt_lib_db_5658:0x59222[p]>
   57EB7:	6A00      	**prefx    0x6A
   57EB8:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   57EB9:	0010      	ld         ah, #+0x0
   57EBA:	3C00      	**prefx    0x3C
   57EBB:	8434      	add        al, #+0x3B84
   57EBC:	0140      	addc       ah, #+0x1
   57EBD:	FE27      	st         al, @(-0x2, y)
   57EBE:	FF23      	st         ah, @(-0x1, y)
   57EBF:	0017      	ld         al, @(0x0, y)
   57EC0:	FF0E      	ld         xh, @(-0x1, y)
   57EC1:	FE9F      	bsr        @(-0x2, y)
   57EC2:	0014      	ld         al, #+0x0
   57EC3:	5625      	st         al, @0x56 <___libgatt_lib_db_1986>
   57EC4:	FD0F      	leave      #-0x3

0x00057EC5 <___libgatt_lib_db_5549>:
   57EC5:	FE0B      	enter      #-0x2
   57EC6:	E019      	ld         x, @0xFFE0 <register ah>
   57EC7:	0484      	cmp        al, #+0x4
   57EC8:	0CF8      	bcc        +0xC <___libgatt_lib_db_5549+0xF:0x57ED4[p]>
   57EC9:	FB00      	**prefx    0xFB
   57ECA:	5625      	st         al, @0xFB56 <___libgatt_lib_db_4241>
   57ECB:	FB00      	**prefx    0xFB
   57ECC:	5515      	ld         al, @0xFB55 <___libgatt_lib_db_4240>
   57ECD:	0026      	st         al, @(0x0, x)
   57ECE:	FB00      	**prefx    0xFB
   57ECF:	5415      	ld         al, @0xFB54 <___libgatt_lib_db_4238>
   57ED0:	0126      	st         al, @(+0x1, x)
   57ED1:	FB00      	**prefx    0xFB
   57ED2:	5315      	ld         al, @0xFB53 <___libgatt_lib_db_4236>
   57ED3:	0226      	st         al, @(+0x2, x)
   57ED4:	FE0F      	leave      #-0x2

0x00057ED5 <___libgatt_lib_db_5548>:
   57ED5:	FE0B      	enter      #-0x2
   57ED6:	E019      	ld         x, @0xFFE0 <register ah>
   57ED7:	0484      	cmp        al, #+0x4
   57ED8:	0CF8      	bcc        +0xC <___libgatt_lib_db_5548+0xF:0x57EE4[p]>
   57ED9:	FB00      	**prefx    0xFB
   57EDA:	5625      	st         al, @0xFB56 <___libgatt_lib_db_4241>
   57EDB:	0016      	ld         al, @(0x0, x)
   57EDC:	FB00      	**prefx    0xFB
   57EDD:	5225      	st         al, @0xFB52 <___libgatt_lib_db_4239>
   57EDE:	0116      	ld         al, @(+0x1, x)
   57EDF:	FB00      	**prefx    0xFB
   57EE0:	5125      	st         al, @0xFB51 <___libgatt_lib_db_4237>
   57EE1:	0216      	ld         al, @(+0x2, x)
   57EE2:	FB00      	**prefx    0xFB
   57EE3:	5025      	st         al, @0xFB50 <___libgatt_lib_db_4235>
   57EE4:	FE0F      	leave      #-0x2

0x00057EE5 <___libgatt_lib_db_1872>:
   57EE5:	FE0B      	enter      #-0x2
   57EE6:	0510      	ld         ah, #+0x5
   57EE7:	0100      	**prefx    0x1
   57EE8:	FFC0      	and        ah, #0xFF
   57EE9:	E015      	ld         al, @0xFFE0 <register ah>
   57EEA:	E100      	**prefx    0xE1
   57EEB:	1E21      	st         ah, @0xE11E <patch_function_offset>
   57EEC:	0018      	ld         x, #+0x0
   57EED:	E100      	**prefx    0xE1
   57EEE:	1F29      	st         x, @0xE11F <patch_function_offset+0x1>
   57EEF:	0510      	ld         ah, #+0x5
   57EF0:	0100      	**prefx    0x1
   57EF1:	FFC0      	and        ah, #0xFF
   57EF2:	E085      	cmp        al, @0xFFE0 <register ah>
   57EF3:	05F4      	beq        +0x5 <___libgatt_lib_db_1872+0x13:0x57EF8[p]>
   57EF4:	3814      	ld         al, #+0x38
   57EF5:	FB00      	**prefx    0xFB
   57EF6:	3D00      	**prefx    0x3D
   57EF7:	3C9C      	bsr        -0x4C2C4 <fault:0xBC33[p]>
   57EF8:	4400      	**prefx    0x44
   57EF9:	0214      	ld         al, #+0x4402
   57EFA:	E100      	**prefx    0xE1
   57EFB:	2025      	st         al, @0xE120 <patch_bitmap_chip>
   57EFC:	0800      	**prefx    0x8
   57EFD:	3C18      	ld         x, #+0x83C
   57EFE:	E100      	**prefx    0xE1
   57EFF:	2129      	st         x, @0xE121 <patch_bitmap_chip+0x1>
   57F00:	0400      	**prefx    0x4
   57F01:	0314      	ld         al, #+0x403
   57F02:	E100      	**prefx    0xE1
   57F03:	2225      	st         al, @0xE122 <patch_bitmap_chip+0x2>
   57F04:	0018      	ld         x, #+0x0
   57F05:	E100      	**prefx    0xE1
   57F06:	2329      	st         x, @0xE123 <patch_bitmap_chip+0x3>
   57F07:	0814      	ld         al, #+0x8
   57F08:	E100      	**prefx    0xE1
   57F09:	2425      	st         al, @0xE124 <patch_bitmap_chip+0x4>
   57F0A:	F800      	**prefx    0xF8
   57F0B:	0018      	ld         x, #-0x800
   57F0C:	E100      	**prefx    0xE1
   57F0D:	2529      	st         x, @0xE125 <patch_bitmap_chip+0x5>
   57F0E:	0214      	ld         al, #+0x2
   57F0F:	E100      	**prefx    0xE1
   57F10:	2625      	st         al, @0xE126 <patch_bitmap_chip+0x6>
   57F11:	1018      	ld         x, #+0x10
   57F12:	E100      	**prefx    0xE1
   57F13:	2729      	st         x, @0xE127 <patch_bitmap_chip+0x7>
   57F14:	0D00      	**prefx    0xD
   57F15:	9B14      	ld         al, #+0xC9B
   57F16:	E100      	**prefx    0xE1
   57F17:	2825      	st         al, @0xE128 <patch_bitmap_chip+0x8>
   57F18:	0200      	**prefx    0x2
   57F19:	FD18      	ld         x, #+0x1FD
   57F1A:	E100      	**prefx    0xE1
   57F1B:	2929      	st         x, @0xE129 <patch_bitmap_chip+0x9>
   57F1C:	6600      	**prefx    0x66
   57F1D:	3F14      	ld         al, #+0x663F
   57F1E:	E100      	**prefx    0xE1
   57F1F:	2A25      	st         al, @0xE12A <patch_bitmap_chip+0xA>
   57F20:	A300      	**prefx    0xA3
   57F21:	5318      	ld         x, #-0x5CAD
   57F22:	E100      	**prefx    0xE1
   57F23:	1D29      	st         x, @0xE11D <patch_table_chip>
   57F24:	FE0F      	leave      #-0x2

0x00057F25 <___libgatt_lib_db_5558>:
   57F25:	FA0B      	enter      #-0x6
   57F26:	0323      	st         ah, @(+0x3, y)
   57F27:	0310      	ld         ah, #+0x3
   57F28:	031B      	ld         x, @(+0x3, y)
   57F29:	0022      	st         ah, @(0x0, x)
   57F2A:	FB00      	**prefx    0xFB
   57F2B:	5000      	**prefx    0x50
   57F2C:	A39C      	bsr        -0x4B05D <___libgatt_lib_db_1981:0xCECF[p]>
   57F2D:	031B      	ld         x, @(+0x3, y)
   57F2E:	0226      	st         al, @(+0x2, x)
   57F2F:	0122      	st         ah, @(+0x1, x)
   57F30:	0338      	add        x, #+0x3
   57F31:	0127      	st         al, @(+0x1, y)
   57F32:	0023      	st         ah, @(0x0, y)
   57F33:	0410      	ld         ah, #+0x4
   57F34:	0223      	st         ah, @(+0x2, y)
   57F35:	0314      	ld         al, #+0x3
   57F36:	E311      	ld         ah, @0xFFE3 <register uxl>
   57F37:	FB00      	**prefx    0xFB
   57F38:	4800      	**prefx    0x48
   57F39:	AF9C      	bsr        -0x4B851 <___libgatt_lib_db_1898:0xC6E8[p]>
   57F3A:	FA0F      	leave      #-0x6

0x00057F3B <Storage_GetStoreInfo>:
   57F3B:	F40B      	enter      #-0xC
   57F3C:	0923      	st         ah, @(+0x9, y)
   57F3D:	0010      	ld         ah, #+0x0
   57F3E:	091B      	ld         x, @(+0x9, y)
   57F3F:	0022      	st         ah, @(0x0, x)
   57F40:	0122      	st         ah, @(+0x1, x)
   57F41:	0222      	st         ah, @(+0x2, x)
   57F42:	0322      	st         ah, @(+0x3, x)
   57F43:	FB00      	**prefx    0xFB
   57F44:	5000      	**prefx    0x50
   57F45:	8A9C      	bsr        -0x4B076 <___libgatt_lib_db_1981:0xCECF[p]>
   57F46:	0127      	st         al, @(+0x1, y)
   57F47:	0023      	st         ah, @(0x0, y)
   57F48:	0514      	ld         al, #+0x5
   57F49:	0227      	st         al, @(+0x2, y)
   57F4A:	0314      	ld         al, #+0x3
   57F4B:	E411      	ld         ah, @0xFFE4 <register uy>
   57F4C:	0330      	add        ah, #+0x3
   57F4D:	FB00      	**prefx    0xFB
   57F4E:	4800      	**prefx    0x48
   57F4F:	999C      	bsr        -0x4B867 <___libgatt_lib_db_1898:0xC6E8[p]>
   57F50:	0827      	st         al, @(+0x8, y)
   57F51:	13F0      	bne        +0x13 <Storage_GetStoreInfo+0x29:0x57F64[p]>
   57F52:	0517      	ld         al, @(+0x5, y)
   57F53:	FB00      	**prefx    0xFB
   57F54:	4F00      	**prefx    0x4F
   57F55:	7A9C      	bsr        -0x4B086 <___libgatt_lib_db_1981:0xCECF[p]>
   57F56:	091B      	ld         x, @(+0x9, y)
   57F57:	0126      	st         al, @(+0x1, x)
   57F58:	0022      	st         ah, @(0x0, x)
   57F59:	0317      	ld         al, @(+0x3, y)
   57F5A:	0FC4      	and        al, #0xF
   57F5B:	0284      	cmp        al, #+0x2
   57F5C:	08F0      	bne        +0x8 <Storage_GetStoreInfo+0x29:0x57F64[p]>
   57F5D:	0717      	ld         al, @(+0x7, y)
   57F5E:	FB00      	**prefx    0xFB
   57F5F:	4F00      	**prefx    0x4F
   57F60:	6F9C      	bsr        -0x4B091 <___libgatt_lib_db_1981:0xCECF[p]>
   57F61:	091B      	ld         x, @(+0x9, y)
   57F62:	0326      	st         al, @(+0x3, x)
   57F63:	0222      	st         ah, @(+0x2, x)
   57F64:	0817      	ld         al, @(+0x8, y)
   57F65:	F40F      	leave      #-0xC

0x00057F66 <Storage_FindStore>:
   57F66:	EE0B      	enter      #-0x12
   57F67:	0280      	cmp        ah, #+0x2
   57F68:	08F4      	beq        +0x8 <Storage_FindStore+0xA:0x57F70[p]>
   57F69:	0580      	cmp        ah, #+0x5
   57F6A:	06F4      	beq        +0x6 <Storage_FindStore+0xA:0x57F70[p]>
   57F6B:	0480      	cmp        ah, #+0x4
   57F6C:	04F4      	beq        +0x4 <Storage_FindStore+0xA:0x57F70[p]>
   57F6D:	0C00      	**prefx    0xC
   57F6E:	0610      	ld         ah, #+0xC06
   57F6F:	4CE0      	bra        +0x4C <Storage_FindStore+0x55:0x57FBB[p]>
   57F70:	0318      	ld         x, #+0x3
   57F71:	012B      	st         x, @(+0x1, y)
   57F72:	FF18      	ld         x, #-0x1
   57F73:	022B      	st         x, @(+0x2, y)
   57F74:	032B      	st         x, @(+0x3, y)
   57F75:	0FC0      	and        ah, #0xF
   57F76:	0423      	st         ah, @(+0x4, y)
   57F77:	0527      	st         al, @(+0x5, y)
   57F78:	E411      	ld         ah, @0xFFE4 <register uy>
   57F79:	0830      	add        ah, #+0x8
   57F7A:	0023      	st         ah, @(0x0, y)
   57F7B:	0414      	ld         al, #+0x4
   57F7C:	F930      	add        ah, #-0x7
   57F7D:	FB00      	**prefx    0xFB
   57F7E:	5100      	**prefx    0x51
   57F7F:	C59C      	bsr        -0x4AF3B <___libgatt_lib_db_1979:0xD044[p]>
   57F80:	0F17      	ld         al, @(+0xF, y)
   57F81:	FA25      	st         al, @0xFFFA <(scratchpad)>
   57F82:	3AF0      	bne        +0x3A <Storage_FindStore+0x56:0x57FBC[p]>
   57F83:	0A17      	ld         al, @(+0xA, y)
   57F84:	0913      	ld         ah, @(+0x9, y)
   57F85:	01A0      	asl        #0x1
   57F86:	F925      	st         al, @0xFFF9 <(scratchpad)>
   57F87:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   57F88:	07F0      	bne        +0x7 <Storage_FindStore+0x29:0x57F8F[p]>
   57F89:	4000      	**prefx    0x40
   57F8A:	0084      	cmp        al, #+0x4000
   57F8B:	04F8      	bcc        +0x4 <Storage_FindStore+0x29:0x57F8F[p]>
   57F8C:	121B      	ld         x, @(+0x12, y)
   57F8D:	0026      	st         al, @(0x0, x)
   57F8E:	2EE0      	bra        +0x2E <Storage_FindStore+0x56:0x57FBC[p]>
   57F8F:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   57F90:	0484      	cmp        al, #+0x4
   57F91:	10F8      	bcc        +0x10 <Storage_FindStore+0x3B:0x57FA1[p]>
   57F92:	0384      	cmp        al, #+0x3
   57F93:	04F0      	bne        +0x4 <Storage_FindStore+0x31:0x57F97[p]>
   57F94:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   57F95:	F188      	cmp        x, #-0xF
   57F96:	0BF8      	bcc        +0xB <Storage_FindStore+0x3B:0x57FA1[p]>
   57F97:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   57F98:	0FC4      	and        al, #0xF
   57F99:	20F0      	bne        +0x20 <Storage_FindStore+0x53:0x57FB9[p]>
   57F9A:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   57F9B:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   57F9C:	0009      	**unsigned
   57F9D:	04A4      	lsr        #0x4
   57F9E:	4000      	**prefx    0x40
   57F9F:	00B4      	or         al, #+0x4000
   57FA0:	16E0      	bra        +0x16 <Storage_FindStore+0x50:0x57FB6[p]>
   57FA1:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   57FA2:	0400      	**prefx    0x4
   57FA3:	0080      	cmp        ah, #+0x400
   57FA4:	15F8      	bcc        +0x15 <Storage_FindStore+0x53:0x57FB9[p]>
   57FA5:	0400      	**prefx    0x4
   57FA6:	FF80      	cmp        ah, #+0x3FF
   57FA7:	05F0      	bne        +0x5 <Storage_FindStore+0x46:0x57FAC[p]>
   57FA8:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   57FA9:	F000      	**prefx    0xF0
   57FAA:	0184      	cmp        al, #-0xFFF
   57FAB:	0EF8      	bcc        +0xE <Storage_FindStore+0x53:0x57FB9[p]>
   57FAC:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   57FAD:	1000      	**prefx    0x10
   57FAE:	FFC4      	and        al, #0xFFF
   57FAF:	0AF0      	bne        +0xA <Storage_FindStore+0x53:0x57FB9[p]>
   57FB0:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   57FB1:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   57FB2:	0009      	**unsigned
   57FB3:	0CA4      	lsr        #0xC
   57FB4:	8000      	**prefx    0x80
   57FB5:	00B4      	or         al, #-0x8000
   57FB6:	121B      	ld         x, @(+0x12, y)
   57FB7:	0026      	st         al, @(0x0, x)
   57FB8:	04E0      	bra        +0x4 <Storage_FindStore+0x56:0x57FBC[p]>
   57FB9:	0C00      	**prefx    0xC
   57FBA:	0810      	ld         ah, #+0xC08
   57FBB:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   57FBC:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   57FBD:	EE0F      	leave      #-0x12

0x00057FBE <ConfigStoreReadDeviceKey>:
   57FBE:	FB0B      	enter      #-0x5
   57FBF:	0127      	st         al, @(+0x1, y)
   57FC0:	0223      	st         ah, @(+0x2, y)
   57FC1:	0200      	**prefx    0x2
   57FC2:	0014      	ld         al, #+0x200
   57FC3:	0310      	ld         ah, #+0x3
   57FC4:	FC00      	**prefx    0xFC
   57FC5:	EC00      	**prefx    0xEC
   57FC6:	3A9C      	bsr        -0x413C6 <___libgatt_lib_db_5419:0x16C00[p]>
   57FC7:	E119      	ld         x, @0xFFE1 <register al>
   57FC8:	0117      	ld         al, @(+0x1, y)
   57FC9:	0426      	st         al, @(+0x4, x)
   57FCA:	0217      	ld         al, @(+0x2, y)
   57FCB:	0526      	st         al, @(+0x5, x)
   57FCC:	0517      	ld         al, @(+0x5, y)
   57FCD:	0626      	st         al, @(+0x6, x)
   57FCE:	002B      	st         x, @(0x0, y)
   57FCF:	0314      	ld         al, #+0x3
   57FD0:	0110      	ld         ah, #+0x1
   57FD1:	FC00      	**prefx    0xFC
   57FD2:	EB00      	**prefx    0xEB
   57FD3:	639C      	bsr        -0x4149D <___libgatt_lib_db_5429:0x16B36[p]>
   57FD4:	FB0F      	leave      #-0x5

0x00057FD5 <ConfigStoreReadKey>:
   57FD5:	FD0B      	enter      #-0x3
   57FD6:	FF18      	ld         x, #-0x1
   57FD7:	002B      	st         x, @(0x0, y)
   57FD8:	E69C      	bsr        -0x1A <ConfigStoreReadDeviceKey:0x57FBE[p]>
   57FD9:	FD0F      	leave      #-0x3

0x00057FDA <___libgatt_lib_db_5559>:
   57FDA:	E90B      	enter      #-0x17
   57FDB:	201B      	ld         x, @(+0x20, y)
   57FDC:	1F17      	ld         al, @(+0x1F, y)
   57FDD:	1127      	st         al, @(+0x11, y)
   57FDE:	0316      	ld         al, @(+0x3, x)
   57FDF:	0200      	**prefx    0x2
   57FE0:	0884      	cmp        al, #+0x208
   57FE1:	0100      	**prefx    0x1
   57FE2:	A7F0      	bne        +0xA7 <___libgatt_lib_db_5559+0xAF:0x58089[p]>
   57FE3:	0416      	ld         al, @(+0x4, x)
   57FE4:	2384      	cmp        al, #+0x23
   57FE5:	0100      	**prefx    0x1
   57FE6:	A3F0      	bne        +0xA3 <___libgatt_lib_db_5559+0xAF:0x58089[p]>
   57FE7:	0516      	ld         al, @(+0x5, x)
   57FE8:	1327      	st         al, @(+0x13, y)
   57FE9:	0616      	ld         al, @(+0x6, x)
   57FEA:	0384      	cmp        al, #+0x3
   57FEB:	0100      	**prefx    0x1
   57FEC:	9DF0      	bne        +0x9D <___libgatt_lib_db_5559+0xAF:0x58089[p]>
   57FED:	0738      	add        x, #+0x7
   57FEE:	122B      	st         x, @(+0x12, y)
   57FEF:	5300      	**prefx    0x53
   57FF0:	4818      	ld         x, #+0x5348
   57FF1:	082B      	st         x, @(+0x8, y)
   57FF2:	4400      	**prefx    0x44
   57FF3:	5714      	ld         al, #+0x4457
   57FF4:	0927      	st         al, @(+0x9, y)
   57FF5:	0314      	ld         al, #+0x3
   57FF6:	E411      	ld         ah, @0xFFE4 <register uy>
   57FF7:	0430      	add        ah, #+0x4
   57FF8:	121B      	ld         x, @(+0x12, y)
   57FF9:	FD09      	bc2        
   57FFA:	E100      	**prefx    0xE1
   57FFB:	2B19      	ld         x, @0xE12B <cs_list>
   57FFC:	76E0      	bra        +0x76 <___libgatt_lib_db_5559+0x98:0x58072[p]>
   57FFD:	0F1B      	ld         x, @(+0xF, y)
   57FFE:	0016      	ld         al, @(0x0, x)
   57FFF:	0284      	cmp        al, #+0x2
   58000:	70F0      	bne        +0x70 <___libgatt_lib_db_5559+0x96:0x58070[p]>
   58001:	1317      	ld         al, @(+0x13, y)
   58002:	0586      	cmp        al, @(+0x5, x)
   58003:	6DF0      	bne        +0x6D <___libgatt_lib_db_5559+0x96:0x58070[p]>
   58004:	031A      	ld         x, @(+0x3, x)
   58005:	142B      	st         x, @(+0x14, y)
   58006:	0F1B      	ld         x, @(+0xF, y)
   58007:	071A      	ld         x, @(+0x7, x)
   58008:	143B      	add        x, @(+0x14, y)
   58009:	0D2B      	st         x, @(+0xD, y)
   5800A:	0F1B      	ld         x, @(+0xF, y)
   5800B:	0616      	ld         al, @(+0x6, x)
   5800C:	FB00      	**prefx    0xFB
   5800D:	4F00      	**prefx    0x4F
   5800E:	C19C      	bsr        -0x4B13F <___libgatt_lib_db_1981:0xCECF[p]>
   5800F:	E111      	ld         ah, @0xFFE1 <register al>
   58010:	0D1B      	ld         x, @(+0xD, y)
   58011:	0100      	**prefx    0x1
   58012:	8016      	ld         al, @(+0x80, x)
   58013:	8600      	**prefx    0x86
   58014:	0084      	cmp        al, #-0x7A00
   58015:	5BF0      	bne        +0x5B <___libgatt_lib_db_5559+0x96:0x58070[p]>
   58016:	1433      	add        ah, @(+0x14, y)
   58017:	1023      	st         ah, @(+0x10, y)
   58018:	0100      	**prefx    0x1
   58019:	8116      	ld         al, @(+0x81, x)
   5801A:	0184      	cmp        al, #+0x1
   5801B:	55F0      	bne        +0x55 <___libgatt_lib_db_5559+0x96:0x58070[p]>
   5801C:	0238      	add        x, #+0x2
   5801D:	0C2B      	st         x, @(+0xC, y)
   5801E:	0D17      	ld         al, @(+0xD, y)
   5801F:	0834      	add        al, #+0x8
   58020:	0E27      	st         al, @(+0xE, y)
   58021:	4BE0      	bra        +0x4B <___libgatt_lib_db_5559+0x92:0x5806C[p]>
   58022:	0E17      	ld         al, @(+0xE, y)
   58023:	0100      	**prefx    0x1
   58024:	8034      	add        al, #+0x80
   58025:	E419      	ld         x, @0xFFE4 <register uy>
   58026:	0338      	add        x, #+0x3
   58027:	002B      	st         x, @(0x0, y)
   58028:	E411      	ld         ah, @0xFFE4 <register uy>
   58029:	0230      	add        ah, #+0x2
   5802A:	FB00      	**prefx    0xFB
   5802B:	5900      	**prefx    0x59
   5802C:	1E9C      	bsr        -0x4A6E2 <___libgatt_lib_db_2020:0xD94A[p]>
   5802D:	E111      	ld         ah, @0xFFE1 <register al>
   5802E:	0217      	ld         al, @(+0x2, y)
   5802F:	2384      	cmp        al, #+0x23
   58030:	39F0      	bne        +0x39 <___libgatt_lib_db_5559+0x8F:0x58069[p]>
   58031:	0317      	ld         al, @(+0x3, y)
   58032:	0384      	cmp        al, #+0x3
   58033:	56F0      	bne        +0x56 <___libgatt_lib_db_5559+0xAF:0x58089[p]>
   58034:	0E17      	ld         al, @(+0xE, y)
   58035:	0727      	st         al, @(+0x7, y)
   58036:	0134      	add        al, #+0x1
   58037:	0B27      	st         al, @(+0xB, y)
   58038:	0E1B      	ld         x, @(+0xE, y)
   58039:	0100      	**prefx    0x1
   5803A:	8138      	add        x, #+0x81
   5803B:	0314      	ld         al, #+0x3
   5803C:	0027      	st         al, @(0x0, y)
   5803D:	E315      	ld         al, @0xFFE3 <register uxl>
   5803E:	1213      	ld         ah, @(+0x12, y)
   5803F:	FC00      	**prefx    0xFC
   58040:	DF00      	**prefx    0xDF
   58041:	F09C      	bsr        -0x42110 <MemCmp:0x15F31[p]>
   58042:	E199      	tst        @0xFFE1 <register al>
   58043:	32F4      	beq        +0x32 <___libgatt_lib_db_5559+0x9B:0x58075[p]>
   58044:	E419      	ld         x, @0xFFE4 <register uy>
   58045:	0438      	add        x, #+0x4
   58046:	002B      	st         x, @(0x0, y)
   58047:	0614      	ld         al, #+0x6
   58048:	0127      	st         al, @(+0x1, y)
   58049:	FF14      	ld         al, #-0x1
   5804A:	0C13      	ld         ah, @(+0xC, y)
   5804B:	FC00      	**prefx    0xFC
   5804C:	AB00      	**prefx    0xAB
   5804D:	429C      	bsr        -0x454BE <___libgatt_lib_db_4657:0x12B8F[p]>
   5804E:	E199      	tst        @0xFFE1 <register al>
   5804F:	3AF0      	bne        +0x3A <___libgatt_lib_db_5559+0xAF:0x58089[p]>
   58050:	121B      	ld         x, @(+0x12, y)
   58051:	002B      	st         x, @(0x0, y)
   58052:	0314      	ld         al, #+0x3
   58053:	0127      	st         al, @(+0x1, y)
   58054:	FF14      	ld         al, #-0x1
   58055:	0B13      	ld         ah, @(+0xB, y)
   58056:	FC00      	**prefx    0xFC
   58057:	AB00      	**prefx    0xAB
   58058:	379C      	bsr        -0x454C9 <___libgatt_lib_db_4657:0x12B8F[p]>
   58059:	0A27      	st         al, @(+0xA, y)
   5805A:	0C1B      	ld         x, @(+0xC, y)
   5805B:	0438      	add        x, #+0x4
   5805C:	0C2B      	st         x, @(+0xC, y)
   5805D:	0014      	ld         al, #+0x0
   5805E:	0027      	st         al, @(0x0, y)
   5805F:	0218      	ld         x, #+0x2
   58060:	012B      	st         x, @(+0x1, y)
   58061:	FF14      	ld         al, #-0x1
   58062:	0C13      	ld         ah, @(+0xC, y)
   58063:	FC00      	**prefx    0xFC
   58064:	AB00      	**prefx    0xAB
   58065:	2A9C      	bsr        -0x454D6 <___libgatt_lib_db_4657:0x12B8F[p]>
   58066:	0A9B      	tst        @(+0xA, y)
   58067:	0EF4      	beq        +0xE <___libgatt_lib_db_5559+0x9B:0x58075[p]>
   58068:	21E0      	bra        +0x21 <___libgatt_lib_db_5559+0xAF:0x58089[p]>
   58069:	0333      	add        ah, @(+0x3, y)
   5806A:	0E33      	add        ah, @(+0xE, y)
   5806B:	0E23      	st         ah, @(+0xE, y)
   5806C:	0E17      	ld         al, @(+0xE, y)
   5806D:	1087      	cmp        al, @(+0x10, y)
   5806E:	B4FC      	bcs        -0x4C <___libgatt_lib_db_5559+0x48:0x58022[p]>
   5806F:	1AE0      	bra        +0x1A <___libgatt_lib_db_5559+0xAF:0x58089[p]>
   58070:	0F1B      	ld         x, @(+0xF, y)
   58071:	081A      	ld         x, @(+0x8, x)
   58072:	0F2B      	st         x, @(+0xF, y)
   58073:	8AF0      	bne        -0x76 <___libgatt_lib_db_5559+0x23:0x57FFD[p]>
   58074:	15E0      	bra        +0x15 <___libgatt_lib_db_5559+0xAF:0x58089[p]>
   58075:	0200      	**prefx    0x2
   58076:	0914      	ld         al, #+0x209
   58077:	0110      	ld         ah, #+0x1
   58078:	FC00      	**prefx    0xFC
   58079:	EC00      	**prefx    0xEC
   5807A:	869C      	bsr        -0x4147A <___libgatt_lib_db_5419:0x16C00[p]>
   5807B:	E119      	ld         x, @0xFFE1 <register al>
   5807C:	0014      	ld         al, #+0x0
   5807D:	0426      	st         al, @(+0x4, x)
   5807E:	002B      	st         x, @(0x0, y)
   5807F:	1117      	ld         al, @(+0x11, y)
   58080:	0310      	ld         ah, #+0x3
   58081:	FC00      	**prefx    0xFC
   58082:	E800      	**prefx    0xE8
   58083:	B79C      	bsr        -0x41849 <___libgatt_lib_db_5354:0x1683A[p]>
   58084:	0018      	ld         x, #+0x0
   58085:	182B      	st         x, @(+0x18, y)
   58086:	D900      	**prefx    0xD9
   58087:	B514      	ld         al, #-0x274B
   58088:	1727      	st         al, @(+0x17, y)
   58089:	E90F      	leave      #-0x17

0x0005808A <Userstore_Write>:
   5808A:	015C      	sub        y, #+0x1
   5808B:	FA0B      	enter      #-0x6
   5808C:	0127      	st         al, @(+0x1, y)
   5808D:	0623      	st         ah, @(+0x6, y)
   5808E:	0717      	ld         al, @(+0x7, y)
   5808F:	0327      	st         al, @(+0x3, y)
   58090:	0223      	st         ah, @(+0x2, y)
   58091:	0D00      	**prefx    0xD
   58092:	0414      	ld         al, #+0xD04
   58093:	0510      	ld         ah, #+0x5
   58094:	FC00      	**prefx    0xFC
   58095:	EB00      	**prefx    0xEB
   58096:	6A9C      	bsr        -0x41496 <___libgatt_lib_db_5419:0x16C00[p]>
   58097:	E119      	ld         x, @0xFFE1 <register al>
   58098:	0117      	ld         al, @(+0x1, y)
   58099:	0426      	st         al, @(+0x4, x)
   5809A:	0317      	ld         al, @(+0x3, y)
   5809B:	0626      	st         al, @(+0x6, x)
   5809C:	0217      	ld         al, @(+0x2, y)
   5809D:	0526      	st         al, @(+0x5, x)
   5809E:	0817      	ld         al, @(+0x8, y)
   5809F:	0726      	st         al, @(+0x7, x)
   580A0:	0917      	ld         al, @(+0x9, y)
   580A1:	0826      	st         al, @(+0x8, x)
   580A2:	002B      	st         x, @(0x0, y)
   580A3:	1114      	ld         al, #+0x11
   580A4:	0110      	ld         ah, #+0x1
   580A5:	FC00      	**prefx    0xFC
   580A6:	E800      	**prefx    0xE8
   580A7:	939C      	bsr        -0x4186D <___libgatt_lib_db_5354:0x1683A[p]>
   580A8:	073C      	add        y, #+0x7
   580A9:	FE0E      	ld         xh, @(-0x2, y)
   580AA:	FDE3      	bra        @(-0x3, y)

0x000580AB <Userstore_Read>:
   580AB:	015C      	sub        y, #+0x1
   580AC:	FA0B      	enter      #-0x6
   580AD:	0127      	st         al, @(+0x1, y)
   580AE:	0623      	st         ah, @(+0x6, y)
   580AF:	0717      	ld         al, @(+0x7, y)
   580B0:	0327      	st         al, @(+0x3, y)
   580B1:	0223      	st         ah, @(+0x2, y)
   580B2:	0D00      	**prefx    0xD
   580B3:	0214      	ld         al, #+0xD02
   580B4:	0510      	ld         ah, #+0x5
   580B5:	FC00      	**prefx    0xFC
   580B6:	EB00      	**prefx    0xEB
   580B7:	499C      	bsr        -0x414B7 <___libgatt_lib_db_5419:0x16C00[p]>
   580B8:	E119      	ld         x, @0xFFE1 <register al>
   580B9:	0117      	ld         al, @(+0x1, y)
   580BA:	0426      	st         al, @(+0x4, x)
   580BB:	0317      	ld         al, @(+0x3, y)
   580BC:	0626      	st         al, @(+0x6, x)
   580BD:	0217      	ld         al, @(+0x2, y)
   580BE:	0526      	st         al, @(+0x5, x)
   580BF:	0817      	ld         al, @(+0x8, y)
   580C0:	0726      	st         al, @(+0x7, x)
   580C1:	0917      	ld         al, @(+0x9, y)
   580C2:	0826      	st         al, @(+0x8, x)
   580C3:	002B      	st         x, @(0x0, y)
   580C4:	1114      	ld         al, #+0x11
   580C5:	0110      	ld         ah, #+0x1
   580C6:	FC00      	**prefx    0xFC
   580C7:	E700      	**prefx    0xE7
   580C8:	729C      	bsr        -0x4188E <___libgatt_lib_db_5354:0x1683A[p]>
   580C9:	073C      	add        y, #+0x7
   580CA:	FE0E      	ld         xh, @(-0x2, y)
   580CB:	FDE3      	bra        @(-0x3, y)

0x000580CC <Userstore_Create>:
   580CC:	FB0B      	enter      #-0x5
   580CD:	0127      	st         al, @(+0x1, y)
   580CE:	0223      	st         ah, @(+0x2, y)
   580CF:	0D00      	**prefx    0xD
   580D0:	0614      	ld         al, #+0xD06
   580D1:	0410      	ld         ah, #+0x4
   580D2:	FC00      	**prefx    0xFC
   580D3:	EB00      	**prefx    0xEB
   580D4:	2C9C      	bsr        -0x414D4 <___libgatt_lib_db_5419:0x16C00[p]>
   580D5:	E119      	ld         x, @0xFFE1 <register al>
   580D6:	0117      	ld         al, @(+0x1, y)
   580D7:	0426      	st         al, @(+0x4, x)
   580D8:	0217      	ld         al, @(+0x2, y)
   580D9:	0526      	st         al, @(+0x5, x)
   580DA:	0517      	ld         al, @(+0x5, y)
   580DB:	0626      	st         al, @(+0x6, x)
   580DC:	0617      	ld         al, @(+0x6, y)
   580DD:	0726      	st         al, @(+0x7, x)
   580DE:	002B      	st         x, @(0x0, y)
   580DF:	1114      	ld         al, #+0x11
   580E0:	0110      	ld         ah, #+0x1
   580E1:	FC00      	**prefx    0xFC
   580E2:	E700      	**prefx    0xE7
   580E3:	579C      	bsr        -0x418A9 <___libgatt_lib_db_5354:0x1683A[p]>
   580E4:	FB0F      	leave      #-0x5

0x000580E5 <Userstore_Open>:
   580E5:	FC0B      	enter      #-0x4
   580E6:	0127      	st         al, @(+0x1, y)
   580E7:	0D00      	**prefx    0xD
   580E8:	0A14      	ld         al, #+0xD0A
   580E9:	0110      	ld         ah, #+0x1
   580EA:	FC00      	**prefx    0xFC
   580EB:	EB00      	**prefx    0xEB
   580EC:	149C      	bsr        -0x414EC <___libgatt_lib_db_5419:0x16C00[p]>
   580ED:	E119      	ld         x, @0xFFE1 <register al>
   580EE:	0117      	ld         al, @(+0x1, y)
   580EF:	0426      	st         al, @(+0x4, x)
   580F0:	002B      	st         x, @(0x0, y)
   580F1:	1114      	ld         al, #+0x11
   580F2:	0110      	ld         ah, #+0x1
   580F3:	FC00      	**prefx    0xFC
   580F4:	E700      	**prefx    0xE7
   580F5:	459C      	bsr        -0x418BB <___libgatt_lib_db_5354:0x1683A[p]>
   580F6:	FC0F      	leave      #-0x4

0x000580F7 <.LFB3>:
   580F7:	FE0B      	enter      #-0x2
   580F8:	E119      	ld         x, @0xFFE1 <register al>
   580F9:	4915      	ld         al, @0x49 <___libaction_server_472>
   580FA:	FDC4      	and        al, #0xFFFD
   580FB:	4925      	st         al, @0x49 <___libaction_server_472>
   580FC:	0114      	ld         al, #+0x1
   580FD:	E3A1      	asl        @0xFFE3 <register uxl>
   580FE:	5225      	st         al, @0x52 <___libcsrmesh_285>
   580FF:	FE0F      	leave      #-0x2

0x00058100 <___libgatt_lib_db_5561>:
   58100:	EB0B      	enter      #-0x15
   58101:	8000      	**prefx    0x80
   58102:	FF10      	ld         ah, #+0x7FFF
   58103:	0223      	st         ah, @(+0x2, y)
   58104:	FF14      	ld         al, #-0x1
   58105:	0327      	st         al, @(+0x3, y)
   58106:	FB00      	**prefx    0xFB
   58107:	AA00      	**prefx    0xAA
   58108:	5E9C      	bsr        -0x555A2 <TimeGet32:0x2B66[p]>
   58109:	0727      	st         al, @(+0x7, y)
   5810A:	0623      	st         ah, @(+0x6, y)
   5810B:	E419      	ld         x, @0xFFE4 <register uy>
   5810C:	1538      	add        x, #+0x15
   5810D:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5810E:	1617      	ld         al, @(+0x16, y)
   5810F:	151B      	ld         x, @(+0x15, y)
   58110:	0010      	ld         ah, #+0x0
   58111:	10A0      	asl        #0x10
   58112:	E3B5      	or         al, @0xFFE3 <register uxl>
   58113:	E099      	tst        @0xFFE0 <register ah>
   58114:	0100      	**prefx    0x1
   58115:	92F0      	bne        +0x92 <___libgatt_lib_db_5561+0xA7:0x581A7[p]>
   58116:	E700      	**prefx    0xE7
   58117:	7684      	cmp        al, #-0x188A
   58118:	0100      	**prefx    0x1
   58119:	8EF0      	bne        +0x8E <___libgatt_lib_db_5561+0xA7:0x581A7[p]>
   5811A:	0110      	ld         ah, #+0x1
   5811B:	6D00      	**prefx    0x6D
   5811C:	D221      	st         ah, @0x6CD2 <patch_can_sleep>
   5811D:	6A00      	**prefx    0x6A
   5811E:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5811F:	0010      	ld         ah, #+0x0
   58120:	8E00      	**prefx    0x8E
   58121:	8234      	add        al, #-0x727E
   58122:	0040      	addc       ah, #+0x0
   58123:	FE27      	st         al, @(-0x2, y)
   58124:	FF23      	st         ah, @(-0x1, y)
   58125:	E415      	ld         al, @0xFFE4 <register uy>
   58126:	0234      	add        al, #+0x2
   58127:	FF0E      	ld         xh, @(-0x1, y)
   58128:	FE9F      	bsr        @(-0x2, y)
   58129:	E199      	tst        @0xFFE1 <register al>
   5812A:	04F4      	beq        +0x4 <___libgatt_lib_db_5561+0x2E:0x5812E[p]>
   5812B:	0284      	cmp        al, #+0x2
   5812C:	1CF0      	bne        +0x1C <___libgatt_lib_db_5561+0x48:0x58148[p]>
   5812D:	11E0      	bra        +0x11 <___libgatt_lib_db_5561+0x3E:0x5813E[p]>
   5812E:	6A00      	**prefx    0x6A
   5812F:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58130:	0010      	ld         ah, #+0x0
   58131:	1100      	**prefx    0x11
   58132:	5D34      	add        al, #+0x115D
   58133:	0140      	addc       ah, #+0x1
   58134:	FE27      	st         al, @(-0x2, y)
   58135:	FF23      	st         ah, @(-0x1, y)
   58136:	FF0E      	ld         xh, @(-0x1, y)
   58137:	FE9F      	bsr        @(-0x2, y)
   58138:	0014      	ld         al, #+0x0
   58139:	1627      	st         al, @(+0x16, y)
   5813A:	E800      	**prefx    0xE8
   5813B:	E618      	ld         x, #-0x181A
   5813C:	152B      	st         x, @(+0x15, y)
   5813D:	76E0      	bra        +0x76 <___libgatt_lib_db_5561+0xB3:0x581B3[p]>
   5813E:	0010      	ld         ah, #+0x0
   5813F:	6D00      	**prefx    0x6D
   58140:	D221      	st         ah, @0x6CD2 <patch_can_sleep>
   58141:	5815      	ld         al, @0x58 <___libcsrmesh_222>
   58142:	5719      	ld         x, @0x57 <___libgatt_lib_db_3558>
   58143:	E311      	ld         ah, @0xFFE3 <register uxl>
   58144:	0600      	**prefx    0x6
   58145:	00B4      	or         al, #+0x600
   58146:	5825      	st         al, @0x58 <___libcsrmesh_222>
   58147:	5721      	st         ah, @0x57 <___libgatt_lib_db_3558>
   58148:	FB00      	**prefx    0xFB
   58149:	AA00      	**prefx    0xAA
   5814A:	1C9C      	bsr        -0x555E4 <TimeGet32:0x2B66[p]>
   5814B:	0527      	st         al, @(+0x5, y)
   5814C:	0423      	st         ah, @(+0x4, y)
   5814D:	6D00      	**prefx    0x6D
   5814E:	D299      	tst        @0x6CD2 <patch_can_sleep>
   5814F:	64F4      	beq        +0x64 <___libgatt_lib_db_5561+0xB3:0x581B3[p]>
   58150:	0217      	ld         al, @(+0x2, y)
   58151:	1127      	st         al, @(+0x11, y)
   58152:	031B      	ld         x, @(+0x3, y)
   58153:	122B      	st         x, @(+0x12, y)
   58154:	8000      	**prefx    0x80
   58155:	FF84      	cmp        al, #+0x7FFF
   58156:	03F0      	bne        +0x3 <___libgatt_lib_db_5561+0x59:0x58159[p]>
   58157:	FF88      	cmp        x, #-0x1
   58158:	5BF4      	beq        +0x5B <___libgatt_lib_db_5561+0xB3:0x581B3[p]>
   58159:	F300      	**prefx    0xF3
   5815A:	1F15      	ld         al, @0xF31F <___libgatt_lib_db_4177>
   5815B:	119B      	tst        @(+0x11, y)
   5815C:	03EC      	bmi        +0x3 <___libgatt_lib_db_5561+0x5F:0x5815F[p]>
   5815D:	02F4      	beq        +0x2 <___libgatt_lib_db_5561+0x5F:0x5815F[p]>
   5815E:	06E0      	bra        +0x6 <___libgatt_lib_db_5561+0x64:0x58164[p]>
   5815F:	119B      	tst        @(+0x11, y)
   58160:	43F0      	bne        +0x43 <___libgatt_lib_db_5561+0xA3:0x581A3[p]>
   58161:	1213      	ld         ah, @(+0x12, y)
   58162:	E181      	cmp        ah, @0xFFE1 <register al>
   58163:	402C      	bcz        +0x40 <___libgatt_lib_db_5561+0xA3:0x581A3[p]>
   58164:	F300      	**prefx    0xF3
   58165:	6315      	ld         al, @0xF363 <___libgatt_lib_db_4180>
   58166:	0A27      	st         al, @(+0xA, y)
   58167:	FB00      	**prefx    0xFB
   58168:	AA00      	**prefx    0xAA
   58169:	FD9C      	bsr        -0x55603 <TimeGet32:0x2B66[p]>
   5816A:	0927      	st         al, @(+0x9, y)
   5816B:	0823      	st         ah, @(+0x8, y)
   5816C:	1113      	ld         ah, @(+0x11, y)
   5816D:	1217      	ld         al, @(+0x12, y)
   5816E:	CE34      	add        al, #-0x32
   5816F:	FF40      	addc       ah, #-0x1
   58170:	0C27      	st         al, @(+0xC, y)
   58171:	0B23      	st         ah, @(+0xB, y)
   58172:	0C17      	ld         al, @(+0xC, y)
   58173:	0B13      	ld         ah, @(+0xB, y)
   58174:	0A57      	sub        al, @(+0xA, y)
   58175:	0060      	subc       ah, #+0x0
   58176:	0C27      	st         al, @(+0xC, y)
   58177:	0B23      	st         ah, @(+0xB, y)
   58178:	0C1B      	ld         x, @(+0xC, y)
   58179:	E315      	ld         al, @0xFFE3 <register uxl>
   5817A:	0B1B      	ld         x, @(+0xB, y)
   5817B:	E311      	ld         ah, @0xFFE3 <register uxl>
   5817C:	0737      	add        al, @(+0x7, y)
   5817D:	0643      	addc       ah, @(+0x6, y)
   5817E:	0E27      	st         al, @(+0xE, y)
   5817F:	0D23      	st         ah, @(+0xD, y)
   58180:	0E17      	ld         al, @(+0xE, y)
   58181:	0D13      	ld         ah, @(+0xD, y)
   58182:	0557      	sub        al, @(+0x5, y)
   58183:	0463      	subc       ah, @(+0x4, y)
   58184:	0E27      	st         al, @(+0xE, y)
   58185:	0D23      	st         ah, @(+0xD, y)
   58186:	0E1B      	ld         x, @(+0xE, y)
   58187:	E315      	ld         al, @0xFFE3 <register uxl>
   58188:	0D1B      	ld         x, @(+0xD, y)
   58189:	E311      	ld         ah, @0xFFE3 <register uxl>
   5818A:	0937      	add        al, @(+0x9, y)
   5818B:	0843      	addc       ah, @(+0x8, y)
   5818C:	4B25      	st         al, @0x4B <___libgatt_lib_db_1279>
   5818D:	4A21      	st         ah, @0x4A <___libgatt_lib_db_1327>
   5818E:	4915      	ld         al, @0x49 <___libaction_server_472>
   5818F:	02B4      	or         al, #+0x2
   58190:	4925      	st         al, @0x49 <___libaction_server_472>
   58191:	6A00      	**prefx    0x6A
   58192:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58193:	0010      	ld         ah, #+0x0
   58194:	1100      	**prefx    0x11
   58195:	6B34      	add        al, #+0x116B
   58196:	0140      	addc       ah, #+0x1
   58197:	1027      	st         al, @(+0x10, y)
   58198:	0F23      	st         ah, @(+0xF, y)
   58199:	8100      	**prefx    0x81
   5819A:	F710      	ld         ah, #-0x7F09
   5819B:	0123      	st         ah, @(+0x1, y)
   5819C:	0514      	ld         al, #+0x5
   5819D:	0027      	st         al, @(0x0, y)
   5819E:	0014      	ld         al, #+0x0
   5819F:	0110      	ld         ah, #+0x1
   581A0:	0F0E      	ld         xh, @(+0xF, y)
   581A1:	109F      	bsr        @(+0x10, y)
   581A2:	11E0      	bra        +0x11 <___libgatt_lib_db_5561+0xB3:0x581B3[p]>
   581A3:	0018      	ld         x, #+0x0
   581A4:	6D00      	**prefx    0x6D
   581A5:	D229      	st         x, @0x6CD2 <patch_can_sleep>
   581A6:	0DE0      	bra        +0xD <___libgatt_lib_db_5561+0xB3:0x581B3[p]>
   581A7:	6D00      	**prefx    0x6D
   581A8:	D299      	tst        @0x6CD2 <patch_can_sleep>
   581A9:	04F0      	bne        +0x4 <___libgatt_lib_db_5561+0xAD:0x581AD[p]>
   581AA:	0010      	ld         ah, #+0x0
   581AB:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   581AC:	0722      	st         ah, @(+0x7, x)
   581AD:	0014      	ld         al, #+0x0
   581AE:	1627      	st         al, @(+0x16, y)
   581AF:	E800      	**prefx    0xE8
   581B0:	D010      	ld         ah, #-0x1830
   581B1:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   581B2:	0022      	st         ah, @(0x0, x)
   581B3:	EB0F      	leave      #-0x15

0x000581B4 <___libgatt_lib_db_5567>:
   581B4:	FE0B      	enter      #-0x2
   581B5:	0C1B      	ld         x, @(+0xC, y)
   581B6:	0316      	ld         al, @(+0x3, x)
   581B7:	FF00      	**prefx    0xFF
   581B8:	00C4      	and        al, #0xFF00
   581B9:	2000      	**prefx    0x20
   581BA:	0084      	cmp        al, #+0x2000
   581BB:	03F0      	bne        +0x3 <___libgatt_lib_db_5567+0xA:0x581BE[p]>
   581BC:	0114      	ld         al, #+0x1
   581BD:	0427      	st         al, @(+0x4, y)
   581BE:	FE0F      	leave      #-0x2

0x000581BF <___libgatt_lib_db_5566>:
   581BF:	FE0B      	enter      #-0x2
   581C0:	0417      	ld         al, @(+0x4, y)
   581C1:	051B      	ld         x, @(+0x5, y)
   581C2:	1F00      	**prefx    0x1F
   581C3:	1084      	cmp        al, #+0x1F10
   581C4:	08F4      	beq        +0x8 <___libgatt_lib_db_5566+0xD:0x581CC[p]>
   581C5:	1F00      	**prefx    0x1F
   581C6:	1184      	cmp        al, #+0x1F11
   581C7:	03F4      	beq        +0x3 <___libgatt_lib_db_5566+0xB:0x581CA[p]>
   581C8:	0014      	ld         al, #+0x0
   581C9:	07E0      	bra        +0x7 <___libgatt_lib_db_5566+0x11:0x581D0[p]>
   581CA:	0314      	ld         al, #+0x3
   581CB:	02E0      	bra        +0x2 <___libgatt_lib_db_5566+0xE:0x581CD[p]>
   581CC:	0514      	ld         al, #+0x5
   581CD:	0026      	st         al, @(0x0, x)
   581CE:	063C      	add        y, #+0x6
   581CF:	0414      	ld         al, #+0x4
   581D0:	FE0F      	leave      #-0x2

0x000581D1 <___libgatt_lib_db_5571>:
   581D1:	E100      	**prefx    0xE1
   581D2:	3615      	ld         al, @0xE136 <uci_transport>
   581D3:	1800      	**prefx    0x18
   581D4:	7584      	cmp        al, #+0x1875
   581D5:	05F0      	bne        +0x5 <___libgatt_lib_db_5571+0x9:0x581DA[p]>
   581D6:	6100      	**prefx    0x61
   581D7:	E614      	ld         al, #+0x60E6
   581D8:	E100      	**prefx    0xE1
   581D9:	3625      	st         al, @0xE136 <uci_transport>
   581DA:	00E2      	bra        0x0, x

0x000581DB <___libgatt_lib_db_5572>:
   581DB:	F50B      	enter      #-0xB
   581DC:	E119      	ld         x, @0xFFE1 <register al>
   581DD:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   581DE:	0316      	ld         al, @(+0x3, x)
   581DF:	0200      	**prefx    0x2
   581E0:	0184      	cmp        al, #+0x201
   581E1:	0EF4      	beq        +0xE <___libgatt_lib_db_5572+0x14:0x581EF[p]>
   581E2:	6A00      	**prefx    0x6A
   581E3:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   581E4:	0010      	ld         ah, #+0x0
   581E5:	EF00      	**prefx    0xEF
   581E6:	0834      	add        al, #-0x10F8
   581E7:	0040      	addc       ah, #+0x0
   581E8:	FE27      	st         al, @(-0x2, y)
   581E9:	FF23      	st         ah, @(-0x1, y)
   581EA:	E315      	ld         al, @0xFFE3 <register uxl>
   581EB:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   581EC:	FF0E      	ld         xh, @(-0x1, y)
   581ED:	FE9F      	bsr        @(-0x2, y)
   581EE:	70E0      	bra        +0x70 <___libgatt_lib_db_5572+0x83:0x5825E[p]>
   581EF:	0516      	ld         al, @(+0x5, x)
   581F0:	4284      	cmp        al, #+0x42
   581F1:	06F4      	beq        +0x6 <___libgatt_lib_db_5572+0x1C:0x581F7[p]>
   581F2:	7684      	cmp        al, #+0x76
   581F3:	16F4      	beq        +0x16 <___libgatt_lib_db_5572+0x2E:0x58209[p]>
   581F4:	0C00      	**prefx    0xC
   581F5:	0314      	ld         al, #+0xC03
   581F6:	68E0      	bra        +0x68 <___libgatt_lib_db_5572+0x83:0x5825E[p]>
   581F7:	091A      	ld         x, @(+0x9, x)
   581F8:	6A00      	**prefx    0x6A
   581F9:	FE29      	st         x, @0x69FE <g_uart_baud_rate>
   581FA:	6A00      	**prefx    0x6A
   581FB:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   581FC:	0010      	ld         ah, #+0x0
   581FD:	D400      	**prefx    0xD4
   581FE:	5E34      	add        al, #-0x2BA2
   581FF:	0040      	addc       ah, #+0x0
   58200:	FE27      	st         al, @(-0x2, y)
   58201:	FF23      	st         ah, @(-0x1, y)
   58202:	0014      	ld         al, #+0x0
   58203:	0027      	st         al, @(0x0, y)
   58204:	1014      	ld         al, #+0x10
   58205:	7610      	ld         ah, #+0x76
   58206:	FF0E      	ld         xh, @(-0x1, y)
   58207:	FE9F      	bsr        @(-0x2, y)
   58208:	55E0      	bra        +0x55 <___libgatt_lib_db_5572+0x82:0x5825D[p]>
   58209:	049A      	tst        @(+0x4, x)
   5820A:	08F0      	bne        +0x8 <___libgatt_lib_db_5572+0x37:0x58212[p]>
   5820B:	0916      	ld         al, @(+0x9, x)
   5820C:	6A00      	**prefx    0x6A
   5820D:	FC25      	st         al, @0x69FC <g_uart_pios>
   5820E:	0A1A      	ld         x, @(+0xA, x)
   5820F:	6A00      	**prefx    0x6A
   58210:	FD29      	st         x, @0x69FD <GattDiscoverServiceChar>
   58211:	08E0      	bra        +0x8 <___libgatt_lib_db_5572+0x3E:0x58219[p]>
   58212:	8000      	**prefx    0x80
   58213:	0814      	ld         al, #-0x7FF8
   58214:	6A00      	**prefx    0x6A
   58215:	FC25      	st         al, @0x69FC <g_uart_pios>
   58216:	0134      	add        al, #+0x1
   58217:	6A00      	**prefx    0x6A
   58218:	FD25      	st         al, @0x69FD <GattDiscoverServiceChar>
   58219:	6A00      	**prefx    0x6A
   5821A:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5821B:	0010      	ld         ah, #+0x0
   5821C:	F534      	add        al, #-0xB
   5821D:	0040      	addc       ah, #+0x0
   5821E:	FE27      	st         al, @(-0x2, y)
   5821F:	FF23      	st         ah, @(-0x1, y)
   58220:	1014      	ld         al, #+0x10
   58221:	6A00      	**prefx    0x6A
   58222:	FE11      	ld         ah, @0x69FE <g_uart_baud_rate>
   58223:	FF0E      	ld         xh, @(-0x1, y)
   58224:	FE9F      	bsr        @(-0x2, y)
   58225:	6A00      	**prefx    0x6A
   58226:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58227:	6A00      	**prefx    0x6A
   58228:	FB19      	ld         x, @0x69FB <GattFindIncludedServices>
   58229:	0010      	ld         ah, #+0x0
   5822A:	FE00      	**prefx    0xFE
   5822B:	0834      	add        al, #-0x1F8
   5822C:	0040      	addc       ah, #+0x0
   5822D:	0227      	st         al, @(+0x2, y)
   5822E:	0123      	st         ah, @(+0x1, y)
   5822F:	0010      	ld         ah, #+0x0
   58230:	E315      	ld         al, @0xFFE3 <register uxl>
   58231:	F000      	**prefx    0xF0
   58232:	8034      	add        al, #-0x1080
   58233:	0040      	addc       ah, #+0x0
   58234:	0027      	st         al, @(0x0, y)
   58235:	0100      	**prefx    0x1
   58236:	9714      	ld         al, #+0x97
   58237:	010E      	ld         xh, @(+0x1, y)
   58238:	029F      	bsr        @(+0x2, y)
   58239:	6A00      	**prefx    0x6A
   5823A:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5823B:	0010      	ld         ah, #+0x0
   5823C:	7700      	**prefx    0x77
   5823D:	8F34      	add        al, #+0x768F
   5823E:	0040      	addc       ah, #+0x0
   5823F:	0427      	st         al, @(+0x4, y)
   58240:	0323      	st         ah, @(+0x3, y)
   58241:	0114      	ld         al, #+0x1
   58242:	030E      	ld         xh, @(+0x3, y)
   58243:	049F      	bsr        @(+0x4, y)
   58244:	6A00      	**prefx    0x6A
   58245:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58246:	0010      	ld         ah, #+0x0
   58247:	6C00      	**prefx    0x6C
   58248:	3B34      	add        al, #+0x6C3B
   58249:	0140      	addc       ah, #+0x1
   5824A:	0627      	st         al, @(+0x6, y)
   5824B:	0523      	st         ah, @(+0x5, y)
   5824C:	1A14      	ld         al, #+0x1A
   5824D:	050E      	ld         xh, @(+0x5, y)
   5824E:	069F      	bsr        @(+0x6, y)
   5824F:	E119      	ld         x, @0xFFE1 <register al>
   58250:	6A00      	**prefx    0x6A
   58251:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58252:	0010      	ld         ah, #+0x0
   58253:	6800      	**prefx    0x68
   58254:	3A34      	add        al, #+0x683A
   58255:	0140      	addc       ah, #+0x1
   58256:	0827      	st         al, @(+0x8, y)
   58257:	0723      	st         ah, @(+0x7, y)
   58258:	002B      	st         x, @(0x0, y)
   58259:	1014      	ld         al, #+0x10
   5825A:	1010      	ld         ah, #+0x10
   5825B:	070E      	ld         xh, @(+0x7, y)
   5825C:	089F      	bsr        @(+0x8, y)
   5825D:	0014      	ld         al, #+0x0
   5825E:	F50F      	leave      #-0xB

0x0005825F <StoreUpdate_RunAppOnce>:
   5825F:	FB00      	**prefx    0xFB
   58260:	C025      	st         al, @0xFAC0 <___libgatt_lib_db_2564>
   58261:	00E2      	bra        0x0, x

0x00058262 <StoreUpdate_GetAppId>:
   58262:	FB0B      	enter      #-0x5
   58263:	6A00      	**prefx    0x6A
   58264:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58265:	0010      	ld         ah, #+0x0
   58266:	EB00      	**prefx    0xEB
   58267:	9A34      	add        al, #-0x1566
   58268:	0040      	addc       ah, #+0x0
   58269:	FE27      	st         al, @(-0x2, y)
   5826A:	FF23      	st         ah, @(-0x1, y)
   5826B:	FF0E      	ld         xh, @(-0x1, y)
   5826C:	FE9F      	bsr        @(-0x2, y)
   5826D:	0027      	st         al, @(0x0, y)
   5826E:	6A00      	**prefx    0x6A
   5826F:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58270:	0010      	ld         ah, #+0x0
   58271:	C200      	**prefx    0xC2
   58272:	4634      	add        al, #-0x3DBA
   58273:	0040      	addc       ah, #+0x0
   58274:	0227      	st         al, @(+0x2, y)
   58275:	0123      	st         ah, @(+0x1, y)
   58276:	010E      	ld         xh, @(+0x1, y)
   58277:	029F      	bsr        @(+0x2, y)
   58278:	0013      	ld         ah, @(0x0, y)
   58279:	FB0F      	leave      #-0x5

0x0005827A <StoreUpdate_HashStore>:
   5827A:	015C      	sub        y, #+0x1
   5827B:	F60B      	enter      #-0xA
   5827C:	0127      	st         al, @(+0x1, y)
   5827D:	0A23      	st         ah, @(+0xA, y)
   5827E:	0B17      	ld         al, @(+0xB, y)
   5827F:	0527      	st         al, @(+0x5, y)
   58280:	0423      	st         ah, @(+0x4, y)
   58281:	0D17      	ld         al, @(+0xD, y)
   58282:	0727      	st         al, @(+0x7, y)
   58283:	0C17      	ld         al, @(+0xC, y)
   58284:	0627      	st         al, @(+0x6, y)
   58285:	6A00      	**prefx    0x6A
   58286:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58287:	0010      	ld         ah, #+0x0
   58288:	6C00      	**prefx    0x6C
   58289:	0034      	add        al, #+0x6C00
   5828A:	0140      	addc       ah, #+0x1
   5828B:	FE27      	st         al, @(-0x2, y)
   5828C:	FF23      	st         ah, @(-0x1, y)
   5828D:	1F00      	**prefx    0x1F
   5828E:	1014      	ld         al, #+0x1F10
   5828F:	0610      	ld         ah, #+0x6
   58290:	FF0E      	ld         xh, @(-0x1, y)
   58291:	FE9F      	bsr        @(-0x2, y)
   58292:	E119      	ld         x, @0xFFE1 <register al>
   58293:	0117      	ld         al, @(+0x1, y)
   58294:	0426      	st         al, @(+0x4, x)
   58295:	0E17      	ld         al, @(+0xE, y)
   58296:	0926      	st         al, @(+0x9, x)
   58297:	0517      	ld         al, @(+0x5, y)
   58298:	0626      	st         al, @(+0x6, x)
   58299:	0417      	ld         al, @(+0x4, y)
   5829A:	0526      	st         al, @(+0x5, x)
   5829B:	0717      	ld         al, @(+0x7, y)
   5829C:	0826      	st         al, @(+0x8, x)
   5829D:	0617      	ld         al, @(+0x6, y)
   5829E:	0726      	st         al, @(+0x7, x)
   5829F:	6A00      	**prefx    0x6A
   582A0:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   582A1:	0010      	ld         ah, #+0x0
   582A2:	6800      	**prefx    0x68
   582A3:	3A34      	add        al, #+0x683A
   582A4:	0140      	addc       ah, #+0x1
   582A5:	0327      	st         al, @(+0x3, y)
   582A6:	0223      	st         ah, @(+0x2, y)
   582A7:	002B      	st         x, @(0x0, y)
   582A8:	0B14      	ld         al, #+0xB
   582A9:	0110      	ld         ah, #+0x1
   582AA:	020E      	ld         xh, @(+0x2, y)
   582AB:	039F      	bsr        @(+0x3, y)
   582AC:	0B3C      	add        y, #+0xB
   582AD:	FE0E      	ld         xh, @(-0x2, y)
   582AE:	FDE3      	bra        @(-0x3, y)

0x000582AF <.LFB9>:
   582AF:	F80B      	enter      #-0x8
   582B0:	E119      	ld         x, @0xFFE1 <register al>
   582B1:	6A00      	**prefx    0x6A
   582B2:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   582B3:	0010      	ld         ah, #+0x0
   582B4:	C700      	**prefx    0xC7
   582B5:	E834      	add        al, #-0x3918
   582B6:	0040      	addc       ah, #+0x0
   582B7:	FE27      	st         al, @(-0x2, y)
   582B8:	FF23      	st         ah, @(-0x1, y)
   582B9:	0216      	ld         al, @(+0x2, x)
   582BA:	0112      	ld         ah, @(+0x1, x)
   582BB:	0434      	add        al, #+0x4
   582BC:	0040      	addc       ah, #+0x0
   582BD:	0127      	st         al, @(+0x1, y)
   582BE:	0023      	st         ah, @(0x0, y)
   582BF:	0114      	ld         al, #+0x1
   582C0:	0227      	st         al, @(+0x2, y)
   582C1:	0016      	ld         al, @(0x0, x)
   582C2:	E411      	ld         ah, @0xFFE4 <register uy>
   582C3:	0330      	add        ah, #+0x3
   582C4:	FF0E      	ld         xh, @(-0x1, y)
   582C5:	FE9F      	bsr        @(-0x2, y)
   582C6:	6A00      	**prefx    0x6A
   582C7:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   582C8:	0010      	ld         ah, #+0x0
   582C9:	CF00      	**prefx    0xCF
   582CA:	CF34      	add        al, #-0x3131
   582CB:	0040      	addc       ah, #+0x0
   582CC:	0527      	st         al, @(+0x5, y)
   582CD:	0423      	st         ah, @(+0x4, y)
   582CE:	0317      	ld         al, @(+0x3, y)
   582CF:	040E      	ld         xh, @(+0x4, y)
   582D0:	059F      	bsr        @(+0x5, y)
   582D1:	F80F      	leave      #-0x8

0x000582D2 <.LFB13>:
   582D2:	FD0B      	enter      #-0x3
   582D3:	E119      	ld         x, @0xFFE1 <register al>
   582D4:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   582D5:	FA00      	**prefx    0xFA
   582D6:	7315      	ld         al, @0xFA73 <___libgatt_lib_db_4364>
   582D7:	02C4      	and        al, #0x2
   582D8:	FDF4      	beq        -0x3 <.LFB13+0x3:0x582D5[p]>
   582D9:	6A00      	**prefx    0x6A
   582DA:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   582DB:	0010      	ld         ah, #+0x0
   582DC:	4F00      	**prefx    0x4F
   582DD:	5A34      	add        al, #+0x4F5A
   582DE:	0140      	addc       ah, #+0x1
   582DF:	FE27      	st         al, @(-0x2, y)
   582E0:	FF23      	st         ah, @(-0x1, y)
   582E1:	0317      	ld         al, @(+0x3, y)
   582E2:	0027      	st         al, @(0x0, y)
   582E3:	E315      	ld         al, @0xFFE3 <register uxl>
   582E4:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   582E5:	FF0E      	ld         xh, @(-0x1, y)
   582E6:	FE9F      	bsr        @(-0x2, y)
   582E7:	FD0F      	leave      #-0x3

0x000582E8 <.LFB14>:
   582E8:	F70B      	enter      #-0x9
   582E9:	FB25      	st         al, @0xFFFB <(scratchpad)>
   582EA:	0523      	st         ah, @(+0x5, y)
   582EB:	0913      	ld         ah, @(+0x9, y)
   582EC:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   582ED:	0A17      	ld         al, @(+0xA, y)
   582EE:	0627      	st         al, @(+0x6, y)
   582EF:	0C1B      	ld         x, @(+0xC, y)
   582F0:	F100      	**prefx    0xF1
   582F1:	D611      	ld         ah, @0xF0D6 <___libgatt_lib_db_3241>
   582F2:	0423      	st         ah, @(+0x4, y)
   582F3:	F100      	**prefx    0xF1
   582F4:	D915      	ld         al, @0xF0D9 <___libgatt_lib_db_3248>
   582F5:	0327      	st         al, @(+0x3, y)
   582F6:	049A      	tst        @(+0x4, x)
   582F7:	2EF0      	bne        +0x2E <.LFB14+0x3D:0x58325[p]>
   582F8:	0316      	ld         al, @(+0x3, x)
   582F9:	C800      	**prefx    0xC8
   582FA:	6384      	cmp        al, #-0x379D
   582FB:	2AF0      	bne        +0x2A <.LFB14+0x3D:0x58325[p]>
   582FC:	0617      	ld         al, @(+0x6, y)
   582FD:	F000      	**prefx    0xF0
   582FE:	00C4      	and        al, #0xF000
   582FF:	5000      	**prefx    0x50
   58300:	0084      	cmp        al, #+0x5000
   58301:	24F0      	bne        +0x24 <.LFB14+0x3D:0x58325[p]>
   58302:	F100      	**prefx    0xF1
   58303:	D511      	ld         ah, @0xF0D5 <___libgatt_lib_db_3240>
   58304:	0009      	**unsigned
   58305:	0AA4      	lsr        #0xA
   58306:	03C0      	and        ah, #0x3
   58307:	0280      	cmp        ah, #+0x2
   58308:	1DF0      	bne        +0x1D <.LFB14+0x3D:0x58325[p]>
   58309:	1716      	ld         al, @(+0x17, x)
   5830A:	0010      	ld         ah, #+0x0
   5830B:	10A0      	asl        #0x10
   5830C:	181A      	ld         x, @(+0x18, x)
   5830D:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5830E:	0018      	ld         x, #+0x0
   5830F:	F829      	st         x, @0xFFF8 <(scratchpad)>
   58310:	F935      	add        al, @0xFFF9 <(scratchpad)>
   58311:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
   58312:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   58313:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   58314:	0009      	**unsigned
   58315:	0CA4      	lsr        #0xC
   58316:	F100      	**prefx    0xF1
   58317:	D925      	st         al, @0xF0D9 <___libgatt_lib_db_3248>
   58318:	F100      	**prefx    0xF1
   58319:	D615      	ld         al, @0xF0D6 <___libgatt_lib_db_3241>
   5831A:	FF00      	**prefx    0xFF
   5831B:	3FC4      	and        al, #0xFF3F
   5831C:	F100      	**prefx    0xF1
   5831D:	D625      	st         al, @0xF0D6 <___libgatt_lib_db_3241>
   5831E:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   5831F:	0617      	ld         al, @(+0x6, y)
   58320:	6000      	**prefx    0x60
   58321:	0034      	add        al, #+0x6000
   58322:	0040      	addc       ah, #+0x0
   58323:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   58324:	0627      	st         al, @(+0x6, y)
   58325:	6A00      	**prefx    0x6A
   58326:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58327:	0010      	ld         ah, #+0x0
   58328:	4F00      	**prefx    0x4F
   58329:	7634      	add        al, #+0x4F76
   5832A:	0140      	addc       ah, #+0x1
   5832B:	FE27      	st         al, @(-0x2, y)
   5832C:	FF23      	st         ah, @(-0x1, y)
   5832D:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   5832E:	0027      	st         al, @(0x0, y)
   5832F:	061B      	ld         x, @(+0x6, y)
   58330:	012B      	st         x, @(+0x1, y)
   58331:	0B13      	ld         ah, @(+0xB, y)
   58332:	0223      	st         ah, @(+0x2, y)
   58333:	FB15      	ld         al, @0xFFFB <(scratchpad)>
   58334:	0513      	ld         ah, @(+0x5, y)
   58335:	FF0E      	ld         xh, @(-0x1, y)
   58336:	FE9F      	bsr        @(-0x2, y)
   58337:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58338:	F100      	**prefx    0xF1
   58339:	D619      	ld         x, @0xF0D6 <___libgatt_lib_db_3241>
   5833A:	0413      	ld         ah, @(+0x4, y)
   5833B:	0009      	**unsigned
   5833C:	06A4      	lsr        #0x6
   5833D:	E015      	ld         al, @0xFFE0 <register ah>
   5833E:	03C4      	and        al, #0x3
   5833F:	06A0      	asl        #0x6
   58340:	FF00      	**prefx    0xFF
   58341:	3FC8      	and        x, #0xFF3F
   58342:	E1B9      	or         x, @0xFFE1 <register al>
   58343:	F100      	**prefx    0xF1
   58344:	D629      	st         x, @0xF0D6 <___libgatt_lib_db_3241>
   58345:	0317      	ld         al, @(+0x3, y)
   58346:	F100      	**prefx    0xF1
   58347:	D925      	st         al, @0xF0D9 <___libgatt_lib_db_3248>
   58348:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   58349:	F70F      	leave      #-0x9

0x0005834A <.LFB8>:
   5834A:	D10B      	enter      #-0x2F
   5834B:	2227      	st         al, @(+0x22, y)
   5834C:	3017      	ld         al, @(+0x30, y)
   5834D:	2C27      	st         al, @(+0x2C, y)
   5834E:	2F1B      	ld         x, @(+0x2F, y)
   5834F:	2B2B      	st         x, @(+0x2B, y)
   58350:	3117      	ld         al, @(+0x31, y)
   58351:	2927      	st         al, @(+0x29, y)
   58352:	321B      	ld         x, @(+0x32, y)
   58353:	2A2B      	st         x, @(+0x2A, y)
   58354:	E099      	tst        @0xFFE0 <register ah>
   58355:	05F4      	beq        +0x5 <.LFB8+0x10:0x5835A[p]>
   58356:	0180      	cmp        ah, #+0x1
   58357:	0100      	**prefx    0x1
   58358:	82F0      	bne        +0x82 <.LFB8+0x90:0x583DA[p]>
   58359:	10E0      	bra        +0x10 <.LFB8+0x1F:0x58369[p]>
   5835A:	221B      	ld         x, @(+0x22, y)
   5835B:	011A      	ld         x, @(+0x1, x)
   5835C:	272B      	st         x, @(+0x27, y)
   5835D:	221B      	ld         x, @(+0x22, y)
   5835E:	021A      	ld         x, @(+0x2, x)
   5835F:	282B      	st         x, @(+0x28, y)
   58360:	2217      	ld         al, @(+0x22, y)
   58361:	FF00      	**prefx    0xFF
   58362:	4D9C      	bsr        -0xB3 <.LFB9:0x582AF[p]>
   58363:	B034      	add        al, #-0x50
   58364:	2A27      	st         al, @(+0x2A, y)
   58365:	0110      	ld         ah, #+0x1
   58366:	6A00      	**prefx    0x6A
   58367:	FF21      	st         ah, @0x69FF <g_uart_baud_rate+0x1>
   58368:	27E0      	bra        +0x27 <.LFB8+0x45:0x5838F[p]>
   58369:	221B      	ld         x, @(+0x22, y)
   5836A:	021A      	ld         x, @(+0x2, x)
   5836B:	212B      	st         x, @(+0x21, y)
   5836C:	221B      	ld         x, @(+0x22, y)
   5836D:	011A      	ld         x, @(+0x1, x)
   5836E:	202B      	st         x, @(+0x20, y)
   5836F:	6A00      	**prefx    0x6A
   58370:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58371:	0010      	ld         ah, #+0x0
   58372:	CF00      	**prefx    0xCF
   58373:	CF34      	add        al, #-0x3131
   58374:	0040      	addc       ah, #+0x0
   58375:	FE27      	st         al, @(-0x2, y)
   58376:	FF23      	st         ah, @(-0x1, y)
   58377:	221B      	ld         x, @(+0x22, y)
   58378:	0516      	ld         al, @(+0x5, x)
   58379:	FF0E      	ld         xh, @(-0x1, y)
   5837A:	FE9F      	bsr        @(-0x2, y)
   5837B:	291B      	ld         x, @(+0x29, y)
   5837C:	E089      	cmp        x, @0xFFE0 <register ah>
   5837D:	022C      	bcz        +0x2 <.LFB8+0x35:0x5837F[p]>
   5837E:	5CE0      	bra        +0x5C <.LFB8+0x90:0x583DA[p]>
   5837F:	291B      	ld         x, @(+0x29, y)
   58380:	E089      	cmp        x, @0xFFE0 <register ah>
   58381:	05F0      	bne        +0x5 <.LFB8+0x3C:0x58386[p]>
   58382:	2A13      	ld         ah, @(+0x2A, y)
   58383:	E181      	cmp        ah, @0xFFE1 <register al>
   58384:	022C      	bcz        +0x2 <.LFB8+0x3C:0x58386[p]>
   58385:	55E0      	bra        +0x55 <.LFB8+0x90:0x583DA[p]>
   58386:	2C17      	ld         al, @(+0x2C, y)
   58387:	2B13      	ld         ah, @(+0x2B, y)
   58388:	2137      	add        al, @(+0x21, y)
   58389:	2043      	addc       ah, @(+0x20, y)
   5838A:	2723      	st         ah, @(+0x27, y)
   5838B:	2827      	st         al, @(+0x28, y)
   5838C:	0014      	ld         al, #+0x0
   5838D:	6A00      	**prefx    0x6A
   5838E:	FF25      	st         al, @0x69FF <g_uart_baud_rate+0x1>
   5838F:	D100      	**prefx    0xD1
   58390:	6619      	ld         x, @0xD166 <___libgatt_lib_db_1982+0x4A>
   58391:	1814      	ld         al, #+0x18
   58392:	E411      	ld         ah, @0xFFE4 <register uy>
   58393:	0730      	add        ah, #+0x7
   58394:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   58395:	FD09      	bc2        
   58396:	8300      	**prefx    0x83
   58397:	D214      	ld         al, #-0x7D2E
   58398:	1C27      	st         al, @(+0x1C, y)
   58399:	0518      	ld         x, #+0x5
   5839A:	1B2B      	st         x, @(+0x1B, y)
   5839B:	8400      	**prefx    0x84
   5839C:	5C10      	ld         ah, #-0x7BA4
   5839D:	1E23      	st         ah, @(+0x1E, y)
   5839E:	0514      	ld         al, #+0x5
   5839F:	1D27      	st         al, @(+0x1D, y)
   583A0:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   583A1:	D100      	**prefx    0xD1
   583A2:	6629      	st         x, @0xD166 <___libgatt_lib_db_1982+0x4A>
   583A3:	6A00      	**prefx    0x6A
   583A4:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   583A5:	0010      	ld         ah, #+0x0
   583A6:	1100      	**prefx    0x11
   583A7:	5434      	add        al, #+0x1154
   583A8:	0140      	addc       ah, #+0x1
   583A9:	FE27      	st         al, @(-0x2, y)
   583AA:	FF23      	st         ah, @(-0x1, y)
   583AB:	FF0E      	ld         xh, @(-0x1, y)
   583AC:	FE9F      	bsr        @(-0x2, y)
   583AD:	6A00      	**prefx    0x6A
   583AE:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   583AF:	221B      	ld         x, @(+0x22, y)
   583B0:	001A      	ld         x, @(0x0, x)
   583B1:	F829      	st         x, @0xFFF8 <(scratchpad)>
   583B2:	0010      	ld         ah, #+0x0
   583B3:	C800      	**prefx    0xC8
   583B4:	AC34      	add        al, #-0x3854
   583B5:	0040      	addc       ah, #+0x0
   583B6:	2427      	st         al, @(+0x24, y)
   583B7:	2323      	st         ah, @(+0x23, y)
   583B8:	2A13      	ld         ah, @(+0x2A, y)
   583B9:	0123      	st         ah, @(+0x1, y)
   583BA:	022B      	st         x, @(+0x2, y)
   583BB:	221B      	ld         x, @(+0x22, y)
   583BC:	0112      	ld         ah, @(+0x1, x)
   583BD:	0216      	ld         al, @(+0x2, x)
   583BE:	0427      	st         al, @(+0x4, y)
   583BF:	0323      	st         ah, @(+0x3, y)
   583C0:	0218      	ld         x, #+0x2
   583C1:	052B      	st         x, @(+0x5, y)
   583C2:	3313      	ld         ah, @(+0x33, y)
   583C3:	0623      	st         ah, @(+0x6, y)
   583C4:	2817      	ld         al, @(+0x28, y)
   583C5:	0027      	st         al, @(0x0, y)
   583C6:	2713      	ld         ah, @(+0x27, y)
   583C7:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   583C8:	230E      	ld         xh, @(+0x23, y)
   583C9:	249F      	bsr        @(+0x24, y)
   583CA:	1F27      	st         al, @(+0x1F, y)
   583CB:	6A00      	**prefx    0x6A
   583CC:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   583CD:	0010      	ld         ah, #+0x0
   583CE:	1100      	**prefx    0x11
   583CF:	5D34      	add        al, #+0x115D
   583D0:	0140      	addc       ah, #+0x1
   583D1:	2627      	st         al, @(+0x26, y)
   583D2:	2523      	st         ah, @(+0x25, y)
   583D3:	250E      	ld         xh, @(+0x25, y)
   583D4:	269F      	bsr        @(+0x26, y)
   583D5:	1E00      	**prefx    0x1E
   583D6:	C118      	ld         x, #+0x1DC1
   583D7:	D100      	**prefx    0xD1
   583D8:	6629      	st         x, @0xD166 <___libgatt_lib_db_1982+0x4A>
   583D9:	04E0      	bra        +0x4 <.LFB8+0x93:0x583DD[p]>
   583DA:	0C00      	**prefx    0xC
   583DB:	0610      	ld         ah, #+0xC06
   583DC:	1F23      	st         ah, @(+0x1F, y)
   583DD:	1F17      	ld         al, @(+0x1F, y)
   583DE:	D10F      	leave      #-0x2F

0x000583DF <___libgatt_lib_db_5577>:
   583DF:	E40B      	enter      #-0x1C
   583E0:	6A00      	**prefx    0x6A
   583E1:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   583E2:	0010      	ld         ah, #+0x0
   583E3:	6800      	**prefx    0x68
   583E4:	EF34      	add        al, #+0x67EF
   583E5:	0140      	addc       ah, #+0x1
   583E6:	FE27      	st         al, @(-0x2, y)
   583E7:	FF23      	st         ah, @(-0x1, y)
   583E8:	E415      	ld         al, @0xFFE4 <register uy>
   583E9:	0534      	add        al, #+0x5
   583EA:	0027      	st         al, @(0x0, y)
   583EB:	0B14      	ld         al, #+0xB
   583EC:	E411      	ld         ah, @0xFFE4 <register uy>
   583ED:	0630      	add        ah, #+0x6
   583EE:	FF0E      	ld         xh, @(-0x1, y)
   583EF:	FE9F      	bsr        @(-0x2, y)
   583F0:	E199      	tst        @0xFFE1 <register al>
   583F1:	6AF4      	beq        +0x6A <___libgatt_lib_db_5577+0x7C:0x5845B[p]>
   583F2:	051B      	ld         x, @(+0x5, y)
   583F3:	0316      	ld         al, @(+0x3, x)
   583F4:	1F00      	**prefx    0x1F
   583F5:	1084      	cmp        al, #+0x1F10
   583F6:	65F0      	bne        +0x65 <___libgatt_lib_db_5577+0x7C:0x5845B[p]>
   583F7:	6A00      	**prefx    0x6A
   583F8:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   583F9:	0010      	ld         ah, #+0x0
   583FA:	6800      	**prefx    0x68
   583FB:	F634      	add        al, #+0x67F6
   583FC:	0140      	addc       ah, #+0x1
   583FD:	FE27      	st         al, @(-0x2, y)
   583FE:	FF23      	st         ah, @(-0x1, y)
   583FF:	E419      	ld         x, @0xFFE4 <register uy>
   58400:	0538      	add        x, #+0x5
   58401:	002B      	st         x, @(0x0, y)
   58402:	0B14      	ld         al, #+0xB
   58403:	E411      	ld         ah, @0xFFE4 <register uy>
   58404:	0630      	add        ah, #+0x6
   58405:	FF0E      	ld         xh, @(-0x1, y)
   58406:	FE9F      	bsr        @(-0x2, y)
   58407:	051B      	ld         x, @(+0x5, y)
   58408:	0617      	ld         al, @(+0x6, y)
   58409:	1127      	st         al, @(+0x11, y)
   5840A:	0916      	ld         al, @(+0x9, x)
   5840B:	0F27      	st         al, @(+0xF, y)
   5840C:	0816      	ld         al, @(+0x8, x)
   5840D:	1727      	st         al, @(+0x17, y)
   5840E:	0716      	ld         al, @(+0x7, x)
   5840F:	1627      	st         al, @(+0x16, y)
   58410:	0616      	ld         al, @(+0x6, x)
   58411:	1927      	st         al, @(+0x19, y)
   58412:	0516      	ld         al, @(+0x5, x)
   58413:	1827      	st         al, @(+0x18, y)
   58414:	041A      	ld         x, @(+0x4, x)
   58415:	102B      	st         x, @(+0x10, y)
   58416:	6A00      	**prefx    0x6A
   58417:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58418:	0010      	ld         ah, #+0x0
   58419:	6C00      	**prefx    0x6C
   5841A:	0034      	add        al, #+0x6C00
   5841B:	0140      	addc       ah, #+0x1
   5841C:	1327      	st         al, @(+0x13, y)
   5841D:	1223      	st         ah, @(+0x12, y)
   5841E:	1F00      	**prefx    0x1F
   5841F:	1114      	ld         al, #+0x1F11
   58420:	0410      	ld         ah, #+0x4
   58421:	120E      	ld         xh, @(+0x12, y)
   58422:	139F      	bsr        @(+0x13, y)
   58423:	0E27      	st         al, @(+0xE, y)
   58424:	1017      	ld         al, @(+0x10, y)
   58425:	E411      	ld         ah, @0xFFE4 <register uy>
   58426:	0730      	add        ah, #+0x7
   58427:	FB00      	**prefx    0xFB
   58428:	FD9C      	bsr        -0x503 <___libgatt_lib_db_5558:0x57F25[p]>
   58429:	E199      	tst        @0xFFE1 <register al>
   5842A:	10F0      	bne        +0x10 <___libgatt_lib_db_5577+0x5B:0x5843A[p]>
   5842B:	191B      	ld         x, @(+0x19, y)
   5842C:	012B      	st         x, @(+0x1, y)
   5842D:	1817      	ld         al, @(+0x18, y)
   5842E:	0027      	st         al, @(0x0, y)
   5842F:	171B      	ld         x, @(+0x17, y)
   58430:	032B      	st         x, @(+0x3, y)
   58431:	1617      	ld         al, @(+0x16, y)
   58432:	0227      	st         al, @(+0x2, y)
   58433:	0F1B      	ld         x, @(+0xF, y)
   58434:	042B      	st         x, @(+0x4, y)
   58435:	E415      	ld         al, @0xFFE4 <register uy>
   58436:	0734      	add        al, #+0x7
   58437:	0110      	ld         ah, #+0x1
   58438:	FF00      	**prefx    0xFF
   58439:	119C      	bsr        -0xEF <.LFB8:0x5834A[p]>
   5843A:	0E1B      	ld         x, @(+0xE, y)
   5843B:	0426      	st         al, @(+0x4, x)
   5843C:	0B17      	ld         al, @(+0xB, y)
   5843D:	0526      	st         al, @(+0x5, x)
   5843E:	0A17      	ld         al, @(+0xA, y)
   5843F:	0FC4      	and        al, #0xF
   58440:	0626      	st         al, @(+0x6, x)
   58441:	0F17      	ld         al, @(+0xF, y)
   58442:	0726      	st         al, @(+0x7, x)
   58443:	6A00      	**prefx    0x6A
   58444:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58445:	0010      	ld         ah, #+0x0
   58446:	6800      	**prefx    0x68
   58447:	3A34      	add        al, #+0x683A
   58448:	0140      	addc       ah, #+0x1
   58449:	FE27      	st         al, @(-0x2, y)
   5844A:	FF23      	st         ah, @(-0x1, y)
   5844B:	002B      	st         x, @(0x0, y)
   5844C:	1117      	ld         al, @(+0x11, y)
   5844D:	0B10      	ld         ah, #+0xB
   5844E:	FF0E      	ld         xh, @(-0x1, y)
   5844F:	FE9F      	bsr        @(-0x2, y)
   58450:	6A00      	**prefx    0x6A
   58451:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58452:	0010      	ld         ah, #+0x0
   58453:	6200      	**prefx    0x62
   58454:	A134      	add        al, #+0x61A1
   58455:	0140      	addc       ah, #+0x1
   58456:	1527      	st         al, @(+0x15, y)
   58457:	1423      	st         ah, @(+0x14, y)
   58458:	0517      	ld         al, @(+0x5, y)
   58459:	140E      	ld         xh, @(+0x14, y)
   5845A:	159F      	bsr        @(+0x15, y)
   5845B:	E40F      	leave      #-0x1C

0x0005845C <.LFB15>:
   5845C:	F30B      	enter      #-0xD
   5845D:	0927      	st         al, @(+0x9, y)
   5845E:	0A23      	st         ah, @(+0xA, y)
   5845F:	0D17      	ld         al, @(+0xD, y)
   58460:	0E1B      	ld         x, @(+0xE, y)
   58461:	6A00      	**prefx    0x6A
   58462:	FF99      	tst        @0x69FF <g_uart_baud_rate+0x1>
   58463:	31F4      	beq        +0x31 <.LFB15+0x38:0x58494[p]>
   58464:	0414      	ld         al, #+0x4
   58465:	E411      	ld         ah, @0xFFE4 <register uy>
   58466:	0430      	add        ah, #+0x4
   58467:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   58468:	FD09      	bc2        
   58469:	0627      	st         al, @(+0x6, y)
   5846A:	0527      	st         al, @(+0x5, y)
   5846B:	DA00      	**prefx    0xDA
   5846C:	B519      	ld         x, @0xD9B5 <___libgatt_lib_db_2022+0x3F>
   5846D:	082B      	st         x, @(+0x8, y)
   5846E:	DA00      	**prefx    0xDA
   5846F:	B525      	st         al, @0xD9B5 <___libgatt_lib_db_2022+0x3F>
   58470:	6A00      	**prefx    0x6A
   58471:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58472:	0010      	ld         ah, #+0x0
   58473:	4F00      	**prefx    0x4F
   58474:	7634      	add        al, #+0x4F76
   58475:	0140      	addc       ah, #+0x1
   58476:	FE27      	st         al, @(-0x2, y)
   58477:	FF23      	st         ah, @(-0x1, y)
   58478:	0010      	ld         ah, #+0x0
   58479:	0023      	st         ah, @(0x0, y)
   5847A:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5847B:	0127      	st         al, @(+0x1, y)
   5847C:	0418      	ld         x, #+0x4
   5847D:	022B      	st         x, @(+0x2, y)
   5847E:	0917      	ld         al, @(+0x9, y)
   5847F:	0A13      	ld         ah, @(+0xA, y)
   58480:	FF0E      	ld         xh, @(-0x1, y)
   58481:	FE9F      	bsr        @(-0x2, y)
   58482:	0813      	ld         ah, @(+0x8, y)
   58483:	DA00      	**prefx    0xDA
   58484:	B521      	st         ah, @0xD9B5 <___libgatt_lib_db_2022+0x3F>
   58485:	E199      	tst        @0xFFE1 <register al>
   58486:	19F0      	bne        +0x19 <.LFB15+0x43:0x5849F[p]>
   58487:	0E17      	ld         al, @(+0xE, y)
   58488:	0D13      	ld         ah, @(+0xD, y)
   58489:	0434      	add        al, #+0x4
   5848A:	0040      	addc       ah, #+0x0
   5848B:	0127      	st         al, @(+0x1, y)
   5848C:	0023      	st         ah, @(0x0, y)
   5848D:	0F17      	ld         al, @(+0xF, y)
   5848E:	FC34      	add        al, #-0x4
   5848F:	0227      	st         al, @(+0x2, y)
   58490:	E419      	ld         x, @0xFFE4 <register uy>
   58491:	0D38      	add        x, #+0xD
   58492:	032B      	st         x, @(+0x3, y)
   58493:	08E0      	bra        +0x8 <.LFB15+0x3F:0x5849B[p]>
   58494:	0027      	st         al, @(0x0, y)
   58495:	012B      	st         x, @(+0x1, y)
   58496:	0F13      	ld         ah, @(+0xF, y)
   58497:	0223      	st         ah, @(+0x2, y)
   58498:	E415      	ld         al, @0xFFE4 <register uy>
   58499:	0D34      	add        al, #+0xD
   5849A:	0327      	st         al, @(+0x3, y)
   5849B:	0917      	ld         al, @(+0x9, y)
   5849C:	0A13      	ld         ah, @(+0xA, y)
   5849D:	FE00      	**prefx    0xFE
   5849E:	4A9C      	bsr        -0x1B6 <.LFB14:0x582E8[p]>
   5849F:	0018      	ld         x, #+0x0
   584A0:	6A00      	**prefx    0x6A
   584A1:	FF29      	st         x, @0x69FF <g_uart_baud_rate+0x1>
   584A2:	F30F      	leave      #-0xD

0x000584A3 <___libgatt_lib_db_5584>:
   584A3:	FE0B      	enter      #-0x2
   584A4:	6A00      	**prefx    0x6A
   584A5:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   584A6:	0010      	ld         ah, #+0x0
   584A7:	0400      	**prefx    0x4
   584A8:	0234      	add        al, #+0x402
   584A9:	0140      	addc       ah, #+0x1
   584AA:	FE27      	st         al, @(-0x2, y)
   584AB:	FF23      	st         ah, @(-0x1, y)
   584AC:	FF0E      	ld         xh, @(-0x1, y)
   584AD:	FE9F      	bsr        @(-0x2, y)
   584AE:	FE0F      	leave      #-0x2

0x000584AF <___libgatt_lib_db_5583>:
   584AF:	F30B      	enter      #-0xD
   584B0:	0F13      	ld         ah, @(+0xF, y)
   584B1:	0923      	st         ah, @(+0x9, y)
   584B2:	FC00      	**prefx    0xFC
   584B3:	8D00      	**prefx    0x8D
   584B4:	A09C      	bsr        -0x47360 <___libgatt_lib_db_4375:0x11154[p]>
   584B5:	6A00      	**prefx    0x6A
   584B6:	0099      	tst        @0x6A00 <g_uart_baud_rate+0x2>
   584B7:	07F0      	bne        +0x7 <___libgatt_lib_db_5583+0xF:0x584BE[p]>
   584B8:	6A00      	**prefx    0x6A
   584B9:	1114      	ld         al, #+0x6A11
   584BA:	6A00      	**prefx    0x6A
   584BB:	0910      	ld         ah, #+0x6A09
   584BC:	0E00      	**prefx    0xE
   584BD:	BC9C      	bsr        +0xDBC <___libgatt_lib_db_5662:0x59279[p]>
   584BE:	6A00      	**prefx    0x6A
   584BF:	0015      	ld         al, @0x6A00 <g_uart_baud_rate+0x2>
   584C0:	3084      	cmp        al, #+0x30
   584C1:	09F8      	bcc        +0x9 <___libgatt_lib_db_5583+0x1B:0x584CA[p]>
   584C2:	E119      	ld         x, @0xFFE1 <register al>
   584C3:	07C8      	and        x, #0x7
   584C4:	0913      	ld         ah, @(+0x9, y)
   584C5:	6A00      	**prefx    0x6A
   584C6:	0122      	st         ah, @(+0x6A01, x)
   584C7:	0134      	add        al, #+0x1
   584C8:	6A00      	**prefx    0x6A
   584C9:	0025      	st         al, @0x6A00 <g_uart_baud_rate+0x2>
   584CA:	6A00      	**prefx    0x6A
   584CB:	0015      	ld         al, @0x6A00 <g_uart_baud_rate+0x2>
   584CC:	07C4      	and        al, #0x7
   584CD:	3FF0      	bne        +0x3F <___libgatt_lib_db_5583+0x5D:0x5850C[p]>
   584CE:	6A00      	**prefx    0x6A
   584CF:	1114      	ld         al, #+0x6A11
   584D0:	6A00      	**prefx    0x6A
   584D1:	0110      	ld         ah, #+0x6A01
   584D2:	0E00      	**prefx    0xE
   584D3:	B49C      	bsr        +0xDB4 <___libgatt_lib_db_5663:0x59287[p]>
   584D4:	6A00      	**prefx    0x6A
   584D5:	0015      	ld         al, @0x6A00 <g_uart_baud_rate+0x2>
   584D6:	3084      	cmp        al, #+0x30
   584D7:	35F0      	bne        +0x35 <___libgatt_lib_db_5583+0x5D:0x5850C[p]>
   584D8:	6A00      	**prefx    0x6A
   584D9:	1114      	ld         al, #+0x6A11
   584DA:	E411      	ld         ah, @0xFFE4 <register uy>
   584DB:	0130      	add        ah, #+0x1
   584DC:	0E00      	**prefx    0xE
   584DD:	8A9C      	bsr        +0xD8A <___libgatt_lib_db_5661:0x59267[p]>
   584DE:	0014      	ld         al, #+0x0
   584DF:	6A00      	**prefx    0x6A
   584E0:	0025      	st         al, @0x6A00 <g_uart_baud_rate+0x2>
   584E1:	D700      	**prefx    0xD7
   584E2:	7D15      	ld         al, @0xD77D <filter_rx_air_data+0x62>
   584E3:	E884      	cmp        al, #-0x18
   584E4:	06F0      	bne        +0x6 <___libgatt_lib_db_5583+0x3B:0x584EA[p]>
   584E5:	6A00      	**prefx    0x6A
   584E6:	0910      	ld         ah, #+0x6A09
   584E7:	0818      	ld         x, #+0x8
   584E8:	0A2B      	st         x, @(+0xA, y)
   584E9:	11E0      	bra        +0x11 <___libgatt_lib_db_5583+0x4B:0x584FA[p]>
   584EA:	E199      	tst        @0xFFE1 <register al>
   584EB:	05E8      	bpl        +0x5 <___libgatt_lib_db_5583+0x41:0x584F0[p]>
   584EC:	E111      	ld         ah, @0xFFE1 <register al>
   584ED:	D100      	**prefx    0xD1
   584EE:	C530      	add        ah, #-0x2F3B
   584EF:	09E0      	bra        +0x9 <___libgatt_lib_db_5583+0x49:0x584F8[p]>
   584F0:	E111      	ld         ah, @0xFFE1 <register al>
   584F1:	D700      	**prefx    0xD7
   584F2:	7E30      	add        ah, #-0x2882
   584F3:	0C18      	ld         x, #+0xC
   584F4:	E159      	sub        x, @0xFFE1 <register al>
   584F5:	0A2B      	st         x, @(+0xA, y)
   584F6:	0888      	cmp        x, #+0x8
   584F7:	0328      	ble        +0x3 <___libgatt_lib_db_5583+0x4B:0x584FA[p]>
   584F8:	0814      	ld         al, #+0x8
   584F9:	0A27      	st         al, @(+0xA, y)
   584FA:	0A1B      	ld         x, @(+0xA, y)
   584FB:	002B      	st         x, @(0x0, y)
   584FC:	E015      	ld         al, @0xFFE0 <register ah>
   584FD:	E411      	ld         ah, @0xFFE4 <register uy>
   584FE:	0130      	add        ah, #+0x1
   584FF:	FB00      	**prefx    0xFB
   58500:	A600      	**prefx    0xA6
   58501:	479C      	bsr        -0x559B9 <MemCopy:0x2B48[p]>
   58502:	0A17      	ld         al, @(+0xA, y)
   58503:	D700      	**prefx    0xD7
   58504:	7D35      	add        al, @0xD77D <filter_rx_air_data+0x62>
   58505:	D700      	**prefx    0xD7
   58506:	7D25      	st         al, @0xD77D <filter_rx_air_data+0x62>
   58507:	0C84      	cmp        al, #+0xC
   58508:	04F0      	bne        +0x4 <___libgatt_lib_db_5583+0x5D:0x5850C[p]>
   58509:	0110      	ld         ah, #+0x1
   5850A:	D700      	**prefx    0xD7
   5850B:	7A21      	st         ah, @0xD77A <filter_rx_air_data+0x5F>
   5850C:	FC00      	**prefx    0xFC
   5850D:	8C00      	**prefx    0x8C
   5850E:	4F9C      	bsr        -0x473B1 <___libgatt_lib_db_4382:0x1115D[p]>
   5850F:	EE0F      	leave      #-0x12
   58510:	F30F      	leave      #-0xD

0x00058511 <___libgatt_lib_db_5582>:
   58511:	FE0B      	enter      #-0x2
   58512:	0817      	ld         al, @(+0x8, y)
   58513:	0400      	**prefx    0x4
   58514:	4A84      	cmp        al, #+0x44A
   58515:	06F0      	bne        +0x6 <___libgatt_lib_db_5582+0xA:0x5851B[p]>
   58516:	0014      	ld         al, #+0x0
   58517:	0D00      	**prefx    0xD
   58518:	0A9C      	bsr        +0xD0A <___libgatt_lib_db_5658:0x59222[p]>
   58519:	F60F      	leave      #-0xA
   5851A:	0DE0      	bra        +0xD <___libgatt_lib_db_5582+0x16:0x58527[p]>
   5851B:	0500      	**prefx    0x5
   5851C:	4084      	cmp        al, #+0x540
   5851D:	0AF0      	bne        +0xA <___libgatt_lib_db_5582+0x16:0x58527[p]>
   5851E:	E814      	ld         al, #-0x18
   5851F:	D700      	**prefx    0xD7
   58520:	7D25      	st         al, @0xD77D <filter_rx_air_data+0x62>
   58521:	0014      	ld         al, #+0x0
   58522:	6A00      	**prefx    0x6A
   58523:	0025      	st         al, @0x6A00 <g_uart_baud_rate+0x2>
   58524:	2814      	ld         al, #+0x28
   58525:	D100      	**prefx    0xD1
   58526:	B425      	st         al, @0xD0B4 <___libgatt_lib_db_1979+0x70>
   58527:	FE0F      	leave      #-0x2

0x00058528 <.LFB4>:
   58528:	FE0B      	enter      #-0x2
   58529:	E199      	tst        @0xFFE1 <register al>
   5852A:	02F4      	beq        +0x2 <.LFB4+0x4:0x5852C[p]>
   5852B:	0114      	ld         al, #+0x1
   5852C:	FA00      	**prefx    0xFA
   5852D:	0E19      	ld         x, @0xFA0E <___libgatt_lib_db_3352>
   5852E:	E199      	tst        @0xFFE1 <register al>
   5852F:	03F0      	bne        +0x3 <.LFB4+0xA:0x58532[p]>
   58530:	0010      	ld         ah, #+0x0
   58531:	03E0      	bra        +0x3 <.LFB4+0xC:0x58534[p]>
   58532:	0100      	**prefx    0x1
   58533:	A010      	ld         ah, #+0xA0
   58534:	FF00      	**prefx    0xFF
   58535:	0FC8      	and        x, #0xFF0F
   58536:	E3B1      	or         ah, @0xFFE3 <register uxl>
   58537:	FA00      	**prefx    0xFA
   58538:	0E21      	st         ah, @0xFA0E <___libgatt_lib_db_3352>
   58539:	1300      	**prefx    0x13
   5853A:	7B18      	ld         x, #+0x137B
   5853B:	FC00      	**prefx    0xFC
   5853C:	3029      	st         x, @0xFC30 <___libgatt_lib_db_3521>
   5853D:	F300      	**prefx    0xF3
   5853E:	C919      	ld         x, @0xF2C9 <___libgatt_lib_db_4246>
   5853F:	01A0      	asl        #0x1
   58540:	FDC8      	and        x, #0xFFFD
   58541:	E1B9      	or         x, @0xFFE1 <register al>
   58542:	F300      	**prefx    0xF3
   58543:	C929      	st         x, @0xF2C9 <___libgatt_lib_db_4246>
   58544:	0014      	ld         al, #+0x0
   58545:	FC00      	**prefx    0xFC
   58546:	3025      	st         al, @0xFC30 <___libgatt_lib_db_3521>
   58547:	FE0F      	leave      #-0x2

0x00058548 <___libgatt_lib_db_5589>:
   58548:	FD0B      	enter      #-0x3
   58549:	0027      	st         al, @(0x0, y)
   5854A:	E119      	ld         x, @0xFFE1 <register al>
   5854B:	01C8      	and        x, #0x1
   5854C:	0238      	add        x, #+0x2
   5854D:	0114      	ld         al, #+0x1
   5854E:	E3A1      	asl        @0xFFE3 <register uxl>
   5854F:	FFD4      	xor        al, #0xFFFF
   58550:	D800      	**prefx    0xD8
   58551:	8BC5      	and        al, @0xD78B <filter_rx_air_data+0x70>
   58552:	D800      	**prefx    0xD8
   58553:	8B25      	st         al, @0xD78B <filter_rx_air_data+0x70>
   58554:	E111      	ld         ah, @0xFFE1 <register al>
   58555:	0009      	**unsigned
   58556:	02A4      	lsr        #0x2
   58557:	E099      	tst        @0xFFE0 <register ah>
   58558:	03F0      	bne        +0x3 <___libgatt_lib_db_5589+0x13:0x5855B[p]>
   58559:	0014      	ld         al, #+0x0
   5855A:	CE9C      	bsr        -0x32 <.LFB4:0x58528[p]>
   5855B:	6A00      	**prefx    0x6A
   5855C:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5855D:	0010      	ld         ah, #+0x0
   5855E:	0700      	**prefx    0x7
   5855F:	7934      	add        al, #+0x779
   58560:	0140      	addc       ah, #+0x1
   58561:	FE27      	st         al, @(-0x2, y)
   58562:	FF23      	st         ah, @(-0x1, y)
   58563:	0017      	ld         al, @(0x0, y)
   58564:	FF0E      	ld         xh, @(-0x1, y)
   58565:	FE9F      	bsr        @(-0x2, y)
   58566:	FD0F      	leave      #-0x3

0x00058567 <___libgatt_lib_db_5590>:
   58567:	FB0B      	enter      #-0x5
   58568:	0127      	st         al, @(+0x1, y)
   58569:	0223      	st         ah, @(+0x2, y)
   5856A:	6A00      	**prefx    0x6A
   5856B:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5856C:	0010      	ld         ah, #+0x0
   5856D:	0800      	**prefx    0x8
   5856E:	9C34      	add        al, #+0x79C
   5856F:	0140      	addc       ah, #+0x1
   58570:	FE27      	st         al, @(-0x2, y)
   58571:	FF23      	st         ah, @(-0x1, y)
   58572:	0117      	ld         al, @(+0x1, y)
   58573:	0213      	ld         ah, @(+0x2, y)
   58574:	FF0E      	ld         xh, @(-0x1, y)
   58575:	FE9F      	bsr        @(-0x2, y)
   58576:	0027      	st         al, @(0x0, y)
   58577:	11F0      	bne        +0x11 <___libgatt_lib_db_5590+0x21:0x58588[p]>
   58578:	021B      	ld         x, @(+0x2, y)
   58579:	019A      	tst        @(+0x1, x)
   5857A:	0EF4      	beq        +0xE <___libgatt_lib_db_5590+0x21:0x58588[p]>
   5857B:	011B      	ld         x, @(+0x1, y)
   5857C:	0016      	ld         al, @(0x0, x)
   5857D:	01C4      	and        al, #0x1
   5857E:	0234      	add        al, #+0x2
   5857F:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58580:	0114      	ld         al, #+0x1
   58581:	F8A1      	asl        @0xFFF8 <(scratchpad)>
   58582:	D800      	**prefx    0xD8
   58583:	8BB5      	or         al, @0xD78B <filter_rx_air_data+0x70>
   58584:	D800      	**prefx    0xD8
   58585:	8B25      	st         al, @0xD78B <filter_rx_air_data+0x70>
   58586:	0114      	ld         al, #+0x1
   58587:	A19C      	bsr        -0x5F <.LFB4:0x58528[p]>
   58588:	0017      	ld         al, @(0x0, y)
   58589:	FB0F      	leave      #-0x5

0x0005858A <___libgatt_lib_db_5594>:
   5858A:	FE0B      	enter      #-0x2
   5858B:	F825      	st         al, @0xFFF8 <(scratchpad)>
   5858C:	E019      	ld         x, @0xFFE0 <register ah>
   5858D:	6A00      	**prefx    0x6A
   5858E:	FC15      	ld         al, @0x69FC <g_uart_pios>
   5858F:	10F4      	beq        +0x10 <___libgatt_lib_db_5594+0x15:0x5859F[p]>
   58590:	E199      	tst        @0xFFE1 <register al>
   58591:	04EC      	bmi        +0x4 <___libgatt_lib_db_5594+0xB:0x58595[p]>
   58592:	0100      	**prefx    0x1
   58593:	FF14      	ld         al, #+0xFF
   58594:	02E0      	bra        +0x2 <___libgatt_lib_db_5594+0xC:0x58596[p]>
   58595:	1FC4      	and        al, #0x1F
   58596:	0426      	st         al, @(+0x4, x)
   58597:	6A00      	**prefx    0x6A
   58598:	FD15      	ld         al, @0x69FD <GattDiscoverServiceChar>
   58599:	04EC      	bmi        +0x4 <___libgatt_lib_db_5594+0x13:0x5859D[p]>
   5859A:	0100      	**prefx    0x1
   5859B:	FF14      	ld         al, #+0xFF
   5859C:	02E0      	bra        +0x2 <___libgatt_lib_db_5594+0x14:0x5859E[p]>
   5859D:	1FC4      	and        al, #0x1F
   5859E:	0526      	st         al, @(+0x5, x)
   5859F:	6A00      	**prefx    0x6A
   585A0:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   585A1:	0010      	ld         ah, #+0x0
   585A2:	1A00      	**prefx    0x1A
   585A3:	3B34      	add        al, #+0x1A3B
   585A4:	0140      	addc       ah, #+0x1
   585A5:	FE27      	st         al, @(-0x2, y)
   585A6:	FF23      	st         ah, @(-0x1, y)
   585A7:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   585A8:	E311      	ld         ah, @0xFFE3 <register uxl>
   585A9:	FF0E      	ld         xh, @(-0x1, y)
   585AA:	FE9F      	bsr        @(-0x2, y)
   585AB:	FE0F      	leave      #-0x2

0x000585AC <___libgatt_lib_db_5595>:
   585AC:	FB0B      	enter      #-0x5
   585AD:	E119      	ld         x, @0xFFE1 <register al>
   585AE:	0223      	st         ah, @(+0x2, y)
   585AF:	0500      	**prefx    0x5
   585B0:	8114      	ld         al, #+0x481
   585B1:	D100      	**prefx    0xD1
   585B2:	1425      	st         al, @0xD114 <___libgatt_lib_db_1978+0x23>
   585B3:	6A00      	**prefx    0x6A
   585B4:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   585B5:	0010      	ld         ah, #+0x0
   585B6:	1A00      	**prefx    0x1A
   585B7:	9834      	add        al, #+0x1998
   585B8:	0140      	addc       ah, #+0x1
   585B9:	FE27      	st         al, @(-0x2, y)
   585BA:	FF23      	st         ah, @(-0x1, y)
   585BB:	0517      	ld         al, @(+0x5, y)
   585BC:	0027      	st         al, @(0x0, y)
   585BD:	E315      	ld         al, @0xFFE3 <register uxl>
   585BE:	0213      	ld         ah, @(+0x2, y)
   585BF:	FF0E      	ld         xh, @(-0x1, y)
   585C0:	FE9F      	bsr        @(-0x2, y)
   585C1:	0127      	st         al, @(+0x1, y)
   585C2:	13F0      	bne        +0x13 <___libgatt_lib_db_5595+0x29:0x585D5[p]>
   585C3:	6A00      	**prefx    0x6A
   585C4:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   585C5:	0010      	ld         ah, #+0x0
   585C6:	3B00      	**prefx    0x3B
   585C7:	0334      	add        al, #+0x3B03
   585C8:	0140      	addc       ah, #+0x1
   585C9:	FE27      	st         al, @(-0x2, y)
   585CA:	FF23      	st         ah, @(-0x1, y)
   585CB:	0010      	ld         ah, #+0x0
   585CC:	D800      	**prefx    0xD8
   585CD:	ED15      	ld         al, @0xD7ED <bl_int_cnt+0x19>
   585CE:	0500      	**prefx    0x5
   585CF:	8084      	cmp        al, #+0x480
   585D0:	022C      	bcz        +0x2 <___libgatt_lib_db_5595+0x26:0x585D2[p]>
   585D1:	0110      	ld         ah, #+0x1
   585D2:	0A14      	ld         al, #+0xA
   585D3:	FF0E      	ld         xh, @(-0x1, y)
   585D4:	FE9F      	bsr        @(-0x2, y)
   585D5:	021B      	ld         x, @(+0x2, y)
   585D6:	0488      	cmp        x, #+0x4
   585D7:	15F0      	bne        +0x15 <___libgatt_lib_db_5595+0x40:0x585EC[p]>
   585D8:	051B      	ld         x, @(+0x5, y)
   585D9:	0016      	ld         al, @(0x0, x)
   585DA:	0284      	cmp        al, #+0x2
   585DB:	05F0      	bne        +0x5 <___libgatt_lib_db_5595+0x34:0x585E0[p]>
   585DC:	F800      	**prefx    0xF8
   585DD:	1015      	ld         al, @0xF810 <___libgatt_lib_db_3562>
   585DE:	06B4      	or         al, #+0x6
   585DF:	0BE0      	bra        +0xB <___libgatt_lib_db_5595+0x3E:0x585EA[p]>
   585E0:	0184      	cmp        al, #+0x1
   585E1:	06F0      	bne        +0x6 <___libgatt_lib_db_5595+0x3B:0x585E7[p]>
   585E2:	F800      	**prefx    0xF8
   585E3:	1015      	ld         al, @0xF810 <___libgatt_lib_db_3562>
   585E4:	F9C4      	and        al, #0xFFF9
   585E5:	02B4      	or         al, #+0x2
   585E6:	04E0      	bra        +0x4 <___libgatt_lib_db_5595+0x3E:0x585EA[p]>
   585E7:	F800      	**prefx    0xF8
   585E8:	1015      	ld         al, @0xF810 <___libgatt_lib_db_3562>
   585E9:	FDC4      	and        al, #0xFFFD
   585EA:	F800      	**prefx    0xF8
   585EB:	1025      	st         al, @0xF810 <___libgatt_lib_db_3562>
   585EC:	0117      	ld         al, @(+0x1, y)
   585ED:	FB0F      	leave      #-0x5

0x000585EE <___libgatt_lib_db_5601>:
   585EE:	8600      	**prefx    0x86
   585EF:	1714      	ld         al, #-0x79E9
   585F0:	D800      	**prefx    0xD8
   585F1:	FF25      	st         al, @0xD7FF <bl_int_cnt+0x2B>
   585F2:	0514      	ld         al, #+0x5
   585F3:	D800      	**prefx    0xD8
   585F4:	FE25      	st         al, @0xD7FE <bl_int_cnt+0x2A>
   585F5:	0014      	ld         al, #+0x0
   585F6:	00E2      	bra        0x0, x

0x000585F7 <___libgatt_lib_db_5599>:
   585F7:	FD0B      	enter      #-0x3
   585F8:	08E0      	bra        +0x8 <___libgatt_lib_db_5599+0x9:0x58600[p]>
   585F9:	D600      	**prefx    0xD6
   585FA:	9615      	ld         al, @0xD596 <___libgatt_lib_db_1999+0xD3>
   585FB:	0023      	st         ah, @(0x0, y)
   585FC:	0010      	ld         ah, #+0x0
   585FD:	FC00      	**prefx    0xFC
   585FE:	E200      	**prefx    0xE2
   585FF:	3B9C      	bsr        -0x41DC5 <___libgatt_lib_db_5354:0x1683A[p]>
   58600:	6A00      	**prefx    0x6A
   58601:	1A14      	ld         al, #+0x6A1A
   58602:	FC00      	**prefx    0xFC
   58603:	DA00      	**prefx    0xDA
   58604:	499C      	bsr        -0x425B7 <___libgatt_lib_db_5225:0x1604D[p]>
   58605:	E111      	ld         ah, @0xFFE1 <register al>
   58606:	F3F0      	bne        -0xD <___libgatt_lib_db_5599+0x2:0x585F9[p]>
   58607:	FD0F      	leave      #-0x3

0x00058608 <___libgatt_lib_db_5600>:
   58608:	FC0B      	enter      #-0x4
   58609:	0027      	st         al, @(0x0, y)
   5860A:	0123      	st         ah, @(+0x1, y)
   5860B:	6A00      	**prefx    0x6A
   5860C:	1A14      	ld         al, #+0x6A1A
   5860D:	0010      	ld         ah, #+0x0
   5860E:	FC00      	**prefx    0xFC
   5860F:	DA00      	**prefx    0xDA
   58610:	059C      	bsr        -0x425FB <___libgatt_lib_db_5220:0x16015[p]>
   58611:	0017      	ld         al, @(0x0, y)
   58612:	0113      	ld         ah, @(+0x1, y)
   58613:	FC00      	**prefx    0xFC
   58614:	9A00      	**prefx    0x9A
   58615:	B39C      	bsr        -0x4664D <___libgatt_lib_db_4527:0x11FC8[p]>
   58616:	FC0F      	leave      #-0x4

0x00058617 <.LFB5>:
   58617:	FE0B      	enter      #-0x2
   58618:	1300      	**prefx    0x13
   58619:	0614      	ld         al, #+0x1306
   5861A:	0310      	ld         ah, #+0x3
   5861B:	FC00      	**prefx    0xFC
   5861C:	E600      	**prefx    0xE6
   5861D:	F49C      	bsr        -0x41A0C <___libgatt_lib_db_5421:0x16C11[p]>
   5861E:	E111      	ld         ah, @0xFFE1 <register al>
   5861F:	021B      	ld         x, @(+0x2, y)
   58620:	0016      	ld         al, @(0x0, x)
   58621:	E019      	ld         x, @0xFFE0 <register ah>
   58622:	0426      	st         al, @(+0x4, x)
   58623:	021B      	ld         x, @(+0x2, y)
   58624:	0216      	ld         al, @(+0x2, x)
   58625:	E019      	ld         x, @0xFFE0 <register ah>
   58626:	0626      	st         al, @(+0x6, x)
   58627:	021B      	ld         x, @(+0x2, y)
   58628:	0116      	ld         al, @(+0x1, x)
   58629:	E019      	ld         x, @0xFFE0 <register ah>
   5862A:	0526      	st         al, @(+0x5, x)
   5862B:	6A00      	**prefx    0x6A
   5862C:	1A14      	ld         al, #+0x6A1A
   5862D:	FC00      	**prefx    0xFC
   5862E:	DA00      	**prefx    0xDA
   5862F:	679C      	bsr        -0x42599 <___libgatt_lib_db_5215:0x16096[p]>
   58630:	0114      	ld         al, #+0x1
   58631:	0C00      	**prefx    0xC
   58632:	F09C      	bsr        +0xBF0 <___libgatt_lib_db_5658:0x59222[p]>
   58633:	0114      	ld         al, #+0x1
   58634:	FE0F      	leave      #-0x2

0x00058635 <___libgatt_lib_db_5605>:
   58635:	FB0B      	enter      #-0x5
   58636:	E119      	ld         x, @0xFFE1 <register al>
   58637:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   58638:	6A00      	**prefx    0x6A
   58639:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5863A:	0010      	ld         ah, #+0x0
   5863B:	2200      	**prefx    0x22
   5863C:	5634      	add        al, #+0x2256
   5863D:	0140      	addc       ah, #+0x1
   5863E:	FE27      	st         al, @(-0x2, y)
   5863F:	FF23      	st         ah, @(-0x1, y)
   58640:	0517      	ld         al, @(+0x5, y)
   58641:	0027      	st         al, @(0x0, y)
   58642:	E315      	ld         al, @0xFFE3 <register uxl>
   58643:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   58644:	FF0E      	ld         xh, @(-0x1, y)
   58645:	FE9F      	bsr        @(-0x2, y)
   58646:	0227      	st         al, @(+0x2, y)
   58647:	8600      	**prefx    0x86
   58648:	5314      	ld         al, #-0x79AD
   58649:	0127      	st         al, @(+0x1, y)
   5864A:	0514      	ld         al, #+0x5
   5864B:	0027      	st         al, @(0x0, y)
   5864C:	1F14      	ld         al, #+0x1F
   5864D:	0210      	ld         ah, #+0x2
   5864E:	FC00      	**prefx    0xFC
   5864F:	8B00      	**prefx    0x8B
   58650:	1B9C      	bsr        -0x474E5 <___libgatt_lib_db_4376:0x1116B[p]>
   58651:	0217      	ld         al, @(+0x2, y)
   58652:	FB0F      	leave      #-0x5

0x00058653 <.LFB4>:
   58653:	FC0B      	enter      #-0x4
   58654:	F700      	**prefx    0xF7
   58655:	4E15      	ld         al, @0xF74E <___libgatt_lib_db_4322>
   58656:	0127      	st         al, @(+0x1, y)
   58657:	F700      	**prefx    0xF7
   58658:	4F25      	st         al, @0xF74F <___libgatt_lib_db_4321>
   58659:	D800      	**prefx    0xD8
   5865A:	0315      	ld         al, @0xD803 <bl_int_cnt+0x2F>
   5865B:	6EF4      	beq        +0x6E <.LFB4+0x76:0x586C9[p]>
   5865C:	0113      	ld         ah, @(+0x1, y)
   5865D:	03C0      	and        ah, #0x3
   5865E:	0380      	cmp        ah, #+0x3
   5865F:	16F0      	bne        +0x16 <.LFB4+0x22:0x58675[p]>
   58660:	D800      	**prefx    0xD8
   58661:	0499      	tst        @0xD804 <bl_int_cnt+0x30>
   58662:	13F4      	beq        +0x13 <.LFB4+0x22:0x58675[p]>
   58663:	0018      	ld         x, #+0x0
   58664:	D800      	**prefx    0xD8
   58665:	0429      	st         x, @0xD804 <bl_int_cnt+0x30>
   58666:	F700      	**prefx    0xF7
   58667:	4415      	ld         al, @0xF744 <___libgatt_lib_db_4319>
   58668:	0100      	**prefx    0x1
   58669:	00B4      	or         al, #+0x100
   5866A:	F700      	**prefx    0xF7
   5866B:	4425      	st         al, @0xF744 <___libgatt_lib_db_4319>
   5866C:	F700      	**prefx    0xF7
   5866D:	4915      	ld         al, @0xF749 <___libgatt_lib_db_4320>
   5866E:	0100      	**prefx    0x1
   5866F:	00B4      	or         al, #+0x100
   58670:	F700      	**prefx    0xF7
   58671:	4925      	st         al, @0xF749 <___libgatt_lib_db_4320>
   58672:	1014      	ld         al, #+0x10
   58673:	FA25      	st         al, @0xFFFA <(scratchpad)>
   58674:	0CE0      	bra        +0xC <.LFB4+0x2D:0x58680[p]>
   58675:	D800      	**prefx    0xD8
   58676:	0415      	ld         al, @0xD804 <bl_int_cnt+0x30>
   58677:	04F4      	beq        +0x4 <.LFB4+0x28:0x5867B[p]>
   58678:	0187      	cmp        al, @(+0x1, y)
   58679:	0100      	**prefx    0x1
   5867A:	D0F0      	bne        +0xD0 <.LFB4+0xF7:0x5874A[p]>
   5867B:	E099      	tst        @0xFFE0 <register ah>
   5867C:	0100      	**prefx    0x1
   5867D:	99F4      	beq        +0x99 <.LFB4+0xC3:0x58716[p]>
   5867E:	0F18      	ld         x, #+0xF
   5867F:	FA29      	st         x, @0xFFFA <(scratchpad)>
   58680:	D800      	**prefx    0xD8
   58681:	1015      	ld         al, @0xD810 <bl_int_cnt+0x3C>
   58682:	26F4      	beq        +0x26 <.LFB4+0x55:0x586A8[p]>
   58683:	D800      	**prefx    0xD8
   58684:	0315      	ld         al, @0xD803 <bl_int_cnt+0x2F>
   58685:	D800      	**prefx    0xD8
   58686:	0D19      	ld         x, @0xD80D <bl_int_cnt+0x39>
   58687:	F829      	st         x, @0xFFF8 <(scratchpad)>
   58688:	E385      	cmp        al, @0xFFE3 <register uxl>
   58689:	16F8      	bcc        +0x16 <.LFB4+0x4C:0x5869F[p]>
   5868A:	D800      	**prefx    0xD8
   5868B:	0319      	ld         x, @0xD803 <bl_int_cnt+0x2F>
   5868C:	D800      	**prefx    0xD8
   5868D:	0C15      	ld         al, @0xD80C <bl_int_cnt+0x38>
   5868E:	D800      	**prefx    0xD8
   5868F:	0955      	sub        al, @0xD809 <bl_int_cnt+0x35>
   58690:	6E00      	**prefx    0x6E
   58691:	B790      	smult      #+0x6DB7
   58692:	E335      	add        al, @0xFFE3 <register uxl>
   58693:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   58694:	072C      	bcz        +0x7 <.LFB4+0x48:0x5869B[p]>
   58695:	D800      	**prefx    0xD8
   58696:	0E25      	st         al, @0xD80E <bl_int_cnt+0x3A>
   58697:	0114      	ld         al, #+0x1
   58698:	D800      	**prefx    0xD8
   58699:	0525      	st         al, @0xD805 <bl_int_cnt+0x31>
   5869A:	0BE0      	bra        +0xB <.LFB4+0x52:0x586A5[p]>
   5869B:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5869C:	D800      	**prefx    0xD8
   5869D:	0E29      	st         x, @0xD80E <bl_int_cnt+0x3A>
   5869E:	07E0      	bra        +0x7 <.LFB4+0x52:0x586A5[p]>
   5869F:	FF14      	ld         al, #-0x1
   586A0:	D800      	**prefx    0xD8
   586A1:	0E25      	st         al, @0xD80E <bl_int_cnt+0x3A>
   586A2:	0118      	ld         x, #+0x1
   586A3:	D800      	**prefx    0xD8
   586A4:	0529      	st         x, @0xD805 <bl_int_cnt+0x31>
   586A5:	0014      	ld         al, #+0x0
   586A6:	D800      	**prefx    0xD8
   586A7:	1025      	st         al, @0xD810 <bl_int_cnt+0x3C>
   586A8:	D800      	**prefx    0xD8
   586A9:	0499      	tst        @0xD804 <bl_int_cnt+0x30>
   586AA:	25F0      	bne        +0x25 <.LFB4+0x7C:0x586CF[p]>
   586AB:	0018      	ld         x, #+0x0
   586AC:	D800      	**prefx    0xD8
   586AD:	0329      	st         x, @0xD803 <bl_int_cnt+0x2F>
   586AE:	D800      	**prefx    0xD8
   586AF:	0529      	st         x, @0xD805 <bl_int_cnt+0x31>
   586B0:	D800      	**prefx    0xD8
   586B1:	0615      	ld         al, @0xD806 <bl_int_cnt+0x32>
   586B2:	D800      	**prefx    0xD8
   586B3:	07B5      	or         al, @0xD807 <bl_int_cnt+0x33>
   586B4:	15F4      	beq        +0x15 <.LFB4+0x76:0x586C9[p]>
   586B5:	D800      	**prefx    0xD8
   586B6:	0899      	tst        @0xD808 <bl_int_cnt+0x34>
   586B7:	12F4      	beq        +0x12 <.LFB4+0x76:0x586C9[p]>
   586B8:	D800      	**prefx    0xD8
   586B9:	0715      	ld         al, @0xD807 <bl_int_cnt+0x33>
   586BA:	F925      	st         al, @0xFFF9 <(scratchpad)>
   586BB:	D800      	**prefx    0xD8
   586BC:	0619      	ld         x, @0xD806 <bl_int_cnt+0x32>
   586BD:	F829      	st         x, @0xFFF8 <(scratchpad)>
   586BE:	D100      	**prefx    0xD1
   586BF:	1F15      	ld         al, @0xD11F <___libgatt_lib_db_1982+0x3>
   586C0:	0018      	ld         x, #+0x0
   586C1:	002B      	st         x, @(0x0, y)
   586C2:	FA11      	ld         ah, @0xFFFA <(scratchpad)>
   586C3:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   586C4:	FE2B      	st         x, @(-0x2, y)
   586C5:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   586C6:	FF2B      	st         x, @(-0x1, y)
   586C7:	FF0E      	ld         xh, @(-0x1, y)
   586C8:	FE9F      	bsr        @(-0x2, y)
   586C9:	0314      	ld         al, #+0x3
   586CA:	0010      	ld         ah, #+0x0
   586CB:	FC00      	**prefx    0xFC
   586CC:	B400      	**prefx    0xB4
   586CD:	369C      	bsr        -0x44BCA <___libgatt_lib_db_4813:0x13B03[p]>
   586CE:	7CE0      	bra        +0x7C <.LFB4+0xF7:0x5874A[p]>
   586CF:	D800      	**prefx    0xD8
   586D0:	0311      	ld         ah, @0xD803 <bl_int_cnt+0x2F>
   586D1:	D800      	**prefx    0xD8
   586D2:	0E81      	cmp        ah, @0xD80E <bl_int_cnt+0x3A>
   586D3:	0AF0      	bne        +0xA <.LFB4+0x8A:0x586DD[p]>
   586D4:	D800      	**prefx    0xD8
   586D5:	0C15      	ld         al, @0xD80C <bl_int_cnt+0x38>
   586D6:	F934      	add        al, #-0x7
   586D7:	D800      	**prefx    0xD8
   586D8:	0985      	cmp        al, @0xD809 <bl_int_cnt+0x35>
   586D9:	04F0      	bne        +0x4 <.LFB4+0x8A:0x586DD[p]>
   586DA:	0130      	add        ah, #+0x1
   586DB:	D800      	**prefx    0xD8
   586DC:	0E21      	st         ah, @0xD80E <bl_int_cnt+0x3A>
   586DD:	6A00      	**prefx    0x6A
   586DE:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   586DF:	0010      	ld         ah, #+0x0
   586E0:	2100      	**prefx    0x21
   586E1:	C334      	add        al, #+0x20C3
   586E2:	0140      	addc       ah, #+0x1
   586E3:	FE27      	st         al, @(-0x2, y)
   586E4:	FF23      	st         ah, @(-0x1, y)
   586E5:	D800      	**prefx    0xD8
   586E6:	0914      	ld         al, #-0x27F7
   586E7:	FF0E      	ld         xh, @(-0x1, y)
   586E8:	FE9F      	bsr        @(-0x2, y)
   586E9:	D800      	**prefx    0xD8
   586EA:	0E19      	ld         x, @0xD80E <bl_int_cnt+0x3A>
   586EB:	D800      	**prefx    0xD8
   586EC:	0D11      	ld         ah, @0xD80D <bl_int_cnt+0x39>
   586ED:	E089      	cmp        x, @0xFFE0 <register ah>
   586EE:	092C      	bcz        +0x9 <.LFB4+0xA4:0x586F7[p]>
   586EF:	D800      	**prefx    0xD8
   586F0:	0315      	ld         al, @0xD803 <bl_int_cnt+0x2F>
   586F1:	E385      	cmp        al, @0xFFE3 <register uxl>
   586F2:	0C2C      	bcz        +0xC <.LFB4+0xAB:0x586FE[p]>
   586F3:	0138      	add        x, #+0x1
   586F4:	D800      	**prefx    0xD8
   586F5:	0329      	st         x, @0xD803 <bl_int_cnt+0x2F>
   586F6:	08E0      	bra        +0x8 <.LFB4+0xAB:0x586FE[p]>
   586F7:	D800      	**prefx    0xD8
   586F8:	0315      	ld         al, @0xD803 <bl_int_cnt+0x2F>
   586F9:	E085      	cmp        al, @0xFFE0 <register ah>
   586FA:	042C      	bcz        +0x4 <.LFB4+0xAB:0x586FE[p]>
   586FB:	0130      	add        ah, #+0x1
   586FC:	D800      	**prefx    0xD8
   586FD:	0321      	st         ah, @0xD803 <bl_int_cnt+0x2F>
   586FE:	D800      	**prefx    0xD8
   586FF:	0915      	ld         al, @0xD809 <bl_int_cnt+0x35>
   58700:	D800      	**prefx    0xD8
   58701:	0C85      	cmp        al, @0xD80C <bl_int_cnt+0x38>
   58702:	14F0      	bne        +0x14 <.LFB4+0xC3:0x58716[p]>
   58703:	D800      	**prefx    0xD8
   58704:	0415      	ld         al, @0xD804 <bl_int_cnt+0x30>
   58705:	0184      	cmp        al, #+0x1
   58706:	0AF4      	beq        +0xA <.LFB4+0xBD:0x58710[p]>
   58707:	0284      	cmp        al, #+0x2
   58708:	0EF0      	bne        +0xE <.LFB4+0xC3:0x58716[p]>
   58709:	F700      	**prefx    0xF7
   5870A:	4415      	ld         al, @0xF744 <___libgatt_lib_db_4319>
   5870B:	0100      	**prefx    0x1
   5870C:	00B4      	or         al, #+0x100
   5870D:	F700      	**prefx    0xF7
   5870E:	4425      	st         al, @0xF744 <___libgatt_lib_db_4319>
   5870F:	07E0      	bra        +0x7 <.LFB4+0xC3:0x58716[p]>
   58710:	F700      	**prefx    0xF7
   58711:	4915      	ld         al, @0xF749 <___libgatt_lib_db_4320>
   58712:	0100      	**prefx    0x1
   58713:	00B4      	or         al, #+0x100
   58714:	F700      	**prefx    0xF7
   58715:	4925      	st         al, @0xF749 <___libgatt_lib_db_4320>
   58716:	F700      	**prefx    0xF7
   58717:	4E15      	ld         al, @0xF74E <___libgatt_lib_db_4322>
   58718:	32F4      	beq        +0x32 <.LFB4+0xF7:0x5874A[p]>
   58719:	0187      	cmp        al, @(+0x1, y)
   5871A:	30F4      	beq        +0x30 <.LFB4+0xF7:0x5874A[p]>
   5871B:	F700      	**prefx    0xF7
   5871C:	4F25      	st         al, @0xF74F <___libgatt_lib_db_4321>
   5871D:	0014      	ld         al, #+0x0
   5871E:	D800      	**prefx    0xD8
   5871F:	0425      	st         al, @0xD804 <bl_int_cnt+0x30>
   58720:	F700      	**prefx    0xF7
   58721:	4415      	ld         al, @0xF744 <___libgatt_lib_db_4319>
   58722:	0100      	**prefx    0x1
   58723:	00B4      	or         al, #+0x100
   58724:	F700      	**prefx    0xF7
   58725:	4425      	st         al, @0xF744 <___libgatt_lib_db_4319>
   58726:	F700      	**prefx    0xF7
   58727:	4915      	ld         al, @0xF749 <___libgatt_lib_db_4320>
   58728:	0100      	**prefx    0x1
   58729:	00B4      	or         al, #+0x100
   5872A:	F700      	**prefx    0xF7
   5872B:	4925      	st         al, @0xF749 <___libgatt_lib_db_4320>
   5872C:	0018      	ld         x, #+0x0
   5872D:	D800      	**prefx    0xD8
   5872E:	0329      	st         x, @0xD803 <bl_int_cnt+0x2F>
   5872F:	D800      	**prefx    0xD8
   58730:	0529      	st         x, @0xD805 <bl_int_cnt+0x31>
   58731:	D800      	**prefx    0xD8
   58732:	0615      	ld         al, @0xD806 <bl_int_cnt+0x32>
   58733:	D800      	**prefx    0xD8
   58734:	07B5      	or         al, @0xD807 <bl_int_cnt+0x33>
   58735:	15F4      	beq        +0x15 <.LFB4+0xF7:0x5874A[p]>
   58736:	D800      	**prefx    0xD8
   58737:	0899      	tst        @0xD808 <bl_int_cnt+0x34>
   58738:	12F4      	beq        +0x12 <.LFB4+0xF7:0x5874A[p]>
   58739:	D800      	**prefx    0xD8
   5873A:	0715      	ld         al, @0xD807 <bl_int_cnt+0x33>
   5873B:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5873C:	D800      	**prefx    0xD8
   5873D:	0619      	ld         x, @0xD806 <bl_int_cnt+0x32>
   5873E:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5873F:	D100      	**prefx    0xD1
   58740:	1F15      	ld         al, @0xD11F <___libgatt_lib_db_1982+0x3>
   58741:	0018      	ld         x, #+0x0
   58742:	002B      	st         x, @(0x0, y)
   58743:	1010      	ld         ah, #+0x10
   58744:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   58745:	FE2B      	st         x, @(-0x2, y)
   58746:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   58747:	FF2B      	st         x, @(-0x1, y)
   58748:	FF0E      	ld         xh, @(-0x1, y)
   58749:	FE9F      	bsr        @(-0x2, y)
   5874A:	FC0F      	leave      #-0x4

0x0005874B <___libgatt_lib_db_5607>:
   5874B:	0217      	ld         al, @(+0x2, y)
   5874C:	0384      	cmp        al, #+0x3
   5874D:	10F0      	bne        +0x10 <___libgatt_lib_db_5607+0x12:0x5875D[p]>
   5874E:	FA00      	**prefx    0xFA
   5874F:	1315      	ld         al, @0xFA13 <___libgatt_lib_db_3359>
   58750:	DFC4      	and        al, #0xFFDF
   58751:	FA00      	**prefx    0xFA
   58752:	1325      	st         al, @0xFA13 <___libgatt_lib_db_3359>
   58753:	FA00      	**prefx    0xFA
   58754:	1315      	ld         al, @0xFA13 <___libgatt_lib_db_3359>
   58755:	BFC4      	and        al, #0xFFBF
   58756:	FA00      	**prefx    0xFA
   58757:	1325      	st         al, @0xFA13 <___libgatt_lib_db_3359>
   58758:	0114      	ld         al, #+0x1
   58759:	0127      	st         al, @(+0x1, y)
   5875A:	3500      	**prefx    0x35
   5875B:	7814      	ld         al, #+0x3578
   5875C:	0027      	st         al, @(0x0, y)
   5875D:	00E2      	bra        0x0, x

0x0005875E <___libgatt_lib_db_5609>:
   5875E:	D70B      	enter      #-0x29
   5875F:	2A17      	ld         al, @(+0x2A, y)
   58760:	291B      	ld         x, @(+0x29, y)
   58761:	0010      	ld         ah, #+0x0
   58762:	10A0      	asl        #0x10
   58763:	E3B5      	or         al, @0xFFE3 <register uxl>
   58764:	0180      	cmp        ah, #+0x1
   58765:	34F0      	bne        +0x34 <___libgatt_lib_db_5609+0x3B:0x58799[p]>
   58766:	3C00      	**prefx    0x3C
   58767:	0684      	cmp        al, #+0x3C06
   58768:	31F0      	bne        +0x31 <___libgatt_lib_db_5609+0x3B:0x58799[p]>
   58769:	6A00      	**prefx    0x6A
   5876A:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5876B:	D700      	**prefx    0xD7
   5876C:	9619      	ld         x, @0xD696 <search_global+0x3>
   5876D:	0010      	ld         ah, #+0x0
   5876E:	C700      	**prefx    0xC7
   5876F:	E834      	add        al, #-0x3918
   58770:	0040      	addc       ah, #+0x0
   58771:	FE27      	st         al, @(-0x2, y)
   58772:	FF23      	st         ah, @(-0x1, y)
   58773:	D700      	**prefx    0xD7
   58774:	9815      	ld         al, @0xD698 <search_global+0x5>
   58775:	D700      	**prefx    0xD7
   58776:	9711      	ld         ah, @0xD697 <search_global+0x4>
   58777:	8800      	**prefx    0x88
   58778:	9A34      	add        al, #-0x7866
   58779:	0540      	addc       ah, #+0x5
   5877A:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5877B:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   5877C:	0000      	**prefx    0x0
   5877D:	0054      	sub        al, #+0x0
   5877E:	0560      	subc       ah, #+0x5
   5877F:	0127      	st         al, @(+0x1, y)
   58780:	0023      	st         ah, @(0x0, y)
   58781:	2214      	ld         al, #+0x22
   58782:	0227      	st         al, @(+0x2, y)
   58783:	E315      	ld         al, @0xFFE3 <register uxl>
   58784:	E411      	ld         ah, @0xFFE4 <register uy>
   58785:	0330      	add        ah, #+0x3
   58786:	FF0E      	ld         xh, @(-0x1, y)
   58787:	FE9F      	bsr        @(-0x2, y)
   58788:	0010      	ld         ah, #+0x0
   58789:	E415      	ld         al, @0xFFE4 <register uy>
   5878A:	0334      	add        al, #+0x3
   5878B:	8000      	**prefx    0x80
   5878C:	0034      	add        al, #-0x8000
   5878D:	0440      	addc       ah, #+0x4
   5878E:	2627      	st         al, @(+0x26, y)
   5878F:	2523      	st         ah, @(+0x25, y)
   58790:	2617      	ld         al, @(+0x26, y)
   58791:	2513      	ld         ah, @(+0x25, y)
   58792:	D000      	**prefx    0xD0
   58793:	0054      	sub        al, #-0x3000
   58794:	0060      	subc       ah, #+0x0
   58795:	2627      	st         al, @(+0x26, y)
   58796:	2523      	st         ah, @(+0x25, y)
   58797:	250E      	ld         xh, @(+0x25, y)
   58798:	269F      	bsr        @(+0x26, y)
   58799:	D70F      	leave      #-0x29

0x0005879A <.LFB4>:
   5879A:	FB0B      	enter      #-0x5
   5879B:	6A00      	**prefx    0x6A
   5879C:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5879D:	0010      	ld         ah, #+0x0
   5879E:	4D00      	**prefx    0x4D
   5879F:	C334      	add        al, #+0x4CC3
   587A0:	0140      	addc       ah, #+0x1
   587A1:	FE27      	st         al, @(-0x2, y)
   587A2:	FF23      	st         ah, @(-0x1, y)
   587A3:	0014      	ld         al, #+0x0
   587A4:	0027      	st         al, @(0x0, y)
   587A5:	0010      	ld         ah, #+0x0
   587A6:	FF0E      	ld         xh, @(-0x1, y)
   587A7:	FE9F      	bsr        @(-0x2, y)
   587A8:	6A00      	**prefx    0x6A
   587A9:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   587AA:	0010      	ld         ah, #+0x0
   587AB:	2A00      	**prefx    0x2A
   587AC:	3834      	add        al, #+0x2A38
   587AD:	0140      	addc       ah, #+0x1
   587AE:	0227      	st         al, @(+0x2, y)
   587AF:	0123      	st         ah, @(+0x1, y)
   587B0:	0014      	ld         al, #+0x0
   587B1:	010E      	ld         xh, @(+0x1, y)
   587B2:	029F      	bsr        @(+0x2, y)
   587B3:	303C      	add        y, #+0x30
   587B4:	0118      	ld         x, #+0x1
   587B5:	FF2B      	st         x, @(-0x1, y)
   587B6:	FF0E      	ld         xh, @(-0x1, y)
   587B7:	3C00      	**prefx    0x3C
   587B8:	0618      	ld         x, #+0x3C06
   587B9:	00E2      	bra        0x0, x
   587BA:	FB0F      	leave      #-0x5

0x000587BB <___libgatt_lib_db_5611>:
   587BB:	FC0B      	enter      #-0x4
   587BC:	FB00      	**prefx    0xFB
   587BD:	CA19      	ld         x, @0xFACA <___libgatt_lib_db_2568>
   587BE:	012B      	st         x, @(+0x1, y)
   587BF:	FB00      	**prefx    0xFB
   587C0:	CA19      	ld         x, @0xFACA <___libgatt_lib_db_2568>
   587C1:	F0C8      	and        x, #0xFFF0
   587C2:	07B8      	or         x, #+0x7
   587C3:	FB00      	**prefx    0xFB
   587C4:	CA29      	st         x, @0xFACA <___libgatt_lib_db_2568>
   587C5:	FB00      	**prefx    0xFB
   587C6:	0219      	ld         x, @0xFB02 <___libgatt_lib_db_2580>
   587C7:	1000      	**prefx    0x10
   587C8:	00B8      	or         x, #+0x1000
   587C9:	FB00      	**prefx    0xFB
   587CA:	0229      	st         x, @0xFB02 <___libgatt_lib_db_2580>
   587CB:	041B      	ld         x, @(+0x4, y)
   587CC:	002B      	st         x, @(0x0, y)
   587CD:	FC00      	**prefx    0xFC
   587CE:	BF00      	**prefx    0xBF
   587CF:	809C      	bsr        -0x44180 <___libgatt_lib_db_4934:0x1464F[p]>
   587D0:	FB00      	**prefx    0xFB
   587D1:	0211      	ld         ah, @0xFB02 <___libgatt_lib_db_2580>
   587D2:	F000      	**prefx    0xF0
   587D3:	FFC0      	and        ah, #0xEFFF
   587D4:	FB00      	**prefx    0xFB
   587D5:	0221      	st         ah, @0xFB02 <___libgatt_lib_db_2580>
   587D6:	FB00      	**prefx    0xFB
   587D7:	CA11      	ld         ah, @0xFACA <___libgatt_lib_db_2568>
   587D8:	F0C0      	and        ah, #0xFFF0
   587D9:	011B      	ld         x, @(+0x1, y)
   587DA:	0FC8      	and        x, #0xF
   587DB:	E3B1      	or         ah, @0xFFE3 <register uxl>
   587DC:	FB00      	**prefx    0xFB
   587DD:	CA21      	st         ah, @0xFACA <___libgatt_lib_db_2568>
   587DE:	FC0F      	leave      #-0x4

0x000587DF <.LFB6>:
   587DF:	FE0B      	enter      #-0x2
   587E0:	6A00      	**prefx    0x6A
   587E1:	1F19      	ld         x, @0x6A1F <GattReadCharUsingUuid+0xB>
   587E2:	F829      	st         x, @0xFFF8 <(scratchpad)>
   587E3:	1FF4      	beq        +0x1F <.LFB6+0x23:0x58802[p]>
   587E4:	6A00      	**prefx    0x6A
   587E5:	2011      	ld         ah, @0x6A20 <GattReadCharUsingUuid+0xC>
   587E6:	E019      	ld         x, @0xFFE0 <register ah>
   587E7:	0100      	**prefx    0x1
   587E8:	FFC8      	and        x, #0xFF
   587E9:	E199      	tst        @0xFFE1 <register al>
   587EA:	02F4      	beq        +0x2 <.LFB6+0xD:0x587EC[p]>
   587EB:	3CB8      	or         x, #+0x3C
   587EC:	E100      	**prefx    0xE1
   587ED:	5D15      	ld         al, @0xE15D <smem_device>
   587EE:	1F84      	cmp        al, #+0x1F
   587EF:	03F0      	bne        +0x3 <.LFB6+0x13:0x587F2[p]>
   587F0:	0614      	ld         al, #+0x6
   587F1:	02E0      	bra        +0x2 <.LFB6+0x14:0x587F3[p]>
   587F2:	5014      	ld         al, #+0x50
   587F3:	F200      	**prefx    0xF2
   587F4:	EB25      	st         al, @0xF1EB <___libgatt_lib_db_2140>
   587F5:	0114      	ld         al, #+0x1
   587F6:	F200      	**prefx    0xF2
   587F7:	EA25      	st         al, @0xF1EA <___libgatt_lib_db_4279>
   587F8:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   587F9:	0284      	cmp        al, #+0x2
   587FA:	06F0      	bne        +0x6 <.LFB6+0x21:0x58800[p]>
   587FB:	0009      	**unsigned
   587FC:	08A4      	lsr        #0x8
   587FD:	F200      	**prefx    0xF2
   587FE:	EA29      	st         x, @0xF1EA <___libgatt_lib_db_4279>
   587FF:	E019      	ld         x, @0xFFE0 <register ah>
   58800:	F200      	**prefx    0xF2
   58801:	EB29      	st         x, @0xF1EB <___libgatt_lib_db_2140>
   58802:	FE0F      	leave      #-0x2

0x00058803 <.LFB8>:
   58803:	015C      	sub        y, #+0x1
   58804:	B10B      	enter      #-0x4F
   58805:	4F23      	st         ah, @(+0x4F, y)
   58806:	5017      	ld         al, @(+0x50, y)
   58807:	4C27      	st         al, @(+0x4C, y)
   58808:	4B23      	st         ah, @(+0x4B, y)
   58809:	0014      	ld         al, #+0x0
   5880A:	4427      	st         al, @(+0x44, y)
   5880B:	53E0      	bra        +0x53 <.LFB8+0x5B:0x5885E[p]>
   5880C:	5217      	ld         al, @(+0x52, y)
   5880D:	4327      	st         al, @(+0x43, y)
   5880E:	4084      	cmp        al, #+0x40
   5880F:	032C      	bcz        +0x3 <.LFB8+0xF:0x58812[p]>
   58810:	4014      	ld         al, #+0x40
   58811:	4327      	st         al, @(+0x43, y)
   58812:	6A00      	**prefx    0x6A
   58813:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58814:	0010      	ld         ah, #+0x0
   58815:	CC00      	**prefx    0xCC
   58816:	DC34      	add        al, #-0x3424
   58817:	0040      	addc       ah, #+0x0
   58818:	4627      	st         al, @(+0x46, y)
   58819:	4523      	st         ah, @(+0x45, y)
   5881A:	4C17      	ld         al, @(+0x4C, y)
   5881B:	0127      	st         al, @(+0x1, y)
   5881C:	4B17      	ld         al, @(+0x4B, y)
   5881D:	0027      	st         al, @(0x0, y)
   5881E:	4317      	ld         al, @(+0x43, y)
   5881F:	0227      	st         al, @(+0x2, y)
   58820:	0314      	ld         al, #+0x3
   58821:	E411      	ld         ah, @0xFFE4 <register uy>
   58822:	0330      	add        ah, #+0x3
   58823:	450E      	ld         xh, @(+0x45, y)
   58824:	469F      	bsr        @(+0x46, y)
   58825:	519B      	tst        @(+0x51, y)
   58826:	03F0      	bne        +0x3 <.LFB8+0x26:0x58829[p]>
   58827:	0010      	ld         ah, #+0x0
   58828:	23E0      	bra        +0x23 <.LFB8+0x48:0x5884B[p]>
   58829:	6A00      	**prefx    0x6A
   5882A:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5882B:	0010      	ld         ah, #+0x0
   5882C:	5F00      	**prefx    0x5F
   5882D:	3134      	add        al, #+0x5F31
   5882E:	0140      	addc       ah, #+0x1
   5882F:	4827      	st         al, @(+0x48, y)
   58830:	4723      	st         ah, @(+0x47, y)
   58831:	4317      	ld         al, @(+0x43, y)
   58832:	0027      	st         al, @(0x0, y)
   58833:	5117      	ld         al, @(+0x51, y)
   58834:	E411      	ld         ah, @0xFFE4 <register uy>
   58835:	0330      	add        ah, #+0x3
   58836:	470E      	ld         xh, @(+0x47, y)
   58837:	489F      	bsr        @(+0x48, y)
   58838:	E199      	tst        @0xFFE1 <register al>
   58839:	04F4      	beq        +0x4 <.LFB8+0x3A:0x5883D[p]>
   5883A:	0C00      	**prefx    0xC
   5883B:	0014      	ld         al, #+0xC00
   5883C:	4427      	st         al, @(+0x44, y)
   5883D:	5117      	ld         al, @(+0x51, y)
   5883E:	4337      	add        al, @(+0x43, y)
   5883F:	5127      	st         al, @(+0x51, y)
   58840:	0DE0      	bra        +0xD <.LFB8+0x4A:0x5884D[p]>
   58841:	E419      	ld         x, @0xFFE4 <register uy>
   58842:	E039      	add        x, @0xFFE0 <register ah>
   58843:	0316      	ld         al, @(+0x3, x)
   58844:	FF84      	cmp        al, #-0x1
   58845:	05F4      	beq        +0x5 <.LFB8+0x47:0x5884A[p]>
   58846:	0C00      	**prefx    0xC
   58847:	0014      	ld         al, #+0xC00
   58848:	4427      	st         al, @(+0x44, y)
   58849:	17E0      	bra        +0x17 <.LFB8+0x5D:0x58860[p]>
   5884A:	0130      	add        ah, #+0x1
   5884B:	4383      	cmp        ah, @(+0x43, y)
   5884C:	F5FC      	bcs        -0xB <.LFB8+0x3E:0x58841[p]>
   5884D:	4417      	ld         al, @(+0x44, y)
   5884E:	0C00      	**prefx    0xC
   5884F:	0084      	cmp        al, #+0xC00
   58850:	10F4      	beq        +0x10 <.LFB8+0x5D:0x58860[p]>
   58851:	4317      	ld         al, @(+0x43, y)
   58852:	4A27      	st         al, @(+0x4A, y)
   58853:	0014      	ld         al, #+0x0
   58854:	4927      	st         al, @(+0x49, y)
   58855:	4C17      	ld         al, @(+0x4C, y)
   58856:	4B13      	ld         ah, @(+0x4B, y)
   58857:	4A37      	add        al, @(+0x4A, y)
   58858:	4943      	addc       ah, @(+0x49, y)
   58859:	4C27      	st         al, @(+0x4C, y)
   5885A:	4B23      	st         ah, @(+0x4B, y)
   5885B:	5217      	ld         al, @(+0x52, y)
   5885C:	4357      	sub        al, @(+0x43, y)
   5885D:	5227      	st         al, @(+0x52, y)
   5885E:	529B      	tst        @(+0x52, y)
   5885F:	ADF0      	bne        -0x53 <.LFB8+0x9:0x5880C[p]>
   58860:	4417      	ld         al, @(+0x44, y)
   58861:	503C      	add        y, #+0x50
   58862:	FE0E      	ld         xh, @(-0x2, y)
   58863:	FDE3      	bra        @(-0x3, y)

0x00058864 <.LFB5>:
   58864:	F80B      	enter      #-0x8
   58865:	0327      	st         al, @(+0x3, y)
   58866:	D700      	**prefx    0xD7
   58867:	9618      	ld         x, #-0x296A
   58868:	0216      	ld         al, @(+0x2, x)
   58869:	0112      	ld         ah, @(+0x1, x)
   5886A:	001A      	ld         x, @(0x0, x)
   5886B:	8800      	**prefx    0x88
   5886C:	DF34      	add        al, #-0x7821
   5886D:	0540      	addc       ah, #+0x5
   5886E:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5886F:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   58870:	0000      	**prefx    0x0
   58871:	0054      	sub        al, #+0x0
   58872:	0560      	subc       ah, #+0x5
   58873:	0127      	st         al, @(+0x1, y)
   58874:	0023      	st         ah, @(0x0, y)
   58875:	2814      	ld         al, #+0x28
   58876:	0227      	st         al, @(+0x2, y)
   58877:	E315      	ld         al, @0xFFE3 <register uxl>
   58878:	0313      	ld         ah, @(+0x3, y)
   58879:	FB00      	**prefx    0xFB
   5887A:	3E00      	**prefx    0x3E
   5887B:	6D9C      	bsr        -0x4C193 <___libgatt_lib_db_1898:0xC6E8[p]>
   5887C:	0010      	ld         ah, #+0x0
   5887D:	0317      	ld         al, @(+0x3, y)
   5887E:	8000      	**prefx    0x80
   5887F:	0034      	add        al, #-0x8000
   58880:	0440      	addc       ah, #+0x4
   58881:	0527      	st         al, @(+0x5, y)
   58882:	0423      	st         ah, @(+0x4, y)
   58883:	0517      	ld         al, @(+0x5, y)
   58884:	0413      	ld         ah, @(+0x4, y)
   58885:	D000      	**prefx    0xD0
   58886:	0054      	sub        al, #-0x3000
   58887:	0060      	subc       ah, #+0x0
   58888:	0527      	st         al, @(+0x5, y)
   58889:	0423      	st         ah, @(+0x4, y)
   5888A:	051B      	ld         x, @(+0x5, y)
   5888B:	E315      	ld         al, @0xFFE3 <register uxl>
   5888C:	041B      	ld         x, @(+0x4, y)
   5888D:	E311      	ld         ah, @0xFFE3 <register uxl>
   5888E:	F80F      	leave      #-0x8

0x0005888F <___libgatt_lib_db_5618>:
   5888F:	D00B      	enter      #-0x30
   58890:	F200      	**prefx    0xF2
   58891:	E515      	ld         al, @0xF1E5 <___libgatt_lib_db_4274>
   58892:	4000      	**prefx    0x40
   58893:	00C4      	and        al, #0x4000
   58894:	3BF4      	beq        +0x3B <___libgatt_lib_db_5618+0x40:0x588CF[p]>
   58895:	E100      	**prefx    0xE1
   58896:	5D15      	ld         al, @0xE15D <smem_device>
   58897:	0100      	**prefx    0x1
   58898:	EF84      	cmp        al, #+0xEF
   58899:	03F4      	beq        +0x3 <___libgatt_lib_db_5618+0xD:0x5889C[p]>
   5889A:	1F84      	cmp        al, #+0x1F
   5889B:	34F0      	bne        +0x34 <___libgatt_lib_db_5618+0x40:0x588CF[p]>
   5889C:	0014      	ld         al, #+0x0
   5889D:	0227      	st         al, @(+0x2, y)
   5889E:	E415      	ld         al, @0xFFE4 <register uy>
   5889F:	0334      	add        al, #+0x3
   588A0:	C49C      	bsr        -0x3C <.LFB5:0x58864[p]>
   588A1:	2C27      	st         al, @(+0x2C, y)
   588A2:	2B23      	st         ah, @(+0x2B, y)
   588A3:	E100      	**prefx    0xE1
   588A4:	6315      	ld         al, @0xE163 <smem_device+0x6>
   588A5:	2D27      	st         al, @(+0x2D, y)
   588A6:	FC00      	**prefx    0xFC
   588A7:	8900      	**prefx    0x89
   588A8:	AC9C      	bsr        -0x47754 <___libgatt_lib_db_4375:0x11154[p]>
   588A9:	0114      	ld         al, #+0x1
   588AA:	0027      	st         al, @(0x0, y)
   588AB:	0514      	ld         al, #+0x5
   588AC:	E411      	ld         ah, @0xFFE4 <register uy>
   588AD:	0130      	add        ah, #+0x1
   588AE:	FC00      	**prefx    0xFC
   588AF:	C100      	**prefx    0xC1
   588B0:	6D9C      	bsr        -0x43E93 <___libgatt_lib_db_4999:0x14A1D[p]>
   588B1:	2D17      	ld         al, @(+0x2D, y)
   588B2:	07C4      	and        al, #0x7
   588B3:	FC34      	add        al, #-0x4
   588B4:	0284      	cmp        al, #+0x2
   588B5:	0BF8      	bcc        +0xB <___libgatt_lib_db_5618+0x31:0x588C0[p]>
   588B6:	0114      	ld         al, #+0x1
   588B7:	0027      	st         al, @(0x0, y)
   588B8:	3514      	ld         al, #+0x35
   588B9:	E411      	ld         ah, @0xFFE4 <register uy>
   588BA:	0230      	add        ah, #+0x2
   588BB:	FC00      	**prefx    0xFC
   588BC:	C100      	**prefx    0xC1
   588BD:	609C      	bsr        -0x43EA0 <___libgatt_lib_db_4999:0x14A1D[p]>
   588BE:	0214      	ld         al, #+0x2
   588BF:	02E0      	bra        +0x2 <___libgatt_lib_db_5618+0x32:0x588C1[p]>
   588C0:	0114      	ld         al, #+0x1
   588C1:	6A00      	**prefx    0x6A
   588C2:	1F25      	st         al, @0x6A1F <GattReadCharUsingUuid+0xB>
   588C3:	0217      	ld         al, @(+0x2, y)
   588C4:	08A0      	asl        #0x8
   588C5:	01B7      	or         al, @(+0x1, y)
   588C6:	C3C4      	and        al, #0xFFC3
   588C7:	6A00      	**prefx    0x6A
   588C8:	2025      	st         al, @0x6A20 <GattReadCharUsingUuid+0xC>
   588C9:	0114      	ld         al, #+0x1
   588CA:	2B0E      	ld         xh, @(+0x2B, y)
   588CB:	2C9F      	bsr        @(+0x2C, y)
   588CC:	FC00      	**prefx    0xFC
   588CD:	8900      	**prefx    0x89
   588CE:	8F9C      	bsr        -0x47771 <___libgatt_lib_db_4382:0x1115D[p]>
   588CF:	D00F      	leave      #-0x30

0x000588D0 <___libgatt_lib_db_5613>:
   588D0:	FD0B      	enter      #-0x3
   588D1:	FC00      	**prefx    0xFC
   588D2:	8900      	**prefx    0x89
   588D3:	819C      	bsr        -0x4777F <___libgatt_lib_db_4375:0x11154[p]>
   588D4:	0014      	ld         al, #+0x0
   588D5:	FF00      	**prefx    0xFF
   588D6:	099C      	bsr        -0xF7 <.LFB6:0x587DF[p]>
   588D7:	FC00      	**prefx    0xFC
   588D8:	BF00      	**prefx    0xBF
   588D9:	959C      	bsr        -0x4416B <___libgatt_lib_db_4973:0x1476E[p]>
   588DA:	0027      	st         al, @(0x0, y)
   588DB:	0114      	ld         al, #+0x1
   588DC:	FF00      	**prefx    0xFF
   588DD:	029C      	bsr        -0xFE <.LFB6:0x587DF[p]>
   588DE:	FC00      	**prefx    0xFC
   588DF:	8800      	**prefx    0x88
   588E0:	7D9C      	bsr        -0x47783 <___libgatt_lib_db_4382:0x1115D[p]>
   588E1:	0017      	ld         al, @(0x0, y)
   588E2:	FD0F      	leave      #-0x3

0x000588E3 <___libgatt_lib_db_5614>:
   588E3:	015C      	sub        y, #+0x1
   588E4:	CD0B      	enter      #-0x33
   588E5:	2E27      	st         al, @(+0x2E, y)
   588E6:	3323      	st         ah, @(+0x33, y)
   588E7:	2F23      	st         ah, @(+0x2F, y)
   588E8:	3417      	ld         al, @(+0x34, y)
   588E9:	3027      	st         al, @(+0x30, y)
   588EA:	E415      	ld         al, @0xFFE4 <register uy>
   588EB:	0334      	add        al, #+0x3
   588EC:	FF00      	**prefx    0xFF
   588ED:	779C      	bsr        -0x89 <.LFB5:0x58864[p]>
   588EE:	2C27      	st         al, @(+0x2C, y)
   588EF:	2B23      	st         ah, @(+0x2B, y)
   588F0:	FC00      	**prefx    0xFC
   588F1:	8800      	**prefx    0x88
   588F2:	629C      	bsr        -0x4779E <___libgatt_lib_db_4375:0x11154[p]>
   588F3:	0014      	ld         al, #+0x0
   588F4:	2B0E      	ld         xh, @(+0x2B, y)
   588F5:	2C9F      	bsr        @(+0x2C, y)
   588F6:	3517      	ld         al, @(+0x35, y)
   588F7:	0127      	st         al, @(+0x1, y)
   588F8:	3617      	ld         al, @(+0x36, y)
   588F9:	0227      	st         al, @(+0x2, y)
   588FA:	3017      	ld         al, @(+0x30, y)
   588FB:	0027      	st         al, @(0x0, y)
   588FC:	2F13      	ld         ah, @(+0x2F, y)
   588FD:	2E17      	ld         al, @(+0x2E, y)
   588FE:	FC00      	**prefx    0xFC
   588FF:	BF00      	**prefx    0xBF
   58900:	949C      	bsr        -0x4416C <___libgatt_lib_db_4981:0x14794[p]>
   58901:	2D27      	st         al, @(+0x2D, y)
   58902:	FC00      	**prefx    0xFC
   58903:	8800      	**prefx    0x88
   58904:	599C      	bsr        -0x477A7 <___libgatt_lib_db_4382:0x1115D[p]>
   58905:	2D9B      	tst        @(+0x2D, y)
   58906:	36F0      	bne        +0x36 <___libgatt_lib_db_5614+0x59:0x5893C[p]>
   58907:	359B      	tst        @(+0x35, y)
   58908:	29F0      	bne        +0x29 <___libgatt_lib_db_5614+0x4E:0x58931[p]>
   58909:	FB00      	**prefx    0xFB
   5890A:	9815      	ld         al, @0xFA98 <___libgatt_lib_db_3253>
   5890B:	0200      	**prefx    0x2
   5890C:	00C4      	and        al, #0x200
   5890D:	24F4      	beq        +0x24 <___libgatt_lib_db_5614+0x4E:0x58931[p]>
   5890E:	FC00      	**prefx    0xFC
   5890F:	8800      	**prefx    0x88
   58910:	449C      	bsr        -0x477BC <___libgatt_lib_db_4375:0x11154[p]>
   58911:	FB00      	**prefx    0xFB
   58912:	9815      	ld         al, @0xFA98 <___libgatt_lib_db_3253>
   58913:	FE00      	**prefx    0xFE
   58914:	FFC4      	and        al, #0xFDFF
   58915:	FB00      	**prefx    0xFB
   58916:	9825      	st         al, @0xFA98 <___libgatt_lib_db_3253>
   58917:	0114      	ld         al, #+0x1
   58918:	FB00      	**prefx    0xFB
   58919:	9A25      	st         al, @0xFA9A <___libgatt_lib_db_3262>
   5891A:	FB00      	**prefx    0xFB
   5891B:	9B15      	ld         al, @0xFA9B <___libgatt_lib_db_3261>
   5891C:	01C4      	and        al, #0x1
   5891D:	FDF4      	beq        -0x3 <___libgatt_lib_db_5614+0x37:0x5891A[p]>
   5891E:	FB00      	**prefx    0xFB
   5891F:	9B15      	ld         al, @0xFA9B <___libgatt_lib_db_3261>
   58920:	02C4      	and        al, #0x2
   58921:	05F4      	beq        +0x5 <___libgatt_lib_db_5614+0x43:0x58926[p]>
   58922:	0C00      	**prefx    0xC
   58923:	0014      	ld         al, #+0xC00
   58924:	2D27      	st         al, @(+0x2D, y)
   58925:	07E0      	bra        +0x7 <___libgatt_lib_db_5614+0x49:0x5892C[p]>
   58926:	FB00      	**prefx    0xFB
   58927:	9815      	ld         al, @0xFA98 <___libgatt_lib_db_3253>
   58928:	0200      	**prefx    0x2
   58929:	00B4      	or         al, #+0x200
   5892A:	FB00      	**prefx    0xFB
   5892B:	9825      	st         al, @0xFA98 <___libgatt_lib_db_3253>
   5892C:	FC00      	**prefx    0xFC
   5892D:	8800      	**prefx    0x88
   5892E:	2F9C      	bsr        -0x477D1 <___libgatt_lib_db_4382:0x1115D[p]>
   5892F:	2D9B      	tst        @(+0x2D, y)
   58930:	0CF0      	bne        +0xC <___libgatt_lib_db_5614+0x59:0x5893C[p]>
   58931:	3517      	ld         al, @(+0x35, y)
   58932:	0127      	st         al, @(+0x1, y)
   58933:	3617      	ld         al, @(+0x36, y)
   58934:	0227      	st         al, @(+0x2, y)
   58935:	3017      	ld         al, @(+0x30, y)
   58936:	0027      	st         al, @(0x0, y)
   58937:	2F13      	ld         ah, @(+0x2F, y)
   58938:	2E17      	ld         al, @(+0x2E, y)
   58939:	FF00      	**prefx    0xFF
   5893A:	C99C      	bsr        -0x137 <.LFB8:0x58803[p]>
   5893B:	2D27      	st         al, @(+0x2D, y)
   5893C:	FC00      	**prefx    0xFC
   5893D:	8800      	**prefx    0x88
   5893E:	169C      	bsr        -0x477EA <___libgatt_lib_db_4375:0x11154[p]>
   5893F:	0114      	ld         al, #+0x1
   58940:	2B0E      	ld         xh, @(+0x2B, y)
   58941:	2C9F      	bsr        @(+0x2C, y)
   58942:	FC00      	**prefx    0xFC
   58943:	8800      	**prefx    0x88
   58944:	199C      	bsr        -0x477E7 <___libgatt_lib_db_4382:0x1115D[p]>
   58945:	2D17      	ld         al, @(+0x2D, y)
   58946:	343C      	add        y, #+0x34
   58947:	FE0E      	ld         xh, @(-0x2, y)
   58948:	FDE3      	bra        @(-0x3, y)

0x00058949 <___libgatt_lib_db_5620>:
   58949:	FE0B      	enter      #-0x2
   5894A:	0317      	ld         al, @(+0x3, y)
   5894B:	021B      	ld         x, @(+0x2, y)
   5894C:	0010      	ld         ah, #+0x0
   5894D:	10A0      	asl        #0x10
   5894E:	E3B5      	or         al, @0xFFE3 <register uxl>
   5894F:	0180      	cmp        ah, #+0x1
   58950:	67F0      	bne        +0x67 <___libgatt_lib_db_5620+0x6E:0x589B7[p]>
   58951:	5300      	**prefx    0x53
   58952:	3A84      	cmp        al, #+0x533A
   58953:	64F0      	bne        +0x64 <___libgatt_lib_db_5620+0x6E:0x589B7[p]>
   58954:	0417      	ld         al, @(+0x4, y)
   58955:	0184      	cmp        al, #+0x1
   58956:	2CF0      	bne        +0x2C <___libgatt_lib_db_5620+0x39:0x58982[p]>
   58957:	F100      	**prefx    0xF1
   58958:	8C15      	ld         al, @0xF08C <___libgatt_lib_db_3030>
   58959:	BFC4      	and        al, #0xFFBF
   5895A:	F100      	**prefx    0xF1
   5895B:	8C25      	st         al, @0xF08C <___libgatt_lib_db_3030>
   5895C:	F100      	**prefx    0xF1
   5895D:	8C15      	ld         al, @0xF08C <___libgatt_lib_db_3030>
   5895E:	EFC4      	and        al, #0xFFEF
   5895F:	F100      	**prefx    0xF1
   58960:	8C25      	st         al, @0xF08C <___libgatt_lib_db_3030>
   58961:	1000      	**prefx    0x10
   58962:	C014      	ld         al, #+0xFC0
   58963:	F100      	**prefx    0xF1
   58964:	1725      	st         al, @0xF117 <___libgatt_lib_db_2989>
   58965:	F000      	**prefx    0xF0
   58966:	6915      	ld         al, @0xF069 <___libgatt_lib_db_2996>
   58967:	0100      	**prefx    0x1
   58968:	00B4      	or         al, #+0x100
   58969:	F000      	**prefx    0xF0
   5896A:	6925      	st         al, @0xF069 <___libgatt_lib_db_2996>
   5896B:	FB00      	**prefx    0xFB
   5896C:	1A15      	ld         al, @0xFB1A <___libgatt_lib_db_2594>
   5896D:	E100      	**prefx    0xE1
   5896E:	E0C4      	and        al, #0xE0E0
   5896F:	1400      	**prefx    0x14
   58970:	14B4      	or         al, #+0x1414
   58971:	FB00      	**prefx    0xFB
   58972:	1A25      	st         al, @0xFB1A <___libgatt_lib_db_2594>
   58973:	FB00      	**prefx    0xFB
   58974:	2215      	ld         al, @0xFB22 <___libgatt_lib_db_2648>
   58975:	08C4      	and        al, #0x8
   58976:	04F4      	beq        +0x4 <___libgatt_lib_db_5620+0x31:0x5897A[p]>
   58977:	2000      	**prefx    0x20
   58978:	F014      	ld         al, #+0x1FF0
   58979:	03E0      	bra        +0x3 <___libgatt_lib_db_5620+0x33:0x5897C[p]>
   5897A:	2000      	**prefx    0x20
   5897B:	F114      	ld         al, #+0x1FF1
   5897C:	FB00      	**prefx    0xFB
   5897D:	1D25      	st         al, @0xFB1D <___libgatt_lib_db_2609>
   5897E:	0A00      	**prefx    0xA
   5897F:	FF14      	ld         al, #+0x9FF
   58980:	FB00      	**prefx    0xFB
   58981:	1C25      	st         al, @0xFB1C <___libgatt_lib_db_2608>
   58982:	0417      	ld         al, @(+0x4, y)
   58983:	11F0      	bne        +0x11 <___libgatt_lib_db_5620+0x4B:0x58994[p]>
   58984:	FB00      	**prefx    0xFB
   58985:	1A15      	ld         al, @0xFB1A <___libgatt_lib_db_2594>
   58986:	E100      	**prefx    0xE1
   58987:	E0C4      	and        al, #0xE0E0
   58988:	1C00      	**prefx    0x1C
   58989:	1CB4      	or         al, #+0x1C1C
   5898A:	FB00      	**prefx    0xFB
   5898B:	1A25      	st         al, @0xFB1A <___libgatt_lib_db_2594>
   5898C:	0E00      	**prefx    0xE
   5898D:	D014      	ld         al, #+0xDD0
   5898E:	FB00      	**prefx    0xFB
   5898F:	1D25      	st         al, @0xFB1D <___libgatt_lib_db_2609>
   58990:	0A00      	**prefx    0xA
   58991:	DD14      	ld         al, #+0x9DD
   58992:	FB00      	**prefx    0xFB
   58993:	1C25      	st         al, @0xFB1C <___libgatt_lib_db_2608>
   58994:	0617      	ld         al, @(+0x6, y)
   58995:	051B      	ld         x, @(+0x5, y)
   58996:	0010      	ld         ah, #+0x0
   58997:	10A0      	asl        #0x10
   58998:	E3B5      	or         al, @0xFFE3 <register uxl>
   58999:	0180      	cmp        ah, #+0x1
   5899A:	1DF0      	bne        +0x1D <___libgatt_lib_db_5620+0x6E:0x589B7[p]>
   5899B:	5100      	**prefx    0x51
   5899C:	2084      	cmp        al, #+0x5120
   5899D:	09F0      	bne        +0x9 <___libgatt_lib_db_5620+0x5D:0x589A6[p]>
   5899E:	0014      	ld         al, #+0x0
   5899F:	0500      	**prefx    0x5
   589A0:	F99C      	bsr        +0x4F9 <___libgatt_lib_db_5648:0x58E99[p]>
   589A1:	0114      	ld         al, #+0x1
   589A2:	0627      	st         al, @(+0x6, y)
   589A3:	5100      	**prefx    0x51
   589A4:	2314      	ld         al, #+0x5123
   589A5:	0BE0      	bra        +0xB <___libgatt_lib_db_5620+0x67:0x589B0[p]>
   589A6:	5200      	**prefx    0x52
   589A7:	8B84      	cmp        al, #+0x518B
   589A8:	0AF0      	bne        +0xA <___libgatt_lib_db_5620+0x69:0x589B2[p]>
   589A9:	0114      	ld         al, #+0x1
   589AA:	0500      	**prefx    0x5
   589AB:	EE9C      	bsr        +0x4EE <___libgatt_lib_db_5648:0x58E99[p]>
   589AC:	0114      	ld         al, #+0x1
   589AD:	0627      	st         al, @(+0x6, y)
   589AE:	5200      	**prefx    0x52
   589AF:	8E14      	ld         al, #+0x518E
   589B0:	0527      	st         al, @(+0x5, y)
   589B1:	06E0      	bra        +0x6 <___libgatt_lib_db_5620+0x6E:0x589B7[p]>
   589B2:	5100      	**prefx    0x51
   589B3:	4C84      	cmp        al, #+0x514C
   589B4:	03F0      	bne        +0x3 <___libgatt_lib_db_5620+0x6E:0x589B7[p]>
   589B5:	0400      	**prefx    0x4
   589B6:	409C      	bsr        +0x440 <___libgatt_lib_db_5641:0x58DF6[p]>
   589B7:	FE0F      	leave      #-0x2

0x000589B8 <___libgatt_lib_db_5619>:
   589B8:	FE0B      	enter      #-0x2
   589B9:	0317      	ld         al, @(+0x3, y)
   589BA:	021B      	ld         x, @(+0x2, y)
   589BB:	0010      	ld         ah, #+0x0
   589BC:	10A0      	asl        #0x10
   589BD:	E3B5      	or         al, @0xFFE3 <register uxl>
   589BE:	0180      	cmp        ah, #+0x1
   589BF:	0100      	**prefx    0x1
   589C0:	E1F0      	bne        +0xE1 <___libgatt_lib_db_5619+0xE9:0x58AA1[p]>
   589C1:	5200      	**prefx    0x52
   589C2:	2384      	cmp        al, #+0x5223
   589C3:	0100      	**prefx    0x1
   589C4:	DDF0      	bne        +0xDD <___libgatt_lib_db_5619+0xE9:0x58AA1[p]>
   589C5:	FA00      	**prefx    0xFA
   589C6:	0715      	ld         al, @0xFA07 <___libgatt_lib_db_3357>
   589C7:	BFC4      	and        al, #0xFFBF
   589C8:	FA00      	**prefx    0xFA
   589C9:	0725      	st         al, @0xFA07 <___libgatt_lib_db_3357>
   589CA:	FA00      	**prefx    0xFA
   589CB:	1415      	ld         al, @0xFA14 <___libgatt_lib_db_3372>
   589CC:	04C4      	and        al, #0x4
   589CD:	07F4      	beq        +0x7 <___libgatt_lib_db_5619+0x1C:0x589D4[p]>
   589CE:	FB00      	**prefx    0xFB
   589CF:	C315      	ld         al, @0xFAC3 <___libgatt_lib_db_2545>
   589D0:	1000      	**prefx    0x10
   589D1:	00B4      	or         al, #+0x1000
   589D2:	FB00      	**prefx    0xFB
   589D3:	C325      	st         al, @0xFAC3 <___libgatt_lib_db_2545>
   589D4:	4200      	**prefx    0x42
   589D5:	2814      	ld         al, #+0x4228
   589D6:	F100      	**prefx    0xF1
   589D7:	AC25      	st         al, @0xF0AC <___libgatt_lib_db_3000>
   589D8:	0500      	**prefx    0x5
   589D9:	9E9C      	bsr        +0x49E <___libgatt_lib_db_5647:0x58E77[p]>
   589DA:	D200      	**prefx    0xD2
   589DB:	3418      	ld         x, #-0x2DCC
   589DC:	3400      	**prefx    0x34
   589DD:	0514      	ld         al, #+0x3405
   589DE:	0A26      	st         al, @(+0xA, x)
   589DF:	7400      	**prefx    0x74
   589E0:	0014      	ld         al, #+0x7400
   589E1:	1A26      	st         al, @(+0x1A, x)
   589E2:	2514      	ld         al, #+0x25
   589E3:	0126      	st         al, @(+0x1, x)
   589E4:	1126      	st         al, @(+0x11, x)
   589E5:	0B14      	ld         al, #+0xB
   589E6:	0226      	st         al, @(+0x2, x)
   589E7:	1226      	st         al, @(+0x12, x)
   589E8:	0014      	ld         al, #+0x0
   589E9:	0826      	st         al, @(+0x8, x)
   589EA:	1826      	st         al, @(+0x18, x)
   589EB:	0100      	**prefx    0x1
   589EC:	2C26      	st         al, @(+0x12C, x)
   589ED:	0100      	**prefx    0x1
   589EE:	2E26      	st         al, @(+0x12E, x)
   589EF:	0100      	**prefx    0x1
   589F0:	3026      	st         al, @(+0x130, x)
   589F1:	0100      	**prefx    0x1
   589F2:	8114      	ld         al, #+0x81
   589F3:	0100      	**prefx    0x1
   589F4:	3126      	st         al, @(+0x131, x)
   589F5:	0014      	ld         al, #+0x0
   589F6:	0100      	**prefx    0x1
   589F7:	3226      	st         al, @(+0x132, x)
   589F8:	0100      	**prefx    0x1
   589F9:	3426      	st         al, @(+0x134, x)
   589FA:	0100      	**prefx    0x1
   589FB:	3626      	st         al, @(+0x136, x)
   589FC:	0100      	**prefx    0x1
   589FD:	8514      	ld         al, #+0x85
   589FE:	0100      	**prefx    0x1
   589FF:	3726      	st         al, @(+0x137, x)
   58A00:	0014      	ld         al, #+0x0
   58A01:	0100      	**prefx    0x1
   58A02:	3826      	st         al, @(+0x138, x)
   58A03:	0100      	**prefx    0x1
   58A04:	8814      	ld         al, #+0x88
   58A05:	0100      	**prefx    0x1
   58A06:	3926      	st         al, @(+0x139, x)
   58A07:	0014      	ld         al, #+0x0
   58A08:	0100      	**prefx    0x1
   58A09:	3A26      	st         al, @(+0x13A, x)
   58A0A:	0100      	**prefx    0x1
   58A0B:	8914      	ld         al, #+0x89
   58A0C:	0100      	**prefx    0x1
   58A0D:	3B26      	st         al, @(+0x13B, x)
   58A0E:	0934      	add        al, #+0x9
   58A0F:	0100      	**prefx    0x1
   58A10:	4726      	st         al, @(+0x147, x)
   58A11:	0534      	add        al, #+0x5
   58A12:	0100      	**prefx    0x1
   58A13:	4926      	st         al, @(+0x149, x)
   58A14:	0534      	add        al, #+0x5
   58A15:	0100      	**prefx    0x1
   58A16:	4B26      	st         al, @(+0x14B, x)
   58A17:	CD00      	**prefx    0xCD
   58A18:	CC14      	ld         al, #-0x3334
   58A19:	0100      	**prefx    0x1
   58A1A:	4C26      	st         al, @(+0x14C, x)
   58A1B:	0100      	**prefx    0x1
   58A1C:	4D26      	st         al, @(+0x14D, x)
   58A1D:	8900      	**prefx    0x89
   58A1E:	8814      	ld         al, #-0x7778
   58A1F:	0100      	**prefx    0x1
   58A20:	4E26      	st         al, @(+0x14E, x)
   58A21:	0100      	**prefx    0x1
   58A22:	4F26      	st         al, @(+0x14F, x)
   58A23:	1000      	**prefx    0x10
   58A24:	3414      	ld         al, #+0x1034
   58A25:	0100      	**prefx    0x1
   58A26:	5026      	st         al, @(+0x150, x)
   58A27:	0234      	add        al, #+0x2
   58A28:	0100      	**prefx    0x1
   58A29:	5126      	st         al, @(+0x151, x)
   58A2A:	1800      	**prefx    0x18
   58A2B:	3614      	ld         al, #+0x1836
   58A2C:	0100      	**prefx    0x1
   58A2D:	5226      	st         al, @(+0x152, x)
   58A2E:	0100      	**prefx    0x1
   58A2F:	5326      	st         al, @(+0x153, x)
   58A30:	0100      	**prefx    0x1
   58A31:	5426      	st         al, @(+0x154, x)
   58A32:	0100      	**prefx    0x1
   58A33:	5526      	st         al, @(+0x155, x)
   58A34:	0100      	**prefx    0x1
   58A35:	5626      	st         al, @(+0x156, x)
   58A36:	9000      	**prefx    0x90
   58A37:	3414      	ld         al, #-0x6FCC
   58A38:	0100      	**prefx    0x1
   58A39:	5826      	st         al, @(+0x158, x)
   58A3A:	0334      	add        al, #+0x3
   58A3B:	0100      	**prefx    0x1
   58A3C:	5926      	st         al, @(+0x159, x)
   58A3D:	1400      	**prefx    0x14
   58A3E:	3E14      	ld         al, #+0x143E
   58A3F:	0100      	**prefx    0x1
   58A40:	5A26      	st         al, @(+0x15A, x)
   58A41:	9400      	**prefx    0x94
   58A42:	3F14      	ld         al, #-0x6BC1
   58A43:	0100      	**prefx    0x1
   58A44:	5B26      	st         al, @(+0x15B, x)
   58A45:	0100      	**prefx    0x1
   58A46:	5C26      	st         al, @(+0x15C, x)
   58A47:	1400      	**prefx    0x14
   58A48:	3E14      	ld         al, #+0x143E
   58A49:	0100      	**prefx    0x1
   58A4A:	5D26      	st         al, @(+0x15D, x)
   58A4B:	0100      	**prefx    0x1
   58A4C:	5E26      	st         al, @(+0x15E, x)
   58A4D:	3800      	**prefx    0x38
   58A4E:	CC14      	ld         al, #+0x37CC
   58A4F:	0100      	**prefx    0x1
   58A50:	6926      	st         al, @(+0x169, x)
   58A51:	0300      	**prefx    0x3
   58A52:	189C      	bsr        +0x318 <___libgatt_lib_db_5637:0x58D6A[p]>
   58A53:	D200      	**prefx    0xD2
   58A54:	D418      	ld         x, #-0x2E2C
   58A55:	0600      	**prefx    0x6
   58A56:	5014      	ld         al, #+0x650
   58A57:	1C26      	st         al, @(+0x1C, x)
   58A58:	0200      	**prefx    0x2
   58A59:	4F14      	ld         al, #+0x24F
   58A5A:	2026      	st         al, @(+0x20, x)
   58A5B:	0300      	**prefx    0x3
   58A5C:	0914      	ld         al, #+0x309
   58A5D:	3026      	st         al, @(+0x30, x)
   58A5E:	0200      	**prefx    0x2
   58A5F:	4714      	ld         al, #+0x247
   58A60:	3C26      	st         al, @(+0x3C, x)
   58A61:	0600      	**prefx    0x6
   58A62:	4614      	ld         al, #+0x646
   58A63:	4026      	st         al, @(+0x40, x)
   58A64:	0200      	**prefx    0x2
   58A65:	4514      	ld         al, #+0x245
   58A66:	4426      	st         al, @(+0x44, x)
   58A67:	0500      	**prefx    0x5
   58A68:	D714      	ld         al, #+0x4D7
   58A69:	F000      	**prefx    0xF0
   58A6A:	4A25      	st         al, @0xF04A <___libgatt_lib_db_2713>
   58A6B:	0200      	**prefx    0x2
   58A6C:	CD14      	ld         al, #+0x1CD
   58A6D:	F100      	**prefx    0xF1
   58A6E:	1C25      	st         al, @0xF11C <___libgatt_lib_db_2714>
   58A6F:	AB00      	**prefx    0xAB
   58A70:	8814      	ld         al, #-0x5578
   58A71:	F100      	**prefx    0xF1
   58A72:	1D25      	st         al, @0xF11D <___libgatt_lib_db_2715>
   58A73:	1400      	**prefx    0x14
   58A74:	0414      	ld         al, #+0x1404
   58A75:	F100      	**prefx    0xF1
   58A76:	9025      	st         al, @0xF090 <___libgatt_lib_db_2977>
   58A77:	3600      	**prefx    0x36
   58A78:	E014      	ld         al, #+0x35E0
   58A79:	F100      	**prefx    0xF1
   58A7A:	8F25      	st         al, @0xF08F <___libgatt_lib_db_2976>
   58A7B:	2314      	ld         al, #+0x23
   58A7C:	F100      	**prefx    0xF1
   58A7D:	AE25      	st         al, @0xF0AE <___libgatt_lib_db_3004>
   58A7E:	3714      	ld         al, #+0x37
   58A7F:	F100      	**prefx    0xF1
   58A80:	AD25      	st         al, @0xF0AD <___libgatt_lib_db_3003>
   58A81:	1000      	**prefx    0x10
   58A82:	C014      	ld         al, #+0xFC0
   58A83:	F100      	**prefx    0xF1
   58A84:	1725      	st         al, @0xF117 <___libgatt_lib_db_2989>
   58A85:	0100      	**prefx    0x1
   58A86:	8214      	ld         al, #+0x82
   58A87:	F100      	**prefx    0xF1
   58A88:	1025      	st         al, @0xF110 <___libgatt_lib_db_2987>
   58A89:	4B00      	**prefx    0x4B
   58A8A:	3614      	ld         al, #+0x4B36
   58A8B:	F000      	**prefx    0xF0
   58A8C:	6025      	st         al, @0xF060 <___libgatt_lib_db_3189>
   58A8D:	0100      	**prefx    0x1
   58A8E:	8414      	ld         al, #+0x84
   58A8F:	F000      	**prefx    0xF0
   58A90:	4425      	st         al, @0xF044 <___libgatt_lib_db_2803>
   58A91:	FB00      	**prefx    0xFB
   58A92:	2115      	ld         al, @0xFB21 <___libgatt_lib_db_2646>
   58A93:	04B4      	or         al, #+0x4
   58A94:	FB00      	**prefx    0xFB
   58A95:	2125      	st         al, @0xFB21 <___libgatt_lib_db_2646>
   58A96:	FB00      	**prefx    0xFB
   58A97:	1F15      	ld         al, @0xFB1F <___libgatt_lib_db_2658>
   58A98:	02B4      	or         al, #+0x2
   58A99:	FB00      	**prefx    0xFB
   58A9A:	1F25      	st         al, @0xFB1F <___libgatt_lib_db_2658>
   58A9B:	F100      	**prefx    0xF1
   58A9C:	AB15      	ld         al, @0xF0AB <___libgatt_lib_db_3002>
   58A9D:	0100      	**prefx    0x1
   58A9E:	F0B4      	or         al, #+0xF0
   58A9F:	F100      	**prefx    0xF1
   58AA0:	AB25      	st         al, @0xF0AB <___libgatt_lib_db_3002>
   58AA1:	FE0F      	leave      #-0x2

0x00058AA2 <___libgatt_lib_db_5627>:
   58AA2:	FE0B      	enter      #-0x2
   58AA3:	E119      	ld         x, @0xFFE1 <register al>
   58AA4:	F100      	**prefx    0xF1
   58AA5:	8C15      	ld         al, @0xF08C <___libgatt_lib_db_3030>
   58AA6:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58AA7:	0316      	ld         al, @(+0x3, x)
   58AA8:	7700      	**prefx    0x77
   58AA9:	B134      	add        al, #+0x76B1
   58AAA:	01A0      	asl        #0x1
   58AAB:	E119      	ld         x, @0xFFE1 <register al>
   58AAC:	D200      	**prefx    0xD2
   58AAD:	3516      	ld         al, @(-0x2DCB, x)
   58AAE:	0FC4      	and        al, #0xF
   58AAF:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   58AB0:	F0C8      	and        x, #0xFFF0
   58AB1:	E3B5      	or         al, @0xFFE3 <register uxl>
   58AB2:	F100      	**prefx    0xF1
   58AB3:	8C25      	st         al, @0xF08C <___libgatt_lib_db_3030>
   58AB4:	F100      	**prefx    0xF1
   58AB5:	8C15      	ld         al, @0xF08C <___libgatt_lib_db_3030>
   58AB6:	10B4      	or         al, #+0x10
   58AB7:	F100      	**prefx    0xF1
   58AB8:	8C25      	st         al, @0xF08C <___libgatt_lib_db_3030>
   58AB9:	FE0F      	leave      #-0x2

0x00058ABA <___libgatt_lib_db_5623>:
   58ABA:	FE0B      	enter      #-0x2
   58ABB:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58ABC:	F100      	**prefx    0xF1
   58ABD:	8C15      	ld         al, @0xF08C <___libgatt_lib_db_3030>
   58ABE:	FA25      	st         al, @0xFFFA <(scratchpad)>
   58ABF:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   58AC0:	0100      	**prefx    0x1
   58AC1:	9634      	add        al, #+0x96
   58AC2:	01A0      	asl        #0x1
   58AC3:	F925      	st         al, @0xFFF9 <(scratchpad)>
   58AC4:	D200      	**prefx    0xD2
   58AC5:	3418      	ld         x, #-0x2DCC
   58AC6:	E315      	ld         al, @0xFFE3 <register uxl>
   58AC7:	F935      	add        al, @0xFFF9 <(scratchpad)>
   58AC8:	F925      	st         al, @0xFFF9 <(scratchpad)>
   58AC9:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   58ACA:	0009      	**unsigned
   58ACB:	02A4      	lsr        #0x2
   58ACC:	E039      	add        x, @0xFFE0 <register ah>
   58ACD:	0100      	**prefx    0x1
   58ACE:	4C1A      	ld         x, @(+0x14C, x)
   58ACF:	FB29      	st         x, @0xFFFB <(scratchpad)>
   58AD0:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   58AD1:	03C8      	and        x, #0x3
   58AD2:	E315      	ld         al, @0xFFE3 <register uxl>
   58AD3:	02A0      	asl        #0x2
   58AD4:	E119      	ld         x, @0xFFE1 <register al>
   58AD5:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   58AD6:	0009      	**unsigned
   58AD7:	E3A5      	lsr        @0xFFE3 <register uxl>
   58AD8:	E015      	ld         al, @0xFFE0 <register ah>
   58AD9:	0FC4      	and        al, #0xF
   58ADA:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58ADB:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   58ADC:	0016      	ld         al, @(0x0, x)
   58ADD:	03C4      	and        al, #0x3
   58ADE:	04A0      	asl        #0x4
   58ADF:	F835      	add        al, @0xFFF8 <(scratchpad)>
   58AE0:	07A0      	asl        #0x7
   58AE1:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   58AE2:	E000      	**prefx    0xE0
   58AE3:	7FC8      	and        x, #0xE07F
   58AE4:	E3B5      	or         al, @0xFFE3 <register uxl>
   58AE5:	F100      	**prefx    0xF1
   58AE6:	8C25      	st         al, @0xF08C <___libgatt_lib_db_3030>
   58AE7:	FE0F      	leave      #-0x2

0x00058AE8 <___libgatt_lib_db_5626>:
   58AE8:	C000      	**prefx    0xC0
   58AE9:	00B4      	or         al, #-0x4000
   58AEA:	F100      	**prefx    0xF1
   58AEB:	8A25      	st         al, @0xF08A <___libgatt_lib_db_3028>
   58AEC:	F000      	**prefx    0xF0
   58AED:	0015      	ld         al, @0xF000 <DATA_DATARAM_END>
   58AEE:	0100      	**prefx    0x1
   58AEF:	00B4      	or         al, #+0x100
   58AF0:	F000      	**prefx    0xF0
   58AF1:	0025      	st         al, @0xF000 <DATA_DATARAM_END>
   58AF2:	F100      	**prefx    0xF1
   58AF3:	8B15      	ld         al, @0xF08B <___libgatt_lib_db_3029>
   58AF4:	FF00      	**prefx    0xFF
   58AF5:	00C4      	and        al, #0xFF00
   58AF6:	0100      	**prefx    0x1
   58AF7:	82B4      	or         al, #+0x82
   58AF8:	F100      	**prefx    0xF1
   58AF9:	8B25      	st         al, @0xF08B <___libgatt_lib_db_3029>
   58AFA:	FE0B      	enter      #-0x2
   58AFB:	0114      	ld         al, #+0x1
   58AFC:	0127      	st         al, @(+0x1, y)
   58AFD:	5C00      	**prefx    0x5C
   58AFE:	6114      	ld         al, #+0x5C61
   58AFF:	0027      	st         al, @(0x0, y)
   58B00:	FE0F      	leave      #-0x2
   58B01:	00E2      	bra        0x0, x

0x00058B02 <___libgatt_lib_db_5634>:
   58B02:	FE0B      	enter      #-0x2
   58B03:	D300      	**prefx    0xD3
   58B04:	7F15      	ld         al, @0xD37F <___libgatt_lib_db_1990+0xF5>
   58B05:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58B06:	6D00      	**prefx    0x6D
   58B07:	D815      	ld         al, @0x6CD8 <bleradio_config_ibias_at_room>
   58B08:	F925      	st         al, @0xFFF9 <(scratchpad)>
   58B09:	3B80      	cmp        ah, #+0x3B
   58B0A:	0F28      	ble        +0xF <___libgatt_lib_db_5634+0x17:0x58B19[p]>
   58B0B:	6D00      	**prefx    0x6D
   58B0C:	D519      	ld         x, @0x6CD5 <___libgatt_lib_db_1030>
   58B0D:	6D00      	**prefx    0x6D
   58B0E:	D615      	ld         al, @0x6CD6 <___libgatt_lib_db_1030+0x1>
   58B0F:	E355      	sub        al, @0xFFE3 <register uxl>
   58B10:	6584      	cmp        al, #+0x65
   58B11:	03F8      	bcc        +0x3 <___libgatt_lib_db_5634+0x12:0x58B14[p]>
   58B12:	E399      	tst        @0xFFE3 <register uxl>
   58B13:	04F0      	bne        +0x4 <___libgatt_lib_db_5634+0x15:0x58B17[p]>
   58B14:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   58B15:	F934      	add        al, #-0x7
   58B16:	F925      	st         al, @0xFFF9 <(scratchpad)>
   58B17:	0518      	ld         x, #+0x5
   58B18:	08E0      	bra        +0x8 <___libgatt_lib_db_5634+0x1E:0x58B20[p]>
   58B19:	F280      	cmp        ah, #-0xE
   58B1A:	03E4      	blt        +0x3 <___libgatt_lib_db_5634+0x1B:0x58B1D[p]>
   58B1B:	0418      	ld         x, #+0x4
   58B1C:	04E0      	bra        +0x4 <___libgatt_lib_db_5634+0x1E:0x58B20[p]>
   58B1D:	0534      	add        al, #+0x5
   58B1E:	F925      	st         al, @0xFFF9 <(scratchpad)>
   58B1F:	0318      	ld         x, #+0x3
   58B20:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   58B21:	0100      	**prefx    0x1
   58B22:	FFC4      	and        al, #0xFF
   58B23:	E111      	ld         ah, @0xFFE1 <register al>
   58B24:	0009      	**unsigned
   58B25:	05A4      	lsr        #0x5
   58B26:	E089      	cmp        x, @0xFFE0 <register ah>
   58B27:	25F4      	beq        +0x25 <___libgatt_lib_db_5634+0x4A:0x58B4C[p]>
   58B28:	E315      	ld         al, @0xFFE3 <register uxl>
   58B29:	05A0      	asl        #0x5
   58B2A:	FA25      	st         al, @0xFFFA <(scratchpad)>
   58B2B:	0100      	**prefx    0x1
   58B2C:	2D14      	ld         al, #+0x12D
   58B2D:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58B2E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   58B2F:	D200      	**prefx    0xD2
   58B30:	3438      	add        x, #-0x2DCC
   58B31:	0012      	ld         ah, @(0x0, x)
   58B32:	E015      	ld         al, @0xFFE0 <register ah>
   58B33:	1FC4      	and        al, #0x1F
   58B34:	FAB5      	or         al, @0xFFFA <(scratchpad)>
   58B35:	FF00      	**prefx    0xFF
   58B36:	00C0      	and        ah, #0xFF00
   58B37:	E0B5      	or         al, @0xFFE0 <register ah>
   58B38:	0026      	st         al, @(0x0, x)
   58B39:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   58B3A:	0234      	add        al, #+0x2
   58B3B:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58B3C:	0100      	**prefx    0x1
   58B3D:	4D84      	cmp        al, #+0x14D
   58B3E:	F0F0      	bne        -0x10 <___libgatt_lib_db_5634+0x2C:0x58B2E[p]>
   58B3F:	F100      	**prefx    0xF1
   58B40:	CF15      	ld         al, @0xF0CF <___libgatt_lib_db_2498>
   58B41:	C0C4      	and        al, #0xFFC0
   58B42:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   58B43:	F100      	**prefx    0xF1
   58B44:	CF25      	st         al, @0xF0CF <___libgatt_lib_db_2498>
   58B45:	D200      	**prefx    0xD2
   58B46:	4015      	ld         al, @0xD240 <___libgatt_lib_db_1989+0x30>
   58B47:	C0C4      	and        al, #0xFFC0
   58B48:	D200      	**prefx    0xD2
   58B49:	3418      	ld         x, #-0x2DCC
   58B4A:	F9B5      	or         al, @0xFFF9 <(scratchpad)>
   58B4B:	0C26      	st         al, @(+0xC, x)
   58B4C:	FE0F      	leave      #-0x2

0x00058B4D <___libgatt_lib_db_5624>:
   58B4D:	FE0B      	enter      #-0x2
   58B4E:	0317      	ld         al, @(+0x3, y)
   58B4F:	021B      	ld         x, @(+0x2, y)
   58B50:	0010      	ld         ah, #+0x0
   58B51:	10A0      	asl        #0x10
   58B52:	E3B5      	or         al, @0xFFE3 <register uxl>
   58B53:	0180      	cmp        ah, #+0x1
   58B54:	0100      	**prefx    0x1
   58B55:	96F0      	bne        +0x96 <___libgatt_lib_db_5624+0x9E:0x58BEB[p]>
   58B56:	5D00      	**prefx    0x5D
   58B57:	F584      	cmp        al, #+0x5CF5
   58B58:	0100      	**prefx    0x1
   58B59:	92F0      	bne        +0x92 <___libgatt_lib_db_5624+0x9E:0x58BEB[p]>
   58B5A:	6D00      	**prefx    0x6D
   58B5B:	D915      	ld         al, @0x6CD9 <bleradio_config_pshift_ibias>
   58B5C:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58B5D:	2F84      	cmp        al, #+0x2F
   58B5E:	032C      	bcz        +0x3 <___libgatt_lib_db_5624+0x14:0x58B61[p]>
   58B5F:	0314      	ld         al, #+0x3
   58B60:	06E0      	bra        +0x6 <___libgatt_lib_db_5624+0x19:0x58B66[p]>
   58B61:	2484      	cmp        al, #+0x24
   58B62:	03F8      	bcc        +0x3 <___libgatt_lib_db_5624+0x18:0x58B65[p]>
   58B63:	0114      	ld         al, #+0x1
   58B64:	02E0      	bra        +0x2 <___libgatt_lib_db_5624+0x19:0x58B66[p]>
   58B65:	0214      	ld         al, #+0x2
   58B66:	F100      	**prefx    0xF1
   58B67:	D019      	ld         x, @0xF0D0 <___libgatt_lib_db_2499>
   58B68:	01A0      	asl        #0x1
   58B69:	09C8      	and        x, #0x9
   58B6A:	E3B5      	or         al, @0xFFE3 <register uxl>
   58B6B:	D200      	**prefx    0xD2
   58B6C:	4111      	ld         ah, @0xD241 <___libgatt_lib_db_1989+0x31>
   58B6D:	F0C0      	and        ah, #0xFFF0
   58B6E:	E1B1      	or         ah, @0xFFE1 <register al>
   58B6F:	D200      	**prefx    0xD2
   58B70:	4121      	st         ah, @0xD241 <___libgatt_lib_db_1989+0x31>
   58B71:	F100      	**prefx    0xF1
   58B72:	D011      	ld         ah, @0xF0D0 <___libgatt_lib_db_2499>
   58B73:	F0C0      	and        ah, #0xFFF0
   58B74:	E0B5      	or         al, @0xFFE0 <register ah>
   58B75:	F100      	**prefx    0xF1
   58B76:	D025      	st         al, @0xF0D0 <___libgatt_lib_db_2499>
   58B77:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   58B78:	FF34      	add        al, #-0x1
   58B79:	0B84      	cmp        al, #+0xB
   58B7A:	032C      	bcz        +0x3 <___libgatt_lib_db_5624+0x30:0x58B7D[p]>
   58B7B:	2A10      	ld         ah, #+0x2A
   58B7C:	03E0      	bra        +0x3 <___libgatt_lib_db_5624+0x32:0x58B7F[p]>
   58B7D:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   58B7E:	1A30      	add        ah, #+0x1A
   58B7F:	F100      	**prefx    0xF1
   58B80:	CF15      	ld         al, @0xF0CF <___libgatt_lib_db_2498>
   58B81:	C0C4      	and        al, #0xFFC0
   58B82:	E0B5      	or         al, @0xFFE0 <register ah>
   58B83:	F100      	**prefx    0xF1
   58B84:	CF25      	st         al, @0xF0CF <___libgatt_lib_db_2498>
   58B85:	D200      	**prefx    0xD2
   58B86:	4015      	ld         al, @0xD240 <___libgatt_lib_db_1989+0x30>
   58B87:	C0C4      	and        al, #0xFFC0
   58B88:	E0B5      	or         al, @0xFFE0 <register ah>
   58B89:	D200      	**prefx    0xD2
   58B8A:	4025      	st         al, @0xD240 <___libgatt_lib_db_1989+0x30>
   58B8B:	6D00      	**prefx    0x6D
   58B8C:	D821      	st         ah, @0x6CD8 <bleradio_config_ibias_at_room>
   58B8D:	6D00      	**prefx    0x6D
   58B8E:	D511      	ld         ah, @0x6CD5 <___libgatt_lib_db_1030>
   58B8F:	6D00      	**prefx    0x6D
   58B90:	D615      	ld         al, @0x6CD6 <___libgatt_lib_db_1030+0x1>
   58B91:	E055      	sub        al, @0xFFE0 <register ah>
   58B92:	0100      	**prefx    0x1
   58B93:	CE84      	cmp        al, #+0xCE
   58B94:	07F8      	bcc        +0x7 <___libgatt_lib_db_5624+0x4E:0x58B9B[p]>
   58B95:	E099      	tst        @0xFFE0 <register ah>
   58B96:	05F4      	beq        +0x5 <___libgatt_lib_db_5624+0x4E:0x58B9B[p]>
   58B97:	0114      	ld         al, #+0x1
   58B98:	F925      	st         al, @0xFFF9 <(scratchpad)>
   58B99:	0014      	ld         al, #+0x0
   58B9A:	04E0      	bra        +0x4 <___libgatt_lib_db_5624+0x51:0x58B9E[p]>
   58B9B:	0214      	ld         al, #+0x2
   58B9C:	F925      	st         al, @0xFFF9 <(scratchpad)>
   58B9D:	0114      	ld         al, #+0x1
   58B9E:	F100      	**prefx    0xF1
   58B9F:	CC19      	ld         x, @0xF0CC <___libgatt_lib_db_2507>
   58BA0:	0AA0      	asl        #0xA
   58BA1:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58BA2:	FC00      	**prefx    0xFC
   58BA3:	FFC8      	and        x, #0xFBFF
   58BA4:	E1B9      	or         x, @0xFFE1 <register al>
   58BA5:	F100      	**prefx    0xF1
   58BA6:	CC29      	st         x, @0xF0CC <___libgatt_lib_db_2507>
   58BA7:	F100      	**prefx    0xF1
   58BA8:	CD15      	ld         al, @0xF0CD <___libgatt_lib_db_2496>
   58BA9:	8000      	**prefx    0x80
   58BAA:	FFC4      	and        al, #0x7FFF
   58BAB:	F100      	**prefx    0xF1
   58BAC:	CD25      	st         al, @0xF0CD <___libgatt_lib_db_2496>
   58BAD:	F100      	**prefx    0xF1
   58BAE:	CD19      	ld         x, @0xF0CD <___libgatt_lib_db_2496>
   58BAF:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   58BB0:	01A0      	asl        #0x1
   58BB1:	F9C8      	and        x, #0xFFF9
   58BB2:	E1B9      	or         x, @0xFFE1 <register al>
   58BB3:	F100      	**prefx    0xF1
   58BB4:	CD29      	st         x, @0xF0CD <___libgatt_lib_db_2496>
   58BB5:	D200      	**prefx    0xD2
   58BB6:	3418      	ld         x, #-0x2DCC
   58BB7:	D200      	**prefx    0xD2
   58BB8:	3D11      	ld         ah, @0xD23D <___libgatt_lib_db_1989+0x2D>
   58BB9:	FC00      	**prefx    0xFC
   58BBA:	FFC0      	and        ah, #0xFBFF
   58BBB:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   58BBC:	0922      	st         ah, @(+0x9, x)
   58BBD:	D200      	**prefx    0xD2
   58BBE:	3E11      	ld         ah, @0xD23E <___libgatt_lib_db_1989+0x2E>
   58BBF:	8000      	**prefx    0x80
   58BC0:	F9C0      	and        ah, #0x7FF9
   58BC1:	E0B5      	or         al, @0xFFE0 <register ah>
   58BC2:	0A26      	st         al, @(+0xA, x)
   58BC3:	6A00      	**prefx    0x6A
   58BC4:	2115      	ld         al, @0x6A21 <bleradio_package_type>
   58BC5:	0184      	cmp        al, #+0x1
   58BC6:	1FF0      	bne        +0x1F <___libgatt_lib_db_5624+0x98:0x58BE5[p]>
   58BC7:	D300      	**prefx    0xD3
   58BC8:	7715      	ld         al, @0xD377 <___libgatt_lib_db_1990+0xED>
   58BC9:	E0C4      	and        al, #0xFFE0
   58BCA:	0FB4      	or         al, #+0xF
   58BCB:	0100      	**prefx    0x1
   58BCC:	4326      	st         al, @(+0x143, x)
   58BCD:	D300      	**prefx    0xD3
   58BCE:	7915      	ld         al, @0xD379 <___libgatt_lib_db_1990+0xEF>
   58BCF:	E0C4      	and        al, #0xFFE0
   58BD0:	12B4      	or         al, #+0x12
   58BD1:	0100      	**prefx    0x1
   58BD2:	4526      	st         al, @(+0x145, x)
   58BD3:	D300      	**prefx    0xD3
   58BD4:	7B15      	ld         al, @0xD37B <___libgatt_lib_db_1990+0xF1>
   58BD5:	E0C4      	and        al, #0xFFE0
   58BD6:	14B4      	or         al, #+0x14
   58BD7:	0100      	**prefx    0x1
   58BD8:	4726      	st         al, @(+0x147, x)
   58BD9:	D300      	**prefx    0xD3
   58BDA:	7D15      	ld         al, @0xD37D <___libgatt_lib_db_1990+0xF3>
   58BDB:	E0C4      	and        al, #0xFFE0
   58BDC:	19B4      	or         al, #+0x19
   58BDD:	0100      	**prefx    0x1
   58BDE:	4926      	st         al, @(+0x149, x)
   58BDF:	D300      	**prefx    0xD3
   58BE0:	7F15      	ld         al, @0xD37F <___libgatt_lib_db_1990+0xF5>
   58BE1:	E0C4      	and        al, #0xFFE0
   58BE2:	1EB4      	or         al, #+0x1E
   58BE3:	0100      	**prefx    0x1
   58BE4:	4B26      	st         al, @(+0x14B, x)
   58BE5:	DA00      	**prefx    0xDA
   58BE6:	BA14      	ld         al, #-0x2646
   58BE7:	DA00      	**prefx    0xDA
   58BE8:	C811      	ld         ah, @0xD9C8 <___libgatt_lib_db_2022+0x52>
   58BE9:	FF00      	**prefx    0xFF
   58BEA:	189C      	bsr        -0xE8 <___libgatt_lib_db_5634:0x58B02[p]>
   58BEB:	FE0F      	leave      #-0x2

0x00058BEC <___libgatt_lib_db_5625>:
   58BEC:	CB0B      	enter      #-0x35
   58BED:	5117      	ld         al, @(+0x51, y)
   58BEE:	501B      	ld         x, @(+0x50, y)
   58BEF:	0010      	ld         ah, #+0x0
   58BF0:	10A0      	asl        #0x10
   58BF1:	E3B5      	or         al, @0xFFE3 <register uxl>
   58BF2:	0180      	cmp        ah, #+0x1
   58BF3:	12F0      	bne        +0x12 <___libgatt_lib_db_5625+0x19:0x58C05[p]>
   58BF4:	5100      	**prefx    0x51
   58BF5:	4584      	cmp        al, #+0x5145
   58BF6:	0FF0      	bne        +0xF <___libgatt_lib_db_5625+0x19:0x58C05[p]>
   58BF7:	DA00      	**prefx    0xDA
   58BF8:	C815      	ld         al, @0xD9C8 <___libgatt_lib_db_2022+0x52>
   58BF9:	6D00      	**prefx    0x6D
   58BFA:	DA25      	st         al, @0x6CDA <last_cal_temperature>
   58BFB:	6D00      	**prefx    0x6D
   58BFC:	DB25      	st         al, @0x6CDB <last_cal_temperature+0x1>
   58BFD:	6D00      	**prefx    0x6D
   58BFE:	DC25      	st         al, @0x6CDC <last_cal_temperature+0x2>
   58BFF:	6D00      	**prefx    0x6D
   58C00:	DD25      	st         al, @0x6CDD <last_cal_temperature+0x3>
   58C01:	6D00      	**prefx    0x6D
   58C02:	DE25      	st         al, @0x6CDE <last_cal_temperature+0x4>
   58C03:	0300      	**prefx    0x3
   58C04:	B49C      	bsr        +0x2B4 <___libgatt_lib_db_5649:0x58EB8[p]>
   58C05:	0A00      	**prefx    0xA
   58C06:	8810      	ld         ah, #+0x988
   58C07:	0323      	st         ah, @(+0x3, y)
   58C08:	0014      	ld         al, #+0x0
   58C09:	0F27      	st         al, @(+0xF, y)
   58C0A:	0E27      	st         al, @(+0xE, y)
   58C0B:	0100      	**prefx    0x1
   58C0C:	9CE0      	bra        +0x9C <___libgatt_lib_db_5625+0xBC:0x58CA8[p]>
   58C0D:	0114      	ld         al, #+0x1
   58C0E:	14A3      	asl        @(+0x14, y)
   58C0F:	16B7      	or         al, @(+0x16, y)
   58C10:	1527      	st         al, @(+0x15, y)
   58C11:	F100      	**prefx    0xF1
   58C12:	CE15      	ld         al, @0xF0CE <___libgatt_lib_db_2497>
   58C13:	FF00      	**prefx    0xFF
   58C14:	00C4      	and        al, #0xFF00
   58C15:	15B7      	or         al, @(+0x15, y)
   58C16:	F100      	**prefx    0xF1
   58C17:	CE25      	st         al, @0xF0CE <___libgatt_lib_db_2497>
   58C18:	151B      	ld         x, @(+0x15, y)
   58C19:	0100      	**prefx    0x1
   58C1A:	D988      	cmp        x, #+0xD9
   58C1B:	3AF8      	bcc        +0x3A <___libgatt_lib_db_5625+0x69:0x58C55[p]>
   58C1C:	1F88      	cmp        x, #+0x1F
   58C1D:	362C      	bcz        +0x36 <___libgatt_lib_db_5625+0x67:0x58C53[p]>
   58C1E:	6A00      	**prefx    0x6A
   58C1F:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58C20:	0010      	ld         ah, #+0x0
   58C21:	6100      	**prefx    0x61
   58C22:	2034      	add        al, #+0x6120
   58C23:	0140      	addc       ah, #+0x1
   58C24:	1827      	st         al, @(+0x18, y)
   58C25:	1723      	st         ah, @(+0x17, y)
   58C26:	0F14      	ld         al, #+0xF
   58C27:	170E      	ld         xh, @(+0x17, y)
   58C28:	189F      	bsr        @(+0x18, y)
   58C29:	6A00      	**prefx    0x6A
   58C2A:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58C2B:	0010      	ld         ah, #+0x0
   58C2C:	5600      	**prefx    0x56
   58C2D:	F434      	add        al, #+0x55F4
   58C2E:	0140      	addc       ah, #+0x1
   58C2F:	1A27      	st         al, @(+0x1A, y)
   58C30:	1923      	st         ah, @(+0x19, y)
   58C31:	0514      	ld         al, #+0x5
   58C32:	190E      	ld         xh, @(+0x19, y)
   58C33:	1A9F      	bsr        @(+0x1A, y)
   58C34:	1127      	st         al, @(+0x11, y)
   58C35:	1023      	st         ah, @(+0x10, y)
   58C36:	1117      	ld         al, @(+0x11, y)
   58C37:	1013      	ld         ah, @(+0x10, y)
   58C38:	1357      	sub        al, @(+0x13, y)
   58C39:	1263      	subc       ah, @(+0x12, y)
   58C3A:	1127      	st         al, @(+0x11, y)
   58C3B:	1023      	st         ah, @(+0x10, y)
   58C3C:	2F17      	ld         al, @(+0x2F, y)
   58C3D:	3187      	cmp        al, @(+0x31, y)
   58C3E:	022C      	bcz        +0x2 <___libgatt_lib_db_5625+0x54:0x58C40[p]>
   58C3F:	11E0      	bra        +0x11 <___libgatt_lib_db_5625+0x64:0x58C50[p]>
   58C40:	2F1B      	ld         x, @(+0x2F, y)
   58C41:	318B      	cmp        x, @(+0x31, y)
   58C42:	05F0      	bne        +0x5 <___libgatt_lib_db_5625+0x5B:0x58C47[p]>
   58C43:	3013      	ld         ah, @(+0x30, y)
   58C44:	3283      	cmp        ah, @(+0x32, y)
   58C45:	022C      	bcz        +0x2 <___libgatt_lib_db_5625+0x5B:0x58C47[p]>
   58C46:	0AE0      	bra        +0xA <___libgatt_lib_db_5625+0x64:0x58C50[p]>
   58C47:	1017      	ld         al, @(+0x10, y)
   58C48:	03EC      	bmi        +0x3 <___libgatt_lib_db_5625+0x5F:0x58C4B[p]>
   58C49:	02F4      	beq        +0x2 <___libgatt_lib_db_5625+0x5F:0x58C4B[p]>
   58C4A:	09E0      	bra        +0x9 <___libgatt_lib_db_5625+0x67:0x58C53[p]>
   58C4B:	E199      	tst        @0xFFE1 <register al>
   58C4C:	09F0      	bne        +0x9 <___libgatt_lib_db_5625+0x69:0x58C55[p]>
   58C4D:	1113      	ld         ah, @(+0x11, y)
   58C4E:	05F0      	bne        +0x5 <___libgatt_lib_db_5625+0x67:0x58C53[p]>
   58C4F:	06E0      	bra        +0x6 <___libgatt_lib_db_5625+0x69:0x58C55[p]>
   58C50:	1017      	ld         al, @(+0x10, y)
   58C51:	02EC      	bmi        +0x2 <___libgatt_lib_db_5625+0x67:0x58C53[p]>
   58C52:	03E0      	bra        +0x3 <___libgatt_lib_db_5625+0x69:0x58C55[p]>
   58C53:	151B      	ld         x, @(+0x15, y)
   58C54:	162B      	st         x, @(+0x16, y)
   58C55:	1413      	ld         ah, @(+0x14, y)
   58C56:	FF30      	add        ah, #-0x1
   58C57:	1423      	st         ah, @(+0x14, y)
   58C58:	FF80      	cmp        ah, #-0x1
   58C59:	B4F0      	bne        -0x4C <___libgatt_lib_db_5625+0x21:0x58C0D[p]>
   58C5A:	6A00      	**prefx    0x6A
   58C5B:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58C5C:	0010      	ld         ah, #+0x0
   58C5D:	5D00      	**prefx    0x5D
   58C5E:	9934      	add        al, #+0x5C99
   58C5F:	0140      	addc       ah, #+0x1
   58C60:	1C27      	st         al, @(+0x1C, y)
   58C61:	1B23      	st         ah, @(+0x1B, y)
   58C62:	1B0E      	ld         xh, @(+0x1B, y)
   58C63:	1C9F      	bsr        @(+0x1C, y)
   58C64:	0F17      	ld         al, @(+0xF, y)
   58C65:	0184      	cmp        al, #+0x1
   58C66:	0100      	**prefx    0x1
   58C67:	C6F4      	beq        +0xC6 <___libgatt_lib_db_5625+0x141:0x58D2D[p]>
   58C68:	161B      	ld         x, @(+0x16, y)
   58C69:	6088      	cmp        x, #+0x60
   58C6A:	082C      	bcz        +0x8 <___libgatt_lib_db_5625+0x86:0x58C72[p]>
   58C6B:	E315      	ld         al, @0xFFE3 <register uxl>
   58C6C:	9F34      	add        al, #-0x61
   58C6D:	5F84      	cmp        al, #+0x5F
   58C6E:	042C      	bcz        +0x4 <___libgatt_lib_db_5625+0x86:0x58C72[p]>
   58C6F:	0100      	**prefx    0x1
   58C70:	C088      	cmp        x, #+0xC0
   58C71:	032C      	bcz        +0x3 <___libgatt_lib_db_5625+0x88:0x58C74[p]>
   58C72:	0110      	ld         ah, #+0x1
   58C73:	0E23      	st         ah, @(+0xE, y)
   58C74:	D200      	**prefx    0xD2
   58C75:	3414      	ld         al, #-0x2DCC
   58C76:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58C77:	0E17      	ld         al, @(+0xE, y)
   58C78:	06A0      	asl        #0x6
   58C79:	D200      	**prefx    0xD2
   58C7A:	4011      	ld         ah, @0xD240 <___libgatt_lib_db_1989+0x30>
   58C7B:	BFC0      	and        ah, #0xFFBF
   58C7C:	E1B1      	or         ah, @0xFFE1 <register al>
   58C7D:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   58C7E:	0C22      	st         ah, @(+0xC, x)
   58C7F:	F100      	**prefx    0xF1
   58C80:	CF11      	ld         ah, @0xF0CF <___libgatt_lib_db_2498>
   58C81:	BFC0      	and        ah, #0xFFBF
   58C82:	E1B1      	or         ah, @0xFFE1 <register al>
   58C83:	F100      	**prefx    0xF1
   58C84:	CF21      	st         ah, @0xF0CF <___libgatt_lib_db_2498>
   58C85:	0E17      	ld         al, @(+0xE, y)
   58C86:	09A0      	asl        #0x9
   58C87:	D200      	**prefx    0xD2
   58C88:	3D11      	ld         ah, @0xD23D <___libgatt_lib_db_1989+0x2D>
   58C89:	FE00      	**prefx    0xFE
   58C8A:	FFC0      	and        ah, #0xFDFF
   58C8B:	E1B1      	or         ah, @0xFFE1 <register al>
   58C8C:	0922      	st         ah, @(+0x9, x)
   58C8D:	F100      	**prefx    0xF1
   58C8E:	CC11      	ld         ah, @0xF0CC <___libgatt_lib_db_2507>
   58C8F:	FE00      	**prefx    0xFE
   58C90:	FFC0      	and        ah, #0xFDFF
   58C91:	E1B1      	or         ah, @0xFFE1 <register al>
   58C92:	F100      	**prefx    0xF1
   58C93:	CC21      	st         ah, @0xF0CC <___libgatt_lib_db_2507>
   58C94:	F100      	**prefx    0xF1
   58C95:	D019      	ld         x, @0xF0D0 <___libgatt_lib_db_2499>
   58C96:	0E17      	ld         al, @(+0xE, y)
   58C97:	03A0      	asl        #0x3
   58C98:	06C8      	and        x, #0x6
   58C99:	E3B5      	or         al, @0xFFE3 <register uxl>
   58C9A:	D200      	**prefx    0xD2
   58C9B:	4111      	ld         ah, @0xD241 <___libgatt_lib_db_1989+0x31>
   58C9C:	F0C0      	and        ah, #0xFFF0
   58C9D:	E1B1      	or         ah, @0xFFE1 <register al>
   58C9E:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   58C9F:	0D22      	st         ah, @(+0xD, x)
   58CA0:	F100      	**prefx    0xF1
   58CA1:	D011      	ld         ah, @0xF0D0 <___libgatt_lib_db_2499>
   58CA2:	F0C0      	and        ah, #0xFFF0
   58CA3:	E0B5      	or         al, @0xFFE0 <register ah>
   58CA4:	F100      	**prefx    0xF1
   58CA5:	D025      	st         al, @0xF0D0 <___libgatt_lib_db_2499>
   58CA6:	0110      	ld         ah, #+0x1
   58CA7:	0F23      	st         ah, @(+0xF, y)
   58CA8:	6A00      	**prefx    0x6A
   58CA9:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58CAA:	0010      	ld         ah, #+0x0
   58CAB:	5500      	**prefx    0x55
   58CAC:	DE34      	add        al, #+0x54DE
   58CAD:	0140      	addc       ah, #+0x1
   58CAE:	1E27      	st         al, @(+0x1E, y)
   58CAF:	1D23      	st         ah, @(+0x1D, y)
   58CB0:	0214      	ld         al, #+0x2
   58CB1:	1D0E      	ld         xh, @(+0x1D, y)
   58CB2:	1E9F      	bsr        @(+0x1E, y)
   58CB3:	6A00      	**prefx    0x6A
   58CB4:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58CB5:	0010      	ld         ah, #+0x0
   58CB6:	5700      	**prefx    0x57
   58CB7:	9334      	add        al, #+0x5693
   58CB8:	0140      	addc       ah, #+0x1
   58CB9:	2027      	st         al, @(+0x20, y)
   58CBA:	1F23      	st         ah, @(+0x1F, y)
   58CBB:	E415      	ld         al, @0xFFE4 <register uy>
   58CBC:	1F0E      	ld         xh, @(+0x1F, y)
   58CBD:	209F      	bsr        @(+0x20, y)
   58CBE:	6A00      	**prefx    0x6A
   58CBF:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58CC0:	0010      	ld         ah, #+0x0
   58CC1:	6100      	**prefx    0x61
   58CC2:	2034      	add        al, #+0x6120
   58CC3:	0140      	addc       ah, #+0x1
   58CC4:	2227      	st         al, @(+0x22, y)
   58CC5:	2123      	st         ah, @(+0x21, y)
   58CC6:	0A14      	ld         al, #+0xA
   58CC7:	210E      	ld         xh, @(+0x21, y)
   58CC8:	229F      	bsr        @(+0x22, y)
   58CC9:	6A00      	**prefx    0x6A
   58CCA:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58CCB:	0010      	ld         ah, #+0x0
   58CCC:	5600      	**prefx    0x56
   58CCD:	F434      	add        al, #+0x55F4
   58CCE:	0140      	addc       ah, #+0x1
   58CCF:	2427      	st         al, @(+0x24, y)
   58CD0:	2323      	st         ah, @(+0x23, y)
   58CD1:	0514      	ld         al, #+0x5
   58CD2:	230E      	ld         xh, @(+0x23, y)
   58CD3:	249F      	bsr        @(+0x24, y)
   58CD4:	1327      	st         al, @(+0x13, y)
   58CD5:	1223      	st         ah, @(+0x12, y)
   58CD6:	0F14      	ld         al, #+0xF
   58CD7:	0227      	st         al, @(+0x2, y)
   58CD8:	6A00      	**prefx    0x6A
   58CD9:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58CDA:	0010      	ld         ah, #+0x0
   58CDB:	5D00      	**prefx    0x5D
   58CDC:	0B34      	add        al, #+0x5D0B
   58CDD:	0140      	addc       ah, #+0x1
   58CDE:	2627      	st         al, @(+0x26, y)
   58CDF:	2523      	st         ah, @(+0x25, y)
   58CE0:	E415      	ld         al, @0xFFE4 <register uy>
   58CE1:	250E      	ld         xh, @(+0x25, y)
   58CE2:	269F      	bsr        @(+0x26, y)
   58CE3:	0217      	ld         al, @(+0x2, y)
   58CE4:	FE00      	**prefx    0xFE
   58CE5:	D59C      	bsr        -0x22B <___libgatt_lib_db_5623:0x58ABA[p]>
   58CE6:	E415      	ld         al, @0xFFE4 <register uy>
   58CE7:	FE00      	**prefx    0xFE
   58CE8:	BA9C      	bsr        -0x246 <___libgatt_lib_db_5627:0x58AA2[p]>
   58CE9:	6A00      	**prefx    0x6A
   58CEA:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58CEB:	0010      	ld         ah, #+0x0
   58CEC:	5C00      	**prefx    0x5C
   58CED:	3334      	add        al, #+0x5C33
   58CEE:	0140      	addc       ah, #+0x1
   58CEF:	2827      	st         al, @(+0x28, y)
   58CF0:	2723      	st         ah, @(+0x27, y)
   58CF1:	270E      	ld         xh, @(+0x27, y)
   58CF2:	289F      	bsr        @(+0x28, y)
   58CF3:	6A00      	**prefx    0x6A
   58CF4:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58CF5:	0010      	ld         ah, #+0x0
   58CF6:	6100      	**prefx    0x61
   58CF7:	2034      	add        al, #+0x6120
   58CF8:	0140      	addc       ah, #+0x1
   58CF9:	2A27      	st         al, @(+0x2A, y)
   58CFA:	2923      	st         ah, @(+0x29, y)
   58CFB:	1414      	ld         al, #+0x14
   58CFC:	290E      	ld         xh, @(+0x29, y)
   58CFD:	2A9F      	bsr        @(+0x2A, y)
   58CFE:	F100      	**prefx    0xF1
   58CFF:	CE15      	ld         al, @0xF0CE <___libgatt_lib_db_2497>
   58D00:	FF00      	**prefx    0xFF
   58D01:	00C4      	and        al, #0xFF00
   58D02:	0100      	**prefx    0x1
   58D03:	D8B4      	or         al, #+0xD8
   58D04:	F100      	**prefx    0xF1
   58D05:	CE25      	st         al, @0xF0CE <___libgatt_lib_db_2497>
   58D06:	6A00      	**prefx    0x6A
   58D07:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58D08:	0010      	ld         ah, #+0x0
   58D09:	5600      	**prefx    0x56
   58D0A:	F434      	add        al, #+0x55F4
   58D0B:	0140      	addc       ah, #+0x1
   58D0C:	2C27      	st         al, @(+0x2C, y)
   58D0D:	2B23      	st         ah, @(+0x2B, y)
   58D0E:	0514      	ld         al, #+0x5
   58D0F:	2B0E      	ld         xh, @(+0x2B, y)
   58D10:	2C9F      	bsr        @(+0x2C, y)
   58D11:	2F23      	st         ah, @(+0x2F, y)
   58D12:	3027      	st         al, @(+0x30, y)
   58D13:	F100      	**prefx    0xF1
   58D14:	CE15      	ld         al, @0xF0CE <___libgatt_lib_db_2497>
   58D15:	FF00      	**prefx    0xFF
   58D16:	00C4      	and        al, #0xFF00
   58D17:	20B4      	or         al, #+0x20
   58D18:	F100      	**prefx    0xF1
   58D19:	CE25      	st         al, @0xF0CE <___libgatt_lib_db_2497>
   58D1A:	6A00      	**prefx    0x6A
   58D1B:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58D1C:	0010      	ld         ah, #+0x0
   58D1D:	5600      	**prefx    0x56
   58D1E:	F434      	add        al, #+0x55F4
   58D1F:	0140      	addc       ah, #+0x1
   58D20:	2E27      	st         al, @(+0x2E, y)
   58D21:	2D23      	st         ah, @(+0x2D, y)
   58D22:	0514      	ld         al, #+0x5
   58D23:	2D0E      	ld         xh, @(+0x2D, y)
   58D24:	2E9F      	bsr        @(+0x2E, y)
   58D25:	3123      	st         ah, @(+0x31, y)
   58D26:	3227      	st         al, @(+0x32, y)
   58D27:	0018      	ld         x, #+0x0
   58D28:	162B      	st         x, @(+0x16, y)
   58D29:	0710      	ld         ah, #+0x7
   58D2A:	1423      	st         ah, @(+0x14, y)
   58D2B:	FF00      	**prefx    0xFF
   58D2C:	E1E0      	bra        -0x11F <___libgatt_lib_db_5625+0x21:0x58C0D[p]>
   58D2D:	F100      	**prefx    0xF1
   58D2E:	CE15      	ld         al, @0xF0CE <___libgatt_lib_db_2497>
   58D2F:	FF00      	**prefx    0xFF
   58D30:	00C4      	and        al, #0xFF00
   58D31:	16B7      	or         al, @(+0x16, y)
   58D32:	F100      	**prefx    0xF1
   58D33:	CE25      	st         al, @0xF0CE <___libgatt_lib_db_2497>
   58D34:	D200      	**prefx    0xD2
   58D35:	3F15      	ld         al, @0xD23F <___libgatt_lib_db_1989+0x2F>
   58D36:	FF00      	**prefx    0xFF
   58D37:	00C4      	and        al, #0xFF00
   58D38:	16B7      	or         al, @(+0x16, y)
   58D39:	D200      	**prefx    0xD2
   58D3A:	3F25      	st         al, @0xD23F <___libgatt_lib_db_1989+0x2F>
   58D3B:	DA00      	**prefx    0xDA
   58D3C:	BC15      	ld         al, @0xD9BC <___libgatt_lib_db_2022+0x46>
   58D3D:	FD00      	**prefx    0xFD
   58D3E:	7C9C      	bsr        -0x284 <___libgatt_lib_db_5623:0x58ABA[p]>
   58D3F:	1D3C      	add        y, #+0x1D
   58D40:	CB0F      	leave      #-0x35

0x00058D41 <___libgatt_lib_db_5635>:
   58D41:	FE0B      	enter      #-0x2
   58D42:	0317      	ld         al, @(+0x3, y)
   58D43:	021B      	ld         x, @(+0x2, y)
   58D44:	0010      	ld         ah, #+0x0
   58D45:	10A0      	asl        #0x10
   58D46:	E3B5      	or         al, @0xFFE3 <register uxl>
   58D47:	0180      	cmp        ah, #+0x1
   58D48:	21F0      	bne        +0x21 <___libgatt_lib_db_5635+0x28:0x58D69[p]>
   58D49:	5B00      	**prefx    0x5B
   58D4A:	6984      	cmp        al, #+0x5B69
   58D4B:	1EF0      	bne        +0x1E <___libgatt_lib_db_5635+0x28:0x58D69[p]>
   58D4C:	F100      	**prefx    0xF1
   58D4D:	C711      	ld         ah, @0xF0C7 <___libgatt_lib_db_2502>
   58D4E:	0009      	**unsigned
   58D4F:	08A4      	lsr        #0x8
   58D50:	E015      	ld         al, @0xFFE0 <register ah>
   58D51:	3FC4      	and        al, #0x3F
   58D52:	F100      	**prefx    0xF1
   58D53:	C719      	ld         x, @0xF0C7 <___libgatt_lib_db_2502>
   58D54:	0134      	add        al, #+0x1
   58D55:	08A0      	asl        #0x8
   58D56:	C100      	**prefx    0xC1
   58D57:	FFC8      	and        x, #0xC0FF
   58D58:	E1B9      	or         x, @0xFFE1 <register al>
   58D59:	F100      	**prefx    0xF1
   58D5A:	C729      	st         x, @0xF0C7 <___libgatt_lib_db_2502>
   58D5B:	D200      	**prefx    0xD2
   58D5C:	3418      	ld         x, #-0x2DCC
   58D5D:	D200      	**prefx    0xD2
   58D5E:	4811      	ld         ah, @0xD248 <___libgatt_lib_db_1989+0x38>
   58D5F:	C100      	**prefx    0xC1
   58D60:	FFC0      	and        ah, #0xC0FF
   58D61:	E1B1      	or         ah, @0xFFE1 <register al>
   58D62:	1422      	st         ah, @(+0x14, x)
   58D63:	D200      	**prefx    0xD2
   58D64:	3811      	ld         ah, @0xD238 <___libgatt_lib_db_1989+0x28>
   58D65:	C100      	**prefx    0xC1
   58D66:	FFC0      	and        ah, #0xC0FF
   58D67:	E0B5      	or         al, @0xFFE0 <register ah>
   58D68:	0426      	st         al, @(+0x4, x)
   58D69:	FE0F      	leave      #-0x2

0x00058D6A <___libgatt_lib_db_5637>:
   58D6A:	FE0B      	enter      #-0x2
   58D6B:	D200      	**prefx    0xD2
   58D6C:	3418      	ld         x, #-0x2DCC
   58D6D:	4000      	**prefx    0x40
   58D6E:	2414      	ld         al, #+0x4024
   58D6F:	0200      	**prefx    0x2
   58D70:	8126      	st         al, @(+0x181, x)
   58D71:	E034      	add        al, #-0x20
   58D72:	0200      	**prefx    0x2
   58D73:	8426      	st         al, @(+0x184, x)
   58D74:	FE0F      	leave      #-0x2

0x00058D75 <___libgatt_lib_db_5638>:
   58D75:	FE0B      	enter      #-0x2
   58D76:	0100      	**prefx    0x1
   58D77:	7C18      	ld         x, #+0x17C
   58D78:	0010      	ld         ah, #+0x0
   58D79:	D200      	**prefx    0xD2
   58D7A:	3422      	st         ah, @(-0x2DCC, x)
   58D7B:	0138      	add        x, #+0x1
   58D7C:	0200      	**prefx    0x2
   58D7D:	9088      	cmp        x, #+0x190
   58D7E:	FAF0      	bne        -0x6 <___libgatt_lib_db_5638+0x3:0x58D78[p]>
   58D7F:	0284      	cmp        al, #+0x2
   58D80:	13F0      	bne        +0x13 <___libgatt_lib_db_5638+0x1E:0x58D93[p]>
   58D81:	0018      	ld         x, #+0x0
   58D82:	0188      	cmp        x, #+0x1
   58D83:	04F0      	bne        +0x4 <___libgatt_lib_db_5638+0x12:0x58D87[p]>
   58D84:	4000      	**prefx    0x40
   58D85:	2410      	ld         ah, #+0x4024
   58D86:	08E0      	bra        +0x8 <___libgatt_lib_db_5638+0x19:0x58D8E[p]>
   58D87:	0488      	cmp        x, #+0x4
   58D88:	04F0      	bne        +0x4 <___libgatt_lib_db_5638+0x17:0x58D8C[p]>
   58D89:	4000      	**prefx    0x40
   58D8A:	0410      	ld         ah, #+0x4004
   58D8B:	03E0      	bra        +0x3 <___libgatt_lib_db_5638+0x19:0x58D8E[p]>
   58D8C:	1F00      	**prefx    0x1F
   58D8D:	F912      	ld         ah, @(+0x1EF9, x)
   58D8E:	D400      	**prefx    0xD4
   58D8F:	B422      	st         ah, @(-0x2C4C, x)
   58D90:	0138      	add        x, #+0x1
   58D91:	1088      	cmp        x, #+0x10
   58D92:	F0F0      	bne        -0x10 <___libgatt_lib_db_5638+0xD:0x58D82[p]>
   58D93:	0200      	**prefx    0x2
   58D94:	9018      	ld         x, #+0x190
   58D95:	0010      	ld         ah, #+0x0
   58D96:	D200      	**prefx    0xD2
   58D97:	3422      	st         ah, @(-0x2DCC, x)
   58D98:	0138      	add        x, #+0x1
   58D99:	0200      	**prefx    0x2
   58D9A:	A088      	cmp        x, #+0x1A0
   58D9B:	FAF0      	bne        -0x6 <___libgatt_lib_db_5638+0x20:0x58D95[p]>
   58D9C:	0284      	cmp        al, #+0x2
   58D9D:	09F0      	bne        +0x9 <___libgatt_lib_db_5638+0x31:0x58DA6[p]>
   58D9E:	0018      	ld         x, #+0x0
   58D9F:	1F00      	**prefx    0x1F
   58DA0:	F516      	ld         al, @(+0x1EF5, x)
   58DA1:	D400      	**prefx    0xD4
   58DA2:	C426      	st         al, @(-0x2C3C, x)
   58DA3:	0138      	add        x, #+0x1
   58DA4:	0488      	cmp        x, #+0x4
   58DA5:	FAF0      	bne        -0x6 <___libgatt_lib_db_5638+0x2A:0x58D9F[p]>
   58DA6:	FE0F      	leave      #-0x2

0x00058DA7 <___libgatt_lib_db_5639>:
   58DA7:	FB0B      	enter      #-0x5
   58DA8:	0617      	ld         al, @(+0x6, y)
   58DA9:	051B      	ld         x, @(+0x5, y)
   58DAA:	0010      	ld         ah, #+0x0
   58DAB:	10A0      	asl        #0x10
   58DAC:	E3B5      	or         al, @0xFFE3 <register uxl>
   58DAD:	0180      	cmp        ah, #+0x1
   58DAE:	47F0      	bne        +0x47 <___libgatt_lib_db_5639+0x4E:0x58DF5[p]>
   58DAF:	5500      	**prefx    0x55
   58DB0:	4C84      	cmp        al, #+0x554C
   58DB1:	44F0      	bne        +0x44 <___libgatt_lib_db_5639+0x4E:0x58DF5[p]>
   58DB2:	F100      	**prefx    0xF1
   58DB3:	C915      	ld         al, @0xF0C9 <___libgatt_lib_db_2504>
   58DB4:	8800      	**prefx    0x88
   58DB5:	FFC4      	and        al, #0x87FF
   58DB6:	3800      	**prefx    0x38
   58DB7:	00B4      	or         al, #+0x3800
   58DB8:	F100      	**prefx    0xF1
   58DB9:	C925      	st         al, @0xF0C9 <___libgatt_lib_db_2504>
   58DBA:	D200      	**prefx    0xD2
   58DBB:	3418      	ld         x, #-0x2DCC
   58DBC:	D200      	**prefx    0xD2
   58DBD:	4A15      	ld         al, @0xD24A <___libgatt_lib_db_1989+0x3A>
   58DBE:	8800      	**prefx    0x88
   58DBF:	FFC4      	and        al, #0x87FF
   58DC0:	3800      	**prefx    0x38
   58DC1:	00B4      	or         al, #+0x3800
   58DC2:	1626      	st         al, @(+0x16, x)
   58DC3:	D200      	**prefx    0xD2
   58DC4:	3A15      	ld         al, @0xD23A <___libgatt_lib_db_1989+0x2A>
   58DC5:	8800      	**prefx    0x88
   58DC6:	FFC4      	and        al, #0x87FF
   58DC7:	3800      	**prefx    0x38
   58DC8:	00B4      	or         al, #+0x3800
   58DC9:	0626      	st         al, @(+0x6, x)
   58DCA:	1213      	ld         ah, @(+0x12, y)
   58DCB:	0223      	st         ah, @(+0x2, y)
   58DCC:	E019      	ld         x, @0xFFE0 <register ah>
   58DCD:	089A      	tst        @(+0x8, x)
   58DCE:	1FF0      	bne        +0x1F <___libgatt_lib_db_5639+0x46:0x58DED[p]>
   58DCF:	6D00      	**prefx    0x6D
   58DD0:	D315      	ld         al, @0x6CD3 <bleradio_config_min_ico_freq_mhz>
   58DD1:	1CF4      	beq        +0x1C <___libgatt_lib_db_5639+0x46:0x58DED[p]>
   58DD2:	0800      	**prefx    0x8
   58DD3:	3484      	cmp        al, #+0x834
   58DD4:	05F8      	bcc        +0x5 <___libgatt_lib_db_5639+0x32:0x58DD9[p]>
   58DD5:	0100      	**prefx    0x1
   58DD6:	FC34      	add        al, #+0xFC
   58DD7:	6D00      	**prefx    0x6D
   58DD8:	D325      	st         al, @0x6CD3 <bleradio_config_min_ico_freq_mhz>
   58DD9:	6D00      	**prefx    0x6D
   58DDA:	D311      	ld         ah, @0x6CD3 <bleradio_config_min_ico_freq_mhz>
   58DDB:	E015      	ld         al, @0xFFE0 <register ah>
   58DDC:	0009      	**unsigned
   58DDD:	5190      	umult      #0x51
   58DDE:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   58DDF:	0018      	ld         x, #+0x0
   58DE0:	002B      	st         x, @(0x0, y)
   58DE1:	0400      	**prefx    0x4
   58DE2:	E810      	ld         ah, #+0x3E8
   58DE3:	0123      	st         ah, @(+0x1, y)
   58DE4:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   58DE5:	FC00      	**prefx    0xFC
   58DE6:	DF00      	**prefx    0xDF
   58DE7:	939C      	bsr        -0x4216D <__divhi3:0x16C7A[p]>
   58DE8:	FF00      	**prefx    0xFF
   58DE9:	3634      	add        al, #-0xCA
   58DEA:	FF40      	addc       ah, #-0x1
   58DEB:	021B      	ld         x, @(+0x2, y)
   58DEC:	0826      	st         al, @(+0x8, x)
   58DED:	021B      	ld         x, @(+0x2, y)
   58DEE:	0816      	ld         al, @(+0x8, x)
   58DEF:	6D00      	**prefx    0x6D
   58DF0:	D435      	add        al, @0x6CD4 <bleradio_config_xtal_board_offset>
   58DF1:	0826      	st         al, @(+0x8, x)
   58DF2:	0010      	ld         ah, #+0x0
   58DF3:	6D00      	**prefx    0x6D
   58DF4:	D421      	st         ah, @0x6CD4 <bleradio_config_xtal_board_offset>
   58DF5:	FB0F      	leave      #-0x5

0x00058DF6 <___libgatt_lib_db_5641>:
   58DF6:	F30B      	enter      #-0xD
   58DF7:	F000      	**prefx    0xF0
   58DF8:	6915      	ld         al, @0xF069 <___libgatt_lib_db_2996>
   58DF9:	FF00      	**prefx    0xFF
   58DFA:	FFC4      	and        al, #0xFEFF
   58DFB:	F000      	**prefx    0xF0
   58DFC:	6925      	st         al, @0xF069 <___libgatt_lib_db_2996>
   58DFD:	6410      	ld         ah, #+0x64
   58DFE:	F300      	**prefx    0xF3
   58DFF:	2321      	st         ah, @0xF323 <___libgatt_lib_db_3088>
   58E00:	0014      	ld         al, #+0x0
   58E01:	F300      	**prefx    0xF3
   58E02:	2225      	st         al, @0xF322 <___libgatt_lib_db_3087>
   58E03:	F300      	**prefx    0xF3
   58E04:	DF15      	ld         al, @0xF2DF <___libgatt_lib_db_3070>
   58E05:	7F00      	**prefx    0x7F
   58E06:	00C4      	and        al, #0x7F00
   58E07:	22B4      	or         al, #+0x22
   58E08:	F300      	**prefx    0xF3
   58E09:	DF25      	st         al, @0xF2DF <___libgatt_lib_db_3070>
   58E0A:	E415      	ld         al, @0xFFE4 <register uy>
   58E0B:	3230      	add        ah, #+0x32
   58E0C:	FB00      	**prefx    0xFB
   58E0D:	9D00      	**prefx    0x9D
   58E0E:	6C9C      	bsr        -0x56294 <TimeGet48WithOffset:0x2B7A[p]>
   58E0F:	0013      	ld         ah, @(0x0, y)
   58E10:	F300      	**prefx    0xF3
   58E11:	EB21      	st         ah, @0xF2EB <___libgatt_lib_db_3093>
   58E12:	0117      	ld         al, @(+0x1, y)
   58E13:	F300      	**prefx    0xF3
   58E14:	EA25      	st         al, @0xF2EA <___libgatt_lib_db_3092>
   58E15:	0213      	ld         ah, @(+0x2, y)
   58E16:	F300      	**prefx    0xF3
   58E17:	E921      	st         ah, @0xF2E9 <___libgatt_lib_db_3090>
   58E18:	0114      	ld         al, #+0x1
   58E19:	F300      	**prefx    0xF3
   58E1A:	E725      	st         al, @0xF2E7 <___libgatt_lib_db_3075>
   58E1B:	FB00      	**prefx    0xFB
   58E1C:	9D00      	**prefx    0x9D
   58E1D:	499C      	bsr        -0x562B7 <TimeGet32:0x2B66[p]>
   58E1E:	0100      	**prefx    0x1
   58E1F:	C834      	add        al, #+0xC8
   58E20:	0040      	addc       ah, #+0x0
   58E21:	0627      	st         al, @(+0x6, y)
   58E22:	0523      	st         ah, @(+0x5, y)
   58E23:	F300      	**prefx    0xF3
   58E24:	E815      	ld         al, @0xF2E8 <___libgatt_lib_db_3086>
   58E25:	02C4      	and        al, #0x2
   58E26:	0DF0      	bne        +0xD <___libgatt_lib_db_5641+0x3D:0x58E33[p]>
   58E27:	FB00      	**prefx    0xFB
   58E28:	9D00      	**prefx    0x9D
   58E29:	3D9C      	bsr        -0x562C3 <TimeGet32:0x2B66[p]>
   58E2A:	0A27      	st         al, @(+0xA, y)
   58E2B:	0923      	st         ah, @(+0x9, y)
   58E2C:	0A17      	ld         al, @(+0xA, y)
   58E2D:	0913      	ld         ah, @(+0x9, y)
   58E2E:	0657      	sub        al, @(+0x6, y)
   58E2F:	0563      	subc       ah, @(+0x5, y)
   58E30:	0A27      	st         al, @(+0xA, y)
   58E31:	0923      	st         ah, @(+0x9, y)
   58E32:	F1EC      	bmi        -0xF <___libgatt_lib_db_5641+0x2D:0x58E23[p]>
   58E33:	F300      	**prefx    0xF3
   58E34:	E815      	ld         al, @0xF2E8 <___libgatt_lib_db_3086>
   58E35:	FB00      	**prefx    0xFB
   58E36:	9D00      	**prefx    0x9D
   58E37:	2F9C      	bsr        -0x562D1 <TimeGet32:0x2B66[p]>
   58E38:	0100      	**prefx    0x1
   58E39:	2C34      	add        al, #+0x12C
   58E3A:	0040      	addc       ah, #+0x0
   58E3B:	0427      	st         al, @(+0x4, y)
   58E3C:	0323      	st         ah, @(+0x3, y)
   58E3D:	F300      	**prefx    0xF3
   58E3E:	E815      	ld         al, @0xF2E8 <___libgatt_lib_db_3086>
   58E3F:	02C4      	and        al, #0x2
   58E40:	0DF4      	beq        +0xD <___libgatt_lib_db_5641+0x57:0x58E4D[p]>
   58E41:	FB00      	**prefx    0xFB
   58E42:	9D00      	**prefx    0x9D
   58E43:	239C      	bsr        -0x562DD <TimeGet32:0x2B66[p]>
   58E44:	0827      	st         al, @(+0x8, y)
   58E45:	0723      	st         ah, @(+0x7, y)
   58E46:	0817      	ld         al, @(+0x8, y)
   58E47:	0713      	ld         ah, @(+0x7, y)
   58E48:	0457      	sub        al, @(+0x4, y)
   58E49:	0363      	subc       ah, @(+0x3, y)
   58E4A:	0827      	st         al, @(+0x8, y)
   58E4B:	0723      	st         ah, @(+0x7, y)
   58E4C:	F1EC      	bmi        -0xF <___libgatt_lib_db_5641+0x47:0x58E3D[p]>
   58E4D:	F300      	**prefx    0xF3
   58E4E:	E815      	ld         al, @0xF2E8 <___libgatt_lib_db_3086>
   58E4F:	0210      	ld         ah, #+0x2
   58E50:	F300      	**prefx    0xF3
   58E51:	E721      	st         ah, @0xF2E7 <___libgatt_lib_db_3075>
   58E52:	F000      	**prefx    0xF0
   58E53:	6915      	ld         al, @0xF069 <___libgatt_lib_db_2996>
   58E54:	0100      	**prefx    0x1
   58E55:	00B4      	or         al, #+0x100
   58E56:	F000      	**prefx    0xF0
   58E57:	6925      	st         al, @0xF069 <___libgatt_lib_db_2996>
   58E58:	F30F      	leave      #-0xD

0x00058E59 <___libgatt_lib_db_5640>:
   58E59:	FE0B      	enter      #-0x2
   58E5A:	0317      	ld         al, @(+0x3, y)
   58E5B:	021B      	ld         x, @(+0x2, y)
   58E5C:	0010      	ld         ah, #+0x0
   58E5D:	10A0      	asl        #0x10
   58E5E:	E3B5      	or         al, @0xFFE3 <register uxl>
   58E5F:	0180      	cmp        ah, #+0x1
   58E60:	16F0      	bne        +0x16 <___libgatt_lib_db_5640+0x1D:0x58E76[p]>
   58E61:	5800      	**prefx    0x58
   58E62:	D084      	cmp        al, #+0x57D0
   58E63:	13F0      	bne        +0x13 <___libgatt_lib_db_5640+0x1D:0x58E76[p]>
   58E64:	6A00      	**prefx    0x6A
   58E65:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58E66:	0010      	ld         ah, #+0x0
   58E67:	5500      	**prefx    0x55
   58E68:	DE34      	add        al, #+0x54DE
   58E69:	0140      	addc       ah, #+0x1
   58E6A:	FE27      	st         al, @(-0x2, y)
   58E6B:	FF23      	st         ah, @(-0x1, y)
   58E6C:	0014      	ld         al, #+0x0
   58E6D:	FF0E      	ld         xh, @(-0x1, y)
   58E6E:	FE9F      	bsr        @(-0x2, y)
   58E6F:	0114      	ld         al, #+0x1
   58E70:	299C      	bsr        +0x29 <___libgatt_lib_db_5648:0x58E99[p]>
   58E71:	0114      	ld         al, #+0x1
   58E72:	1727      	st         al, @(+0x17, y)
   58E73:	5100      	**prefx    0x51
   58E74:	4114      	ld         al, #+0x5141
   58E75:	1627      	st         al, @(+0x16, y)
   58E76:	FE0F      	leave      #-0x2

0x00058E77 <___libgatt_lib_db_5647>:
   58E77:	FE0B      	enter      #-0x2
   58E78:	6A00      	**prefx    0x6A
   58E79:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58E7A:	6100      	**prefx    0x61
   58E7B:	EC18      	ld         x, #+0x60EC
   58E7C:	0010      	ld         ah, #+0x0
   58E7D:	5F00      	**prefx    0x5F
   58E7E:	2D34      	add        al, #+0x5F2D
   58E7F:	0140      	addc       ah, #+0x1
   58E80:	0126      	st         al, @(+0x1, x)
   58E81:	0022      	st         ah, @(0x0, x)
   58E82:	6A00      	**prefx    0x6A
   58E83:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58E84:	0010      	ld         ah, #+0x0
   58E85:	5F00      	**prefx    0x5F
   58E86:	1134      	add        al, #+0x5F11
   58E87:	0140      	addc       ah, #+0x1
   58E88:	0726      	st         al, @(+0x7, x)
   58E89:	0622      	st         ah, @(+0x6, x)
   58E8A:	6A00      	**prefx    0x6A
   58E8B:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58E8C:	0010      	ld         ah, #+0x0
   58E8D:	5F00      	**prefx    0x5F
   58E8E:	C934      	add        al, #+0x5EC9
   58E8F:	0140      	addc       ah, #+0x1
   58E90:	0326      	st         al, @(+0x3, x)
   58E91:	0222      	st         ah, @(+0x2, x)
   58E92:	D200      	**prefx    0xD2
   58E93:	CB29      	st         x, @0xD1CB <___libgatt_lib_db_1988+0x35>
   58E94:	5E00      	**prefx    0x5E
   58E95:	C014      	ld         al, #+0x5DC0
   58E96:	D100      	**prefx    0xD1
   58E97:	6A25      	st         al, @0xD16A <___libgatt_lib_db_1982+0x4E>
   58E98:	FE0F      	leave      #-0x2

0x00058E99 <___libgatt_lib_db_5648>:
   58E99:	FE0B      	enter      #-0x2
   58E9A:	E119      	ld         x, @0xFFE1 <register al>
   58E9B:	6A00      	**prefx    0x6A
   58E9C:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58E9D:	0010      	ld         ah, #+0x0
   58E9E:	5200      	**prefx    0x52
   58E9F:	2534      	add        al, #+0x5225
   58EA0:	0140      	addc       ah, #+0x1
   58EA1:	FE27      	st         al, @(-0x2, y)
   58EA2:	FF23      	st         ah, @(-0x1, y)
   58EA3:	E315      	ld         al, @0xFFE3 <register uxl>
   58EA4:	FF0E      	ld         xh, @(-0x1, y)
   58EA5:	FE9F      	bsr        @(-0x2, y)
   58EA6:	F100      	**prefx    0xF1
   58EA7:	CD15      	ld         al, @0xF0CD <___libgatt_lib_db_2496>
   58EA8:	F400      	**prefx    0xF4
   58EA9:	FFC4      	and        al, #0xF3FF
   58EAA:	F100      	**prefx    0xF1
   58EAB:	CD25      	st         al, @0xF0CD <___libgatt_lib_db_2496>
   58EAC:	F100      	**prefx    0xF1
   58EAD:	CD15      	ld         al, @0xF0CD <___libgatt_lib_db_2496>
   58EAE:	D000      	**prefx    0xD0
   58EAF:	FFC4      	and        al, #0xCFFF
   58EB0:	F100      	**prefx    0xF1
   58EB1:	CD25      	st         al, @0xF0CD <___libgatt_lib_db_2496>
   58EB2:	F100      	**prefx    0xF1
   58EB3:	C515      	ld         al, @0xF0C5 <___libgatt_lib_db_2500>
   58EB4:	FEC4      	and        al, #0xFFFE
   58EB5:	F100      	**prefx    0xF1
   58EB6:	C525      	st         al, @0xF0C5 <___libgatt_lib_db_2500>
   58EB7:	FE0F      	leave      #-0x2

0x00058EB8 <___libgatt_lib_db_5649>:
   58EB8:	F184      	cmp        al, #-0xF
   58EB9:	0D24      	bge        +0xD <___libgatt_lib_db_5649+0xE:0x58EC6[p]>
   58EBA:	FB00      	**prefx    0xFB
   58EBB:	2215      	ld         al, @0xFB22 <___libgatt_lib_db_2648>
   58EBC:	08B4      	or         al, #+0x8
   58EBD:	FB00      	**prefx    0xFB
   58EBE:	2225      	st         al, @0xFB22 <___libgatt_lib_db_2648>
   58EBF:	FB00      	**prefx    0xFB
   58EC0:	2015      	ld         al, @0xFB20 <___libgatt_lib_db_2659>
   58EC1:	0100      	**prefx    0x1
   58EC2:	80B4      	or         al, #+0x80
   58EC3:	FB00      	**prefx    0xFB
   58EC4:	2025      	st         al, @0xFB20 <___libgatt_lib_db_2659>
   58EC5:	00E2      	bra        0x0, x
   58EC6:	FB00      	**prefx    0xFB
   58EC7:	2015      	ld         al, @0xFB20 <___libgatt_lib_db_2659>
   58EC8:	FF00      	**prefx    0xFF
   58EC9:	7FC4      	and        al, #0xFF7F
   58ECA:	FB00      	**prefx    0xFB
   58ECB:	2025      	st         al, @0xFB20 <___libgatt_lib_db_2659>
   58ECC:	FB00      	**prefx    0xFB
   58ECD:	2215      	ld         al, @0xFB22 <___libgatt_lib_db_2648>
   58ECE:	F7C4      	and        al, #0xFFF7
   58ECF:	FB00      	**prefx    0xFB
   58ED0:	2225      	st         al, @0xFB22 <___libgatt_lib_db_2648>
   58ED1:	00E2      	bra        0x0, x

0x00058ED2 <.LFB7>:
   58ED2:	FD0B      	enter      #-0x3
   58ED3:	F825      	st         al, @0xFFF8 <(scratchpad)>
   58ED4:	E019      	ld         x, @0xFFE0 <register ah>
   58ED5:	0280      	cmp        ah, #+0x2
   58ED6:	0AF0      	bne        +0xA <.LFB7+0xE:0x58EE0[p]>
   58ED7:	031B      	ld         x, @(+0x3, y)
   58ED8:	0016      	ld         al, @(0x0, x)
   58ED9:	E119      	ld         x, @0xFFE1 <register al>
   58EDA:	A400      	**prefx    0xA4
   58EDB:	B616      	ld         al, @(-0x5C4A, x)
   58EDC:	031B      	ld         x, @(+0x3, y)
   58EDD:	0126      	st         al, @(+0x1, x)
   58EDE:	0014      	ld         al, #+0x0
   58EDF:	0FE0      	bra        +0xF <.LFB7+0x1C:0x58EEE[p]>
   58EE0:	6A00      	**prefx    0x6A
   58EE1:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58EE2:	0010      	ld         ah, #+0x0
   58EE3:	5F00      	**prefx    0x5F
   58EE4:	0334      	add        al, #+0x5F03
   58EE5:	0140      	addc       ah, #+0x1
   58EE6:	FE27      	st         al, @(-0x2, y)
   58EE7:	FF23      	st         ah, @(-0x1, y)
   58EE8:	0317      	ld         al, @(+0x3, y)
   58EE9:	0027      	st         al, @(0x0, y)
   58EEA:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   58EEB:	E311      	ld         ah, @0xFFE3 <register uxl>
   58EEC:	FF0E      	ld         xh, @(-0x1, y)
   58EED:	FE9F      	bsr        @(-0x2, y)
   58EEE:	FD0F      	leave      #-0x3

0x00058EEF <.LFB9>:
   58EEF:	FE0B      	enter      #-0x2
   58EF0:	0314      	ld         al, #+0x3
   58EF1:	A400      	**prefx    0xA4
   58EF2:	B310      	ld         ah, #-0x5C4D
   58EF3:	F000      	**prefx    0xF0
   58EF4:	E19C      	bsr        -0x101F <___libgatt_lib_db_5548:0x57ED5[p]>
   58EF5:	0114      	ld         al, #+0x1
   58EF6:	0127      	st         al, @(+0x1, y)
   58EF7:	5A00      	**prefx    0x5A
   58EF8:	5714      	ld         al, #+0x5A57
   58EF9:	0027      	st         al, @(0x0, y)
   58EFA:	FE0F      	leave      #-0x2

0x00058EFB <.LFB6>:
   58EFB:	DA0B      	enter      #-0x26
   58EFC:	1227      	st         al, @(+0x12, y)
   58EFD:	1323      	st         ah, @(+0x13, y)
   58EFE:	0180      	cmp        ah, #+0x1
   58EFF:	17F0      	bne        +0x17 <.LFB6+0x1B:0x58F16[p]>
   58F00:	261B      	ld         x, @(+0x26, y)
   58F01:	0016      	ld         al, @(0x0, x)
   58F02:	0284      	cmp        al, #+0x2
   58F03:	13F0      	bne        +0x13 <.LFB6+0x1B:0x58F16[p]>
   58F04:	6A00      	**prefx    0x6A
   58F05:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58F06:	0010      	ld         ah, #+0x0
   58F07:	A600      	**prefx    0xA6
   58F08:	6634      	add        al, #-0x599A
   58F09:	0040      	addc       ah, #+0x0
   58F0A:	FE27      	st         al, @(-0x2, y)
   58F0B:	FF23      	st         ah, @(-0x1, y)
   58F0C:	FF0E      	ld         xh, @(-0x1, y)
   58F0D:	FE9F      	bsr        @(-0x2, y)
   58F0E:	E199      	tst        @0xFFE1 <register al>
   58F0F:	0200      	**prefx    0x2
   58F10:	A1F0      	bne        +0x1A1 <.LFB6+0x1B6:0x590B1[p]>
   58F11:	DA00      	**prefx    0xDA
   58F12:	B915      	ld         al, @0xD9B9 <___libgatt_lib_db_2022+0x43>
   58F13:	0284      	cmp        al, #+0x2
   58F14:	0200      	**prefx    0x2
   58F15:	9CF4      	beq        +0x19C <.LFB6+0x1B6:0x590B1[p]>
   58F16:	0014      	ld         al, #+0x0
   58F17:	E411      	ld         ah, @0xFFE4 <register uy>
   58F18:	0530      	add        ah, #+0x5
   58F19:	F000      	**prefx    0xF0
   58F1A:	AB9C      	bsr        -0x1055 <___libgatt_lib_db_5549:0x57EC5[p]>
   58F1B:	0014      	ld         al, #+0x0
   58F1C:	A400      	**prefx    0xA4
   58F1D:	B010      	ld         ah, #-0x5C50
   58F1E:	F000      	**prefx    0xF0
   58F1F:	B69C      	bsr        -0x104A <___libgatt_lib_db_5548:0x57ED5[p]>
   58F20:	0114      	ld         al, #+0x1
   58F21:	E411      	ld         ah, @0xFFE4 <register uy>
   58F22:	0830      	add        ah, #+0x8
   58F23:	F000      	**prefx    0xF0
   58F24:	A19C      	bsr        -0x105F <___libgatt_lib_db_5549:0x57EC5[p]>
   58F25:	0014      	ld         al, #+0x0
   58F26:	FB00      	**prefx    0xFB
   58F27:	5025      	st         al, @0xFB50 <___libgatt_lib_db_4235>
   58F28:	6A00      	**prefx    0x6A
   58F29:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58F2A:	0010      	ld         ah, #+0x0
   58F2B:	C400      	**prefx    0xC4
   58F2C:	EF34      	add        al, #-0x3C11
   58F2D:	0040      	addc       ah, #+0x0
   58F2E:	1527      	st         al, @(+0x15, y)
   58F2F:	1423      	st         ah, @(+0x14, y)
   58F30:	0118      	ld         x, #+0x1
   58F31:	002B      	st         x, @(0x0, y)
   58F32:	5400      	**prefx    0x54
   58F33:	0814      	ld         al, #+0x5408
   58F34:	0127      	st         al, @(+0x1, y)
   58F35:	8D00      	**prefx    0x8D
   58F36:	7518      	ld         x, #-0x728B
   58F37:	032B      	st         x, @(+0x3, y)
   58F38:	0514      	ld         al, #+0x5
   58F39:	0227      	st         al, @(+0x2, y)
   58F3A:	0114      	ld         al, #+0x1
   58F3B:	0110      	ld         ah, #+0x1
   58F3C:	140E      	ld         xh, @(+0x14, y)
   58F3D:	159F      	bsr        @(+0x15, y)
   58F3E:	0214      	ld         al, #+0x2
   58F3F:	E411      	ld         ah, @0xFFE4 <register uy>
   58F40:	0B30      	add        ah, #+0xB
   58F41:	F000      	**prefx    0xF0
   58F42:	839C      	bsr        -0x107D <___libgatt_lib_db_5549:0x57EC5[p]>
   58F43:	0018      	ld         x, #+0x0
   58F44:	FB00      	**prefx    0xFB
   58F45:	5029      	st         x, @0xFB50 <___libgatt_lib_db_4235>
   58F46:	6A00      	**prefx    0x6A
   58F47:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58F48:	0010      	ld         ah, #+0x0
   58F49:	C400      	**prefx    0xC4
   58F4A:	EF34      	add        al, #-0x3C11
   58F4B:	0040      	addc       ah, #+0x0
   58F4C:	1727      	st         al, @(+0x17, y)
   58F4D:	1623      	st         ah, @(+0x16, y)
   58F4E:	0114      	ld         al, #+0x1
   58F4F:	0027      	st         al, @(0x0, y)
   58F50:	5C00      	**prefx    0x5C
   58F51:	4F18      	ld         x, #+0x5C4F
   58F52:	012B      	st         x, @(+0x1, y)
   58F53:	8B00      	**prefx    0x8B
   58F54:	E814      	ld         al, #-0x7518
   58F55:	0327      	st         al, @(+0x3, y)
   58F56:	0518      	ld         x, #+0x5
   58F57:	022B      	st         x, @(+0x2, y)
   58F58:	0214      	ld         al, #+0x2
   58F59:	0110      	ld         ah, #+0x1
   58F5A:	160E      	ld         xh, @(+0x16, y)
   58F5B:	179F      	bsr        @(+0x17, y)
   58F5C:	0314      	ld         al, #+0x3
   58F5D:	E411      	ld         ah, @0xFFE4 <register uy>
   58F5E:	0E30      	add        ah, #+0xE
   58F5F:	EF00      	**prefx    0xEF
   58F60:	659C      	bsr        -0x109B <___libgatt_lib_db_5549:0x57EC5[p]>
   58F61:	139B      	tst        @(+0x13, y)
   58F62:	17F0      	bne        +0x17 <.LFB6+0x7E:0x58F79[p]>
   58F63:	261B      	ld         x, @(+0x26, y)
   58F64:	0016      	ld         al, @(0x0, x)
   58F65:	0284      	cmp        al, #+0x2
   58F66:	0100      	**prefx    0x1
   58F67:	26F0      	bne        +0x126 <.LFB6+0x192:0x5908D[p]>
   58F68:	6A00      	**prefx    0x6A
   58F69:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58F6A:	0010      	ld         ah, #+0x0
   58F6B:	5F00      	**prefx    0x5F
   58F6C:	CB34      	add        al, #+0x5ECB
   58F6D:	0140      	addc       ah, #+0x1
   58F6E:	FE27      	st         al, @(-0x2, y)
   58F6F:	FF23      	st         ah, @(-0x1, y)
   58F70:	1217      	ld         al, @(+0x12, y)
   58F71:	FF0E      	ld         xh, @(-0x1, y)
   58F72:	FE9F      	bsr        @(-0x2, y)
   58F73:	DA00      	**prefx    0xDA
   58F74:	BA14      	ld         al, #-0x2646
   58F75:	FB00      	**prefx    0xFB
   58F76:	2C9C      	bsr        -0x4D4 <___libgatt_lib_db_5627:0x58AA2[p]>
   58F77:	0100      	**prefx    0x1
   58F78:	15E0      	bra        +0x115 <.LFB6+0x192:0x5908D[p]>
   58F79:	1317      	ld         al, @(+0x13, y)
   58F7A:	0184      	cmp        al, #+0x1
   58F7B:	0100      	**prefx    0x1
   58F7C:	11F0      	bne        +0x111 <.LFB6+0x192:0x5908D[p]>
   58F7D:	261B      	ld         x, @(+0x26, y)
   58F7E:	0016      	ld         al, @(0x0, x)
   58F7F:	0284      	cmp        al, #+0x2
   58F80:	0100      	**prefx    0x1
   58F81:	0CF0      	bne        +0x10C <.LFB6+0x192:0x5908D[p]>
   58F82:	DA00      	**prefx    0xDA
   58F83:	CA99      	tst        @0xD9CA <___libgatt_lib_db_2022+0x54>
   58F84:	0100      	**prefx    0x1
   58F85:	06F4      	beq        +0x106 <.LFB6+0x190:0x5908B[p]>
   58F86:	6A00      	**prefx    0x6A
   58F87:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58F88:	0010      	ld         ah, #+0x0
   58F89:	4200      	**prefx    0x42
   58F8A:	CB34      	add        al, #+0x41CB
   58F8B:	0140      	addc       ah, #+0x1
   58F8C:	FE27      	st         al, @(-0x2, y)
   58F8D:	FF23      	st         ah, @(-0x1, y)
   58F8E:	E419      	ld         x, @0xFFE4 <register uy>
   58F8F:	0438      	add        x, #+0x4
   58F90:	002B      	st         x, @(0x0, y)
   58F91:	0114      	ld         al, #+0x1
   58F92:	0110      	ld         ah, #+0x1
   58F93:	FF0E      	ld         xh, @(-0x1, y)
   58F94:	FE9F      	bsr        @(-0x2, y)
   58F95:	0417      	ld         al, @(+0x4, y)
   58F96:	FF00      	**prefx    0xFF
   58F97:	219C      	bsr        -0xDF <___libgatt_lib_db_5649:0x58EB8[p]>
   58F98:	FB00      	**prefx    0xFB
   58F99:	2215      	ld         al, @0xFB22 <___libgatt_lib_db_2648>
   58F9A:	08C4      	and        al, #0x8
   58F9B:	04F4      	beq        +0x4 <.LFB6+0xA4:0x58F9F[p]>
   58F9C:	2000      	**prefx    0x20
   58F9D:	F014      	ld         al, #+0x1FF0
   58F9E:	03E0      	bra        +0x3 <.LFB6+0xA6:0x58FA1[p]>
   58F9F:	2000      	**prefx    0x20
   58FA0:	F114      	ld         al, #+0x1FF1
   58FA1:	FB00      	**prefx    0xFB
   58FA2:	1D25      	st         al, @0xFB1D <___libgatt_lib_db_2609>
   58FA3:	0A00      	**prefx    0xA
   58FA4:	FF18      	ld         x, #+0x9FF
   58FA5:	FB00      	**prefx    0xFB
   58FA6:	1C29      	st         x, @0xFB1C <___libgatt_lib_db_2608>
   58FA7:	041B      	ld         x, @(+0x4, y)
   58FA8:	6D00      	**prefx    0x6D
   58FA9:	DA15      	ld         al, @0x6CDA <last_cal_temperature>
   58FAA:	E355      	sub        al, @0xFFE3 <register uxl>
   58FAB:	E199      	tst        @0xFFE1 <register al>
   58FAC:	02E8      	bpl        +0x2 <.LFB6+0xB3:0x58FAE[p]>
   58FAD:	0074      	nadd       al, #+0x0
   58FAE:	1884      	cmp        al, #+0x18
   58FAF:	5428      	ble        +0x54 <.LFB6+0x108:0x59003[p]>
   58FB0:	6D00      	**prefx    0x6D
   58FB1:	DA29      	st         x, @0x6CDA <last_cal_temperature>
   58FB2:	6A00      	**prefx    0x6A
   58FB3:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58FB4:	0010      	ld         ah, #+0x0
   58FB5:	5300      	**prefx    0x53
   58FB6:	AE34      	add        al, #+0x52AE
   58FB7:	0140      	addc       ah, #+0x1
   58FB8:	FE27      	st         al, @(-0x2, y)
   58FB9:	FF23      	st         ah, @(-0x1, y)
   58FBA:	0014      	ld         al, #+0x0
   58FBB:	FF0E      	ld         xh, @(-0x1, y)
   58FBC:	FE9F      	bsr        @(-0x2, y)
   58FBD:	0014      	ld         al, #+0x0
   58FBE:	FF00      	**prefx    0xFF
   58FBF:	DA9C      	bsr        -0x126 <___libgatt_lib_db_5648:0x58E99[p]>
   58FC0:	0314      	ld         al, #+0x3
   58FC1:	FB00      	**prefx    0xFB
   58FC2:	5625      	st         al, @0xFB56 <___libgatt_lib_db_4241>
   58FC3:	0018      	ld         x, #+0x0
   58FC4:	FB00      	**prefx    0xFB
   58FC5:	5029      	st         x, @0xFB50 <___libgatt_lib_db_4235>
   58FC6:	6A00      	**prefx    0x6A
   58FC7:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58FC8:	0010      	ld         ah, #+0x0
   58FC9:	C400      	**prefx    0xC4
   58FCA:	EF34      	add        al, #-0x3C11
   58FCB:	0040      	addc       ah, #+0x0
   58FCC:	1927      	st         al, @(+0x19, y)
   58FCD:	1823      	st         ah, @(+0x18, y)
   58FCE:	0114      	ld         al, #+0x1
   58FCF:	0027      	st         al, @(0x0, y)
   58FD0:	5800      	**prefx    0x58
   58FD1:	7A18      	ld         x, #+0x587A
   58FD2:	012B      	st         x, @(+0x1, y)
   58FD3:	8F00      	**prefx    0x8F
   58FD4:	EF14      	ld         al, #-0x7111
   58FD5:	0327      	st         al, @(+0x3, y)
   58FD6:	0518      	ld         x, #+0x5
   58FD7:	022B      	st         x, @(+0x2, y)
   58FD8:	0314      	ld         al, #+0x3
   58FD9:	0110      	ld         ah, #+0x1
   58FDA:	180E      	ld         xh, @(+0x18, y)
   58FDB:	199F      	bsr        @(+0x19, y)
   58FDC:	6A00      	**prefx    0x6A
   58FDD:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58FDE:	0010      	ld         ah, #+0x0
   58FDF:	5800      	**prefx    0x58
   58FE0:	4F34      	add        al, #+0x584F
   58FE1:	0140      	addc       ah, #+0x1
   58FE2:	1B27      	st         al, @(+0x1B, y)
   58FE3:	1A23      	st         ah, @(+0x1A, y)
   58FE4:	DA00      	**prefx    0xDA
   58FE5:	BA14      	ld         al, #-0x2646
   58FE6:	1A0E      	ld         xh, @(+0x1A, y)
   58FE7:	1B9F      	bsr        @(+0x1B, y)
   58FE8:	6A00      	**prefx    0x6A
   58FE9:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58FEA:	0010      	ld         ah, #+0x0
   58FEB:	5400      	**prefx    0x54
   58FEC:	4B34      	add        al, #+0x544B
   58FED:	0140      	addc       ah, #+0x1
   58FEE:	1D27      	st         al, @(+0x1D, y)
   58FEF:	1C23      	st         ah, @(+0x1C, y)
   58FF0:	DA00      	**prefx    0xDA
   58FF1:	BA14      	ld         al, #-0x2646
   58FF2:	1C0E      	ld         xh, @(+0x1C, y)
   58FF3:	1D9F      	bsr        @(+0x1D, y)
   58FF4:	6A00      	**prefx    0x6A
   58FF5:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   58FF6:	0010      	ld         ah, #+0x0
   58FF7:	5300      	**prefx    0x53
   58FF8:	AE34      	add        al, #+0x52AE
   58FF9:	0140      	addc       ah, #+0x1
   58FFA:	1F27      	st         al, @(+0x1F, y)
   58FFB:	1E23      	st         ah, @(+0x1E, y)
   58FFC:	0114      	ld         al, #+0x1
   58FFD:	1E0E      	ld         xh, @(+0x1E, y)
   58FFE:	1F9F      	bsr        @(+0x1F, y)
   58FFF:	0C00      	**prefx    0xC
   59000:	0314      	ld         al, #+0xC03
   59001:	0100      	**prefx    0x1
   59002:	99E0      	bra        +0x99 <.LFB6+0x1A0:0x5909B[p]>
   59003:	6D00      	**prefx    0x6D
   59004:	DC15      	ld         al, @0x6CDC <last_cal_temperature+0x2>
   59005:	E355      	sub        al, @0xFFE3 <register uxl>
   59006:	E199      	tst        @0xFFE1 <register al>
   59007:	02E8      	bpl        +0x2 <.LFB6+0x10E:0x59009[p]>
   59008:	0074      	nadd       al, #+0x0
   59009:	0784      	cmp        al, #+0x7
   5900A:	1028      	ble        +0x10 <.LFB6+0x11F:0x5901A[p]>
   5900B:	6D00      	**prefx    0x6D
   5900C:	DC29      	st         x, @0x6CDC <last_cal_temperature+0x2>
   5900D:	6A00      	**prefx    0x6A
   5900E:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5900F:	0010      	ld         ah, #+0x0
   59010:	5500      	**prefx    0x55
   59011:	4434      	add        al, #+0x5544
   59012:	0140      	addc       ah, #+0x1
   59013:	FE27      	st         al, @(-0x2, y)
   59014:	FF23      	st         ah, @(-0x1, y)
   59015:	DA00      	**prefx    0xDA
   59016:	BA14      	ld         al, #-0x2646
   59017:	E311      	ld         ah, @0xFFE3 <register uxl>
   59018:	FF0E      	ld         xh, @(-0x1, y)
   59019:	FE9F      	bsr        @(-0x2, y)
   5901A:	041B      	ld         x, @(+0x4, y)
   5901B:	6D00      	**prefx    0x6D
   5901C:	DB15      	ld         al, @0x6CDB <last_cal_temperature+0x1>
   5901D:	E355      	sub        al, @0xFFE3 <register uxl>
   5901E:	E199      	tst        @0xFFE1 <register al>
   5901F:	02E8      	bpl        +0x2 <.LFB6+0x126:0x59021[p]>
   59020:	0074      	nadd       al, #+0x0
   59021:	0784      	cmp        al, #+0x7
   59022:	2628      	ble        +0x26 <.LFB6+0x14D:0x59048[p]>
   59023:	6D00      	**prefx    0x6D
   59024:	DB29      	st         x, @0x6CDB <last_cal_temperature+0x1>
   59025:	6A00      	**prefx    0x6A
   59026:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59027:	0010      	ld         ah, #+0x0
   59028:	5B00      	**prefx    0x5B
   59029:	D334      	add        al, #+0x5AD3
   5902A:	0140      	addc       ah, #+0x1
   5902B:	FE27      	st         al, @(-0x2, y)
   5902C:	FF23      	st         ah, @(-0x1, y)
   5902D:	E315      	ld         al, @0xFFE3 <register uxl>
   5902E:	FF0E      	ld         xh, @(-0x1, y)
   5902F:	FE9F      	bsr        @(-0x2, y)
   59030:	F100      	**prefx    0xF1
   59031:	C915      	ld         al, @0xF0C9 <___libgatt_lib_db_2504>
   59032:	8800      	**prefx    0x88
   59033:	FFC4      	and        al, #0x87FF
   59034:	3800      	**prefx    0x38
   59035:	00B4      	or         al, #+0x3800
   59036:	F100      	**prefx    0xF1
   59037:	C925      	st         al, @0xF0C9 <___libgatt_lib_db_2504>
   59038:	D200      	**prefx    0xD2
   59039:	3418      	ld         x, #-0x2DCC
   5903A:	D200      	**prefx    0xD2
   5903B:	4A15      	ld         al, @0xD24A <___libgatt_lib_db_1989+0x3A>
   5903C:	8800      	**prefx    0x88
   5903D:	FFC4      	and        al, #0x87FF
   5903E:	3800      	**prefx    0x38
   5903F:	00B4      	or         al, #+0x3800
   59040:	1626      	st         al, @(+0x16, x)
   59041:	D200      	**prefx    0xD2
   59042:	3A15      	ld         al, @0xD23A <___libgatt_lib_db_1989+0x2A>
   59043:	8800      	**prefx    0x88
   59044:	FFC4      	and        al, #0x87FF
   59045:	3800      	**prefx    0x38
   59046:	00B4      	or         al, #+0x3800
   59047:	0626      	st         al, @(+0x6, x)
   59048:	0413      	ld         ah, @(+0x4, y)
   59049:	6D00      	**prefx    0x6D
   5904A:	DD15      	ld         al, @0x6CDD <last_cal_temperature+0x3>
   5904B:	E055      	sub        al, @0xFFE0 <register ah>
   5904C:	E199      	tst        @0xFFE1 <register al>
   5904D:	02E8      	bpl        +0x2 <.LFB6+0x154:0x5904F[p]>
   5904E:	0074      	nadd       al, #+0x0
   5904F:	0984      	cmp        al, #+0x9
   59050:	2B28      	ble        +0x2B <.LFB6+0x180:0x5907B[p]>
   59051:	6D00      	**prefx    0x6D
   59052:	DD21      	st         ah, @0x6CDD <last_cal_temperature+0x3>
   59053:	6A00      	**prefx    0x6A
   59054:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59055:	0010      	ld         ah, #+0x0
   59056:	5300      	**prefx    0x53
   59057:	AE34      	add        al, #+0x52AE
   59058:	0140      	addc       ah, #+0x1
   59059:	FE27      	st         al, @(-0x2, y)
   5905A:	FF23      	st         ah, @(-0x1, y)
   5905B:	0014      	ld         al, #+0x0
   5905C:	FF0E      	ld         xh, @(-0x1, y)
   5905D:	FE9F      	bsr        @(-0x2, y)
   5905E:	0114      	ld         al, #+0x1
   5905F:	FE00      	**prefx    0xFE
   59060:	399C      	bsr        -0x1C7 <___libgatt_lib_db_5648:0x58E99[p]>
   59061:	DA00      	**prefx    0xDA
   59062:	BA14      	ld         al, #-0x2646
   59063:	0413      	ld         ah, @(+0x4, y)
   59064:	FB00      	**prefx    0xFB
   59065:	9D9C      	bsr        -0x563 <___libgatt_lib_db_5634:0x58B02[p]>
   59066:	6A00      	**prefx    0x6A
   59067:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59068:	0010      	ld         ah, #+0x0
   59069:	5D00      	**prefx    0x5D
   5906A:	2834      	add        al, #+0x5D28
   5906B:	0140      	addc       ah, #+0x1
   5906C:	2127      	st         al, @(+0x21, y)
   5906D:	2023      	st         ah, @(+0x20, y)
   5906E:	200E      	ld         xh, @(+0x20, y)
   5906F:	219F      	bsr        @(+0x21, y)
   59070:	6A00      	**prefx    0x6A
   59071:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59072:	0010      	ld         ah, #+0x0
   59073:	5300      	**prefx    0x53
   59074:	AE34      	add        al, #+0x52AE
   59075:	0140      	addc       ah, #+0x1
   59076:	2327      	st         al, @(+0x23, y)
   59077:	2223      	st         ah, @(+0x22, y)
   59078:	0114      	ld         al, #+0x1
   59079:	220E      	ld         xh, @(+0x22, y)
   5907A:	239F      	bsr        @(+0x23, y)
   5907B:	0413      	ld         ah, @(+0x4, y)
   5907C:	6D00      	**prefx    0x6D
   5907D:	DE15      	ld         al, @0x6CDE <last_cal_temperature+0x4>
   5907E:	E055      	sub        al, @0xFFE0 <register ah>
   5907F:	E199      	tst        @0xFFE1 <register al>
   59080:	02E8      	bpl        +0x2 <.LFB6+0x187:0x59082[p]>
   59081:	0074      	nadd       al, #+0x0
   59082:	1384      	cmp        al, #+0x13
   59083:	0420      	bgt        +0x4 <.LFB6+0x18C:0x59087[p]>
   59084:	0018      	ld         x, #+0x0
   59085:	112B      	st         x, @(+0x11, y)
   59086:	16E0      	bra        +0x16 <.LFB6+0x1A1:0x5909C[p]>
   59087:	6D00      	**prefx    0x6D
   59088:	DE21      	st         ah, @0x6CDE <last_cal_temperature+0x4>
   59089:	FD00      	**prefx    0xFD
   5908A:	6C9C      	bsr        -0x294 <___libgatt_lib_db_5641:0x58DF6[p]>
   5908B:	0014      	ld         al, #+0x0
   5908C:	0FE0      	bra        +0xF <.LFB6+0x1A0:0x5909B[p]>
   5908D:	6A00      	**prefx    0x6A
   5908E:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5908F:	0010      	ld         ah, #+0x0
   59090:	5F00      	**prefx    0x5F
   59091:	DB34      	add        al, #+0x5EDB
   59092:	0140      	addc       ah, #+0x1
   59093:	FE27      	st         al, @(-0x2, y)
   59094:	FF23      	st         ah, @(-0x1, y)
   59095:	261B      	ld         x, @(+0x26, y)
   59096:	002B      	st         x, @(0x0, y)
   59097:	1217      	ld         al, @(+0x12, y)
   59098:	1313      	ld         ah, @(+0x13, y)
   59099:	FF0E      	ld         xh, @(-0x1, y)
   5909A:	FE9F      	bsr        @(-0x2, y)
   5909B:	1127      	st         al, @(+0x11, y)
   5909C:	0014      	ld         al, #+0x0
   5909D:	E411      	ld         ah, @0xFFE4 <register uy>
   5909E:	0530      	add        ah, #+0x5
   5909F:	EE00      	**prefx    0xEE
   590A0:	359C      	bsr        -0x11CB <___libgatt_lib_db_5548:0x57ED5[p]>
   590A1:	0114      	ld         al, #+0x1
   590A2:	E411      	ld         ah, @0xFFE4 <register uy>
   590A3:	0830      	add        ah, #+0x8
   590A4:	EE00      	**prefx    0xEE
   590A5:	309C      	bsr        -0x11D0 <___libgatt_lib_db_5548:0x57ED5[p]>
   590A6:	0214      	ld         al, #+0x2
   590A7:	E411      	ld         ah, @0xFFE4 <register uy>
   590A8:	0B30      	add        ah, #+0xB
   590A9:	EE00      	**prefx    0xEE
   590AA:	2B9C      	bsr        -0x11D5 <___libgatt_lib_db_5548:0x57ED5[p]>
   590AB:	0314      	ld         al, #+0x3
   590AC:	E411      	ld         ah, @0xFFE4 <register uy>
   590AD:	0E30      	add        ah, #+0xE
   590AE:	EE00      	**prefx    0xEE
   590AF:	269C      	bsr        -0x11DA <___libgatt_lib_db_5548:0x57ED5[p]>
   590B0:	03E0      	bra        +0x3 <.LFB6+0x1B8:0x590B3[p]>
   590B1:	0014      	ld         al, #+0x0
   590B2:	1127      	st         al, @(+0x11, y)
   590B3:	1117      	ld         al, @(+0x11, y)
   590B4:	DA0F      	leave      #-0x26

0x000590B5 <.LFB5>:
   590B5:	FB0B      	enter      #-0x5
   590B6:	F925      	st         al, @0xFFF9 <(scratchpad)>
   590B7:	0223      	st         ah, @(+0x2, y)
   590B8:	0517      	ld         al, @(+0x5, y)
   590B9:	F825      	st         al, @0xFFF8 <(scratchpad)>
   590BA:	E019      	ld         x, @0xFFE0 <register ah>
   590BB:	F238      	add        x, #-0xE
   590BC:	0588      	cmp        x, #+0x5
   590BD:	22F8      	bcc        +0x22 <.JTBASE46+0x1E:0x590DF[p]>
   590BE:	A400      	**prefx    0xA4
   590BF:	AB1A      	ld         x, @(-0x5C55, x)
   590C0:	FE09      	brxl       

0x000590C1 <.JTBASE46>:
   590C1:	E119      	ld         x, @0xFFE1 <register al>
   590C2:	001A      	ld         x, @(0x0, x)
   590C3:	6D00      	**prefx    0x6D
   590C4:	D429      	st         x, @0x6CD4 <bleradio_config_xtal_board_offset>
   590C5:	17E0      	bra        +0x17 <.JTBASE46+0x1B:0x590DC[p]>
   590C6:	E119      	ld         x, @0xFFE1 <register al>
   590C7:	001A      	ld         x, @(0x0, x)
   590C8:	6D00      	**prefx    0x6D
   590C9:	D329      	st         x, @0x6CD3 <bleradio_config_min_ico_freq_mhz>
   590CA:	12E0      	bra        +0x12 <.JTBASE46+0x1B:0x590DC[p]>
   590CB:	E119      	ld         x, @0xFFE1 <register al>
   590CC:	001A      	ld         x, @(0x0, x)
   590CD:	6D00      	**prefx    0x6D
   590CE:	D929      	st         x, @0x6CD9 <bleradio_config_pshift_ibias>
   590CF:	0DE0      	bra        +0xD <.JTBASE46+0x1B:0x590DC[p]>
   590D0:	0314      	ld         al, #+0x3
   590D1:	6D00      	**prefx    0x6D
   590D2:	D510      	ld         ah, #+0x6CD5
   590D3:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   590D4:	FD09      	bc2        
   590D5:	0018      	ld         x, #+0x0
   590D6:	012B      	st         x, @(+0x1, y)
   590D7:	1EE0      	bra        +0x1E <.JTBASE46+0x34:0x590F5[p]>
   590D8:	E119      	ld         x, @0xFFE1 <register al>
   590D9:	001A      	ld         x, @(0x0, x)
   590DA:	6A00      	**prefx    0x6A
   590DB:	2129      	st         x, @0x6A21 <bleradio_package_type>
   590DC:	0014      	ld         al, #+0x0
   590DD:	0127      	st         al, @(+0x1, y)
   590DE:	17E0      	bra        +0x17 <.JTBASE46+0x34:0x590F5[p]>
   590DF:	6A00      	**prefx    0x6A
   590E0:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   590E1:	0010      	ld         ah, #+0x0
   590E2:	5F00      	**prefx    0x5F
   590E3:	1F34      	add        al, #+0x5F1F
   590E4:	0140      	addc       ah, #+0x1
   590E5:	FE27      	st         al, @(-0x2, y)
   590E6:	FF23      	st         ah, @(-0x1, y)
   590E7:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   590E8:	002B      	st         x, @(0x0, y)
   590E9:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   590EA:	0213      	ld         ah, @(+0x2, y)
   590EB:	FF0E      	ld         xh, @(-0x1, y)
   590EC:	FE9F      	bsr        @(-0x2, y)
   590ED:	0127      	st         al, @(+0x1, y)
   590EE:	0217      	ld         al, @(+0x2, y)
   590EF:	0284      	cmp        al, #+0x2
   590F0:	05F0      	bne        +0x5 <.JTBASE46+0x34:0x590F5[p]>
   590F1:	DA00      	**prefx    0xDA
   590F2:	BC15      	ld         al, @0xD9BC <___libgatt_lib_db_2022+0x46>
   590F3:	FA00      	**prefx    0xFA
   590F4:	C69C      	bsr        -0x63A <___libgatt_lib_db_5623:0x58ABA[p]>
   590F5:	0117      	ld         al, @(+0x1, y)
   590F6:	FB0F      	leave      #-0x5

0x000590F7 <___libgatt_lib_db_5653>:
   590F7:	0317      	ld         al, @(+0x3, y)
   590F8:	0584      	cmp        al, #+0x5
   590F9:	07F0      	bne        +0x7 <___libgatt_lib_db_5653+0x9:0x59100[p]>
   590FA:	0514      	ld         al, #+0x5
   590FB:	0B27      	st         al, @(+0xB, y)
   590FC:	9100      	**prefx    0x91
   590FD:	2614      	ld         al, #-0x6EDA
   590FE:	0A27      	st         al, @(+0xA, y)
   590FF:	00E2      	bra        0x0, x
   59100:	0D84      	cmp        al, #+0xD
   59101:	06F0      	bne        +0x6 <___libgatt_lib_db_5653+0x10:0x59107[p]>
   59102:	0514      	ld         al, #+0x5
   59103:	0B27      	st         al, @(+0xB, y)
   59104:	9200      	**prefx    0x92
   59105:	FF14      	ld         al, #-0x6E01
   59106:	0A27      	st         al, @(+0xA, y)
   59107:	00E2      	bra        0x0, x

0x00059108 <___libgatt_lib_db_5656>:
   59108:	FB0B      	enter      #-0x5
   59109:	6A00      	**prefx    0x6A
   5910A:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5910B:	0010      	ld         ah, #+0x0
   5910C:	1100      	**prefx    0x11
   5910D:	5434      	add        al, #+0x1154
   5910E:	0140      	addc       ah, #+0x1
   5910F:	FE27      	st         al, @(-0x2, y)
   59110:	FF23      	st         ah, @(-0x1, y)
   59111:	FF0E      	ld         xh, @(-0x1, y)
   59112:	FE9F      	bsr        @(-0x2, y)
   59113:	E100      	**prefx    0xE1
   59114:	7115      	ld         al, @0xE171 <pending_fg_n_messages>
   59115:	0027      	st         al, @(0x0, y)
   59116:	6A00      	**prefx    0x6A
   59117:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59118:	0010      	ld         ah, #+0x0
   59119:	1100      	**prefx    0x11
   5911A:	5D34      	add        al, #+0x115D
   5911B:	0140      	addc       ah, #+0x1
   5911C:	0227      	st         al, @(+0x2, y)
   5911D:	0123      	st         ah, @(+0x1, y)
   5911E:	010E      	ld         xh, @(+0x1, y)
   5911F:	029F      	bsr        @(+0x2, y)
   59120:	0014      	ld         al, #+0x0
   59121:	001B      	ld         x, @(0x0, y)
   59122:	0588      	cmp        x, #+0x5
   59123:	02F8      	bcc        +0x2 <___libgatt_lib_db_5656+0x1D:0x59125[p]>
   59124:	0114      	ld         al, #+0x1
   59125:	FB0F      	leave      #-0x5

0x00059126 <.LFB4>:
   59126:	FC0B      	enter      #-0x4
   59127:	0127      	st         al, @(+0x1, y)
   59128:	0100      	**prefx    0x1
   59129:	CFF4      	beq        +0xCF <.LFB4+0xD2:0x591F8[p]>
   5912A:	071B      	ld         x, @(+0x7, y)
   5912B:	0316      	ld         al, @(+0x3, x)
   5912C:	0200      	**prefx    0x2
   5912D:	0184      	cmp        al, #+0x201
   5912E:	0100      	**prefx    0x1
   5912F:	C9F0      	bne        +0xC9 <.LFB4+0xD2:0x591F8[p]>
   59130:	0516      	ld         al, @(+0x5, x)
   59131:	6984      	cmp        al, #+0x69
   59132:	5FF4      	beq        +0x5F <.LFB4+0x6B:0x59191[p]>
   59133:	6A84      	cmp        al, #+0x6A
   59134:	09F8      	bcc        +0x9 <.LFB4+0x17:0x5913D[p]>
   59135:	6684      	cmp        al, #+0x66
   59136:	3EF4      	beq        +0x3E <.LFB4+0x4E:0x59174[p]>
   59137:	6784      	cmp        al, #+0x67
   59138:	1CF4      	beq        +0x1C <.LFB4+0x2E:0x59154[p]>
   59139:	5384      	cmp        al, #+0x53
   5913A:	0100      	**prefx    0x1
   5913B:	BDF0      	bne        +0xBD <.LFB4+0xD2:0x591F8[p]>
   5913C:	0BE0      	bra        +0xB <.LFB4+0x21:0x59147[p]>
   5913D:	6C84      	cmp        al, #+0x6C
   5913E:	0100      	**prefx    0x1
   5913F:	8CF4      	beq        +0x8C <.LFB4+0xA5:0x591CB[p]>
   59140:	7384      	cmp        al, #+0x73
   59141:	0100      	**prefx    0x1
   59142:	A6F4      	beq        +0xA6 <.LFB4+0xC2:0x591E8[p]>
   59143:	6A84      	cmp        al, #+0x6A
   59144:	0100      	**prefx    0x1
   59145:	B3F0      	bne        +0xB3 <.LFB4+0xD2:0x591F8[p]>
   59146:	68E0      	bra        +0x68 <.LFB4+0x88:0x591AE[p]>
   59147:	6A00      	**prefx    0x6A
   59148:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59149:	0010      	ld         ah, #+0x0
   5914A:	D400      	**prefx    0xD4
   5914B:	5E34      	add        al, #-0x2BA2
   5914C:	0040      	addc       ah, #+0x0
   5914D:	FE27      	st         al, @(-0x2, y)
   5914E:	FF23      	st         ah, @(-0x1, y)
   5914F:	0014      	ld         al, #+0x0
   59150:	0027      	st         al, @(0x0, y)
   59151:	0514      	ld         al, #+0x5
   59152:	6710      	ld         ah, #+0x67
   59153:	1DE0      	bra        +0x1D <.LFB4+0x4A:0x59170[p]>
   59154:	049A      	tst        @(+0x4, x)
   59155:	0FF0      	bne        +0xF <.LFB4+0x3E:0x59164[p]>
   59156:	6A00      	**prefx    0x6A
   59157:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59158:	0010      	ld         ah, #+0x0
   59159:	5F00      	**prefx    0x5F
   5915A:	8934      	add        al, #+0x5E89
   5915B:	0140      	addc       ah, #+0x1
   5915C:	FE27      	st         al, @(-0x2, y)
   5915D:	FF23      	st         ah, @(-0x1, y)
   5915E:	0938      	add        x, #+0x9
   5915F:	002B      	st         x, @(0x0, y)
   59160:	0014      	ld         al, #+0x0
   59161:	0E10      	ld         ah, #+0xE
   59162:	FF0E      	ld         xh, @(-0x1, y)
   59163:	FE9F      	bsr        @(-0x2, y)
   59164:	6A00      	**prefx    0x6A
   59165:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59166:	0010      	ld         ah, #+0x0
   59167:	D400      	**prefx    0xD4
   59168:	5E34      	add        al, #-0x2BA2
   59169:	0040      	addc       ah, #+0x0
   5916A:	FE27      	st         al, @(-0x2, y)
   5916B:	FF23      	st         ah, @(-0x1, y)
   5916C:	0014      	ld         al, #+0x0
   5916D:	0027      	st         al, @(0x0, y)
   5916E:	0514      	ld         al, #+0x5
   5916F:	6610      	ld         ah, #+0x66
   59170:	FF0E      	ld         xh, @(-0x1, y)
   59171:	FE9F      	bsr        @(-0x2, y)
   59172:	0100      	**prefx    0x1
   59173:	85E0      	bra        +0x85 <.LFB4+0xD2:0x591F8[p]>
   59174:	049A      	tst        @(+0x4, x)
   59175:	0FF0      	bne        +0xF <.LFB4+0x5E:0x59184[p]>
   59176:	6A00      	**prefx    0x6A
   59177:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59178:	0010      	ld         ah, #+0x0
   59179:	5F00      	**prefx    0x5F
   5917A:	8934      	add        al, #+0x5E89
   5917B:	0140      	addc       ah, #+0x1
   5917C:	FE27      	st         al, @(-0x2, y)
   5917D:	FF23      	st         ah, @(-0x1, y)
   5917E:	0938      	add        x, #+0x9
   5917F:	002B      	st         x, @(0x0, y)
   59180:	0014      	ld         al, #+0x0
   59181:	0F10      	ld         ah, #+0xF
   59182:	FF0E      	ld         xh, @(-0x1, y)
   59183:	FE9F      	bsr        @(-0x2, y)
   59184:	6A00      	**prefx    0x6A
   59185:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59186:	0010      	ld         ah, #+0x0
   59187:	D400      	**prefx    0xD4
   59188:	5E34      	add        al, #-0x2BA2
   59189:	0040      	addc       ah, #+0x0
   5918A:	FE27      	st         al, @(-0x2, y)
   5918B:	FF23      	st         ah, @(-0x1, y)
   5918C:	0014      	ld         al, #+0x0
   5918D:	0027      	st         al, @(0x0, y)
   5918E:	0514      	ld         al, #+0x5
   5918F:	6910      	ld         ah, #+0x69
   59190:	E0E0      	bra        -0x20 <.LFB4+0x4A:0x59170[p]>
   59191:	049A      	tst        @(+0x4, x)
   59192:	0FF0      	bne        +0xF <.LFB4+0x7B:0x591A1[p]>
   59193:	6A00      	**prefx    0x6A
   59194:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59195:	0010      	ld         ah, #+0x0
   59196:	5F00      	**prefx    0x5F
   59197:	8934      	add        al, #+0x5E89
   59198:	0140      	addc       ah, #+0x1
   59199:	FE27      	st         al, @(-0x2, y)
   5919A:	FF23      	st         ah, @(-0x1, y)
   5919B:	0938      	add        x, #+0x9
   5919C:	002B      	st         x, @(0x0, y)
   5919D:	0014      	ld         al, #+0x0
   5919E:	1010      	ld         ah, #+0x10
   5919F:	FF0E      	ld         xh, @(-0x1, y)
   591A0:	FE9F      	bsr        @(-0x2, y)
   591A1:	6A00      	**prefx    0x6A
   591A2:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   591A3:	0010      	ld         ah, #+0x0
   591A4:	D400      	**prefx    0xD4
   591A5:	5E34      	add        al, #-0x2BA2
   591A6:	0040      	addc       ah, #+0x0
   591A7:	FE27      	st         al, @(-0x2, y)
   591A8:	FF23      	st         ah, @(-0x1, y)
   591A9:	0014      	ld         al, #+0x0
   591AA:	0027      	st         al, @(0x0, y)
   591AB:	0514      	ld         al, #+0x5
   591AC:	6A10      	ld         ah, #+0x6A
   591AD:	C3E0      	bra        -0x3D <.LFB4+0x4A:0x59170[p]>
   591AE:	049A      	tst        @(+0x4, x)
   591AF:	0FF0      	bne        +0xF <.LFB4+0x98:0x591BE[p]>
   591B0:	6A00      	**prefx    0x6A
   591B1:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   591B2:	0010      	ld         ah, #+0x0
   591B3:	5F00      	**prefx    0x5F
   591B4:	8934      	add        al, #+0x5E89
   591B5:	0140      	addc       ah, #+0x1
   591B6:	FE27      	st         al, @(-0x2, y)
   591B7:	FF23      	st         ah, @(-0x1, y)
   591B8:	0938      	add        x, #+0x9
   591B9:	002B      	st         x, @(0x0, y)
   591BA:	0014      	ld         al, #+0x0
   591BB:	1110      	ld         ah, #+0x11
   591BC:	FF0E      	ld         xh, @(-0x1, y)
   591BD:	FE9F      	bsr        @(-0x2, y)
   591BE:	6A00      	**prefx    0x6A
   591BF:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   591C0:	0010      	ld         ah, #+0x0
   591C1:	D400      	**prefx    0xD4
   591C2:	5E34      	add        al, #-0x2BA2
   591C3:	0040      	addc       ah, #+0x0
   591C4:	FE27      	st         al, @(-0x2, y)
   591C5:	FF23      	st         ah, @(-0x1, y)
   591C6:	0014      	ld         al, #+0x0
   591C7:	0027      	st         al, @(0x0, y)
   591C8:	0514      	ld         al, #+0x5
   591C9:	6C10      	ld         ah, #+0x6C
   591CA:	A6E0      	bra        -0x5A <.LFB4+0x4A:0x59170[p]>
   591CB:	049A      	tst        @(+0x4, x)
   591CC:	0FF0      	bne        +0xF <.LFB4+0xB5:0x591DB[p]>
   591CD:	6A00      	**prefx    0x6A
   591CE:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   591CF:	0010      	ld         ah, #+0x0
   591D0:	5F00      	**prefx    0x5F
   591D1:	8934      	add        al, #+0x5E89
   591D2:	0140      	addc       ah, #+0x1
   591D3:	FE27      	st         al, @(-0x2, y)
   591D4:	FF23      	st         ah, @(-0x1, y)
   591D5:	0938      	add        x, #+0x9
   591D6:	002B      	st         x, @(0x0, y)
   591D7:	0014      	ld         al, #+0x0
   591D8:	1210      	ld         ah, #+0x12
   591D9:	FF0E      	ld         xh, @(-0x1, y)
   591DA:	FE9F      	bsr        @(-0x2, y)
   591DB:	6A00      	**prefx    0x6A
   591DC:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   591DD:	0010      	ld         ah, #+0x0
   591DE:	D400      	**prefx    0xD4
   591DF:	5E34      	add        al, #-0x2BA2
   591E0:	0040      	addc       ah, #+0x0
   591E1:	FE27      	st         al, @(-0x2, y)
   591E2:	FF23      	st         ah, @(-0x1, y)
   591E3:	0014      	ld         al, #+0x0
   591E4:	0027      	st         al, @(0x0, y)
   591E5:	0514      	ld         al, #+0x5
   591E6:	7310      	ld         ah, #+0x73
   591E7:	89E0      	bra        -0x77 <.LFB4+0x4A:0x59170[p]>
   591E8:	049A      	tst        @(+0x4, x)
   591E9:	0FF0      	bne        +0xF <.LFB4+0xD2:0x591F8[p]>
   591EA:	6A00      	**prefx    0x6A
   591EB:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   591EC:	0010      	ld         ah, #+0x0
   591ED:	5F00      	**prefx    0x5F
   591EE:	8934      	add        al, #+0x5E89
   591EF:	0140      	addc       ah, #+0x1
   591F0:	FE27      	st         al, @(-0x2, y)
   591F1:	FF23      	st         ah, @(-0x1, y)
   591F2:	0938      	add        x, #+0x9
   591F3:	002B      	st         x, @(0x0, y)
   591F4:	0014      	ld         al, #+0x0
   591F5:	0C10      	ld         ah, #+0xC
   591F6:	FF0E      	ld         xh, @(-0x1, y)
   591F7:	FE9F      	bsr        @(-0x2, y)
   591F8:	0014      	ld         al, #+0x0
   591F9:	0327      	st         al, @(+0x3, y)
   591FA:	A900      	**prefx    0xA9
   591FB:	C014      	ld         al, #-0x5740
   591FC:	0227      	st         al, @(+0x2, y)
   591FD:	0117      	ld         al, @(+0x1, y)
   591FE:	FC0F      	leave      #-0x4

0x000591FF <.LFB5>:
   591FF:	FE0B      	enter      #-0x2
   59200:	F825      	st         al, @0xFFF8 <(scratchpad)>
   59201:	1AF4      	beq        +0x1A <.LFB5+0x1C:0x5921B[p]>
   59202:	0913      	ld         ah, @(+0x9, y)
   59203:	E019      	ld         x, @0xFFE0 <register ah>
   59204:	0316      	ld         al, @(+0x3, x)
   59205:	0200      	**prefx    0x2
   59206:	0184      	cmp        al, #+0x201
   59207:	14F0      	bne        +0x14 <.LFB5+0x1C:0x5921B[p]>
   59208:	0516      	ld         al, @(+0x5, x)
   59209:	6484      	cmp        al, #+0x64
   5920A:	11F0      	bne        +0x11 <.LFB5+0x1C:0x5921B[p]>
   5920B:	049A      	tst        @(+0x4, x)
   5920C:	0FF0      	bne        +0xF <.LFB5+0x1C:0x5921B[p]>
   5920D:	FB00      	**prefx    0xFB
   5920E:	2A15      	ld         al, @0xFB2A <___libgatt_lib_db_2671>
   5920F:	F925      	st         al, @0xFFF9 <(scratchpad)>
   59210:	0912      	ld         ah, @(+0x9, x)
   59211:	0009      	**unsigned
   59212:	01A4      	lsr        #0x1
   59213:	E015      	ld         al, @0xFFE0 <register ah>
   59214:	08A0      	asl        #0x8
   59215:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   59216:	0100      	**prefx    0x1
   59217:	FFC8      	and        x, #0xFF
   59218:	E3B5      	or         al, @0xFFE3 <register uxl>
   59219:	FB00      	**prefx    0xFB
   5921A:	2A25      	st         al, @0xFB2A <___libgatt_lib_db_2671>
   5921B:	0014      	ld         al, #+0x0
   5921C:	0127      	st         al, @(+0x1, y)
   5921D:	E500      	**prefx    0xE5
   5921E:	B018      	ld         x, #-0x1B50
   5921F:	002B      	st         x, @(0x0, y)
   59220:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   59221:	FE0F      	leave      #-0x2

0x00059222 <___libgatt_lib_db_5658>:
   59222:	FD0B      	enter      #-0x3
   59223:	0027      	st         al, @(0x0, y)
   59224:	FB00      	**prefx    0xFB
   59225:	7F00      	**prefx    0x7F
   59226:	2E9C      	bsr        -0x480D2 <___libgatt_lib_db_4375:0x11154[p]>
   59227:	0114      	ld         al, #+0x1
   59228:	001B      	ld         x, @(0x0, y)
   59229:	6A00      	**prefx    0x6A
   5922A:	2226      	st         al, @(+0x6A22, x)
   5922B:	FB00      	**prefx    0xFB
   5922C:	7F00      	**prefx    0x7F
   5922D:	309C      	bsr        -0x480D0 <___libgatt_lib_db_4382:0x1115D[p]>
   5922E:	0018      	ld         x, #+0x0
   5922F:	5929      	st         x, @0x59 <___libgatt_lib_db_2089>
   59230:	0214      	ld         al, #+0x2
   59231:	5925      	st         al, @0x59 <___libgatt_lib_db_2089>
   59232:	5929      	st         x, @0x59 <___libgatt_lib_db_2089>
   59233:	FD0F      	leave      #-0x3

0x00059234 <___libgatt_lib_db_5657>:
   59234:	FC0B      	enter      #-0x4
   59235:	9200      	**prefx    0x92
   59236:	4014      	ld         al, #-0x6DC0
   59237:	0127      	st         al, @(+0x1, y)
   59238:	0514      	ld         al, #+0x5
   59239:	0027      	st         al, @(0x0, y)
   5923A:	1A14      	ld         al, #+0x1A
   5923B:	0110      	ld         ah, #+0x1
   5923C:	FB00      	**prefx    0xFB
   5923D:	7F00      	**prefx    0x7F
   5923E:	2D9C      	bsr        -0x480D3 <___libgatt_lib_db_4376:0x1116B[p]>
   5923F:	FC0F      	leave      #-0x4

0x00059240 <.LFB4>:
   59240:	FA0B      	enter      #-0x6
   59241:	0114      	ld         al, #+0x1
   59242:	0027      	st         al, @(0x0, y)
   59243:	FB00      	**prefx    0xFB
   59244:	7F00      	**prefx    0x7F
   59245:	0F9C      	bsr        -0x480F1 <___libgatt_lib_db_4375:0x11154[p]>
   59246:	001B      	ld         x, @(0x0, y)
   59247:	6A00      	**prefx    0x6A
   59248:	211A      	ld         x, @(+0x6A21, x)
   59249:	012B      	st         x, @(+0x1, y)
   5924A:	0014      	ld         al, #+0x0
   5924B:	001B      	ld         x, @(0x0, y)
   5924C:	6A00      	**prefx    0x6A
   5924D:	2126      	st         al, @(+0x6A21, x)
   5924E:	FB00      	**prefx    0xFB
   5924F:	7F00      	**prefx    0x7F
   59250:	0D9C      	bsr        -0x480F3 <___libgatt_lib_db_4382:0x1115D[p]>
   59251:	019B      	tst        @(+0x1, y)
   59252:	0CF4      	beq        +0xC <.LFB4+0x1E:0x5925E[p]>
   59253:	0017      	ld         al, @(0x0, y)
   59254:	01A0      	asl        #0x1
   59255:	E119      	ld         x, @0xFFE1 <register al>
   59256:	A400      	**prefx    0xA4
   59257:	C516      	ld         al, @(-0x5C3B, x)
   59258:	0327      	st         al, @(+0x3, y)
   59259:	A400      	**prefx    0xA4
   5925A:	C41A      	ld         x, @(-0x5C3C, x)
   5925B:	022B      	st         x, @(+0x2, y)
   5925C:	020E      	ld         xh, @(+0x2, y)
   5925D:	039F      	bsr        @(+0x3, y)
   5925E:	001B      	ld         x, @(0x0, y)
   5925F:	0138      	add        x, #+0x1
   59260:	002B      	st         x, @(0x0, y)
   59261:	0488      	cmp        x, #+0x4
   59262:	E1F0      	bne        -0x1F <.LFB4+0x3:0x59243[p]>
   59263:	FC00      	**prefx    0xFC
   59264:	D800      	**prefx    0xD8
   59265:	099C      	bsr        -0x427F7 <___libgatt_lib_db_5383:0x16A6E[p]>
   59266:	FA0F      	leave      #-0x6

0x00059267 <___libgatt_lib_db_5661>:
   59267:	FC0B      	enter      #-0x4
   59268:	0127      	st         al, @(+0x1, y)
   59269:	E015      	ld         al, @0xFFE0 <register ah>
   5926A:	0113      	ld         ah, @(+0x1, y)
   5926B:	0130      	add        ah, #+0x1
   5926C:	0818      	ld         x, #+0x8
   5926D:	002B      	st         x, @(0x0, y)
   5926E:	FB00      	**prefx    0xFB
   5926F:	9900      	**prefx    0x99
   59270:	D89C      	bsr        -0x56728 <MemCopy:0x2B48[p]>
   59271:	0914      	ld         al, #+0x9
   59272:	0027      	st         al, @(0x0, y)
   59273:	0117      	ld         al, @(+0x1, y)
   59274:	0010      	ld         ah, #+0x0
   59275:	FB00      	**prefx    0xFB
   59276:	9900      	**prefx    0x99
   59277:	D99C      	bsr        -0x56727 <MemSet:0x2B50[p]>
   59278:	FC0F      	leave      #-0x4

0x00059279 <___libgatt_lib_db_5662>:
   59279:	FB0B      	enter      #-0x5
   5927A:	0127      	st         al, @(+0x1, y)
   5927B:	0223      	st         ah, @(+0x2, y)
   5927C:	0914      	ld         al, #+0x9
   5927D:	0027      	st         al, @(0x0, y)
   5927E:	0117      	ld         al, @(+0x1, y)
   5927F:	0010      	ld         ah, #+0x0
   59280:	FB00      	**prefx    0xFB
   59281:	9900      	**prefx    0x99
   59282:	CE9C      	bsr        -0x56732 <MemSet:0x2B50[p]>
   59283:	0217      	ld         al, @(+0x2, y)
   59284:	011B      	ld         x, @(+0x1, y)
   59285:	0026      	st         al, @(0x0, x)
   59286:	FB0F      	leave      #-0x5

0x00059287 <___libgatt_lib_db_5663>:
   59287:	FE0B      	enter      #-0x2
   59288:	F825      	st         al, @0xFFF8 <(scratchpad)>
   59289:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5928A:	F929      	st         x, @0xFFF9 <(scratchpad)>
   5928B:	0014      	ld         al, #+0x0
   5928C:	FA25      	st         al, @0xFFFA <(scratchpad)>
   5928D:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5928E:	0116      	ld         al, @(+0x1, x)
   5928F:	E019      	ld         x, @0xFFE0 <register ah>
   59290:	00D6      	xor        al, @(0x0, x)
   59291:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   59292:	0126      	st         al, @(+0x1, x)
   59293:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   59294:	0138      	add        x, #+0x1
   59295:	FA29      	st         x, @0xFFFA <(scratchpad)>
   59296:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   59297:	0134      	add        al, #+0x1
   59298:	F925      	st         al, @0xFFF9 <(scratchpad)>
   59299:	0130      	add        ah, #+0x1
   5929A:	0888      	cmp        x, #+0x8
   5929B:	F2F0      	bne        -0xE <___libgatt_lib_db_5663+0x6:0x5928D[p]>
   5929C:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5929D:	0016      	ld         al, @(0x0, x)
   5929E:	0138      	add        x, #+0x1
   5929F:	E311      	ld         ah, @0xFFE3 <register uxl>
   592A0:	001B      	ld         x, @(0x0, y)
   592A1:	023C      	add        y, #+0x2
   592A2:	FB00      	**prefx    0xFB
   592A3:	2700      	**prefx    0x27
   592A4:	BCE0      	bra        -0x4D944 <___libgatt_lib_db_1753:0xB960[p]>

0x000592A5 <___libgatt_lib_db_5452>:
   592A5:	F90B      	enter      #-0x7
   592A6:	1317      	ld         al, @(+0x13, y)
   592A7:	0027      	st         al, @(0x0, y)
   592A8:	E119      	ld         x, @0xFFE1 <register al>
   592A9:	0316      	ld         al, @(+0x3, x)
   592AA:	0900      	**prefx    0x9
   592AB:	0784      	cmp        al, #+0x907
   592AC:	0FF0      	bne        +0xF <___libgatt_lib_db_5452+0x16:0x592BB[p]>
   592AD:	FB00      	**prefx    0xFB
   592AE:	A000      	**prefx    0xA0
   592AF:	AA9C      	bsr        -0x56056 <___libgatt_lib_db_98:0x3259[p]>
   592B0:	0127      	st         al, @(+0x1, y)
   592B1:	03A0      	asl        #0x3
   592B2:	DA00      	**prefx    0xDA
   592B3:	6D34      	add        al, #-0x2593
   592B4:	FB00      	**prefx    0xFB
   592B5:	AF00      	**prefx    0xAF
   592B6:	259C      	bsr        -0x550DB <___libgatt_lib_db_333:0x41DB[p]>
   592B7:	0014      	ld         al, #+0x0
   592B8:	011B      	ld         x, @(+0x1, y)
   592B9:	6D00      	**prefx    0x6D
   592BA:	DF26      	st         al, @(+0x6CDF, x)
   592BB:	001B      	ld         x, @(0x0, y)
   592BC:	0316      	ld         al, @(+0x3, x)
   592BD:	0900      	**prefx    0x9
   592BE:	1784      	cmp        al, #+0x917
   592BF:	36F0      	bne        +0x36 <___libgatt_lib_db_5452+0x50:0x592F5[p]>
   592C0:	6D00      	**prefx    0x6D
   592C1:	E315      	ld         al, @0x6CE3 <stream_kick_reqd>
   592C2:	04F4      	beq        +0x4 <___libgatt_lib_db_5452+0x21:0x592C6[p]>
   592C3:	FF34      	add        al, #-0x1
   592C4:	6D00      	**prefx    0x6D
   592C5:	E325      	st         al, @0x6CE3 <stream_kick_reqd>
   592C6:	DD00      	**prefx    0xDD
   592C7:	1D15      	ld         al, @0xDD1D <stream_gatt_eg>
   592C8:	F825      	st         al, @0xFFF8 <(scratchpad)>
   592C9:	2CF4      	beq        +0x2C <___libgatt_lib_db_5452+0x50:0x592F5[p]>
   592CA:	E119      	ld         x, @0xFFE1 <register al>
   592CB:	0D16      	ld         al, @(+0xD, x)
   592CC:	0284      	cmp        al, #+0x2
   592CD:	28F0      	bne        +0x28 <___libgatt_lib_db_5452+0x50:0x592F5[p]>
   592CE:	0116      	ld         al, @(+0x1, x)
   592CF:	E119      	ld         x, @0xFFE1 <register al>
   592D0:	0412      	ld         ah, @(+0x4, x)
   592D1:	0009      	**unsigned
   592D2:	01A4      	lsr        #0x1
   592D3:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   592D4:	0716      	ld         al, @(+0x7, x)
   592D5:	E085      	cmp        al, @0xFFE0 <register ah>
   592D6:	1FF8      	bcc        +0x1F <___libgatt_lib_db_5452+0x50:0x592F5[p]>
   592D7:	0014      	ld         al, #+0x0
   592D8:	0D26      	st         al, @(+0xD, x)
   592D9:	6A00      	**prefx    0x6A
   592DA:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   592DB:	0010      	ld         ah, #+0x0
   592DC:	7F00      	**prefx    0x7F
   592DD:	1934      	add        al, #+0x7F19
   592DE:	0040      	addc       ah, #+0x0
   592DF:	FE27      	st         al, @(-0x2, y)
   592E0:	FF23      	st         ah, @(-0x1, y)
   592E1:	DD00      	**prefx    0xDD
   592E2:	1D15      	ld         al, @0xDD1D <stream_gatt_eg>
   592E3:	FF0E      	ld         xh, @(-0x1, y)
   592E4:	FE9F      	bsr        @(-0x2, y)
   592E5:	6A00      	**prefx    0x6A
   592E6:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   592E7:	DD00      	**prefx    0xDD
   592E8:	1D19      	ld         x, @0xDD1D <stream_gatt_eg>
   592E9:	0010      	ld         ah, #+0x0
   592EA:	8300      	**prefx    0x83
   592EB:	C234      	add        al, #-0x7D3E
   592EC:	0040      	addc       ah, #+0x0
   592ED:	0427      	st         al, @(+0x4, y)
   592EE:	0323      	st         ah, @(+0x3, y)
   592EF:	0116      	ld         al, @(+0x1, x)
   592F0:	0010      	ld         ah, #+0x0
   592F1:	030E      	ld         xh, @(+0x3, y)
   592F2:	049F      	bsr        @(+0x4, y)
   592F3:	0014      	ld         al, #+0x0
   592F4:	EA0F      	leave      #-0x16
   592F5:	F90F      	leave      #-0x7

0x000592F6 <___libgatt_lib_db_5458>:
   592F6:	FE0B      	enter      #-0x2
   592F7:	0C17      	ld         al, @(+0xC, y)
   592F8:	0B1B      	ld         x, @(+0xB, y)
   592F9:	0010      	ld         ah, #+0x0
   592FA:	10A0      	asl        #0x10
   592FB:	E3B5      	or         al, @0xFFE3 <register uxl>
   592FC:	E099      	tst        @0xFFE0 <register ah>
   592FD:	14F0      	bne        +0x14 <___libgatt_lib_db_5458+0x1B:0x59311[p]>
   592FE:	3C00      	**prefx    0x3C
   592FF:	AB84      	cmp        al, #+0x3BAB
   59300:	11F0      	bne        +0x11 <___libgatt_lib_db_5458+0x1B:0x59311[p]>
   59301:	DA00      	**prefx    0xDA
   59302:	5E15      	ld         al, @0xDA5E <encryption_procedure_data+0x5>
   59303:	0134      	add        al, #+0x1
   59304:	0690      	smult      #+0x6
   59305:	0434      	add        al, #+0x4
   59306:	DA00      	**prefx    0xDA
   59307:	5D91      	smult      @0xDA5D <encryption_procedure_data+0x4>
   59308:	2F00      	**prefx    0x2F
   59309:	E084      	cmp        al, #+0x2EE0
   5930A:	072C      	bcz        +0x7 <___libgatt_lib_db_5458+0x1B:0x59311[p]>
   5930B:	0A17      	ld         al, @(+0xA, y)
   5930C:	FB00      	**prefx    0xFB
   5930D:	A000      	**prefx    0xA0
   5930E:	0C9C      	bsr        -0x55FF4 <___libgatt_lib_db_99:0x331A[p]>
   5930F:	4214      	ld         al, #+0x42
   59310:	F30F      	leave      #-0xD
   59311:	FE0F      	leave      #-0x2

0x00059312 <___libgatt_lib_db_5461>:
   59312:	FE0B      	enter      #-0x2
   59313:	0317      	ld         al, @(+0x3, y)
   59314:	021B      	ld         x, @(+0x2, y)
   59315:	F829      	st         x, @0xFFF8 <(scratchpad)>
   59316:	051B      	ld         x, @(+0x5, y)
   59317:	021A      	ld         x, @(+0x2, x)
   59318:	0010      	ld         ah, #+0x0
   59319:	10A0      	asl        #0x10
   5931A:	F8B5      	or         al, @0xFFF8 <(scratchpad)>
   5931B:	E099      	tst        @0xFFE0 <register ah>
   5931C:	0BF0      	bne        +0xB <___libgatt_lib_db_5461+0x15:0x59327[p]>
   5931D:	5B00      	**prefx    0x5B
   5931E:	6A84      	cmp        al, #+0x5B6A
   5931F:	08F0      	bne        +0x8 <___libgatt_lib_db_5461+0x15:0x59327[p]>
   59320:	E399      	tst        @0xFFE3 <register uxl>
   59321:	06F0      	bne        +0x6 <___libgatt_lib_db_5461+0x15:0x59327[p]>
   59322:	0014      	ld         al, #+0x0
   59323:	0327      	st         al, @(+0x3, y)
   59324:	5C00      	**prefx    0x5C
   59325:	A818      	ld         x, #+0x5BA8
   59326:	022B      	st         x, @(+0x2, y)
   59327:	FE0F      	leave      #-0x2

0x00059328 <___libgatt_lib_db_5460>:
   59328:	FD0B      	enter      #-0x3
   59329:	071B      	ld         x, @(+0x7, y)
   5932A:	0C17      	ld         al, @(+0xC, y)
   5932B:	0012      	ld         ah, @(0x0, x)
   5932C:	0A00      	**prefx    0xA
   5932D:	0584      	cmp        al, #+0xA05
   5932E:	12F0      	bne        +0x12 <___libgatt_lib_db_5460+0x18:0x59340[p]>
   5932F:	E015      	ld         al, @0xFFE0 <register ah>
   59330:	0010      	ld         ah, #+0x0
   59331:	0009      	**unsigned
   59332:	0394      	udiv       #0x3
   59333:	0027      	st         al, @(0x0, y)
   59334:	FB00      	**prefx    0xFB
   59335:	9F00      	**prefx    0x9F
   59336:	4B9C      	bsr        -0x560B5 <___libgatt_lib_db_113:0x3281[p]>
   59337:	E199      	tst        @0xFFE1 <register al>
   59338:	08F0      	bne        +0x8 <___libgatt_lib_db_5460+0x18:0x59340[p]>
   59339:	001B      	ld         x, @(0x0, y)
   5933A:	6D00      	**prefx    0x6D
   5933B:	DF9A      	tst        @(+0x6CDF, x)
   5933C:	04F4      	beq        +0x4 <___libgatt_lib_db_5460+0x18:0x59340[p]>
   5933D:	0A00      	**prefx    0xA
   5933E:	0F14      	ld         al, #+0xA0F
   5933F:	0C27      	st         al, @(+0xC, y)
   59340:	FD0F      	leave      #-0x3

0x00059341 <___libgatt_lib_db_5465>:
   59341:	FE0B      	enter      #-0x2
   59342:	FE00      	**prefx    0xFE
   59343:	C59C      	bsr        -0x23B <___libgatt_lib_db_5656:0x59108[p]>
   59344:	E199      	tst        @0xFFE1 <register al>
   59345:	03F0      	bne        +0x3 <___libgatt_lib_db_5465+0x7:0x59348[p]>
   59346:	0014      	ld         al, #+0x0
   59347:	F70F      	leave      #-0x9
   59348:	FE0F      	leave      #-0x2

0x00059349 <___libgatt_lib_db_5467>:
   59349:	FA0B      	enter      #-0x6
   5934A:	0F17      	ld         al, @(+0xF, y)
   5934B:	0E1B      	ld         x, @(+0xE, y)
   5934C:	0010      	ld         ah, #+0x0
   5934D:	10A0      	asl        #0x10
   5934E:	E3B5      	or         al, @0xFFE3 <register uxl>
   5934F:	E099      	tst        @0xFFE0 <register ah>
   59350:	3FF0      	bne        +0x3F <___libgatt_lib_db_5467+0x46:0x5938F[p]>
   59351:	6B00      	**prefx    0x6B
   59352:	8784      	cmp        al, #+0x6A87
   59353:	3CF0      	bne        +0x3C <___libgatt_lib_db_5467+0x46:0x5938F[p]>
   59354:	1517      	ld         al, @(+0x15, y)
   59355:	141B      	ld         x, @(+0x14, y)
   59356:	10A0      	asl        #0x10
   59357:	E3B5      	or         al, @0xFFE3 <register uxl>
   59358:	E099      	tst        @0xFFE0 <register ah>
   59359:	36F0      	bne        +0x36 <___libgatt_lib_db_5467+0x46:0x5938F[p]>
   5935A:	8000      	**prefx    0x80
   5935B:	A184      	cmp        al, #+0x7FA1
   5935C:	33F0      	bne        +0x33 <___libgatt_lib_db_5467+0x46:0x5938F[p]>
   5935D:	0C17      	ld         al, @(+0xC, y)
   5935E:	0327      	st         al, @(+0x3, y)
   5935F:	0D13      	ld         ah, @(+0xD, y)
   59360:	1017      	ld         al, @(+0x10, y)
   59361:	0027      	st         al, @(0x0, y)
   59362:	0014      	ld         al, #+0x0
   59363:	0127      	st         al, @(+0x1, y)
   59364:	0317      	ld         al, @(+0x3, y)
   59365:	FB00      	**prefx    0xFB
   59366:	D300      	**prefx    0xD3
   59367:	EC9C      	bsr        -0x52D14 <___libgatt_lib_db_675:0x6653[p]>
   59368:	E199      	tst        @0xFFE1 <register al>
   59369:	1FF4      	beq        +0x1F <___libgatt_lib_db_5467+0x3F:0x59388[p]>
   5936A:	6D00      	**prefx    0x6D
   5936B:	E399      	tst        @0x6CE3 <stream_kick_reqd>
   5936C:	18F0      	bne        +0x18 <___libgatt_lib_db_5467+0x3B:0x59384[p]>
   5936D:	0114      	ld         al, #+0x1
   5936E:	6D00      	**prefx    0x6D
   5936F:	E325      	st         al, @0x6CE3 <stream_kick_reqd>
   59370:	0900      	**prefx    0x9
   59371:	1714      	ld         al, #+0x917
   59372:	0410      	ld         ah, #+0x4
   59373:	FC00      	**prefx    0xFC
   59374:	D900      	**prefx    0xD9
   59375:	8B9C      	bsr        -0x42775 <___libgatt_lib_db_5419:0x16C00[p]>
   59376:	E119      	ld         x, @0xFFE1 <register al>
   59377:	0317      	ld         al, @(+0x3, y)
   59378:	0426      	st         al, @(+0x4, x)
   59379:	0114      	ld         al, #+0x1
   5937A:	0526      	st         al, @(+0x5, x)
   5937B:	0E14      	ld         al, #+0xE
   5937C:	0027      	st         al, @(0x0, y)
   5937D:	0C14      	ld         al, #+0xC
   5937E:	0127      	st         al, @(+0x1, y)
   5937F:	022B      	st         x, @(+0x2, y)
   59380:	0010      	ld         ah, #+0x0
   59381:	FC00      	**prefx    0xFC
   59382:	D700      	**prefx    0xD7
   59383:	899C      	bsr        -0x42977 <___libgatt_lib_db_5377:0x16A0C[p]>
   59384:	0A00      	**prefx    0xA
   59385:	3514      	ld         al, #+0xA35
   59386:	F00F      	leave      #-0x10
   59387:	08E0      	bra        +0x8 <___libgatt_lib_db_5467+0x46:0x5938F[p]>
   59388:	6D00      	**prefx    0x6D
   59389:	E315      	ld         al, @0x6CE3 <stream_kick_reqd>
   5938A:	0134      	add        al, #+0x1
   5938B:	6D00      	**prefx    0x6D
   5938C:	E325      	st         al, @0x6CE3 <stream_kick_reqd>
   5938D:	0014      	ld         al, #+0x0
   5938E:	F00F      	leave      #-0x10
   5938F:	FA0F      	leave      #-0x6

0x00059390 <___libgatt_lib_db_5493>:
   59390:	FC0B      	enter      #-0x4
   59391:	E119      	ld         x, @0xFFE1 <register al>
   59392:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   59393:	D800      	**prefx    0xD8
   59394:	F699      	tst        @0xD7F6 <bl_int_cnt+0x22>
   59395:	04F4      	beq        +0x4 <___libgatt_lib_db_5493+0x9:0x59399[p]>
   59396:	0C00      	**prefx    0xC
   59397:	0014      	ld         al, #+0xC00
   59398:	15E0      	bra        +0x15 <___libgatt_lib_db_5493+0x1D:0x593AD[p]>
   59399:	6A00      	**prefx    0x6A
   5939A:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5939B:	0010      	ld         ah, #+0x0
   5939C:	1C00      	**prefx    0x1C
   5939D:	3534      	add        al, #+0x1C35
   5939E:	0140      	addc       ah, #+0x1
   5939F:	FE27      	st         al, @(-0x2, y)
   593A0:	FF23      	st         ah, @(-0x1, y)
   593A1:	0417      	ld         al, @(+0x4, y)
   593A2:	0027      	st         al, @(0x0, y)
   593A3:	0517      	ld         al, @(+0x5, y)
   593A4:	0127      	st         al, @(+0x1, y)
   593A5:	E315      	ld         al, @0xFFE3 <register uxl>
   593A6:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   593A7:	FF0E      	ld         xh, @(-0x1, y)
   593A8:	FE9F      	bsr        @(-0x2, y)
   593A9:	E199      	tst        @0xFFE1 <register al>
   593AA:	03F0      	bne        +0x3 <___libgatt_lib_db_5493+0x1D:0x593AD[p]>
   593AB:	6A00      	**prefx    0x6A
   593AC:	2715      	ld         al, @0x6A27 <bleradio_package_type+0x6>
   593AD:	FC0F      	leave      #-0x4

0x000593AE <.LFB9>:
   593AE:	FE0B      	enter      #-0x2
   593AF:	FA25      	st         al, @0xFFFA <(scratchpad)>
   593B0:	D800      	**prefx    0xD8
   593B1:	F699      	tst        @0xD7F6 <bl_int_cnt+0x22>
   593B2:	08F0      	bne        +0x8 <.LFB9+0xC:0x593BA[p]>
   593B3:	FA00      	**prefx    0xFA
   593B4:	2411      	ld         ah, @0xFA24 <___libgatt_lib_db_2447>
   593B5:	0009      	**unsigned
   593B6:	08A4      	lsr        #0x8
   593B7:	7FC0      	and        ah, #0x7F
   593B8:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   593B9:	08E0      	bra        +0x8 <.LFB9+0x13:0x593C1[p]>
   593BA:	FA00      	**prefx    0xFA
   593BB:	2611      	ld         ah, @0xFA26 <___libgatt_lib_db_2456>
   593BC:	0009      	**unsigned
   593BD:	08A4      	lsr        #0x8
   593BE:	E015      	ld         al, @0xFFE0 <register ah>
   593BF:	7FC4      	and        al, #0x7F
   593C0:	FB25      	st         al, @0xFFFB <(scratchpad)>
   593C1:	FB11      	ld         ah, @0xFFFB <(scratchpad)>
   593C2:	0130      	add        ah, #+0x1
   593C3:	0009      	**unsigned
   593C4:	01A4      	lsr        #0x1
   593C5:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   593C6:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   593C7:	F829      	st         x, @0xFFF8 <(scratchpad)>
   593C8:	0010      	ld         ah, #+0x0
   593C9:	0BE0      	bra        +0xB <.LFB9+0x26:0x593D4[p]>
   593CA:	FA00      	**prefx    0xFA
   593CB:	2A15      	ld         al, @0xFA2A <___libgatt_lib_db_2448>
   593CC:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   593CD:	0026      	st         al, @(0x0, x)
   593CE:	0138      	add        x, #+0x1
   593CF:	F829      	st         x, @0xFFF8 <(scratchpad)>
   593D0:	0014      	ld         al, #+0x0
   593D1:	FA00      	**prefx    0xFA
   593D2:	2A25      	st         al, @0xFA2A <___libgatt_lib_db_2448>
   593D3:	0130      	add        ah, #+0x1
   593D4:	F981      	cmp        ah, @0xFFF9 <(scratchpad)>
   593D5:	F5FC      	bcs        -0xB <.LFB9+0x1C:0x593CA[p]>
   593D6:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   593D7:	F935      	add        al, @0xFFF9 <(scratchpad)>
   593D8:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   593D9:	01C8      	and        x, #0x1
   593DA:	06F4      	beq        +0x6 <.LFB9+0x32:0x593E0[p]>
   593DB:	E119      	ld         x, @0xFFE1 <register al>
   593DC:	FF12      	ld         ah, @(-0x1, x)
   593DD:	0100      	**prefx    0x1
   593DE:	FFC0      	and        ah, #0xFF
   593DF:	FF22      	st         ah, @(-0x1, x)
   593E0:	FA00      	**prefx    0xFA
   593E1:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   593E2:	0100      	**prefx    0x1
   593E3:	80B4      	or         al, #+0x80
   593E4:	FA00      	**prefx    0xFA
   593E5:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   593E6:	FA00      	**prefx    0xFA
   593E7:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   593E8:	FF00      	**prefx    0xFF
   593E9:	7FC4      	and        al, #0xFF7F
   593EA:	FA00      	**prefx    0xFA
   593EB:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   593EC:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   593ED:	FE0F      	leave      #-0x2

0x000593EE <.LFB11>:
   593EE:	FE0B      	enter      #-0x2
   593EF:	FA00      	**prefx    0xFA
   593F0:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   593F1:	8000      	**prefx    0x80
   593F2:	00B4      	or         al, #-0x8000
   593F3:	FA00      	**prefx    0xFA
   593F4:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   593F5:	FA00      	**prefx    0xFA
   593F6:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   593F7:	8000      	**prefx    0x80
   593F8:	FFC4      	and        al, #0x7FFF
   593F9:	FA00      	**prefx    0xFA
   593FA:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   593FB:	6A00      	**prefx    0x6A
   593FC:	2A15      	ld         al, @0x6A2A <GattReadMultipleCharValues+0x1>
   593FD:	F925      	st         al, @0xFFF9 <(scratchpad)>
   593FE:	33F4      	beq        +0x33 <.LFB11+0x43:0x59431[p]>
   593FF:	6A00      	**prefx    0x6A
   59400:	2819      	ld         x, @0x6A28 <bleradio_package_type+0x7>
   59401:	F829      	st         x, @0xFFF8 <(scratchpad)>
   59402:	E111      	ld         ah, @0xFFE1 <register al>
   59403:	0009      	**unsigned
   59404:	01A4      	lsr        #0x1
   59405:	0014      	ld         al, #+0x0
   59406:	09E0      	bra        +0x9 <.LFB11+0x21:0x5940F[p]>
   59407:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   59408:	0016      	ld         al, @(0x0, x)
   59409:	FA00      	**prefx    0xFA
   5940A:	2925      	st         al, @0xFA29 <___libgatt_lib_db_2457>
   5940B:	0138      	add        x, #+0x1
   5940C:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5940D:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   5940E:	0134      	add        al, #+0x1
   5940F:	FA25      	st         al, @0xFFFA <(scratchpad)>
   59410:	E085      	cmp        al, @0xFFE0 <register ah>
   59411:	06F8      	bcc        +0x6 <.LFB11+0x29:0x59417[p]>
   59412:	FA00      	**prefx    0xFA
   59413:	3115      	ld         al, @0xFA31 <___libgatt_lib_db_2460>
   59414:	0200      	**prefx    0x2
   59415:	00C4      	and        al, #0x200
   59416:	F1F4      	beq        -0xF <.LFB11+0x19:0x59407[p]>
   59417:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   59418:	01A0      	asl        #0x1
   59419:	E111      	ld         ah, @0xFFE1 <register al>
   5941A:	FA00      	**prefx    0xFA
   5941B:	3115      	ld         al, @0xFA31 <___libgatt_lib_db_2460>
   5941C:	0200      	**prefx    0x2
   5941D:	00C4      	and        al, #0x200
   5941E:	09F0      	bne        +0x9 <.LFB11+0x39:0x59427[p]>
   5941F:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   59420:	E085      	cmp        al, @0xFFE0 <register ah>
   59421:	062C      	bcz        +0x6 <.LFB11+0x39:0x59427[p]>
   59422:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   59423:	0016      	ld         al, @(0x0, x)
   59424:	FA00      	**prefx    0xFA
   59425:	2925      	st         al, @0xFA29 <___libgatt_lib_db_2457>
   59426:	0130      	add        ah, #+0x1
   59427:	FA00      	**prefx    0xFA
   59428:	2119      	ld         x, @0xFA21 <___libgatt_lib_db_2440>
   59429:	FF30      	add        ah, #-0x1
   5942A:	E015      	ld         al, @0xFFE0 <register ah>
   5942B:	08A0      	asl        #0x8
   5942C:	F100      	**prefx    0xF1
   5942D:	FFC8      	and        x, #0xF0FF
   5942E:	E1B9      	or         x, @0xFFE1 <register al>
   5942F:	FA00      	**prefx    0xFA
   59430:	2129      	st         x, @0xFA21 <___libgatt_lib_db_2440>
   59431:	FA00      	**prefx    0xFA
   59432:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   59433:	8100      	**prefx    0x81
   59434:	FFC4      	and        al, #0x80FF
   59435:	FA00      	**prefx    0xFA
   59436:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   59437:	0014      	ld         al, #+0x0
   59438:	FA00      	**prefx    0xFA
   59439:	3325      	st         al, @0xFA33 <___libgatt_lib_db_2444>
   5943A:	0B18      	ld         x, #+0xB
   5943B:	FA00      	**prefx    0xFA
   5943C:	2829      	st         x, @0xFA28 <___libgatt_lib_db_2454>
   5943D:	FE0F      	leave      #-0x2

0x0005943E <.LFB12>:
   5943E:	FE0B      	enter      #-0x2
   5943F:	E199      	tst        @0xFFE1 <register al>
   59440:	07F4      	beq        +0x7 <.LFB12+0x9:0x59447[p]>
   59441:	6A00      	**prefx    0x6A
   59442:	2915      	ld         al, @0x6A29 <GattReadMultipleCharValues>
   59443:	FF00      	**prefx    0xFF
   59444:	6A9C      	bsr        -0x96 <.LFB9:0x593AE[p]>
   59445:	E111      	ld         ah, @0xFFE1 <register al>
   59446:	0EE0      	bra        +0xE <.LFB12+0x16:0x59454[p]>
   59447:	FA00      	**prefx    0xFA
   59448:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   59449:	0100      	**prefx    0x1
   5944A:	80B4      	or         al, #+0x80
   5944B:	FA00      	**prefx    0xFA
   5944C:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   5944D:	FA00      	**prefx    0xFA
   5944E:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   5944F:	FF00      	**prefx    0xFF
   59450:	7FC4      	and        al, #0xFF7F
   59451:	FA00      	**prefx    0xFA
   59452:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   59453:	0010      	ld         ah, #+0x0
   59454:	FA00      	**prefx    0xFA
   59455:	2115      	ld         al, @0xFA21 <___libgatt_lib_db_2440>
   59456:	0FB4      	or         al, #+0xF
   59457:	FA00      	**prefx    0xFA
   59458:	2125      	st         al, @0xFA21 <___libgatt_lib_db_2440>
   59459:	0014      	ld         al, #+0x0
   5945A:	FA00      	**prefx    0xFA
   5945B:	3325      	st         al, @0xFA33 <___libgatt_lib_db_2444>
   5945C:	0D14      	ld         al, #+0xD
   5945D:	FA00      	**prefx    0xFA
   5945E:	2825      	st         al, @0xFA28 <___libgatt_lib_db_2454>
   5945F:	E015      	ld         al, @0xFFE0 <register ah>
   59460:	FE0F      	leave      #-0x2

0x00059461 <.LFB14>:
   59461:	FC0B      	enter      #-0x4
   59462:	0014      	ld         al, #+0x0
   59463:	6A00      	**prefx    0x6A
   59464:	2725      	st         al, @0x6A27 <bleradio_package_type+0x6>
   59465:	FA00      	**prefx    0xFA
   59466:	3219      	ld         x, @0xFA32 <___libgatt_lib_db_2451>
   59467:	FA00      	**prefx    0xFA
   59468:	2311      	ld         ah, @0xFA23 <___libgatt_lib_db_2446>
   59469:	6A00      	**prefx    0x6A
   5946A:	2621      	st         ah, @0x6A26 <bleradio_package_type+0x5>
   5946B:	0914      	ld         al, #+0x9
   5946C:	FA00      	**prefx    0xFA
   5946D:	3825      	st         al, @0xFA38 <___libgatt_lib_db_2438>
   5946E:	E015      	ld         al, @0xFFE0 <register ah>
   5946F:	11C4      	and        al, #0x11
   59470:	2FF4      	beq        +0x2F <.LFB14+0x3E:0x5949F[p]>
   59471:	0018      	ld         x, #+0x0
   59472:	D800      	**prefx    0xD8
   59473:	F129      	st         x, @0xD7F1 <bl_int_cnt+0x1D>
   59474:	D800      	**prefx    0xD8
   59475:	FD15      	ld         al, @0xD7FD <bl_int_cnt+0x29>
   59476:	01C4      	and        al, #0x1
   59477:	23F0      	bne        +0x23 <.LFB14+0x39:0x5949A[p]>
   59478:	D800      	**prefx    0xD8
   59479:	F715      	ld         al, @0xD7F7 <bl_int_cnt+0x23>
   5947A:	6A00      	**prefx    0x6A
   5947B:	2825      	st         al, @0x6A28 <bleradio_package_type+0x7>
   5947C:	D800      	**prefx    0xD8
   5947D:	FA19      	ld         x, @0xD7FA <bl_int_cnt+0x26>
   5947E:	6A00      	**prefx    0x6A
   5947F:	2929      	st         x, @0x6A29 <GattReadMultipleCharValues>
   59480:	D800      	**prefx    0xD8
   59481:	F815      	ld         al, @0xD7F8 <bl_int_cnt+0x24>
   59482:	6A00      	**prefx    0x6A
   59483:	2A25      	st         al, @0x6A2A <GattReadMultipleCharValues+0x1>
   59484:	D800      	**prefx    0xD8
   59485:	FB19      	ld         x, @0xD7FB <bl_int_cnt+0x27>
   59486:	6A00      	**prefx    0x6A
   59487:	2B29      	st         x, @0x6A2B <GattReadMultipleCharValues+0x2>
   59488:	D800      	**prefx    0xD8
   59489:	F015      	ld         al, @0xD7F0 <bl_int_cnt+0x1C>
   5948A:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5948B:	D800      	**prefx    0xD8
   5948C:	EF19      	ld         x, @0xD7EF <bl_int_cnt+0x1B>
   5948D:	F829      	st         x, @0xFFF8 <(scratchpad)>
   5948E:	D100      	**prefx    0xD1
   5948F:	1715      	ld         al, @0xD117 <___libgatt_lib_db_1978+0x26>
   59490:	6A00      	**prefx    0x6A
   59491:	2818      	ld         x, #+0x6A28
   59492:	002B      	st         x, @(0x0, y)
   59493:	0A10      	ld         ah, #+0xA
   59494:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   59495:	FE2B      	st         x, @(-0x2, y)
   59496:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   59497:	FF2B      	st         x, @(-0x1, y)
   59498:	FF0E      	ld         xh, @(-0x1, y)
   59499:	FE9F      	bsr        @(-0x2, y)
   5949A:	0C00      	**prefx    0xC
   5949B:	0014      	ld         al, #+0xC00
   5949C:	6A00      	**prefx    0x6A
   5949D:	2725      	st         al, @0x6A27 <bleradio_package_type+0x6>
   5949E:	5FE0      	bra        +0x5F <.LFB14+0x9C:0x594FD[p]>
   5949F:	FA00      	**prefx    0xFA
   594A0:	2215      	ld         al, @0xFA22 <___libgatt_lib_db_2441>
   594A1:	EFC4      	and        al, #0xFFEF
   594A2:	FA00      	**prefx    0xFA
   594A3:	2225      	st         al, @0xFA22 <___libgatt_lib_db_2441>
   594A4:	02C0      	and        ah, #0x2
   594A5:	1EF4      	beq        +0x1E <.LFB14+0x62:0x594C3[p]>
   594A6:	D800      	**prefx    0xD8
   594A7:	F999      	tst        @0xD7F9 <bl_int_cnt+0x25>
   594A8:	08F4      	beq        +0x8 <.LFB14+0x4F:0x594B0[p]>
   594A9:	6A00      	**prefx    0x6A
   594AA:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   594AB:	0010      	ld         ah, #+0x0
   594AC:	1C00      	**prefx    0x1C
   594AD:	A934      	add        al, #+0x1BA9
   594AE:	0140      	addc       ah, #+0x1
   594AF:	0FE0      	bra        +0xF <.LFB14+0x5D:0x594BE[p]>
   594B0:	D800      	**prefx    0xD8
   594B1:	FC99      	tst        @0xD7FC <bl_int_cnt+0x28>
   594B2:	1FF4      	beq        +0x1F <.LFB14+0x70:0x594D1[p]>
   594B3:	FA00      	**prefx    0xFA
   594B4:	2215      	ld         al, @0xFA22 <___libgatt_lib_db_2441>
   594B5:	10B4      	or         al, #+0x10
   594B6:	FA00      	**prefx    0xFA
   594B7:	2225      	st         al, @0xFA22 <___libgatt_lib_db_2441>
   594B8:	6A00      	**prefx    0x6A
   594B9:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   594BA:	0010      	ld         ah, #+0x0
   594BB:	1C00      	**prefx    0x1C
   594BC:	FB34      	add        al, #+0x1BFB
   594BD:	0140      	addc       ah, #+0x1
   594BE:	FE27      	st         al, @(-0x2, y)
   594BF:	FF23      	st         ah, @(-0x1, y)
   594C0:	FF0E      	ld         xh, @(-0x1, y)
   594C1:	FE9F      	bsr        @(-0x2, y)
   594C2:	12E0      	bra        +0x12 <.LFB14+0x73:0x594D4[p]>
   594C3:	0100      	**prefx    0x1
   594C4:	00C8      	and        x, #0x100
   594C5:	0FF4      	beq        +0xF <.LFB14+0x73:0x594D4[p]>
   594C6:	D800      	**prefx    0xD8
   594C7:	FA15      	ld         al, @0xD7FA <bl_int_cnt+0x26>
   594C8:	0127      	st         al, @(+0x1, y)
   594C9:	FF00      	**prefx    0xFF
   594CA:	E49C      	bsr        -0x11C <.LFB9:0x593AE[p]>
   594CB:	0137      	add        al, @(+0x1, y)
   594CC:	D800      	**prefx    0xD8
   594CD:	FA25      	st         al, @0xD7FA <bl_int_cnt+0x26>
   594CE:	D800      	**prefx    0xD8
   594CF:	FC99      	tst        @0xD7FC <bl_int_cnt+0x28>
   594D0:	E8F0      	bne        -0x18 <.LFB14+0x57:0x594B8[p]>
   594D1:	0018      	ld         x, #+0x0
   594D2:	D800      	**prefx    0xD8
   594D3:	F129      	st         x, @0xD7F1 <bl_int_cnt+0x1D>
   594D4:	D800      	**prefx    0xD8
   594D5:	F115      	ld         al, @0xD7F1 <bl_int_cnt+0x1D>
   594D6:	27F0      	bne        +0x27 <.LFB14+0x9C:0x594FD[p]>
   594D7:	D800      	**prefx    0xD8
   594D8:	FD15      	ld         al, @0xD7FD <bl_int_cnt+0x29>
   594D9:	01C4      	and        al, #0x1
   594DA:	23F0      	bne        +0x23 <.LFB14+0x9C:0x594FD[p]>
   594DB:	D800      	**prefx    0xD8
   594DC:	F715      	ld         al, @0xD7F7 <bl_int_cnt+0x23>
   594DD:	6A00      	**prefx    0x6A
   594DE:	2825      	st         al, @0x6A28 <bleradio_package_type+0x7>
   594DF:	D800      	**prefx    0xD8
   594E0:	FA19      	ld         x, @0xD7FA <bl_int_cnt+0x26>
   594E1:	6A00      	**prefx    0x6A
   594E2:	2929      	st         x, @0x6A29 <GattReadMultipleCharValues>
   594E3:	D800      	**prefx    0xD8
   594E4:	F815      	ld         al, @0xD7F8 <bl_int_cnt+0x24>
   594E5:	6A00      	**prefx    0x6A
   594E6:	2A25      	st         al, @0x6A2A <GattReadMultipleCharValues+0x1>
   594E7:	D800      	**prefx    0xD8
   594E8:	FB19      	ld         x, @0xD7FB <bl_int_cnt+0x27>
   594E9:	6A00      	**prefx    0x6A
   594EA:	2B29      	st         x, @0x6A2B <GattReadMultipleCharValues+0x2>
   594EB:	D800      	**prefx    0xD8
   594EC:	F015      	ld         al, @0xD7F0 <bl_int_cnt+0x1C>
   594ED:	F925      	st         al, @0xFFF9 <(scratchpad)>
   594EE:	D800      	**prefx    0xD8
   594EF:	EF19      	ld         x, @0xD7EF <bl_int_cnt+0x1B>
   594F0:	F829      	st         x, @0xFFF8 <(scratchpad)>
   594F1:	D100      	**prefx    0xD1
   594F2:	1715      	ld         al, @0xD117 <___libgatt_lib_db_1978+0x26>
   594F3:	6A00      	**prefx    0x6A
   594F4:	2818      	ld         x, #+0x6A28
   594F5:	002B      	st         x, @(0x0, y)
   594F6:	0910      	ld         ah, #+0x9
   594F7:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   594F8:	FE2B      	st         x, @(-0x2, y)
   594F9:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   594FA:	FF2B      	st         x, @(-0x1, y)
   594FB:	FF0E      	ld         xh, @(-0x1, y)
   594FC:	FE9F      	bsr        @(-0x2, y)
   594FD:	FC0F      	leave      #-0x4

0x000594FE <.LFB15>:
   594FE:	F60B      	enter      #-0xA
   594FF:	FA00      	**prefx    0xFA
   59500:	2515      	ld         al, @0xFA25 <___libgatt_lib_db_2455>
   59501:	0527      	st         al, @(+0x5, y)
   59502:	FA00      	**prefx    0xFA
   59503:	2819      	ld         x, @0xFA28 <___libgatt_lib_db_2454>
   59504:	FA00      	**prefx    0xFA
   59505:	2615      	ld         al, @0xFA26 <___libgatt_lib_db_2456>
   59506:	FA00      	**prefx    0xFA
   59507:	2615      	ld         al, @0xFA26 <___libgatt_lib_db_2456>
   59508:	7FC4      	and        al, #0x7F
   59509:	0427      	st         al, @(+0x4, y)
   5950A:	FA00      	**prefx    0xFA
   5950B:	2611      	ld         ah, @0xFA26 <___libgatt_lib_db_2456>
   5950C:	0009      	**unsigned
   5950D:	08A4      	lsr        #0x8
   5950E:	E015      	ld         al, @0xFFE0 <register ah>
   5950F:	7FC4      	and        al, #0x7F
   59510:	0327      	st         al, @(+0x3, y)
   59511:	08C8      	and        x, #0x8
   59512:	0100      	**prefx    0x1
   59513:	85F4      	beq        +0x85 <.LFB15+0x9A:0x59598[p]>
   59514:	0517      	ld         al, @(+0x5, y)
   59515:	08C4      	and        al, #0x8
   59516:	0CF0      	bne        +0xC <.LFB15+0x24:0x59522[p]>
   59517:	6A00      	**prefx    0x6A
   59518:	2515      	ld         al, @0x6A25 <bleradio_package_type+0x4>
   59519:	0184      	cmp        al, #+0x1
   5951A:	05F4      	beq        +0x5 <.LFB15+0x21:0x5951F[p]>
   5951B:	6A00      	**prefx    0x6A
   5951C:	2515      	ld         al, @0x6A25 <bleradio_package_type+0x4>
   5951D:	0384      	cmp        al, #+0x3
   5951E:	7AF0      	bne        +0x7A <.LFB15+0x9A:0x59598[p]>
   5951F:	0517      	ld         al, @(+0x5, y)
   59520:	10C4      	and        al, #0x10
   59521:	77F4      	beq        +0x77 <.LFB15+0x9A:0x59598[p]>
   59522:	051B      	ld         x, @(+0x5, y)
   59523:	01C8      	and        x, #0x1
   59524:	072B      	st         x, @(+0x7, y)
   59525:	04F0      	bne        +0x4 <.LFB15+0x2B:0x59529[p]>
   59526:	0014      	ld         al, #+0x0
   59527:	FA00      	**prefx    0xFA
   59528:	2825      	st         al, @0xFA28 <___libgatt_lib_db_2454>
   59529:	6A00      	**prefx    0x6A
   5952A:	2515      	ld         al, @0x6A25 <bleradio_package_type+0x4>
   5952B:	62F4      	beq        +0x62 <.LFB15+0x8F:0x5958D[p]>
   5952C:	6A00      	**prefx    0x6A
   5952D:	2515      	ld         al, @0x6A25 <bleradio_package_type+0x4>
   5952E:	0184      	cmp        al, #+0x1
   5952F:	05F4      	beq        +0x5 <.LFB15+0x36:0x59534[p]>
   59530:	6A00      	**prefx    0x6A
   59531:	2515      	ld         al, @0x6A25 <bleradio_package_type+0x4>
   59532:	0384      	cmp        al, #+0x3
   59533:	14F0      	bne        +0x14 <.LFB15+0x49:0x59547[p]>
   59534:	0413      	ld         ah, @(+0x4, y)
   59535:	0009      	**unsigned
   59536:	01A4      	lsr        #0x1
   59537:	6A00      	**prefx    0x6A
   59538:	2815      	ld         al, @0x6A28 <bleradio_package_type+0x7>
   59539:	E035      	add        al, @0xFFE0 <register ah>
   5953A:	6A00      	**prefx    0x6A
   5953B:	2825      	st         al, @0x6A28 <bleradio_package_type+0x7>
   5953C:	6A00      	**prefx    0x6A
   5953D:	2A19      	ld         x, @0x6A2A <GattReadMultipleCharValues+0x1>
   5953E:	045B      	sub        x, @(+0x4, y)
   5953F:	6A00      	**prefx    0x6A
   59540:	2A29      	st         x, @0x6A2A <GattReadMultipleCharValues+0x1>
   59541:	0014      	ld         al, #+0x0
   59542:	6A00      	**prefx    0x6A
   59543:	2925      	st         al, @0x6A29 <GattReadMultipleCharValues>
   59544:	6A00      	**prefx    0x6A
   59545:	2B25      	st         al, @0x6A2B <GattReadMultipleCharValues+0x2>
   59546:	1DE0      	bra        +0x1D <.LFB15+0x65:0x59563[p]>
   59547:	6A00      	**prefx    0x6A
   59548:	2B15      	ld         al, @0x6A2B <GattReadMultipleCharValues+0x2>
   59549:	0387      	cmp        al, @(+0x3, y)
   5954A:	0EFC      	bcs        +0xE <.LFB15+0x5A:0x59558[p]>
   5954B:	0357      	sub        al, @(+0x3, y)
   5954C:	6A00      	**prefx    0x6A
   5954D:	2B25      	st         al, @0x6A2B <GattReadMultipleCharValues+0x2>
   5954E:	6A00      	**prefx    0x6A
   5954F:	2919      	ld         x, @0x6A29 <GattReadMultipleCharValues>
   59550:	062B      	st         x, @(+0x6, y)
   59551:	E315      	ld         al, @0xFFE3 <register uxl>
   59552:	FE00      	**prefx    0xFE
   59553:	5B9C      	bsr        -0x1A5 <.LFB9:0x593AE[p]>
   59554:	0637      	add        al, @(+0x6, y)
   59555:	6A00      	**prefx    0x6A
   59556:	2925      	st         al, @0x6A29 <GattReadMultipleCharValues>
   59557:	07E0      	bra        +0x7 <.LFB15+0x60:0x5955E[p]>
   59558:	0317      	ld         al, @(+0x3, y)
   59559:	6A00      	**prefx    0x6A
   5955A:	2B25      	st         al, @0x6A2B <GattReadMultipleCharValues+0x2>
   5955B:	0018      	ld         x, #+0x0
   5955C:	6A00      	**prefx    0x6A
   5955D:	2929      	st         x, @0x6A29 <GattReadMultipleCharValues>
   5955E:	0014      	ld         al, #+0x0
   5955F:	6A00      	**prefx    0x6A
   59560:	2825      	st         al, @0x6A28 <bleradio_package_type+0x7>
   59561:	6A00      	**prefx    0x6A
   59562:	2A25      	st         al, @0x6A2A <GattReadMultipleCharValues+0x1>
   59563:	D800      	**prefx    0xD8
   59564:	F019      	ld         x, @0xD7F0 <bl_int_cnt+0x1C>
   59565:	F929      	st         x, @0xFFF9 <(scratchpad)>
   59566:	D800      	**prefx    0xD8
   59567:	EF15      	ld         al, @0xD7EF <bl_int_cnt+0x1B>
   59568:	F825      	st         al, @0xFFF8 <(scratchpad)>
   59569:	D100      	**prefx    0xD1
   5956A:	1715      	ld         al, @0xD117 <___libgatt_lib_db_1978+0x26>
   5956B:	6A00      	**prefx    0x6A
   5956C:	2818      	ld         x, #+0x6A28
   5956D:	002B      	st         x, @(0x0, y)
   5956E:	0910      	ld         ah, #+0x9
   5956F:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   59570:	FE2B      	st         x, @(-0x2, y)
   59571:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   59572:	FF2B      	st         x, @(-0x1, y)
   59573:	FF0E      	ld         xh, @(-0x1, y)
   59574:	FE9F      	bsr        @(-0x2, y)
   59575:	FA00      	**prefx    0xFA
   59576:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   59577:	8000      	**prefx    0x80
   59578:	00B4      	or         al, #-0x8000
   59579:	FA00      	**prefx    0xFA
   5957A:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   5957B:	FA00      	**prefx    0xFA
   5957C:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   5957D:	8000      	**prefx    0x80
   5957E:	FFC4      	and        al, #0x7FFF
   5957F:	FA00      	**prefx    0xFA
   59580:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   59581:	FA00      	**prefx    0xFA
   59582:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   59583:	0100      	**prefx    0x1
   59584:	80B4      	or         al, #+0x80
   59585:	FA00      	**prefx    0xFA
   59586:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   59587:	FA00      	**prefx    0xFA
   59588:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   59589:	FF00      	**prefx    0xFF
   5958A:	7FC4      	and        al, #0xFF7F
   5958B:	FA00      	**prefx    0xFA
   5958C:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   5958D:	0014      	ld         al, #+0x0
   5958E:	6A00      	**prefx    0x6A
   5958F:	2525      	st         al, @0x6A25 <bleradio_package_type+0x4>
   59590:	FA00      	**prefx    0xFA
   59591:	3325      	st         al, @0xFA33 <___libgatt_lib_db_2444>
   59592:	0118      	ld         x, #+0x1
   59593:	FA00      	**prefx    0xFA
   59594:	2829      	st         x, @0xFA28 <___libgatt_lib_db_2454>
   59595:	079B      	tst        @(+0x7, y)
   59596:	0100      	**prefx    0x1
   59597:	26F4      	beq        +0x126 <.LFB15+0x1BF:0x596BD[p]>
   59598:	0517      	ld         al, @(+0x5, y)
   59599:	01C4      	and        al, #0x1
   5959A:	0DF4      	beq        +0xD <.LFB15+0xA9:0x595A7[p]>
   5959B:	6A00      	**prefx    0x6A
   5959C:	2515      	ld         al, @0x6A25 <bleradio_package_type+0x4>
   5959D:	0100      	**prefx    0x1
   5959E:	DCF0      	bne        +0xDC <.LFB15+0x17C:0x5967A[p]>
   5959F:	0517      	ld         al, @(+0x5, y)
   595A0:	0100      	**prefx    0x1
   595A1:	80C4      	and        al, #0x80
   595A2:	03F4      	beq        +0x3 <.LFB15+0xA7:0x595A5[p]>
   595A3:	0114      	ld         al, #+0x1
   595A4:	08E0      	bra        +0x8 <.LFB15+0xAE:0x595AC[p]>
   595A5:	0218      	ld         x, #+0x2
   595A6:	10E0      	bra        +0x10 <.LFB15+0xB8:0x595B6[p]>
   595A7:	6A00      	**prefx    0x6A
   595A8:	2515      	ld         al, @0x6A25 <bleradio_package_type+0x4>
   595A9:	0184      	cmp        al, #+0x1
   595AA:	06F0      	bne        +0x6 <.LFB15+0xB2:0x595B0[p]>
   595AB:	0314      	ld         al, #+0x3
   595AC:	6A00      	**prefx    0x6A
   595AD:	2525      	st         al, @0x6A25 <bleradio_package_type+0x4>
   595AE:	0100      	**prefx    0x1
   595AF:	FCE0      	bra        +0xFC <.LFB15+0x1AD:0x596AB[p]>
   595B0:	6A00      	**prefx    0x6A
   595B1:	2515      	ld         al, @0x6A25 <bleradio_package_type+0x4>
   595B2:	0284      	cmp        al, #+0x2
   595B3:	0100      	**prefx    0x1
   595B4:	F7F0      	bne        +0xF7 <.LFB15+0x1AD:0x596AB[p]>
   595B5:	0418      	ld         x, #+0x4
   595B6:	6A00      	**prefx    0x6A
   595B7:	2529      	st         x, @0x6A25 <bleradio_package_type+0x4>
   595B8:	0100      	**prefx    0x1
   595B9:	F2E0      	bra        +0xF2 <.LFB15+0x1AD:0x596AB[p]>
   595BA:	0014      	ld         al, #+0x0
   595BB:	6A00      	**prefx    0x6A
   595BC:	2825      	st         al, @0x6A28 <bleradio_package_type+0x7>
   595BD:	6A00      	**prefx    0x6A
   595BE:	2925      	st         al, @0x6A29 <GattReadMultipleCharValues>
   595BF:	6A00      	**prefx    0x6A
   595C0:	2A25      	st         al, @0x6A2A <GattReadMultipleCharValues+0x1>
   595C1:	6A00      	**prefx    0x6A
   595C2:	2B25      	st         al, @0x6A2B <GattReadMultipleCharValues+0x2>
   595C3:	D800      	**prefx    0xD8
   595C4:	F019      	ld         x, @0xD7F0 <bl_int_cnt+0x1C>
   595C5:	F929      	st         x, @0xFFF9 <(scratchpad)>
   595C6:	D800      	**prefx    0xD8
   595C7:	EF15      	ld         al, @0xD7EF <bl_int_cnt+0x1B>
   595C8:	F825      	st         al, @0xFFF8 <(scratchpad)>
   595C9:	D100      	**prefx    0xD1
   595CA:	1715      	ld         al, @0xD117 <___libgatt_lib_db_1978+0x26>
   595CB:	6A00      	**prefx    0x6A
   595CC:	2818      	ld         x, #+0x6A28
   595CD:	002B      	st         x, @(0x0, y)
   595CE:	1110      	ld         ah, #+0x11
   595CF:	3AE0      	bra        +0x3A <.LFB15+0x10B:0x59609[p]>
   595D0:	051B      	ld         x, @(+0x5, y)
   595D1:	12C8      	and        x, #0x12
   595D2:	0288      	cmp        x, #+0x2
   595D3:	0100      	**prefx    0x1
   595D4:	A6F0      	bne        +0xA6 <.LFB15+0x17C:0x5967A[p]>
   595D5:	6A00      	**prefx    0x6A
   595D6:	2819      	ld         x, @0x6A28 <bleradio_package_type+0x7>
   595D7:	16F4      	beq        +0x16 <.LFB15+0xEF:0x595ED[p]>
   595D8:	6A00      	**prefx    0x6A
   595D9:	2A15      	ld         al, @0x6A2A <GattReadMultipleCharValues+0x1>
   595DA:	0487      	cmp        al, @(+0x4, y)
   595DB:	122C      	bcz        +0x12 <.LFB15+0xEF:0x595ED[p]>
   595DC:	0457      	sub        al, @(+0x4, y)
   595DD:	6A00      	**prefx    0x6A
   595DE:	2A25      	st         al, @0x6A2A <GattReadMultipleCharValues+0x1>
   595DF:	0413      	ld         ah, @(+0x4, y)
   595E0:	0009      	**unsigned
   595E1:	01A4      	lsr        #0x1
   595E2:	E039      	add        x, @0xFFE0 <register ah>
   595E3:	6A00      	**prefx    0x6A
   595E4:	2829      	st         x, @0x6A28 <bleradio_package_type+0x7>
   595E5:	FE00      	**prefx    0xFE
   595E6:	089C      	bsr        -0x1F8 <.LFB11:0x593EE[p]>
   595E7:	1000      	**prefx    0x10
   595E8:	0014      	ld         al, #+0x1000
   595E9:	FA00      	**prefx    0xFA
   595EA:	2225      	st         al, @0xFA22 <___libgatt_lib_db_2441>
   595EB:	0100      	**prefx    0x1
   595EC:	D1E0      	bra        +0xD1 <.LFB15+0x1BF:0x596BD[p]>
   595ED:	0413      	ld         ah, @(+0x4, y)
   595EE:	0009      	**unsigned
   595EF:	01A4      	lsr        #0x1
   595F0:	E039      	add        x, @0xFFE0 <register ah>
   595F1:	6A00      	**prefx    0x6A
   595F2:	2829      	st         x, @0x6A28 <bleradio_package_type+0x7>
   595F3:	6A00      	**prefx    0x6A
   595F4:	2A19      	ld         x, @0x6A2A <GattReadMultipleCharValues+0x1>
   595F5:	045B      	sub        x, @(+0x4, y)
   595F6:	6A00      	**prefx    0x6A
   595F7:	2A29      	st         x, @0x6A2A <GattReadMultipleCharValues+0x1>
   595F8:	0014      	ld         al, #+0x0
   595F9:	6A00      	**prefx    0x6A
   595FA:	2925      	st         al, @0x6A29 <GattReadMultipleCharValues>
   595FB:	6A00      	**prefx    0x6A
   595FC:	2B25      	st         al, @0x6A2B <GattReadMultipleCharValues+0x2>
   595FD:	D800      	**prefx    0xD8
   595FE:	F019      	ld         x, @0xD7F0 <bl_int_cnt+0x1C>
   595FF:	F929      	st         x, @0xFFF9 <(scratchpad)>
   59600:	D800      	**prefx    0xD8
   59601:	EF15      	ld         al, @0xD7EF <bl_int_cnt+0x1B>
   59602:	F825      	st         al, @0xFFF8 <(scratchpad)>
   59603:	D100      	**prefx    0xD1
   59604:	1715      	ld         al, @0xD117 <___libgatt_lib_db_1978+0x26>
   59605:	6A00      	**prefx    0x6A
   59606:	2818      	ld         x, #+0x6A28
   59607:	002B      	st         x, @(0x0, y)
   59608:	1210      	ld         ah, #+0x12
   59609:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5960A:	FE2B      	st         x, @(-0x2, y)
   5960B:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5960C:	FF2B      	st         x, @(-0x1, y)
   5960D:	FF0E      	ld         xh, @(-0x1, y)
   5960E:	FE9F      	bsr        @(-0x2, y)
   5960F:	6A00      	**prefx    0x6A
   59610:	2899      	tst        @0x6A28 <bleradio_package_type+0x7>
   59611:	69F4      	beq        +0x69 <.LFB15+0x17C:0x5967A[p]>
   59612:	6A00      	**prefx    0x6A
   59613:	2A99      	tst        @0x6A2A <GattReadMultipleCharValues+0x1>
   59614:	66F4      	beq        +0x66 <.LFB15+0x17C:0x5967A[p]>
   59615:	D0E0      	bra        -0x30 <.LFB15+0xE7:0x595E5[p]>
   59616:	0018      	ld         x, #+0x0
   59617:	6A00      	**prefx    0x6A
   59618:	2829      	st         x, @0x6A28 <bleradio_package_type+0x7>
   59619:	6A00      	**prefx    0x6A
   5961A:	2A29      	st         x, @0x6A2A <GattReadMultipleCharValues+0x1>
   5961B:	6A00      	**prefx    0x6A
   5961C:	2929      	st         x, @0x6A29 <GattReadMultipleCharValues>
   5961D:	6A00      	**prefx    0x6A
   5961E:	2B29      	st         x, @0x6A2B <GattReadMultipleCharValues+0x2>
   5961F:	D800      	**prefx    0xD8
   59620:	F015      	ld         al, @0xD7F0 <bl_int_cnt+0x1C>
   59621:	F925      	st         al, @0xFFF9 <(scratchpad)>
   59622:	D800      	**prefx    0xD8
   59623:	EF19      	ld         x, @0xD7EF <bl_int_cnt+0x1B>
   59624:	F829      	st         x, @0xFFF8 <(scratchpad)>
   59625:	D100      	**prefx    0xD1
   59626:	1715      	ld         al, @0xD117 <___libgatt_lib_db_1978+0x26>
   59627:	6A00      	**prefx    0x6A
   59628:	2818      	ld         x, #+0x6A28
   59629:	002B      	st         x, @(0x0, y)
   5962A:	1310      	ld         ah, #+0x13
   5962B:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5962C:	FE2B      	st         x, @(-0x2, y)
   5962D:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   5962E:	FF2B      	st         x, @(-0x1, y)
   5962F:	FF0E      	ld         xh, @(-0x1, y)
   59630:	FE9F      	bsr        @(-0x2, y)
   59631:	0014      	ld         al, #+0x0
   59632:	FE00      	**prefx    0xFE
   59633:	0B9C      	bsr        -0x1F5 <.LFB12:0x5943E[p]>
   59634:	B3E0      	bra        -0x4D <.LFB15+0xE9:0x595E7[p]>
   59635:	051B      	ld         x, @(+0x5, y)
   59636:	04C8      	and        x, #0x4
   59637:	43F4      	beq        +0x43 <.LFB15+0x17C:0x5967A[p]>
   59638:	6A00      	**prefx    0x6A
   59639:	2915      	ld         al, @0x6A29 <GattReadMultipleCharValues>
   5963A:	0227      	st         al, @(+0x2, y)
   5963B:	0DF4      	beq        +0xD <.LFB15+0x14A:0x59648[p]>
   5963C:	6A00      	**prefx    0x6A
   5963D:	2B15      	ld         al, @0x6A2B <GattReadMultipleCharValues+0x2>
   5963E:	0387      	cmp        al, @(+0x3, y)
   5963F:	09FC      	bcs        +0x9 <.LFB15+0x14A:0x59648[p]>
   59640:	0357      	sub        al, @(+0x3, y)
   59641:	6A00      	**prefx    0x6A
   59642:	2B25      	st         al, @0x6A2B <GattReadMultipleCharValues+0x2>
   59643:	0114      	ld         al, #+0x1
   59644:	FE00      	**prefx    0xFE
   59645:	F99C      	bsr        -0x207 <.LFB12:0x5943E[p]>
   59646:	0237      	add        al, @(+0x2, y)
   59647:	2CE0      	bra        +0x2C <.LFB15+0x175:0x59673[p]>
   59648:	0014      	ld         al, #+0x0
   59649:	6A00      	**prefx    0x6A
   5964A:	2925      	st         al, @0x6A29 <GattReadMultipleCharValues>
   5964B:	031B      	ld         x, @(+0x3, y)
   5964C:	6A00      	**prefx    0x6A
   5964D:	2B29      	st         x, @0x6A2B <GattReadMultipleCharValues+0x2>
   5964E:	6A00      	**prefx    0x6A
   5964F:	2825      	st         al, @0x6A28 <bleradio_package_type+0x7>
   59650:	6A00      	**prefx    0x6A
   59651:	2A25      	st         al, @0x6A2A <GattReadMultipleCharValues+0x1>
   59652:	D800      	**prefx    0xD8
   59653:	F015      	ld         al, @0xD7F0 <bl_int_cnt+0x1C>
   59654:	F925      	st         al, @0xFFF9 <(scratchpad)>
   59655:	D800      	**prefx    0xD8
   59656:	EF19      	ld         x, @0xD7EF <bl_int_cnt+0x1B>
   59657:	F829      	st         x, @0xFFF8 <(scratchpad)>
   59658:	D100      	**prefx    0xD1
   59659:	1715      	ld         al, @0xD117 <___libgatt_lib_db_1978+0x26>
   5965A:	6A00      	**prefx    0x6A
   5965B:	2818      	ld         x, #+0x6A28
   5965C:	002B      	st         x, @(0x0, y)
   5965D:	1410      	ld         ah, #+0x14
   5965E:	F919      	ld         x, @0xFFF9 <(scratchpad)>
   5965F:	FE2B      	st         x, @(-0x2, y)
   59660:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   59661:	FF2B      	st         x, @(-0x1, y)
   59662:	FF0E      	ld         xh, @(-0x1, y)
   59663:	FE9F      	bsr        @(-0x2, y)
   59664:	6A00      	**prefx    0x6A
   59665:	2915      	ld         al, @0x6A29 <GattReadMultipleCharValues>
   59666:	0127      	st         al, @(+0x1, y)
   59667:	13F4      	beq        +0x13 <.LFB15+0x17C:0x5967A[p]>
   59668:	6A00      	**prefx    0x6A
   59669:	2B15      	ld         al, @0x6A2B <GattReadMultipleCharValues+0x2>
   5966A:	0387      	cmp        al, @(+0x3, y)
   5966B:	0FFC      	bcs        +0xF <.LFB15+0x17C:0x5967A[p]>
   5966C:	0357      	sub        al, @(+0x3, y)
   5966D:	6A00      	**prefx    0x6A
   5966E:	2B25      	st         al, @0x6A2B <GattReadMultipleCharValues+0x2>
   5966F:	0114      	ld         al, #+0x1
   59670:	FE00      	**prefx    0xFE
   59671:	CD9C      	bsr        -0x233 <.LFB12:0x5943E[p]>
   59672:	0137      	add        al, @(+0x1, y)
   59673:	6A00      	**prefx    0x6A
   59674:	2925      	st         al, @0x6A29 <GattReadMultipleCharValues>
   59675:	1000      	**prefx    0x10
   59676:	0018      	ld         x, #+0x1000
   59677:	FA00      	**prefx    0xFA
   59678:	2229      	st         x, @0xFA22 <___libgatt_lib_db_2441>
   59679:	44E0      	bra        +0x44 <.LFB15+0x1BF:0x596BD[p]>
   5967A:	1000      	**prefx    0x10
   5967B:	0014      	ld         al, #+0x1000
   5967C:	FA00      	**prefx    0xFA
   5967D:	2225      	st         al, @0xFA22 <___libgatt_lib_db_2441>
   5967E:	0018      	ld         x, #+0x0
   5967F:	FA00      	**prefx    0xFA
   59680:	3329      	st         x, @0xFA33 <___libgatt_lib_db_2444>
   59681:	FA00      	**prefx    0xFA
   59682:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   59683:	8000      	**prefx    0x80
   59684:	00B4      	or         al, #-0x8000
   59685:	FA00      	**prefx    0xFA
   59686:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   59687:	FA00      	**prefx    0xFA
   59688:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   59689:	8000      	**prefx    0x80
   5968A:	FFC4      	and        al, #0x7FFF
   5968B:	FA00      	**prefx    0xFA
   5968C:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   5968D:	FA00      	**prefx    0xFA
   5968E:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   5968F:	0100      	**prefx    0x1
   59690:	80B4      	or         al, #+0x80
   59691:	FA00      	**prefx    0xFA
   59692:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   59693:	FA00      	**prefx    0xFA
   59694:	3015      	ld         al, @0xFA30 <___libgatt_lib_db_2443>
   59695:	FF00      	**prefx    0xFF
   59696:	7FC4      	and        al, #0xFF7F
   59697:	FA00      	**prefx    0xFA
   59698:	3025      	st         al, @0xFA30 <___libgatt_lib_db_2443>
   59699:	FA00      	**prefx    0xFA
   5969A:	2015      	ld         al, @0xFA20 <___libgatt_lib_db_2439>
   5969B:	F7C4      	and        al, #0xFFF7
   5969C:	FA00      	**prefx    0xFA
   5969D:	2025      	st         al, @0xFA20 <___libgatt_lib_db_2439>
   5969E:	FA00      	**prefx    0xFA
   5969F:	2829      	st         x, @0xFA28 <___libgatt_lib_db_2454>
   596A0:	FA00      	**prefx    0xFA
   596A1:	2815      	ld         al, @0xFA28 <___libgatt_lib_db_2454>
   596A2:	01B4      	or         al, #+0x1
   596A3:	FA00      	**prefx    0xFA
   596A4:	2825      	st         al, @0xFA28 <___libgatt_lib_db_2454>
   596A5:	FA00      	**prefx    0xFA
   596A6:	2015      	ld         al, @0xFA20 <___libgatt_lib_db_2439>
   596A7:	08B4      	or         al, #+0x8
   596A8:	FA00      	**prefx    0xFA
   596A9:	2025      	st         al, @0xFA20 <___libgatt_lib_db_2439>
   596AA:	13E0      	bra        +0x13 <.LFB15+0x1BF:0x596BD[p]>
   596AB:	6A00      	**prefx    0x6A
   596AC:	2515      	ld         al, @0x6A25 <bleradio_package_type+0x4>
   596AD:	0284      	cmp        al, #+0x2
   596AE:	FF00      	**prefx    0xFF
   596AF:	67F4      	beq        -0x99 <.LFB15+0x118:0x59616[p]>
   596B0:	0384      	cmp        al, #+0x3
   596B1:	05F8      	bcc        +0x5 <.LFB15+0x1B8:0x596B6[p]>
   596B2:	0184      	cmp        al, #+0x1
   596B3:	C7F0      	bne        -0x39 <.LFB15+0x17C:0x5967A[p]>
   596B4:	FF00      	**prefx    0xFF
   596B5:	05E0      	bra        -0xFB <.LFB15+0xBC:0x595BA[p]>
   596B6:	0384      	cmp        al, #+0x3
   596B7:	FF00      	**prefx    0xFF
   596B8:	18F4      	beq        -0xE8 <.LFB15+0xD2:0x595D0[p]>
   596B9:	0484      	cmp        al, #+0x4
   596BA:	C0F0      	bne        -0x40 <.LFB15+0x17C:0x5967A[p]>
   596BB:	FF00      	**prefx    0xFF
   596BC:	79E0      	bra        -0x87 <.LFB15+0x137:0x59635[p]>
   596BD:	F60F      	leave      #-0xA

0x000596BE <___libgatt_lib_db_5490>:
   596BE:	F10B      	enter      #-0xF
   596BF:	0823      	st         ah, @(+0x8, y)
   596C0:	0314      	ld         al, #+0x3
   596C1:	E411      	ld         ah, @0xFFE4 <register uy>
   596C2:	0530      	add        ah, #+0x5
   596C3:	A400      	**prefx    0xA4
   596C4:	CC18      	ld         x, #-0x5C34
   596C5:	FD09      	bc2        
   596C6:	D100      	**prefx    0xD1
   596C7:	1715      	ld         al, @0xD117 <___libgatt_lib_db_1978+0x26>
   596C8:	FF84      	cmp        al, #-0x1
   596C9:	0100      	**prefx    0x1
   596CA:	A5F0      	bne        +0xA5 <___libgatt_lib_db_5490+0xB1:0x5976F[p]>
   596CB:	0F1B      	ld         x, @(+0xF, y)
   596CC:	011A      	ld         x, @(+0x1, x)
   596CD:	E311      	ld         ah, @0xFFE3 <register uxl>
   596CE:	0009      	**unsigned
   596CF:	04A4      	lsr        #0x4
   596D0:	E415      	ld         al, @0xFFE4 <register uy>
   596D1:	0534      	add        al, #+0x5
   596D2:	FA25      	st         al, @0xFFFA <(scratchpad)>
   596D3:	E035      	add        al, @0xFFE0 <register ah>
   596D4:	F825      	st         al, @0xFFF8 <(scratchpad)>
   596D5:	0FC8      	and        x, #0xF
   596D6:	0114      	ld         al, #+0x1
   596D7:	E3A1      	asl        @0xFFE3 <register uxl>
   596D8:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   596D9:	0026      	st         al, @(0x0, x)
   596DA:	0F1B      	ld         x, @(+0xF, y)
   596DB:	001A      	ld         x, @(0x0, x)
   596DC:	E311      	ld         ah, @0xFFE3 <register uxl>
   596DD:	0009      	**unsigned
   596DE:	04A4      	lsr        #0x4
   596DF:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   596E0:	E035      	add        al, @0xFFE0 <register ah>
   596E1:	F825      	st         al, @0xFFF8 <(scratchpad)>
   596E2:	0FC8      	and        x, #0xF
   596E3:	0114      	ld         al, #+0x1
   596E4:	E3A1      	asl        @0xFFE3 <register uxl>
   596E5:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   596E6:	00B6      	or         al, @(0x0, x)
   596E7:	0026      	st         al, @(0x0, x)
   596E8:	6A00      	**prefx    0x6A
   596E9:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   596EA:	0010      	ld         ah, #+0x0
   596EB:	0900      	**prefx    0x9
   596EC:	5934      	add        al, #+0x959
   596ED:	0140      	addc       ah, #+0x1
   596EE:	FE27      	st         al, @(-0x2, y)
   596EF:	FF23      	st         ah, @(-0x1, y)
   596F0:	0314      	ld         al, #+0x3
   596F1:	E411      	ld         ah, @0xFFE4 <register uy>
   596F2:	FA19      	ld         x, @0xFFFA <(scratchpad)>
   596F3:	FD09      	bc2        
   596F4:	1C14      	ld         al, #+0x1C
   596F5:	FF0E      	ld         xh, @(-0x1, y)
   596F6:	FE9F      	bsr        @(-0x2, y)
   596F7:	0C00      	**prefx    0xC
   596F8:	0084      	cmp        al, #+0xC00
   596F9:	76F4      	beq        +0x76 <___libgatt_lib_db_5490+0xB1:0x5976F[p]>
   596FA:	6A00      	**prefx    0x6A
   596FB:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   596FC:	0010      	ld         ah, #+0x0
   596FD:	3600      	**prefx    0x36
   596FE:	1734      	add        al, #+0x3617
   596FF:	0140      	addc       ah, #+0x1
   59700:	FE27      	st         al, @(-0x2, y)
   59701:	FF23      	st         ah, @(-0x1, y)
   59702:	0514      	ld         al, #+0x5
   59703:	3F00      	**prefx    0x3F
   59704:	8010      	ld         ah, #+0x3E80
   59705:	FF0E      	ld         xh, @(-0x1, y)
   59706:	FE9F      	bsr        @(-0x2, y)
   59707:	E199      	tst        @0xFFE1 <register al>
   59708:	67F4      	beq        +0x67 <___libgatt_lib_db_5490+0xB1:0x5976F[p]>
   59709:	081B      	ld         x, @(+0x8, y)
   5970A:	001A      	ld         x, @(0x0, x)
   5970B:	D100      	**prefx    0xD1
   5970C:	1729      	st         x, @0xD117 <___libgatt_lib_db_1978+0x26>
   5970D:	0F1B      	ld         x, @(+0xF, y)
   5970E:	031A      	ld         x, @(+0x3, x)
   5970F:	D800      	**prefx    0xD8
   59710:	F629      	st         x, @0xD7F6 <bl_int_cnt+0x22>
   59711:	6A00      	**prefx    0x6A
   59712:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59713:	F825      	st         al, @0xFFF8 <(scratchpad)>
   59714:	0F1B      	ld         x, @(+0xF, y)
   59715:	0216      	ld         al, @(+0x2, x)
   59716:	0184      	cmp        al, #+0x1
   59717:	03F4      	beq        +0x3 <___libgatt_lib_db_5490+0x5C:0x5971A[p]>
   59718:	0018      	ld         x, #+0x0
   59719:	02E0      	bra        +0x2 <___libgatt_lib_db_5490+0x5D:0x5971B[p]>
   5971A:	0718      	ld         x, #+0x7
   5971B:	0010      	ld         ah, #+0x0
   5971C:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5971D:	0A00      	**prefx    0xA
   5971E:	6434      	add        al, #+0xA64
   5971F:	0140      	addc       ah, #+0x1
   59720:	FE27      	st         al, @(-0x2, y)
   59721:	FF23      	st         ah, @(-0x1, y)
   59722:	E415      	ld         al, @0xFFE4 <register uy>
   59723:	0534      	add        al, #+0x5
   59724:	E311      	ld         ah, @0xFFE3 <register uxl>
   59725:	FF0E      	ld         xh, @(-0x1, y)
   59726:	FE9F      	bsr        @(-0x2, y)
   59727:	6A00      	**prefx    0x6A
   59728:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59729:	0010      	ld         ah, #+0x0
   5972A:	1B00      	**prefx    0x1B
   5972B:	5D34      	add        al, #+0x1B5D
   5972C:	0140      	addc       ah, #+0x1
   5972D:	0A27      	st         al, @(+0xA, y)
   5972E:	0923      	st         ah, @(+0x9, y)
   5972F:	0314      	ld         al, #+0x3
   59730:	E411      	ld         ah, @0xFFE4 <register uy>
   59731:	1030      	add        ah, #+0x10
   59732:	090E      	ld         xh, @(+0x9, y)
   59733:	0A9F      	bsr        @(+0xA, y)
   59734:	FA00      	**prefx    0xFA
   59735:	2015      	ld         al, @0xFA20 <___libgatt_lib_db_2439>
   59736:	2000      	**prefx    0x20
   59737:	00B4      	or         al, #+0x2000
   59738:	FA00      	**prefx    0xFA
   59739:	2025      	st         al, @0xFA20 <___libgatt_lib_db_2439>
   5973A:	FA00      	**prefx    0xFA
   5973B:	2F15      	ld         al, @0xFA2F <___libgatt_lib_db_2442>
   5973C:	EFC4      	and        al, #0xFFEF
   5973D:	FA00      	**prefx    0xFA
   5973E:	2F25      	st         al, @0xFA2F <___libgatt_lib_db_2442>
   5973F:	0A14      	ld         al, #+0xA
   59740:	0327      	st         al, @(+0x3, y)
   59741:	0427      	st         al, @(+0x4, y)
   59742:	6A00      	**prefx    0x6A
   59743:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59744:	0010      	ld         ah, #+0x0
   59745:	1B00      	**prefx    0x1B
   59746:	5D34      	add        al, #+0x1B5D
   59747:	0140      	addc       ah, #+0x1
   59748:	0C27      	st         al, @(+0xC, y)
   59749:	0B23      	st         ah, @(+0xB, y)
   5974A:	0114      	ld         al, #+0x1
   5974B:	E411      	ld         ah, @0xFFE4 <register uy>
   5974C:	0330      	add        ah, #+0x3
   5974D:	0B0E      	ld         xh, @(+0xB, y)
   5974E:	0C9F      	bsr        @(+0xC, y)
   5974F:	0018      	ld         x, #+0x0
   59750:	FA00      	**prefx    0xFA
   59751:	2729      	st         x, @0xFA27 <___libgatt_lib_db_2445>
   59752:	FA00      	**prefx    0xFA
   59753:	2829      	st         x, @0xFA28 <___libgatt_lib_db_2454>
   59754:	FA00      	**prefx    0xFA
   59755:	3329      	st         x, @0xFA33 <___libgatt_lib_db_2444>
   59756:	0F14      	ld         al, #+0xF
   59757:	FA00      	**prefx    0xFA
   59758:	3825      	st         al, @0xFA38 <___libgatt_lib_db_2438>
   59759:	9500      	**prefx    0x95
   5975A:	FE18      	ld         x, #-0x6B02
   5975B:	012B      	st         x, @(+0x1, y)
   5975C:	0514      	ld         al, #+0x5
   5975D:	0027      	st         al, @(0x0, y)
   5975E:	1614      	ld         al, #+0x16
   5975F:	0210      	ld         ah, #+0x2
   59760:	FB00      	**prefx    0xFB
   59761:	7A00      	**prefx    0x7A
   59762:	099C      	bsr        -0x485F7 <___libgatt_lib_db_4376:0x1116B[p]>
   59763:	FA00      	**prefx    0xFA
   59764:	2815      	ld         al, @0xFA28 <___libgatt_lib_db_2454>
   59765:	01B4      	or         al, #+0x1
   59766:	FA00      	**prefx    0xFA
   59767:	2825      	st         al, @0xFA28 <___libgatt_lib_db_2454>
   59768:	FA00      	**prefx    0xFA
   59769:	2015      	ld         al, @0xFA20 <___libgatt_lib_db_2439>
   5976A:	08B4      	or         al, #+0x8
   5976B:	FA00      	**prefx    0xFA
   5976C:	2025      	st         al, @0xFA20 <___libgatt_lib_db_2439>
   5976D:	0014      	ld         al, #+0x0
   5976E:	03E0      	bra        +0x3 <___libgatt_lib_db_5490+0xB3:0x59771[p]>
   5976F:	0C00      	**prefx    0xC
   59770:	0014      	ld         al, #+0xC00
   59771:	F10F      	leave      #-0xF

0x00059772 <___libgatt_lib_db_5492>:
   59772:	FB0B      	enter      #-0x5
   59773:	F825      	st         al, @0xFFF8 <(scratchpad)>
   59774:	F921      	st         ah, @0xFFF9 <(scratchpad)>
   59775:	051B      	ld         x, @(+0x5, y)
   59776:	0316      	ld         al, @(+0x3, x)
   59777:	1AF0      	bne        +0x1A <___libgatt_lib_db_5492+0x1F:0x59791[p]>
   59778:	6A00      	**prefx    0x6A
   59779:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5977A:	0010      	ld         ah, #+0x0
   5977B:	1D00      	**prefx    0x1D
   5977C:	4934      	add        al, #+0x1D49
   5977D:	0140      	addc       ah, #+0x1
   5977E:	FE27      	st         al, @(-0x2, y)
   5977F:	FF23      	st         ah, @(-0x1, y)
   59780:	002B      	st         x, @(0x0, y)
   59781:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   59782:	F911      	ld         ah, @0xFFF9 <(scratchpad)>
   59783:	FF0E      	ld         xh, @(-0x1, y)
   59784:	FE9F      	bsr        @(-0x2, y)
   59785:	0227      	st         al, @(+0x2, y)
   59786:	9400      	**prefx    0x94
   59787:	6114      	ld         al, #-0x6B9F
   59788:	0127      	st         al, @(+0x1, y)
   59789:	0514      	ld         al, #+0x5
   5978A:	0027      	st         al, @(0x0, y)
   5978B:	1614      	ld         al, #+0x16
   5978C:	0210      	ld         ah, #+0x2
   5978D:	FB00      	**prefx    0xFB
   5978E:	7A00      	**prefx    0x7A
   5978F:	DC9C      	bsr        -0x48624 <___libgatt_lib_db_4376:0x1116B[p]>
   59790:	0EE0      	bra        +0xE <___libgatt_lib_db_5492+0x2C:0x5979E[p]>
   59791:	0184      	cmp        al, #+0x1
   59792:	04F4      	beq        +0x4 <___libgatt_lib_db_5492+0x24:0x59796[p]>
   59793:	0C00      	**prefx    0xC
   59794:	0014      	ld         al, #+0xC00
   59795:	08E0      	bra        +0x8 <___libgatt_lib_db_5492+0x2B:0x5979D[p]>
   59796:	002B      	st         x, @(0x0, y)
   59797:	6A00      	**prefx    0x6A
   59798:	2C15      	ld         al, @0x6A2C <GattReadMultipleCharValues+0x3>
   59799:	0127      	st         al, @(+0x1, y)
   5979A:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   5979B:	FF00      	**prefx    0xFF
   5979C:	229C      	bsr        -0xDE <___libgatt_lib_db_5490:0x596BE[p]>
   5979D:	0227      	st         al, @(+0x2, y)
   5979E:	0217      	ld         al, @(+0x2, y)
   5979F:	FB0F      	leave      #-0x5

0x000597A0 <___libgatt_lib_db_5498>:
   597A0:	FE0B      	enter      #-0x2
   597A1:	F900      	**prefx    0xF9
   597A2:	669C      	bsr        -0x69A <___libgatt_lib_db_5656:0x59108[p]>
   597A3:	E199      	tst        @0xFFE1 <register al>
   597A4:	03F0      	bne        +0x3 <___libgatt_lib_db_5498+0x7:0x597A7[p]>
   597A5:	0014      	ld         al, #+0x0
   597A6:	F50F      	leave      #-0xB
   597A7:	FE0F      	leave      #-0x2

0x000597A8 <___libgatt_lib_db_5501>:
   597A8:	FA0B      	enter      #-0x6
   597A9:	DD00      	**prefx    0xDD
   597AA:	1C19      	ld         x, @0xDD1C <stream_audio_ig>
   597AB:	58F4      	beq        +0x58 <___libgatt_lib_db_5501+0x5B:0x59803[p]>
   597AC:	011A      	ld         x, @(+0x1, x)
   597AD:	0116      	ld         al, @(+0x1, x)
   597AE:	1C00      	**prefx    0x1C
   597AF:	0884      	cmp        al, #+0x1C08
   597B0:	53F0      	bne        +0x53 <___libgatt_lib_db_5501+0x5B:0x59803[p]>
   597B1:	0010      	ld         ah, #+0x0
   597B2:	0723      	st         ah, @(+0x7, y)
   597B3:	8100      	**prefx    0x81
   597B4:	C514      	ld         al, #-0x7F3B
   597B5:	0627      	st         al, @(+0x6, y)
   597B6:	DD00      	**prefx    0xDD
   597B7:	1C19      	ld         x, @0xDD1C <stream_audio_ig>
   597B8:	079A      	tst        @(+0x7, x)
   597B9:	33F4      	beq        +0x33 <___libgatt_lib_db_5501+0x44:0x597EC[p]>
   597BA:	FE00      	**prefx    0xFE
   597BB:	0615      	ld         al, @0xFE06 <___libgatt_lib_db_2211>
   597BC:	0612      	ld         ah, @(+0x6, x)
   597BD:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   597BE:	E181      	cmp        ah, @0xFFE1 <register al>
   597BF:	32FC      	bcs        +0x32 <___libgatt_lib_db_5501+0x49:0x597F1[p]>
   597C0:	E111      	ld         ah, @0xFFE1 <register al>
   597C1:	D000      	**prefx    0xD0
   597C2:	3131      	add        ah, @0xD031 <DATA_RAM_START+0x31>
   597C3:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   597C4:	E085      	cmp        al, @0xFFE0 <register ah>
   597C5:	2CF8      	bcc        +0x2C <___libgatt_lib_db_5501+0x49:0x597F1[p]>
   597C6:	F851      	sub        ah, @0xFFF8 <(scratchpad)>
   597C7:	0123      	st         ah, @(+0x1, y)
   597C8:	6A00      	**prefx    0x6A
   597C9:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   597CA:	0010      	ld         ah, #+0x0
   597CB:	7E00      	**prefx    0x7E
   597CC:	6E34      	add        al, #+0x7E6E
   597CD:	0040      	addc       ah, #+0x0
   597CE:	FE27      	st         al, @(-0x2, y)
   597CF:	FF23      	st         ah, @(-0x1, y)
   597D0:	0016      	ld         al, @(0x0, x)
   597D1:	0234      	add        al, #+0x2
   597D2:	0027      	st         al, @(0x0, y)
   597D3:	E315      	ld         al, @0xFFE3 <register uxl>
   597D4:	0113      	ld         ah, @(+0x1, y)
   597D5:	FF0E      	ld         xh, @(-0x1, y)
   597D6:	FE9F      	bsr        @(-0x2, y)
   597D7:	DD00      	**prefx    0xDD
   597D8:	1C19      	ld         x, @0xDD1C <stream_audio_ig>
   597D9:	0113      	ld         ah, @(+0x1, y)
   597DA:	0323      	st         ah, @(+0x3, y)
   597DB:	0014      	ld         al, #+0x0
   597DC:	0227      	st         al, @(+0x2, y)
   597DD:	0916      	ld         al, @(+0x9, x)
   597DE:	0812      	ld         ah, @(+0x8, x)
   597DF:	0357      	sub        al, @(+0x3, y)
   597E0:	0263      	subc       ah, @(+0x2, y)
   597E1:	0926      	st         al, @(+0x9, x)
   597E2:	0822      	st         ah, @(+0x8, x)
   597E3:	DD00      	**prefx    0xDD
   597E4:	1C19      	ld         x, @0xDD1C <stream_audio_ig>
   597E5:	0B16      	ld         al, @(+0xB, x)
   597E6:	0A12      	ld         ah, @(+0xA, x)
   597E7:	0337      	add        al, @(+0x3, y)
   597E8:	0243      	addc       ah, @(+0x2, y)
   597E9:	0B26      	st         al, @(+0xB, x)
   597EA:	0A22      	st         ah, @(+0xA, x)
   597EB:	06E0      	bra        +0x6 <___libgatt_lib_db_5501+0x49:0x597F1[p]>
   597EC:	069A      	tst        @(+0x6, x)
   597ED:	04F0      	bne        +0x4 <___libgatt_lib_db_5501+0x49:0x597F1[p]>
   597EE:	D600      	**prefx    0xD6
   597EF:	B615      	ld         al, @0xD5B6 <notify_disconnect+0x16>
   597F0:	0626      	st         al, @(+0x6, x)
   597F1:	DD00      	**prefx    0xDD
   597F2:	1C19      	ld         x, @0xDD1C <stream_audio_ig>
   597F3:	0716      	ld         al, @(+0x7, x)
   597F4:	D000      	**prefx    0xD0
   597F5:	3135      	add        al, @0xD031 <DATA_RAM_START+0x31>
   597F6:	0726      	st         al, @(+0x7, x)
   597F7:	6A00      	**prefx    0x6A
   597F8:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   597F9:	0010      	ld         ah, #+0x0
   597FA:	8000      	**prefx    0x80
   597FB:	8534      	add        al, #+0x7F85
   597FC:	0040      	addc       ah, #+0x0
   597FD:	FE27      	st         al, @(-0x2, y)
   597FE:	FF23      	st         ah, @(-0x1, y)
   597FF:	DD00      	**prefx    0xDD
   59800:	1C15      	ld         al, @0xDD1C <stream_audio_ig>
   59801:	FF0E      	ld         xh, @(-0x1, y)
   59802:	FE9F      	bsr        @(-0x2, y)
   59803:	FA0F      	leave      #-0x6

0x00059804 <___libgatt_lib_db_5500>:
   59804:	0014      	ld         al, #+0x0
   59805:	FE00      	**prefx    0xFE
   59806:	1025      	st         al, @0xFE10 <___libgatt_lib_db_2863>
   59807:	00E2      	bra        0x0, x

0x00059808 <.LFB4>:
   59808:	FE0B      	enter      #-0x2
   59809:	0300      	**prefx    0x3
   5980A:	5B9C      	bsr        +0x35B <___libgatt_lib_db_5536:0x59B65[p]>
   5980B:	0014      	ld         al, #+0x0
   5980C:	6A00      	**prefx    0x6A
   5980D:	2D25      	st         al, @0x6A2D <GattReadMultipleCharValues+0x4>
   5980E:	FE0F      	leave      #-0x2

0x0005980F <___libgatt_lib_db_5504>:
   5980F:	F70B      	enter      #-0x9
   59810:	6A00      	**prefx    0x6A
   59811:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59812:	0010      	ld         ah, #+0x0
   59813:	1100      	**prefx    0x11
   59814:	5434      	add        al, #+0x1154
   59815:	0140      	addc       ah, #+0x1
   59816:	FE27      	st         al, @(-0x2, y)
   59817:	FF23      	st         ah, @(-0x1, y)
   59818:	FF0E      	ld         xh, @(-0x1, y)
   59819:	FE9F      	bsr        @(-0x2, y)
   5981A:	6A00      	**prefx    0x6A
   5981B:	2D99      	tst        @0x6A2D <GattReadMultipleCharValues+0x4>
   5981C:	03F4      	beq        +0x3 <___libgatt_lib_db_5504+0x10:0x5981F[p]>
   5981D:	0300      	**prefx    0x3
   5981E:	479C      	bsr        +0x347 <___libgatt_lib_db_5536:0x59B65[p]>
   5981F:	6A00      	**prefx    0x6A
   59820:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59821:	0010      	ld         ah, #+0x0
   59822:	B300      	**prefx    0xB3
   59823:	3534      	add        al, #-0x4CCB
   59824:	0040      	addc       ah, #+0x0
   59825:	FE27      	st         al, @(-0x2, y)
   59826:	FF23      	st         ah, @(-0x1, y)
   59827:	6A00      	**prefx    0x6A
   59828:	2D15      	ld         al, @0x6A2D <GattReadMultipleCharValues+0x4>
   59829:	FF0E      	ld         xh, @(-0x1, y)
   5982A:	FE9F      	bsr        @(-0x2, y)
   5982B:	6A00      	**prefx    0x6A
   5982C:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5982D:	0010      	ld         ah, #+0x0
   5982E:	1100      	**prefx    0x11
   5982F:	5D34      	add        al, #+0x115D
   59830:	0140      	addc       ah, #+0x1
   59831:	0427      	st         al, @(+0x4, y)
   59832:	0323      	st         ah, @(+0x3, y)
   59833:	030E      	ld         xh, @(+0x3, y)
   59834:	049F      	bsr        @(+0x4, y)
   59835:	FB00      	**prefx    0xFB
   59836:	9300      	**prefx    0x93
   59837:	2F9C      	bsr        -0x56CD1 <TimeGet32:0x2B66[p]>
   59838:	E119      	ld         x, @0xFFE1 <register al>
   59839:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5983A:	6A00      	**prefx    0x6A
   5983B:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5983C:	0010      	ld         ah, #+0x0
   5983D:	B400      	**prefx    0xB4
   5983E:	1A34      	add        al, #-0x4BE6
   5983F:	0040      	addc       ah, #+0x0
   59840:	0627      	st         al, @(+0x6, y)
   59841:	0523      	st         ah, @(+0x5, y)
   59842:	E315      	ld         al, @0xFFE3 <register uxl>
   59843:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   59844:	0400      	**prefx    0x4
   59845:	E834      	add        al, #+0x3E8
   59846:	0040      	addc       ah, #+0x0
   59847:	0018      	ld         x, #+0x0
   59848:	002B      	st         x, @(0x0, y)
   59849:	9800      	**prefx    0x98
   5984A:	0818      	ld         x, #-0x67F8
   5984B:	022B      	st         x, @(+0x2, y)
   5984C:	0518      	ld         x, #+0x5
   5984D:	012B      	st         x, @(+0x1, y)
   5984E:	050E      	ld         xh, @(+0x5, y)
   5984F:	069F      	bsr        @(+0x6, y)
   59850:	6A00      	**prefx    0x6A
   59851:	2D25      	st         al, @0x6A2D <GattReadMultipleCharValues+0x4>
   59852:	F70F      	leave      #-0x9

0x00059853 <___libgatt_lib_db_5505>:
   59853:	FB0B      	enter      #-0x5
   59854:	1617      	ld         al, @(+0x16, y)
   59855:	0027      	st         al, @(0x0, y)
   59856:	B99C      	bsr        -0x47 <___libgatt_lib_db_5504:0x5980F[p]>
   59857:	6A00      	**prefx    0x6A
   59858:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59859:	0010      	ld         ah, #+0x0
   5985A:	AD00      	**prefx    0xAD
   5985B:	1C34      	add        al, #-0x52E4
   5985C:	0040      	addc       ah, #+0x0
   5985D:	0227      	st         al, @(+0x2, y)
   5985E:	0123      	st         ah, @(+0x1, y)
   5985F:	0017      	ld         al, @(0x0, y)
   59860:	010E      	ld         xh, @(+0x1, y)
   59861:	029F      	bsr        @(+0x2, y)
   59862:	FB0F      	leave      #-0x5

0x00059863 <.LFB4>:
   59863:	EB0B      	enter      #-0x15
   59864:	1223      	st         ah, @(+0x12, y)
   59865:	E411      	ld         ah, @0xFFE4 <register uy>
   59866:	0230      	add        ah, #+0x2
   59867:	FB00      	**prefx    0xFB
   59868:	EC00      	**prefx    0xEC
   59869:	B79C      	bsr        -0x51449 <___libgatt_lib_db_1293:0x8420[p]>
   5986A:	E415      	ld         al, @0xFFE4 <register uy>
   5986B:	0434      	add        al, #+0x4
   5986C:	0027      	st         al, @(0x0, y)
   5986D:	0714      	ld         al, #+0x7
   5986E:	E411      	ld         ah, @0xFFE4 <register uy>
   5986F:	0330      	add        ah, #+0x3
   59870:	FB00      	**prefx    0xFB
   59871:	EC00      	**prefx    0xEC
   59872:	139C      	bsr        -0x513ED <___libgatt_lib_db_1297:0x8485[p]>
   59873:	0413      	ld         ah, @(+0x4, y)
   59874:	0517      	ld         al, @(+0x5, y)
   59875:	0127      	st         al, @(+0x1, y)
   59876:	0023      	st         ah, @(0x0, y)
   59877:	E415      	ld         al, @0xFFE4 <register uy>
   59878:	0934      	add        al, #+0x9
   59879:	0313      	ld         ah, @(+0x3, y)
   5987A:	FB00      	**prefx    0xFB
   5987B:	0400      	**prefx    0x4
   5987C:	E29C      	bsr        -0x4FC1E <___libgatt_lib_db_1519:0x9C5E[p]>
   5987D:	0014      	ld         al, #+0x0
   5987E:	0027      	st         al, @(0x0, y)
   5987F:	1217      	ld         al, @(+0x12, y)
   59880:	0127      	st         al, @(+0x1, y)
   59881:	E415      	ld         al, @0xFFE4 <register uy>
   59882:	0F34      	add        al, #+0xF
   59883:	0010      	ld         ah, #+0x0
   59884:	FB00      	**prefx    0xFB
   59885:	0400      	**prefx    0x4
   59886:	D89C      	bsr        -0x4FC28 <___libgatt_lib_db_1519:0x9C5E[p]>
   59887:	E415      	ld         al, @0xFFE4 <register uy>
   59888:	0F34      	add        al, #+0xF
   59889:	0027      	st         al, @(0x0, y)
   5988A:	FD34      	add        al, #-0x3
   5988B:	E411      	ld         ah, @0xFFE4 <register uy>
   5988C:	0930      	add        ah, #+0x9
   5988D:	FB00      	**prefx    0xFB
   5988E:	9300      	**prefx    0x93
   5988F:	0E9C      	bsr        -0x56CF2 <TimeSub48:0x2B9D[p]>
   59890:	0D17      	ld         al, @(+0xD, y)
   59891:	0010      	ld         ah, #+0x0
   59892:	10A0      	asl        #0x10
   59893:	0CB7      	or         al, @(+0xC, y)
   59894:	0023      	st         ah, @(0x0, y)
   59895:	0127      	st         al, @(+0x1, y)
   59896:	0714      	ld         al, #+0x7
   59897:	0E13      	ld         ah, @(+0xE, y)
   59898:	FB00      	**prefx    0xFB
   59899:	EC00      	**prefx    0xEC
   5989A:	CA9C      	bsr        -0x51436 <___libgatt_lib_db_1302:0x8464[p]>
   5989B:	0B14      	ld         al, #+0xB
   5989C:	E411      	ld         ah, @0xFFE4 <register uy>
   5989D:	0630      	add        ah, #+0x6
   5989E:	FB00      	**prefx    0xFB
   5989F:	EC00      	**prefx    0xEC
   598A0:	AC9C      	bsr        -0x51454 <___libgatt_lib_db_1296:0x844C[p]>
   598A1:	1217      	ld         al, @(+0x12, y)
   598A2:	01A0      	asl        #0x1
   598A3:	0713      	ld         ah, @(+0x7, y)
   598A4:	E131      	add        ah, @0xFFE1 <register al>
   598A5:	0723      	st         ah, @(+0x7, y)
   598A6:	0817      	ld         al, @(+0x8, y)
   598A7:	F000      	**prefx    0xF0
   598A8:	00C4      	and        al, #0xF000
   598A9:	0827      	st         al, @(+0x8, y)
   598AA:	0B14      	ld         al, #+0xB
   598AB:	E411      	ld         ah, @0xFFE4 <register uy>
   598AC:	0630      	add        ah, #+0x6
   598AD:	FB00      	**prefx    0xFB
   598AE:	EB00      	**prefx    0xEB
   598AF:	7F9C      	bsr        -0x51481 <___libgatt_lib_db_1301:0x842E[p]>
   598B0:	E415      	ld         al, @0xFFE4 <register uy>
   598B1:	0234      	add        al, #+0x2
   598B2:	FB00      	**prefx    0xFB
   598B3:	EB00      	**prefx    0xEB
   598B4:	749C      	bsr        -0x5148C <___libgatt_lib_db_1298:0x8428[p]>
   598B5:	EB0F      	leave      #-0x15

0x000598B6 <___libgatt_lib_db_5514>:
   598B6:	E90B      	enter      #-0x17
   598B7:	2313      	ld         ah, @(+0x23, y)
   598B8:	0C23      	st         ah, @(+0xC, y)
   598B9:	2417      	ld         al, @(+0x24, y)
   598BA:	0B27      	st         al, @(+0xB, y)
   598BB:	271B      	ld         x, @(+0x27, y)
   598BC:	0A2B      	st         x, @(+0xA, y)
   598BD:	2213      	ld         ah, @(+0x22, y)
   598BE:	0923      	st         ah, @(+0x9, y)
   598BF:	2117      	ld         al, @(+0x21, y)
   598C0:	0827      	st         al, @(+0x8, y)
   598C1:	0780      	cmp        ah, #+0x7
   598C2:	0100      	**prefx    0x1
   598C3:	A6F8      	bcc        +0xA6 <___libgatt_lib_db_5514+0xB3:0x59969[p]>
   598C4:	0114      	ld         al, #+0x1
   598C5:	E0A1      	asl        @0xFFE0 <register ah>
   598C6:	E111      	ld         ah, @0xFFE1 <register al>
   598C7:	57C4      	and        al, #0x57
   598C8:	06F0      	bne        +0x6 <___libgatt_lib_db_5514+0x18:0x598CE[p]>
   598C9:	E015      	ld         al, @0xFFE0 <register ah>
   598CA:	20C4      	and        al, #0x20
   598CB:	22F0      	bne        +0x22 <___libgatt_lib_db_5514+0x37:0x598ED[p]>
   598CC:	0100      	**prefx    0x1
   598CD:	9CE0      	bra        +0x9C <___libgatt_lib_db_5514+0xB3:0x59969[p]>
   598CE:	0C1B      	ld         x, @(+0xC, y)
   598CF:	0016      	ld         al, @(0x0, x)
   598D0:	04C4      	and        al, #0x4
   598D1:	16F0      	bne        +0x16 <___libgatt_lib_db_5514+0x31:0x598E7[p]>
   598D2:	0817      	ld         al, @(+0x8, y)
   598D3:	E411      	ld         ah, @0xFFE4 <register uy>
   598D4:	0230      	add        ah, #+0x2
   598D5:	E300      	**prefx    0xE3
   598D6:	0B9C      	bsr        -0x1CF5 <___libgatt_lib_db_5516:0x57BE1[p]>
   598D7:	6A00      	**prefx    0x6A
   598D8:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   598D9:	0010      	ld         ah, #+0x0
   598DA:	7800      	**prefx    0x78
   598DB:	6334      	add        al, #+0x7863
   598DC:	0040      	addc       ah, #+0x0
   598DD:	0E27      	st         al, @(+0xE, y)
   598DE:	0D23      	st         ah, @(+0xD, y)
   598DF:	0A13      	ld         ah, @(+0xA, y)
   598E0:	0023      	st         ah, @(0x0, y)
   598E1:	0217      	ld         al, @(+0x2, y)
   598E2:	0127      	st         al, @(+0x1, y)
   598E3:	0917      	ld         al, @(+0x9, y)
   598E4:	0B13      	ld         ah, @(+0xB, y)
   598E5:	0D0E      	ld         xh, @(+0xD, y)
   598E6:	0E9F      	bsr        @(+0xE, y)
   598E7:	0018      	ld         x, #+0x0
   598E8:	182B      	st         x, @(+0x18, y)
   598E9:	8900      	**prefx    0x89
   598EA:	3910      	ld         ah, #-0x76C7
   598EB:	1723      	st         ah, @(+0x17, y)
   598EC:	7DE0      	bra        +0x7D <___libgatt_lib_db_5514+0xB3:0x59969[p]>
   598ED:	0B1B      	ld         x, @(+0xB, y)
   598EE:	2312      	ld         ah, @(+0x23, x)
   598EF:	0009      	**unsigned
   598F0:	05A4      	lsr        #0x5
   598F1:	E019      	ld         x, @0xFFE0 <register ah>
   598F2:	07C8      	and        x, #0x7
   598F3:	05F0      	bne        +0x5 <___libgatt_lib_db_5514+0x42:0x598F8[p]>
   598F4:	0200      	**prefx    0x2
   598F5:	0D10      	ld         ah, #+0x20D
   598F6:	FB21      	st         ah, @0xFFFB <(scratchpad)>
   598F7:	04E0      	bra        +0x4 <___libgatt_lib_db_5514+0x45:0x598FB[p]>
   598F8:	1600      	**prefx    0x16
   598F9:	F01A      	ld         x, @(+0x15F0, x)
   598FA:	FB29      	st         x, @0xFFFB <(scratchpad)>
   598FB:	F300      	**prefx    0xF3
   598FC:	4215      	ld         al, @0xF342 <___libgatt_lib_db_2878>
   598FD:	FA25      	st         al, @0xFFFA <(scratchpad)>
   598FE:	0B1B      	ld         x, @(+0xB, y)
   598FF:	1512      	ld         ah, @(+0x15, x)
   59900:	0009      	**unsigned
   59901:	01A4      	lsr        #0x1
   59902:	0130      	add        ah, #+0x1
   59903:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   59904:	1716      	ld         al, @(+0x17, x)
   59905:	08A0      	asl        #0x8
   59906:	16B6      	or         al, @(+0x16, x)
   59907:	F835      	add        al, @0xFFF8 <(scratchpad)>
   59908:	0009      	**unsigned
   59909:	0500      	**prefx    0x5
   5990A:	E290      	umult      #0x4E2
   5990B:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5990C:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5990D:	FB19      	ld         x, @0xFFFB <(scratchpad)>
   5990E:	FA39      	add        x, @0xFFFA <(scratchpad)>
   5990F:	FA29      	st         x, @0xFFFA <(scratchpad)>
   59910:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   59911:	FA91      	smult      @0xFFFA <(scratchpad)>
   59912:	E119      	ld         x, @0xFFE1 <register al>
   59913:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   59914:	0009      	**unsigned
   59915:	FA91      	umult      @0xFFFA <(scratchpad)>
   59916:	FA21      	st         ah, @0xFFFA <(scratchpad)>
   59917:	FA39      	add        x, @0xFFFA <(scratchpad)>
   59918:	E311      	ld         ah, @0xFFE3 <register uxl>
   59919:	0009      	**unsigned
   5991A:	04A4      	lsr        #0x4
   5991B:	0817      	ld         al, @(+0x8, y)
   5991C:	FF00      	**prefx    0xFF
   5991D:	469C      	bsr        -0xBA <.LFB4:0x59863[p]>
   5991E:	0817      	ld         al, @(+0x8, y)
   5991F:	E411      	ld         ah, @0xFFE4 <register uy>
   59920:	0330      	add        ah, #+0x3
   59921:	FB00      	**prefx    0xFB
   59922:	EB00      	**prefx    0xEB
   59923:	FD9C      	bsr        -0x51503 <___libgatt_lib_db_1293:0x8420[p]>
   59924:	6A00      	**prefx    0x6A
   59925:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59926:	0010      	ld         ah, #+0x0
   59927:	8500      	**prefx    0x85
   59928:	EF34      	add        al, #-0x7B11
   59929:	0040      	addc       ah, #+0x0
   5992A:	1027      	st         al, @(+0x10, y)
   5992B:	0F23      	st         ah, @(+0xF, y)
   5992C:	1814      	ld         al, #+0x18
   5992D:	0F0E      	ld         xh, @(+0xF, y)
   5992E:	109F      	bsr        @(+0x10, y)
   5992F:	0727      	st         al, @(+0x7, y)
   59930:	2F14      	ld         al, #+0x2F
   59931:	E411      	ld         ah, @0xFFE4 <register uy>
   59932:	0430      	add        ah, #+0x4
   59933:	FB00      	**prefx    0xFB
   59934:	EB00      	**prefx    0xEB
   59935:	179C      	bsr        -0x514E9 <___libgatt_lib_db_1296:0x844C[p]>
   59936:	E415      	ld         al, @0xFFE4 <register uy>
   59937:	0334      	add        al, #+0x3
   59938:	FB00      	**prefx    0xFB
   59939:	EB00      	**prefx    0xEB
   5993A:	EE9C      	bsr        -0x51512 <___libgatt_lib_db_1298:0x8428[p]>
   5993B:	6A00      	**prefx    0x6A
   5993C:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5993D:	0010      	ld         ah, #+0x0
   5993E:	9100      	**prefx    0x91
   5993F:	0634      	add        al, #-0x6EFA
   59940:	0040      	addc       ah, #+0x0
   59941:	1227      	st         al, @(+0x12, y)
   59942:	1123      	st         ah, @(+0x11, y)
   59943:	E419      	ld         x, @0xFFE4 <register uy>
   59944:	0438      	add        x, #+0x4
   59945:	002B      	st         x, @(0x0, y)
   59946:	0014      	ld         al, #+0x0
   59947:	0713      	ld         ah, @(+0x7, y)
   59948:	110E      	ld         xh, @(+0x11, y)
   59949:	129F      	bsr        @(+0x12, y)
   5994A:	E199      	tst        @0xFFE1 <register al>
   5994B:	1CF4      	beq        +0x1C <___libgatt_lib_db_5514+0xB1:0x59967[p]>
   5994C:	6A00      	**prefx    0x6A
   5994D:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5994E:	0010      	ld         ah, #+0x0
   5994F:	9D00      	**prefx    0x9D
   59950:	6034      	add        al, #-0x62A0
   59951:	0040      	addc       ah, #+0x0
   59952:	FE27      	st         al, @(-0x2, y)
   59953:	FF23      	st         ah, @(-0x1, y)
   59954:	0C17      	ld         al, @(+0xC, y)
   59955:	FF0E      	ld         xh, @(-0x1, y)
   59956:	FE9F      	bsr        @(-0x2, y)
   59957:	6A00      	**prefx    0x6A
   59958:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59959:	0010      	ld         ah, #+0x0
   5995A:	8800      	**prefx    0x88
   5995B:	FA34      	add        al, #-0x7806
   5995C:	0040      	addc       ah, #+0x0
   5995D:	1427      	st         al, @(+0x14, y)
   5995E:	1323      	st         ah, @(+0x13, y)
   5995F:	130E      	ld         xh, @(+0x13, y)
   59960:	149F      	bsr        @(+0x14, y)
   59961:	0010      	ld         ah, #+0x0
   59962:	1823      	st         ah, @(+0x18, y)
   59963:	A000      	**prefx    0xA0
   59964:	AD14      	ld         al, #-0x6053
   59965:	1727      	st         al, @(+0x17, y)
   59966:	03E0      	bra        +0x3 <___libgatt_lib_db_5514+0xB3:0x59969[p]>
   59967:	0018      	ld         x, #+0x0
   59968:	322B      	st         x, @(+0x32, y)
   59969:	E90F      	leave      #-0x17

0x0005996A <.LFB4>:
   5996A:	FE0B      	enter      #-0x2
   5996B:	F925      	st         al, @0xFFF9 <(scratchpad)>
   5996C:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   5996D:	E015      	ld         al, @0xFFE0 <register ah>
   5996E:	03A0      	asl        #0x3
   5996F:	E119      	ld         x, @0xFFE1 <register al>
   59970:	DA00      	**prefx    0xDA
   59971:	6038      	add        x, #-0x25A0
   59972:	1416      	ld         al, @(+0x14, x)
   59973:	FF84      	cmp        al, #-0x1
   59974:	03F0      	bne        +0x3 <.LFB4+0xD:0x59977[p]>
   59975:	0014      	ld         al, #+0x0
   59976:	1326      	st         al, @(+0x13, x)
   59977:	6A00      	**prefx    0x6A
   59978:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59979:	0010      	ld         ah, #+0x0
   5997A:	9000      	**prefx    0x90
   5997B:	4634      	add        al, #-0x6FBA
   5997C:	0040      	addc       ah, #+0x0
   5997D:	FE27      	st         al, @(-0x2, y)
   5997E:	FF23      	st         ah, @(-0x1, y)
   5997F:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   59980:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   59981:	FF0E      	ld         xh, @(-0x1, y)
   59982:	FE9F      	bsr        @(-0x2, y)
   59983:	FE0F      	leave      #-0x2

0x00059984 <.LFB5>:
   59984:	0010      	ld         ah, #+0x0
   59985:	E5E0      	bra        -0x1B <.LFB4:0x5996A[p]>

0x00059986 <.LFB6>:
   59986:	0110      	ld         ah, #+0x1
   59987:	E3E0      	bra        -0x1D <.LFB4:0x5996A[p]>

0x00059988 <.LFB7>:
   59988:	0210      	ld         ah, #+0x2
   59989:	E1E0      	bra        -0x1F <.LFB4:0x5996A[p]>

0x0005998A <.LFB8>:
   5998A:	0310      	ld         ah, #+0x3
   5998B:	DFE0      	bra        -0x21 <.LFB4:0x5996A[p]>

0x0005998C <___libgatt_lib_db_5520>:
   5998C:	F10B      	enter      #-0xF
   5998D:	1017      	ld         al, @(+0x10, y)
   5998E:	0F1B      	ld         x, @(+0xF, y)
   5998F:	1313      	ld         ah, @(+0x13, y)
   59990:	0623      	st         ah, @(+0x6, y)
   59991:	0010      	ld         ah, #+0x0
   59992:	10A0      	asl        #0x10
   59993:	E3B5      	or         al, @0xFFE3 <register uxl>
   59994:	E099      	tst        @0xFFE0 <register ah>
   59995:	58F0      	bne        +0x58 <___libgatt_lib_db_5520+0x61:0x599ED[p]>
   59996:	9D00      	**prefx    0x9D
   59997:	6884      	cmp        al, #-0x6298
   59998:	55F0      	bne        +0x55 <___libgatt_lib_db_5520+0x61:0x599ED[p]>
   59999:	6100      	**prefx    0x61
   5999A:	F815      	ld         al, @0x60F8 <___libgatt_lib_db_5570+0x12>
   5999B:	1084      	cmp        al, #+0x10
   5999C:	49F8      	bcc        +0x49 <___libgatt_lib_db_5520+0x59:0x599E5[p]>
   5999D:	6A00      	**prefx    0x6A
   5999E:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   5999F:	8400      	**prefx    0x84
   599A0:	2034      	add        al, #-0x7BE0
   599A1:	0040      	addc       ah, #+0x0
   599A2:	FE27      	st         al, @(-0x2, y)
   599A3:	FF23      	st         ah, @(-0x1, y)
   599A4:	0617      	ld         al, @(+0x6, y)
   599A5:	E411      	ld         ah, @0xFFE4 <register uy>
   599A6:	0230      	add        ah, #+0x2
   599A7:	FF0E      	ld         xh, @(-0x1, y)
   599A8:	FE9F      	bsr        @(-0x2, y)
   599A9:	6A00      	**prefx    0x6A
   599AA:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   599AB:	0010      	ld         ah, #+0x0
   599AC:	8500      	**prefx    0x85
   599AD:	8534      	add        al, #-0x7B7B
   599AE:	0040      	addc       ah, #+0x0
   599AF:	0827      	st         al, @(+0x8, y)
   599B0:	0723      	st         ah, @(+0x7, y)
   599B1:	E415      	ld         al, @0xFFE4 <register uy>
   599B2:	0434      	add        al, #+0x4
   599B3:	0027      	st         al, @(0x0, y)
   599B4:	2114      	ld         al, #+0x21
   599B5:	E411      	ld         ah, @0xFFE4 <register uy>
   599B6:	0330      	add        ah, #+0x3
   599B7:	070E      	ld         xh, @(+0x7, y)
   599B8:	089F      	bsr        @(+0x8, y)
   599B9:	6100      	**prefx    0x61
   599BA:	F815      	ld         al, @0x60F8 <___libgatt_lib_db_5570+0x12>
   599BB:	0010      	ld         ah, #+0x0
   599BC:	0EA0      	asl        #0xE
   599BD:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   599BE:	E119      	ld         x, @0xFFE1 <register al>
   599BF:	0517      	ld         al, @(+0x5, y)
   599C0:	4000      	**prefx    0x40
   599C1:	FFC4      	and        al, #0x3FFF
   599C2:	0413      	ld         ah, @(+0x4, y)
   599C3:	FCC0      	and        ah, #0xFFFC
   599C4:	E3B5      	or         al, @0xFFE3 <register uxl>
   599C5:	F8B1      	or         ah, @0xFFF8 <(scratchpad)>
   599C6:	F825      	st         al, @0xFFF8 <(scratchpad)>
   599C7:	E019      	ld         x, @0xFFE0 <register ah>
   599C8:	0423      	st         ah, @(+0x4, y)
   599C9:	0527      	st         al, @(+0x5, y)
   599CA:	6A00      	**prefx    0x6A
   599CB:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   599CC:	0010      	ld         ah, #+0x0
   599CD:	8400      	**prefx    0x84
   599CE:	6434      	add        al, #-0x7B9C
   599CF:	0040      	addc       ah, #+0x0
   599D0:	0A27      	st         al, @(+0xA, y)
   599D1:	0923      	st         ah, @(+0x9, y)
   599D2:	002B      	st         x, @(0x0, y)
   599D3:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   599D4:	012B      	st         x, @(+0x1, y)
   599D5:	2114      	ld         al, #+0x21
   599D6:	0313      	ld         ah, @(+0x3, y)
   599D7:	090E      	ld         xh, @(+0x9, y)
   599D8:	0A9F      	bsr        @(+0xA, y)
   599D9:	6A00      	**prefx    0x6A
   599DA:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   599DB:	0010      	ld         ah, #+0x0
   599DC:	8400      	**prefx    0x84
   599DD:	2834      	add        al, #-0x7BD8
   599DE:	0040      	addc       ah, #+0x0
   599DF:	0C27      	st         al, @(+0xC, y)
   599E0:	0B23      	st         ah, @(+0xB, y)
   599E1:	E415      	ld         al, @0xFFE4 <register uy>
   599E2:	0234      	add        al, #+0x2
   599E3:	0B0E      	ld         xh, @(+0xB, y)
   599E4:	0C9F      	bsr        @(+0xC, y)
   599E5:	0617      	ld         al, @(+0x6, y)
   599E6:	0390      	smult      #+0x3
   599E7:	E119      	ld         x, @0xFFE1 <register al>
   599E8:	F000      	**prefx    0xF0
   599E9:	4010      	ld         ah, #-0xFC0
   599EA:	F300      	**prefx    0xF3
   599EB:	3122      	st         ah, @(-0xCCF, x)
   599EC:	03E0      	bra        +0x3 <___libgatt_lib_db_5520+0x63:0x599EF[p]>
   599ED:	FE00      	**prefx    0xFE
   599EE:	219C      	bsr        -0x1DF <___libgatt_lib_db_5504:0x5980F[p]>
   599EF:	DD00      	**prefx    0xDD
   599F0:	3918      	ld         x, #-0x22C7
   599F1:	9A00      	**prefx    0x9A
   599F2:	8414      	ld         al, #-0x667C
   599F3:	7526      	st         al, @(+0x75, x)
   599F4:	0510      	ld         ah, #+0x5
   599F5:	7422      	st         ah, @(+0x74, x)
   599F6:	9A00      	**prefx    0x9A
   599F7:	8614      	ld         al, #-0x667A
   599F8:	0100      	**prefx    0x1
   599F9:	DB26      	st         al, @(+0xDB, x)
   599FA:	0510      	ld         ah, #+0x5
   599FB:	0100      	**prefx    0x1
   599FC:	DA22      	st         ah, @(+0xDA, x)
   599FD:	9A00      	**prefx    0x9A
   599FE:	8814      	ld         al, #-0x6678
   599FF:	0100      	**prefx    0x1
   59A00:	4126      	st         al, @(+0x141, x)
   59A01:	0510      	ld         ah, #+0x5
   59A02:	0100      	**prefx    0x1
   59A03:	4022      	st         ah, @(+0x140, x)
   59A04:	9A00      	**prefx    0x9A
   59A05:	8A14      	ld         al, #-0x6676
   59A06:	0200      	**prefx    0x2
   59A07:	A726      	st         al, @(+0x1A7, x)
   59A08:	0510      	ld         ah, #+0x5
   59A09:	0200      	**prefx    0x2
   59A0A:	A622      	st         ah, @(+0x1A6, x)
   59A0B:	F10F      	leave      #-0xF

0x00059A0C <___libgatt_lib_db_5525>:
   59A0C:	F80B      	enter      #-0x8
   59A0D:	1217      	ld         al, @(+0x12, y)
   59A0E:	111B      	ld         x, @(+0x11, y)
   59A0F:	0010      	ld         ah, #+0x0
   59A10:	10A0      	asl        #0x10
   59A11:	E3B5      	or         al, @0xFFE3 <register uxl>
   59A12:	6A00      	**prefx    0x6A
   59A13:	2F25      	st         al, @0x6A2F <GattReadMultipleCharValues+0x6>
   59A14:	6A00      	**prefx    0x6A
   59A15:	2E21      	st         ah, @0x6A2E <GattReadMultipleCharValues+0x5>
   59A16:	0514      	ld         al, #+0x5
   59A17:	1227      	st         al, @(+0x12, y)
   59A18:	9A00      	**prefx    0x9A
   59A19:	6914      	ld         al, #-0x6597
   59A1A:	1127      	st         al, @(+0x11, y)
   59A1B:	6A00      	**prefx    0x6A
   59A1C:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59A1D:	0010      	ld         ah, #+0x0
   59A1E:	AD00      	**prefx    0xAD
   59A1F:	1C34      	add        al, #-0x52E4
   59A20:	0040      	addc       ah, #+0x0
   59A21:	FE27      	st         al, @(-0x2, y)
   59A22:	FF23      	st         ah, @(-0x1, y)
   59A23:	0014      	ld         al, #+0x0
   59A24:	FF0E      	ld         xh, @(-0x1, y)
   59A25:	FE9F      	bsr        @(-0x2, y)
   59A26:	6A00      	**prefx    0x6A
   59A27:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59A28:	0010      	ld         ah, #+0x0
   59A29:	AD00      	**prefx    0xAD
   59A2A:	1C34      	add        al, #-0x52E4
   59A2B:	0040      	addc       ah, #+0x0
   59A2C:	0127      	st         al, @(+0x1, y)
   59A2D:	0023      	st         ah, @(0x0, y)
   59A2E:	0114      	ld         al, #+0x1
   59A2F:	000E      	ld         xh, @(0x0, y)
   59A30:	019F      	bsr        @(+0x1, y)
   59A31:	6A00      	**prefx    0x6A
   59A32:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59A33:	0010      	ld         ah, #+0x0
   59A34:	AD00      	**prefx    0xAD
   59A35:	1C34      	add        al, #-0x52E4
   59A36:	0040      	addc       ah, #+0x0
   59A37:	0327      	st         al, @(+0x3, y)
   59A38:	0223      	st         ah, @(+0x2, y)
   59A39:	0214      	ld         al, #+0x2
   59A3A:	020E      	ld         xh, @(+0x2, y)
   59A3B:	039F      	bsr        @(+0x3, y)
   59A3C:	6A00      	**prefx    0x6A
   59A3D:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59A3E:	0010      	ld         ah, #+0x0
   59A3F:	AD00      	**prefx    0xAD
   59A40:	1C34      	add        al, #-0x52E4
   59A41:	0040      	addc       ah, #+0x0
   59A42:	0527      	st         al, @(+0x5, y)
   59A43:	0423      	st         ah, @(+0x4, y)
   59A44:	0314      	ld         al, #+0x3
   59A45:	040E      	ld         xh, @(+0x4, y)
   59A46:	059F      	bsr        @(+0x5, y)
   59A47:	F80F      	leave      #-0x8

0x00059A48 <___libgatt_lib_db_5526>:
   59A48:	FE0B      	enter      #-0x2
   59A49:	1017      	ld         al, @(+0x10, y)
   59A4A:	0F1B      	ld         x, @(+0xF, y)
   59A4B:	0010      	ld         ah, #+0x0
   59A4C:	10A0      	asl        #0x10
   59A4D:	E3B5      	or         al, @0xFFE3 <register uxl>
   59A4E:	6A00      	**prefx    0x6A
   59A4F:	3125      	st         al, @0x6A31 <GattReadMultipleCharValues+0x8>
   59A50:	6A00      	**prefx    0x6A
   59A51:	3021      	st         ah, @0x6A30 <GattReadMultipleCharValues+0x7>
   59A52:	0514      	ld         al, #+0x5
   59A53:	1027      	st         al, @(+0x10, y)
   59A54:	9B00      	**prefx    0x9B
   59A55:	9514      	ld         al, #-0x656B
   59A56:	0F27      	st         al, @(+0xF, y)
   59A57:	FE0F      	leave      #-0x2

0x00059A58 <___libgatt_lib_db_5524>:
   59A58:	FB00      	**prefx    0xFB
   59A59:	1A15      	ld         al, @0xFB1A <___libgatt_lib_db_2594>
   59A5A:	E100      	**prefx    0xE1
   59A5B:	E0C4      	and        al, #0xE0E0
   59A5C:	1400      	**prefx    0x14
   59A5D:	14B4      	or         al, #+0x1414
   59A5E:	FB00      	**prefx    0xFB
   59A5F:	1A25      	st         al, @0xFB1A <___libgatt_lib_db_2594>
   59A60:	2000      	**prefx    0x20
   59A61:	F114      	ld         al, #+0x1FF1
   59A62:	FB00      	**prefx    0xFB
   59A63:	1D25      	st         al, @0xFB1D <___libgatt_lib_db_2609>
   59A64:	0A00      	**prefx    0xA
   59A65:	FF14      	ld         al, #+0x9FF
   59A66:	FB00      	**prefx    0xFB
   59A67:	1C25      	st         al, @0xFB1C <___libgatt_lib_db_2608>
   59A68:	00E2      	bra        0x0, x

0x00059A69 <.LFB5>:
   59A69:	FB0B      	enter      #-0x5
   59A6A:	0227      	st         al, @(+0x2, y)
   59A6B:	12F0      	bne        +0x12 <.LFB5+0x14:0x59A7D[p]>
   59A6C:	6A00      	**prefx    0x6A
   59A6D:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59A6E:	0010      	ld         ah, #+0x0
   59A6F:	1100      	**prefx    0x11
   59A70:	6B34      	add        al, #+0x116B
   59A71:	0140      	addc       ah, #+0x1
   59A72:	FE27      	st         al, @(-0x2, y)
   59A73:	FF23      	st         ah, @(-0x1, y)
   59A74:	9B00      	**prefx    0x9B
   59A75:	AD14      	ld         al, #-0x6553
   59A76:	0127      	st         al, @(+0x1, y)
   59A77:	0514      	ld         al, #+0x5
   59A78:	0027      	st         al, @(0x0, y)
   59A79:	0A14      	ld         al, #+0xA
   59A7A:	0310      	ld         ah, #+0x3
   59A7B:	FF0E      	ld         xh, @(-0x1, y)
   59A7C:	FE9F      	bsr        @(-0x2, y)
   59A7D:	FB00      	**prefx    0xFB
   59A7E:	1A15      	ld         al, @0xFB1A <___libgatt_lib_db_2594>
   59A7F:	E100      	**prefx    0xE1
   59A80:	E0C4      	and        al, #0xE0E0
   59A81:	1C00      	**prefx    0x1C
   59A82:	1CB4      	or         al, #+0x1C1C
   59A83:	FB00      	**prefx    0xFB
   59A84:	1A25      	st         al, @0xFB1A <___libgatt_lib_db_2594>
   59A85:	0E00      	**prefx    0xE
   59A86:	D014      	ld         al, #+0xDD0
   59A87:	FB00      	**prefx    0xFB
   59A88:	1D25      	st         al, @0xFB1D <___libgatt_lib_db_2609>
   59A89:	0A00      	**prefx    0xA
   59A8A:	DD14      	ld         al, #+0x9DD
   59A8B:	FB00      	**prefx    0xFB
   59A8C:	1C25      	st         al, @0xFB1C <___libgatt_lib_db_2608>
   59A8D:	6A00      	**prefx    0x6A
   59A8E:	2E15      	ld         al, @0x6A2E <GattReadMultipleCharValues+0x5>
   59A8F:	0427      	st         al, @(+0x4, y)
   59A90:	6A00      	**prefx    0x6A
   59A91:	2F15      	ld         al, @0x6A2F <GattReadMultipleCharValues+0x6>
   59A92:	0327      	st         al, @(+0x3, y)
   59A93:	0217      	ld         al, @(+0x2, y)
   59A94:	FB0F      	leave      #-0x5

0x00059A95 <.LFB6>:
   59A95:	FE0B      	enter      #-0x2
   59A96:	FB00      	**prefx    0xFB
   59A97:	1A11      	ld         ah, @0xFB1A <___libgatt_lib_db_2594>
   59A98:	E100      	**prefx    0xE1
   59A99:	E0C0      	and        ah, #0xE0E0
   59A9A:	1C00      	**prefx    0x1C
   59A9B:	1CB0      	or         ah, #+0x1C1C
   59A9C:	FB00      	**prefx    0xFB
   59A9D:	1A21      	st         ah, @0xFB1A <___libgatt_lib_db_2594>
   59A9E:	0E00      	**prefx    0xE
   59A9F:	D018      	ld         x, #+0xDD0
   59AA0:	FB00      	**prefx    0xFB
   59AA1:	1D29      	st         x, @0xFB1D <___libgatt_lib_db_2609>
   59AA2:	0A00      	**prefx    0xA
   59AA3:	DD18      	ld         x, #+0x9DD
   59AA4:	FB00      	**prefx    0xFB
   59AA5:	1C29      	st         x, @0xFB1C <___libgatt_lib_db_2608>
   59AA6:	6A00      	**prefx    0x6A
   59AA7:	3019      	ld         x, @0x6A30 <GattReadMultipleCharValues+0x7>
   59AA8:	012B      	st         x, @(+0x1, y)
   59AA9:	6A00      	**prefx    0x6A
   59AAA:	3119      	ld         x, @0x6A31 <GattReadMultipleCharValues+0x8>
   59AAB:	002B      	st         x, @(0x0, y)
   59AAC:	FE0F      	leave      #-0x2

0x00059AAD <.LFB7>:
   59AAD:	FC0B      	enter      #-0x4
   59AAE:	0127      	st         al, @(+0x1, y)
   59AAF:	F300      	**prefx    0xF3
   59AB0:	E811      	ld         ah, @0xF2E8 <___libgatt_lib_db_3086>
   59AB1:	0009      	**unsigned
   59AB2:	04A4      	lsr        #0x4
   59AB3:	07C0      	and        ah, #0x7
   59AB4:	19F0      	bne        +0x19 <.LFB7+0x20:0x59ACD[p]>
   59AB5:	0014      	ld         al, #+0x0
   59AB6:	E411      	ld         ah, @0xFFE4 <register uy>
   59AB7:	E100      	**prefx    0xE1
   59AB8:	299C      	bsr        -0x1ED7 <___libgatt_lib_db_5516:0x57BE1[p]>
   59AB9:	DD00      	**prefx    0xDD
   59ABA:	3D15      	ld         al, @0xDD3D <le_device+0x4>
   59ABB:	DD00      	**prefx    0xDD
   59ABC:	3C11      	ld         ah, @0xDD3C <le_device+0x3>
   59ABD:	1434      	add        al, #+0x14
   59ABE:	0040      	addc       ah, #+0x0
   59ABF:	FA25      	st         al, @0xFFFA <(scratchpad)>
   59AC0:	E019      	ld         x, @0xFFE0 <register ah>
   59AC1:	0013      	ld         ah, @(0x0, y)
   59AC2:	10A4      	asr        #0x10
   59AC3:	F925      	st         al, @0xFFF9 <(scratchpad)>
   59AC4:	F821      	st         ah, @0xFFF8 <(scratchpad)>
   59AC5:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   59AC6:	E311      	ld         ah, @0xFFE3 <register uxl>
   59AC7:	F935      	add        al, @0xFFF9 <(scratchpad)>
   59AC8:	F841      	addc       ah, @0xFFF8 <(scratchpad)>
   59AC9:	DD00      	**prefx    0xDD
   59ACA:	3D25      	st         al, @0xDD3D <le_device+0x4>
   59ACB:	DD00      	**prefx    0xDD
   59ACC:	3C21      	st         ah, @0xDD3C <le_device+0x3>
   59ACD:	6A00      	**prefx    0x6A
   59ACE:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59ACF:	0010      	ld         ah, #+0x0
   59AD0:	A700      	**prefx    0xA7
   59AD1:	3A34      	add        al, #-0x58C6
   59AD2:	0040      	addc       ah, #+0x0
   59AD3:	FE27      	st         al, @(-0x2, y)
   59AD4:	FF23      	st         ah, @(-0x1, y)
   59AD5:	0117      	ld         al, @(+0x1, y)
   59AD6:	FF0E      	ld         xh, @(-0x1, y)
   59AD7:	FE9F      	bsr        @(-0x2, y)
   59AD8:	FC0F      	leave      #-0x4

0x00059AD9 <___libgatt_lib_db_5530>:
   59AD9:	FE0B      	enter      #-0x2
   59ADA:	1B1B      	ld         x, @(+0x1B, y)
   59ADB:	0016      	ld         al, @(0x0, x)
   59ADC:	40C4      	and        al, #0x40
   59ADD:	08F0      	bne        +0x8 <___libgatt_lib_db_5530+0xC:0x59AE5[p]>
   59ADE:	2E9A      	tst        @(+0x2E, x)
   59ADF:	06F0      	bne        +0x6 <___libgatt_lib_db_5530+0xC:0x59AE5[p]>
   59AE0:	0614      	ld         al, #+0x6
   59AE1:	2E26      	st         al, @(+0x2E, x)
   59AE2:	0D00      	**prefx    0xD
   59AE3:	8014      	ld         al, #+0xC80
   59AE4:	2F26      	st         al, @(+0x2F, x)
   59AE5:	FE0F      	leave      #-0x2

0x00059AE6 <___libgatt_lib_db_5532>:
   59AE6:	F20B      	enter      #-0xE
   59AE7:	0F17      	ld         al, @(+0xF, y)
   59AE8:	0E1B      	ld         x, @(+0xE, y)
   59AE9:	0010      	ld         ah, #+0x0
   59AEA:	10A0      	asl        #0x10
   59AEB:	E3B5      	or         al, @0xFFE3 <register uxl>
   59AEC:	E099      	tst        @0xFFE0 <register ah>
   59AED:	60F0      	bne        +0x60 <___libgatt_lib_db_5532+0x67:0x59B4D[p]>
   59AEE:	A600      	**prefx    0xA6
   59AEF:	8A84      	cmp        al, #-0x5A76
   59AF0:	5DF0      	bne        +0x5D <___libgatt_lib_db_5532+0x67:0x59B4D[p]>
   59AF1:	1217      	ld         al, @(+0x12, y)
   59AF2:	4C27      	st         al, @(+0x4C, y)
   59AF3:	3F17      	ld         al, @(+0x3F, y)
   59AF4:	0927      	st         al, @(+0x9, y)
   59AF5:	6690      	smult      #+0x66
   59AF6:	E119      	ld         x, @0xFFE1 <register al>
   59AF7:	DD00      	**prefx    0xDD
   59AF8:	6716      	ld         al, @(-0x2299, x)
   59AF9:	4827      	st         al, @(+0x48, y)
   59AFA:	FB00      	**prefx    0xFB
   59AFB:	7600      	**prefx    0x76
   59AFC:	589C      	bsr        -0x489A8 <___libgatt_lib_db_4375:0x11154[p]>
   59AFD:	0917      	ld         al, @(+0x9, y)
   59AFE:	E411      	ld         ah, @0xFFE4 <register uy>
   59AFF:	0130      	add        ah, #+0x1
   59B00:	FB00      	**prefx    0xFB
   59B01:	E900      	**prefx    0xE9
   59B02:	1E9C      	bsr        -0x516E2 <___libgatt_lib_db_1293:0x8420[p]>
   59B03:	0117      	ld         al, @(+0x1, y)
   59B04:	1327      	st         al, @(+0x13, y)
   59B05:	3514      	ld         al, #+0x35
   59B06:	FB00      	**prefx    0xFB
   59B07:	EA00      	**prefx    0xEA
   59B08:	E79C      	bsr        -0x51619 <___libgatt_lib_db_1294:0x84EF[p]>
   59B09:	0827      	st         al, @(+0x8, y)
   59B0A:	E419      	ld         x, @0xFFE4 <register uy>
   59B0B:	0438      	add        x, #+0x4
   59B0C:	002B      	st         x, @(0x0, y)
   59B0D:	3214      	ld         al, #+0x32
   59B0E:	E411      	ld         ah, @0xFFE4 <register uy>
   59B0F:	0230      	add        ah, #+0x2
   59B10:	FB00      	**prefx    0xFB
   59B11:	E900      	**prefx    0xE9
   59B12:	739C      	bsr        -0x5168D <___libgatt_lib_db_1297:0x8485[p]>
   59B13:	E415      	ld         al, @0xFFE4 <register uy>
   59B14:	0634      	add        al, #+0x6
   59B15:	0027      	st         al, @(0x0, y)
   59B16:	0714      	ld         al, #+0x7
   59B17:	E411      	ld         ah, @0xFFE4 <register uy>
   59B18:	0330      	add        ah, #+0x3
   59B19:	FB00      	**prefx    0xFB
   59B1A:	E900      	**prefx    0xE9
   59B1B:	6A9C      	bsr        -0x51696 <___libgatt_lib_db_1297:0x8485[p]>
   59B1C:	071B      	ld         x, @(+0x7, y)
   59B1D:	0B2B      	st         x, @(+0xB, y)
   59B1E:	0617      	ld         al, @(+0x6, y)
   59B1F:	0A27      	st         al, @(+0xA, y)
   59B20:	F300      	**prefx    0xF3
   59B21:	2915      	ld         al, @0xF329 <___libgatt_lib_db_3114>
   59B22:	0010      	ld         ah, #+0x0
   59B23:	0B37      	add        al, @(+0xB, y)
   59B24:	0A43      	addc       ah, @(+0xA, y)
   59B25:	F925      	st         al, @0xFFF9 <(scratchpad)>
   59B26:	0A1B      	ld         x, @(+0xA, y)
   59B27:	E089      	cmp        x, @0xFFE0 <register ah>
   59B28:	022C      	bcz        +0x2 <___libgatt_lib_db_5532+0x44:0x59B2A[p]>
   59B29:	07E0      	bra        +0x7 <___libgatt_lib_db_5532+0x4A:0x59B30[p]>
   59B2A:	0A17      	ld         al, @(+0xA, y)
   59B2B:	E085      	cmp        al, @0xFFE0 <register ah>
   59B2C:	07F0      	bne        +0x7 <___libgatt_lib_db_5532+0x4D:0x59B33[p]>
   59B2D:	0B1B      	ld         x, @(+0xB, y)
   59B2E:	F989      	cmp        x, @0xFFF9 <(scratchpad)>
   59B2F:	042C      	bcz        +0x4 <___libgatt_lib_db_5532+0x4D:0x59B33[p]>
   59B30:	0317      	ld         al, @(+0x3, y)
   59B31:	0134      	add        al, #+0x1
   59B32:	0327      	st         al, @(+0x3, y)
   59B33:	041B      	ld         x, @(+0x4, y)
   59B34:	0517      	ld         al, @(+0x5, y)
   59B35:	F825      	st         al, @0xFFF8 <(scratchpad)>
   59B36:	E381      	cmp        ah, @0xFFE3 <register uxl>
   59B37:	07F0      	bne        +0x7 <___libgatt_lib_db_5532+0x58:0x59B3E[p]>
   59B38:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   59B39:	F885      	cmp        al, @0xFFF8 <(scratchpad)>
   59B3A:	04F0      	bne        +0x4 <___libgatt_lib_db_5532+0x58:0x59B3E[p]>
   59B3B:	0317      	ld         al, @(+0x3, y)
   59B3C:	0287      	cmp        al, @(+0x2, y)
   59B3D:	04F4      	beq        +0x4 <___libgatt_lib_db_5532+0x5B:0x59B41[p]>
   59B3E:	0817      	ld         al, @(+0x8, y)
   59B3F:	0134      	add        al, #+0x1
   59B40:	0827      	st         al, @(+0x8, y)
   59B41:	0817      	ld         al, @(+0x8, y)
   59B42:	4027      	st         al, @(+0x40, y)
   59B43:	0217      	ld         al, @(+0x2, y)
   59B44:	1427      	st         al, @(+0x14, y)
   59B45:	152B      	st         x, @(+0x15, y)
   59B46:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   59B47:	162B      	st         x, @(+0x16, y)
   59B48:	0014      	ld         al, #+0x0
   59B49:	0F27      	st         al, @(+0xF, y)
   59B4A:	A600      	**prefx    0xA6
   59B4B:	A218      	ld         x, #-0x5A5E
   59B4C:	0E2B      	st         x, @(+0xE, y)
   59B4D:	F20F      	leave      #-0xE

0x00059B4E <___libgatt_lib_db_5534>:
   59B4E:	FE0B      	enter      #-0x2
   59B4F:	0E17      	ld         al, @(+0xE, y)
   59B50:	0D1B      	ld         x, @(+0xD, y)
   59B51:	0010      	ld         ah, #+0x0
   59B52:	10A0      	asl        #0x10
   59B53:	E3B5      	or         al, @0xFFE3 <register uxl>
   59B54:	E099      	tst        @0xFFE0 <register ah>
   59B55:	0FF0      	bne        +0xF <___libgatt_lib_db_5534+0x16:0x59B64[p]>
   59B56:	9000      	**prefx    0x90
   59B57:	7C84      	cmp        al, #-0x6F84
   59B58:	0CF0      	bne        +0xC <___libgatt_lib_db_5534+0x16:0x59B64[p]>
   59B59:	2717      	ld         al, @(+0x27, y)
   59B5A:	261B      	ld         x, @(+0x26, y)
   59B5B:	10A0      	asl        #0x10
   59B5C:	E3B5      	or         al, @0xFFE3 <register uxl>
   59B5D:	E099      	tst        @0xFFE0 <register ah>
   59B5E:	06F0      	bne        +0x6 <___libgatt_lib_db_5534+0x16:0x59B64[p]>
   59B5F:	AD00      	**prefx    0xAD
   59B60:	FA84      	cmp        al, #-0x5306
   59B61:	03F0      	bne        +0x3 <___libgatt_lib_db_5534+0x16:0x59B64[p]>
   59B62:	0014      	ld         al, #+0x0
   59B63:	0F27      	st         al, @(+0xF, y)
   59B64:	FE0F      	leave      #-0x2

0x00059B65 <___libgatt_lib_db_5536>:
   59B65:	FC0B      	enter      #-0x4
   59B66:	F000      	**prefx    0xF0
   59B67:	0711      	ld         ah, @0xF007 <___libgatt_lib_db_2837>
   59B68:	FC00      	**prefx    0xFC
   59B69:	9B19      	ld         x, @0xFB9B <___libgatt_lib_db_3995>
   59B6A:	4714      	ld         al, #+0x47
   59B6B:	F000      	**prefx    0xF0
   59B6C:	0725      	st         al, @0xF007 <___libgatt_lib_db_2837>
   59B6D:	0814      	ld         al, #+0x8
   59B6E:	FC00      	**prefx    0xFC
   59B6F:	9B25      	st         al, @0xFB9B <___libgatt_lib_db_3995>
   59B70:	FC00      	**prefx    0xFC
   59B71:	9315      	ld         al, @0xFB93 <___libgatt_lib_db_3988>
   59B72:	0027      	st         al, @(0x0, y)
   59B73:	0000      	**prefx    0x0
   59B74:	FC00      	**prefx    0xFC
   59B75:	9315      	ld         al, @0xFB93 <___libgatt_lib_db_3988>
   59B76:	0127      	st         al, @(+0x1, y)
   59B77:	F000      	**prefx    0xF0
   59B78:	0721      	st         ah, @0xF007 <___libgatt_lib_db_2837>
   59B79:	FC00      	**prefx    0xFC
   59B7A:	9B29      	st         x, @0xFB9B <___libgatt_lib_db_3995>
   59B7B:	0017      	ld         al, @(0x0, y)
   59B7C:	1700      	**prefx    0x17
   59B7D:	50C4      	and        al, #0x1750
   59B7E:	1000      	**prefx    0x10
   59B7F:	5084      	cmp        al, #+0x1050
   59B80:	07F0      	bne        +0x7 <___libgatt_lib_db_5536+0x22:0x59B87[p]>
   59B81:	0117      	ld         al, @(+0x1, y)
   59B82:	1700      	**prefx    0x17
   59B83:	50C4      	and        al, #0x1750
   59B84:	1000      	**prefx    0x10
   59B85:	5084      	cmp        al, #+0x1050
   59B86:	0DF4      	beq        +0xD <___libgatt_lib_db_5536+0x2E:0x59B93[p]>
   59B87:	0017      	ld         al, @(0x0, y)
   59B88:	1800      	**prefx    0x18
   59B89:	D0C4      	and        al, #0x17D0
   59B8A:	1500      	**prefx    0x15
   59B8B:	D084      	cmp        al, #+0x14D0
   59B8C:	0DF0      	bne        +0xD <___libgatt_lib_db_5536+0x34:0x59B99[p]>
   59B8D:	0117      	ld         al, @(+0x1, y)
   59B8E:	1800      	**prefx    0x18
   59B8F:	D0C4      	and        al, #0x17D0
   59B90:	1500      	**prefx    0x15
   59B91:	D084      	cmp        al, #+0x14D0
   59B92:	07F0      	bne        +0x7 <___libgatt_lib_db_5536+0x34:0x59B99[p]>
   59B93:	0018      	ld         x, #+0x0
   59B94:	F000      	**prefx    0xF0
   59B95:	2729      	st         x, @0xF027 <___libgatt_lib_db_2839>
   59B96:	0314      	ld         al, #+0x3
   59B97:	F000      	**prefx    0xF0
   59B98:	2725      	st         al, @0xF027 <___libgatt_lib_db_2839>
   59B99:	FC00      	**prefx    0xFC
   59B9A:	9B19      	ld         x, @0xFB9B <___libgatt_lib_db_3995>
   59B9B:	F929      	st         x, @0xFFF9 <(scratchpad)>
   59B9C:	F300      	**prefx    0xF3
   59B9D:	1A11      	ld         ah, @0xF31A <___libgatt_lib_db_2944>
   59B9E:	1014      	ld         al, #+0x10
   59B9F:	FC00      	**prefx    0xFC
   59BA0:	9B25      	st         al, @0xFB9B <___libgatt_lib_db_3995>
   59BA1:	0118      	ld         x, #+0x1
   59BA2:	F300      	**prefx    0xF3
   59BA3:	1A29      	st         x, @0xF31A <___libgatt_lib_db_2944>
   59BA4:	FC00      	**prefx    0xFC
   59BA5:	9319      	ld         x, @0xFB93 <___libgatt_lib_db_3988>
   59BA6:	FC00      	**prefx    0xFC
   59BA7:	9415      	ld         al, @0xFB94 <___libgatt_lib_db_3989>
   59BA8:	F825      	st         al, @0xFFF8 <(scratchpad)>
   59BA9:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   59BAA:	FC00      	**prefx    0xFC
   59BAB:	9B25      	st         al, @0xFB9B <___libgatt_lib_db_3995>
   59BAC:	F300      	**prefx    0xF3
   59BAD:	1A21      	st         ah, @0xF31A <___libgatt_lib_db_2944>
   59BAE:	03C8      	and        x, #0x3
   59BAF:	08F0      	bne        +0x8 <___libgatt_lib_db_5536+0x52:0x59BB7[p]>
   59BB0:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   59BB1:	C000      	**prefx    0xC0
   59BB2:	00C4      	and        al, #0xC000
   59BB3:	8000      	**prefx    0x80
   59BB4:	0084      	cmp        al, #-0x8000
   59BB5:	22F0      	bne        +0x22 <___libgatt_lib_db_5536+0x72:0x59BD7[p]>
   59BB6:	09E0      	bra        +0x9 <___libgatt_lib_db_5536+0x5A:0x59BBF[p]>
   59BB7:	0188      	cmp        x, #+0x1
   59BB8:	1FF0      	bne        +0x1F <___libgatt_lib_db_5536+0x72:0x59BD7[p]>
   59BB9:	F815      	ld         al, @0xFFF8 <(scratchpad)>
   59BBA:	C000      	**prefx    0xC0
   59BBB:	00C4      	and        al, #0xC000
   59BBC:	C000      	**prefx    0xC0
   59BBD:	0084      	cmp        al, #-0x4000
   59BBE:	19F0      	bne        +0x19 <___libgatt_lib_db_5536+0x72:0x59BD7[p]>
   59BBF:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   59BC0:	03C8      	and        x, #0x3
   59BC1:	E315      	ld         al, @0xFFE3 <register uxl>
   59BC2:	0390      	smult      #+0x3
   59BC3:	E119      	ld         x, @0xFFE1 <register al>
   59BC4:	0238      	add        x, #+0x2
   59BC5:	F811      	ld         ah, @0xFFF8 <(scratchpad)>
   59BC6:	0009      	**unsigned
   59BC7:	E3A5      	lsr        @0xFFE3 <register uxl>
   59BC8:	07C0      	and        ah, #0x7
   59BC9:	0380      	cmp        ah, #+0x3
   59BCA:	0DF0      	bne        +0xD <___libgatt_lib_db_5536+0x72:0x59BD7[p]>
   59BCB:	0118      	ld         x, #+0x1
   59BCC:	F300      	**prefx    0xF3
   59BCD:	EF29      	st         x, @0xF2EF <___libgatt_lib_db_2921>
   59BCE:	0000      	**prefx    0x0
   59BCF:	0000      	**prefx    0x0
   59BD0:	0000      	**prefx    0x0
   59BD1:	1014      	ld         al, #+0x10
   59BD2:	F300      	**prefx    0xF3
   59BD3:	1D25      	st         al, @0xF31D <___libgatt_lib_db_3064>
   59BD4:	0018      	ld         x, #+0x0
   59BD5:	F300      	**prefx    0xF3
   59BD6:	EF29      	st         x, @0xF2EF <___libgatt_lib_db_2921>
   59BD7:	FC0F      	leave      #-0x4

0x00059BD8 <___libgatt_lib_db_5537>:
   59BD8:	F50B      	enter      #-0xB
   59BD9:	0627      	st         al, @(+0x6, y)
   59BDA:	E415      	ld         al, @0xFFE4 <register uy>
   59BDB:	0010      	ld         ah, #+0x0
   59BDC:	FB00      	**prefx    0xFB
   59BDD:	9000      	**prefx    0x90
   59BDE:	9C9C      	bsr        -0x57064 <TimeGet48WithOffset:0x2B7A[p]>
   59BDF:	869C      	bsr        -0x7A <___libgatt_lib_db_5536:0x59B65[p]>
   59BE0:	0617      	ld         al, @(+0x6, y)
   59BE1:	1384      	cmp        al, #+0x13
   59BE2:	45F0      	bne        +0x45 <___libgatt_lib_db_5537+0x4F:0x59C27[p]>
   59BE3:	F300      	**prefx    0xF3
   59BE4:	1819      	ld         x, @0xF318 <___libgatt_lib_db_2942>
   59BE5:	052B      	st         x, @(+0x5, y)
   59BE6:	0014      	ld         al, #+0x0
   59BE7:	0427      	st         al, @(+0x4, y)
   59BE8:	0327      	st         al, @(+0x3, y)
   59BE9:	0417      	ld         al, @(+0x4, y)
   59BEA:	0390      	smult      #+0x3
   59BEB:	F825      	st         al, @0xFFF8 <(scratchpad)>
   59BEC:	0513      	ld         ah, @(+0x5, y)
   59BED:	0009      	**unsigned
   59BEE:	F8A5      	lsr        @0xFFF8 <(scratchpad)>
   59BEF:	E019      	ld         x, @0xFFE0 <register ah>
   59BF0:	07C8      	and        x, #0x7
   59BF1:	FA29      	st         x, @0xFFFA <(scratchpad)>
   59BF2:	23F4      	beq        +0x23 <___libgatt_lib_db_5537+0x3D:0x59C15[p]>
   59BF3:	0417      	ld         al, @(+0x4, y)
   59BF4:	6690      	smult      #+0x66
   59BF5:	F825      	st         al, @0xFFF8 <(scratchpad)>
   59BF6:	DD00      	**prefx    0xDD
   59BF7:	4F34      	add        al, #-0x22B1
   59BF8:	F925      	st         al, @0xFFF9 <(scratchpad)>
   59BF9:	0114      	ld         al, #+0x1
   59BFA:	04A3      	asl        @(+0x4, y)
   59BFB:	E111      	ld         ah, @0xFFE1 <register al>
   59BFC:	F400      	**prefx    0xF4
   59BFD:	B425      	st         al, @0xF3B4 <___libgatt_lib_db_2940>
   59BFE:	F819      	ld         x, @0xFFF8 <(scratchpad)>
   59BFF:	DD00      	**prefx    0xDD
   59C00:	4F16      	ld         al, @(-0x22B1, x)
   59C01:	08C4      	and        al, #0x8
   59C02:	13F4      	beq        +0x13 <___libgatt_lib_db_5537+0x3D:0x59C15[p]>
   59C03:	FA15      	ld         al, @0xFFFA <(scratchpad)>
   59C04:	FD34      	add        al, #-0x3
   59C05:	0284      	cmp        al, #+0x2
   59C06:	0FF8      	bcc        +0xF <___libgatt_lib_db_5537+0x3D:0x59C15[p]>
   59C07:	03B3      	or         ah, @(+0x3, y)
   59C08:	0323      	st         ah, @(+0x3, y)
   59C09:	6A00      	**prefx    0x6A
   59C0A:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59C0B:	0010      	ld         ah, #+0x0
   59C0C:	A300      	**prefx    0xA3
   59C0D:	2234      	add        al, #-0x5CDE
   59C0E:	0040      	addc       ah, #+0x0
   59C0F:	0827      	st         al, @(+0x8, y)
   59C10:	0723      	st         ah, @(+0x7, y)
   59C11:	F915      	ld         al, @0xFFF9 <(scratchpad)>
   59C12:	E411      	ld         ah, @0xFFE4 <register uy>
   59C13:	070E      	ld         xh, @(+0x7, y)
   59C14:	089F      	bsr        @(+0x8, y)
   59C15:	041B      	ld         x, @(+0x4, y)
   59C16:	0138      	add        x, #+0x1
   59C17:	042B      	st         x, @(+0x4, y)
   59C18:	0488      	cmp        x, #+0x4
   59C19:	D0F0      	bne        -0x30 <___libgatt_lib_db_5537+0x11:0x59BE9[p]>
   59C1A:	039B      	tst        @(+0x3, y)
   59C1B:	0CF4      	beq        +0xC <___libgatt_lib_db_5537+0x4F:0x59C27[p]>
   59C1C:	6A00      	**prefx    0x6A
   59C1D:	FB15      	ld         al, @0x69FB <GattFindIncludedServices>
   59C1E:	0010      	ld         ah, #+0x0
   59C1F:	A300      	**prefx    0xA3
   59C20:	C734      	add        al, #-0x5D39
   59C21:	0040      	addc       ah, #+0x0
   59C22:	FE27      	st         al, @(-0x2, y)
   59C23:	FF23      	st         ah, @(-0x1, y)
   59C24:	0317      	ld         al, @(+0x3, y)
   59C25:	FF0E      	ld         xh, @(-0x1, y)
   59C26:	FE9F      	bsr        @(-0x2, y)
   59C27:	F50F      	leave      #-0xB

0x00059C28 <___libgatt_lib_db_5543>:
   59C28:	6A00      	**prefx    0x6A
   59C29:	3299      	tst        @0x6A32 <pte_xtal_wake_reconfigured>
   59C2A:	0FF0      	bne        +0xF <___libgatt_lib_db_5543+0x11:0x59C39[p]>
   59C2B:	F300      	**prefx    0xF3
   59C2C:	6315      	ld         al, @0xF363 <___libgatt_lib_db_4180>
   59C2D:	0500      	**prefx    0x5
   59C2E:	B084      	cmp        al, #+0x4B0
   59C2F:	0AF4      	beq        +0xA <___libgatt_lib_db_5543+0x11:0x59C39[p]>
   59C30:	F300      	**prefx    0xF3
   59C31:	6315      	ld         al, @0xF363 <___libgatt_lib_db_4180>
   59C32:	0100      	**prefx    0x1
   59C33:	4A34      	add        al, #+0x14A
   59C34:	F300      	**prefx    0xF3
   59C35:	6325      	st         al, @0xF363 <___libgatt_lib_db_4180>
   59C36:	0114      	ld         al, #+0x1
   59C37:	6A00      	**prefx    0x6A
   59C38:	3225      	st         al, @0x6A32 <pte_xtal_wake_reconfigured>
   59C39:	00E2      	bra        0x0, x

0x00059C3A <___libgatt_lib_db_2093>:
   59C3A:	F90B      	enter      #-0x7
   59C3B:	0423      	st         ah, @(+0x4, y)
   59C3C:	0600      	**prefx    0x6
   59C3D:	8E84      	cmp        al, #+0x58E
   59C3E:	04F4      	beq        +0x4 <___libgatt_lib_db_2093+0x8:0x59C42[p]>
   59C3F:	0C00      	**prefx    0xC
   59C40:	0014      	ld         al, #+0xC00
   59C41:	6EE0      	bra        +0x6E <___libgatt_lib_db_2093+0x75:0x59CAF[p]>
   59C42:	E300      	**prefx    0xE3
   59C43:	A29C      	bsr        -0x1D5E <___libgatt_lib_db_1872:0x57EE5[p]>
   59C44:	0400      	**prefx    0x4
   59C45:	F214      	ld         al, #+0x3F2
   59C46:	041B      	ld         x, @(+0x4, y)
   59C47:	0126      	st         al, @(+0x1, x)
   59C48:	0100      	**prefx    0x1
   59C49:	F914      	ld         al, #+0xF9
   59C4A:	0226      	st         al, @(+0x2, x)
   59C4B:	0C00      	**prefx    0xC
   59C4C:	EB14      	ld         al, #+0xBEB
   59C4D:	0326      	st         al, @(+0x3, x)
   59C4E:	6000      	**prefx    0x60
   59C4F:	0014      	ld         al, #+0x6000
   59C50:	0426      	st         al, @(+0x4, x)
   59C51:	A400      	**prefx    0xA4
   59C52:	0218      	ld         x, #-0x5BFE
   59C53:	A400      	**prefx    0xA4
   59C54:	CF58      	sub        x, #-0x5C31
   59C55:	032B      	st         x, @(+0x3, y)
   59C56:	E315      	ld         al, @0xFFE3 <register uxl>
   59C57:	0010      	ld         ah, #+0x0
   59C58:	FC00      	**prefx    0xFC
   59C59:	C500      	**prefx    0xC5
   59C5A:	109C      	bsr        -0x43AF0 <___libgatt_lib_db_5242:0x1616A[p]>
   59C5B:	0227      	st         al, @(+0x2, y)
   59C5C:	0317      	ld         al, @(+0x3, y)
   59C5D:	0213      	ld         ah, @(+0x2, y)
   59C5E:	A400      	**prefx    0xA4
   59C5F:	CF18      	ld         x, #-0x5C31
   59C60:	FD09      	bc2        
   59C61:	0217      	ld         al, @(+0x2, y)
   59C62:	0134      	add        al, #+0x1
   59C63:	F300      	**prefx    0xF3
   59C64:	4025      	st         al, @0xF340 <___libgatt_lib_db_2932>
   59C65:	FF34      	add        al, #-0x1
   59C66:	0227      	st         al, @(+0x2, y)
   59C67:	9D00      	**prefx    0x9D
   59C68:	B014      	ld         al, #-0x6350
   59C69:	0510      	ld         ah, #+0x5
   59C6A:	FB00      	**prefx    0xFB
   59C6B:	2000      	**prefx    0x20
   59C6C:	F39C      	bsr        -0x4E00D <___libgatt_lib_db_1789:0xBC5F[p]>
   59C6D:	0217      	ld         al, @(+0x2, y)
   59C6E:	041B      	ld         x, @(+0x4, y)
   59C6F:	0926      	st         al, @(+0x9, x)
   59C70:	3B00      	**prefx    0x3B
   59C71:	8414      	ld         al, #+0x3A84
   59C72:	0510      	ld         ah, #+0x5
   59C73:	FB00      	**prefx    0xFB
   59C74:	1E00      	**prefx    0x1E
   59C75:	C39C      	bsr        -0x4E23D <___libgatt_lib_db_1762:0xBA38[p]>
   59C76:	3A00      	**prefx    0x3A
   59C77:	6B14      	ld         al, #+0x3A6B
   59C78:	0510      	ld         ah, #+0x5
   59C79:	FB00      	**prefx    0xFB
   59C7A:	1E00      	**prefx    0x1E
   59C7B:	C29C      	bsr        -0x4E23E <___libgatt_lib_db_1763:0xBA3D[p]>
   59C7C:	3A00      	**prefx    0x3A
   59C7D:	0A14      	ld         al, #+0x3A0A
   59C7E:	0510      	ld         ah, #+0x5
   59C7F:	FB00      	**prefx    0xFB
   59C80:	4F00      	**prefx    0x4F
   59C81:	939C      	bsr        -0x4B16D <___libgatt_lib_db_2099:0xEB14[p]>
   59C82:	0014      	ld         al, #+0x0
   59C83:	041B      	ld         x, @(+0x4, y)
   59C84:	0526      	st         al, @(+0x5, x)
   59C85:	0626      	st         al, @(+0x6, x)
   59C86:	0726      	st         al, @(+0x7, x)
   59C87:	0826      	st         al, @(+0x8, x)
   59C88:	A300      	**prefx    0xA3
   59C89:	2D15      	ld         al, @0xA32D <ram_build_identifier_integer>
   59C8A:	FB00      	**prefx    0xFB
   59C8B:	2600      	**prefx    0x26
   59C8C:	A79C      	bsr        -0x4DA59 <___libgatt_lib_db_1836:0xC233[p]>
   59C8D:	A300      	**prefx    0xA3
   59C8E:	2E14      	ld         al, #-0x5CD2
   59C8F:	FC00      	**prefx    0xFC
   59C90:	C300      	**prefx    0xC3
   59C91:	CD9C      	bsr        -0x43D33 <StrLen:0x15F5E[p]>
   59C92:	E111      	ld         ah, @0xFFE1 <register al>
   59C93:	A300      	**prefx    0xA3
   59C94:	2E14      	ld         al, #-0x5CD2
   59C95:	FB00      	**prefx    0xFB
   59C96:	2600      	**prefx    0x26
   59C97:	9F9C      	bsr        -0x4DA61 <___libgatt_lib_db_1837:0xC236[p]>
   59C98:	A300      	**prefx    0xA3
   59C99:	2D15      	ld         al, @0xA32D <ram_build_identifier_integer>
   59C9A:	041B      	ld         x, @(+0x4, y)
   59C9B:	0026      	st         al, @(0x0, x)
   59C9C:	0814      	ld         al, #+0x8
   59C9D:	FB00      	**prefx    0xFB
   59C9E:	2600      	**prefx    0x26
   59C9F:	A49C      	bsr        -0x4DA5C <___libgatt_lib_db_1838:0xC243[p]>
   59CA0:	0119      	ld         x, @0x1 <DRAM_APPDATA_MODEL>
   59CA1:	012B      	st         x, @(+0x1, y)
   59CA2:	0015      	ld         al, @0x0 <$DATA$>
   59CA3:	0027      	st         al, @(0x0, y)
   59CA4:	0115      	ld         al, @0x1 <DRAM_APPDATA_MODEL>
   59CA5:	0011      	ld         ah, @0x0 <$DATA$>
   59CA6:	FB00      	**prefx    0xFB
   59CA7:	2800      	**prefx    0x28
   59CA8:	909C      	bsr        -0x4D870 <___libgatt_lib_db_1881:0xC438[p]>
   59CA9:	0414      	ld         al, #+0x4
   59CAA:	F000      	**prefx    0xF0
   59CAB:	FC10      	ld         ah, #-0x1004
   59CAC:	1700      	**prefx    0x17
   59CAD:	5B18      	ld         x, #+0x175B
   59CAE:	FD09      	bc2        
   59CAF:	F90F      	leave      #-0x7

0x00059CB0 <___libgatt_lib_db_1787>:
   59CB0:	0300      	**prefx    0x3
   59CB1:	0014      	ld         al, #+0x300
   59CB2:	F300      	**prefx    0xF3
   59CB3:	FA25      	st         al, @0xF2FA <___libgatt_lib_db_2933>
   59CB4:	00E2      	bra        0x0, x

0x00059CB5 <APPINFO_APPCODE_END>:
   59CB5:	0000      	**prefx    0x0
   59CB6:	0000      	**prefx    0x0
	...

0x00059CB8 <PROG_APPCODE_HASH_START>:
	...
